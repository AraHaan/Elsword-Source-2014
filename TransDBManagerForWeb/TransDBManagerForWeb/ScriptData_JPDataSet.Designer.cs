//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:2.0.50727.3082
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TransDBManagerForWeb {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ScriptData_JPDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ScriptData_JPDataSet : global::System.Data.DataSet {
        
        private ItemDataTable tableItem;
        
        private Item_HistoryDataTable tableItem_History;
        
        private SetItemDataTable tableSetItem;
        
        private SetItem_HistoryDataTable tableSetItem_History;
        
        private QuestTableDataTable tableQuestTable;
        
        private QuestTable_HistoryDataTable tableQuestTable_History;
        
        private SubQuestTableDataTable tableSubQuestTable;
        
        private SubQuestTable_HistoryDataTable tableSubQuestTable_History;
        
        private TitleTableDataTable tableTitleTable;
        
        private TitleTable_HistoryDataTable tableTitleTable_History;
        
        private TitleMissionDataTable tableTitleMission;
        
        private TitleMission_HistoryDataTable tableTitleMission_History;
        
        private SubTitleMissionDataTable tableSubTitleMission;
        
        private SubTitleMission_HistoryDataTable tableSubTitleMission_History;
        
        private StringTableDataTable tableStringTable;
        
        private StringTable_HistoryDataTable tableStringTable_History;
        
        private NetErrorTableDataTable tableNetErrorTable;
        
        private NetErrorTable_HistoryDataTable tableNetErrorTable_History;
        
        private TextureStringManagerDataTable tableTextureStringManager;
        
        private TextureStringManager_HistoryDataTable tableTextureStringManager_History;
        
        private SkillEnumDataTable tableSkillEnum;
        
        private SkillTableDataTable tableSkillTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ScriptData_JPDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ScriptData_JPDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Item"] != null)) {
                    base.Tables.Add(new ItemDataTable(ds.Tables["Item"]));
                }
                if ((ds.Tables["Item_History"] != null)) {
                    base.Tables.Add(new Item_HistoryDataTable(ds.Tables["Item_History"]));
                }
                if ((ds.Tables["SetItem"] != null)) {
                    base.Tables.Add(new SetItemDataTable(ds.Tables["SetItem"]));
                }
                if ((ds.Tables["SetItem_History"] != null)) {
                    base.Tables.Add(new SetItem_HistoryDataTable(ds.Tables["SetItem_History"]));
                }
                if ((ds.Tables["QuestTable"] != null)) {
                    base.Tables.Add(new QuestTableDataTable(ds.Tables["QuestTable"]));
                }
                if ((ds.Tables["QuestTable_History"] != null)) {
                    base.Tables.Add(new QuestTable_HistoryDataTable(ds.Tables["QuestTable_History"]));
                }
                if ((ds.Tables["SubQuestTable"] != null)) {
                    base.Tables.Add(new SubQuestTableDataTable(ds.Tables["SubQuestTable"]));
                }
                if ((ds.Tables["SubQuestTable_History"] != null)) {
                    base.Tables.Add(new SubQuestTable_HistoryDataTable(ds.Tables["SubQuestTable_History"]));
                }
                if ((ds.Tables["TitleTable"] != null)) {
                    base.Tables.Add(new TitleTableDataTable(ds.Tables["TitleTable"]));
                }
                if ((ds.Tables["TitleTable_History"] != null)) {
                    base.Tables.Add(new TitleTable_HistoryDataTable(ds.Tables["TitleTable_History"]));
                }
                if ((ds.Tables["TitleMission"] != null)) {
                    base.Tables.Add(new TitleMissionDataTable(ds.Tables["TitleMission"]));
                }
                if ((ds.Tables["TitleMission_History"] != null)) {
                    base.Tables.Add(new TitleMission_HistoryDataTable(ds.Tables["TitleMission_History"]));
                }
                if ((ds.Tables["SubTitleMission"] != null)) {
                    base.Tables.Add(new SubTitleMissionDataTable(ds.Tables["SubTitleMission"]));
                }
                if ((ds.Tables["SubTitleMission_History"] != null)) {
                    base.Tables.Add(new SubTitleMission_HistoryDataTable(ds.Tables["SubTitleMission_History"]));
                }
                if ((ds.Tables["StringTable"] != null)) {
                    base.Tables.Add(new StringTableDataTable(ds.Tables["StringTable"]));
                }
                if ((ds.Tables["StringTable_History"] != null)) {
                    base.Tables.Add(new StringTable_HistoryDataTable(ds.Tables["StringTable_History"]));
                }
                if ((ds.Tables["NetErrorTable"] != null)) {
                    base.Tables.Add(new NetErrorTableDataTable(ds.Tables["NetErrorTable"]));
                }
                if ((ds.Tables["NetErrorTable_History"] != null)) {
                    base.Tables.Add(new NetErrorTable_HistoryDataTable(ds.Tables["NetErrorTable_History"]));
                }
                if ((ds.Tables["TextureStringManager"] != null)) {
                    base.Tables.Add(new TextureStringManagerDataTable(ds.Tables["TextureStringManager"]));
                }
                if ((ds.Tables["TextureStringManager_History"] != null)) {
                    base.Tables.Add(new TextureStringManager_HistoryDataTable(ds.Tables["TextureStringManager_History"]));
                }
                if ((ds.Tables["SkillEnum"] != null)) {
                    base.Tables.Add(new SkillEnumDataTable(ds.Tables["SkillEnum"]));
                }
                if ((ds.Tables["SkillTable"] != null)) {
                    base.Tables.Add(new SkillTableDataTable(ds.Tables["SkillTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItemDataTable Item {
            get {
                return this.tableItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Item_HistoryDataTable Item_History {
            get {
                return this.tableItem_History;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SetItemDataTable SetItem {
            get {
                return this.tableSetItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SetItem_HistoryDataTable SetItem_History {
            get {
                return this.tableSetItem_History;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QuestTableDataTable QuestTable {
            get {
                return this.tableQuestTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QuestTable_HistoryDataTable QuestTable_History {
            get {
                return this.tableQuestTable_History;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SubQuestTableDataTable SubQuestTable {
            get {
                return this.tableSubQuestTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SubQuestTable_HistoryDataTable SubQuestTable_History {
            get {
                return this.tableSubQuestTable_History;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TitleTableDataTable TitleTable {
            get {
                return this.tableTitleTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TitleTable_HistoryDataTable TitleTable_History {
            get {
                return this.tableTitleTable_History;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TitleMissionDataTable TitleMission {
            get {
                return this.tableTitleMission;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TitleMission_HistoryDataTable TitleMission_History {
            get {
                return this.tableTitleMission_History;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SubTitleMissionDataTable SubTitleMission {
            get {
                return this.tableSubTitleMission;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SubTitleMission_HistoryDataTable SubTitleMission_History {
            get {
                return this.tableSubTitleMission_History;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StringTableDataTable StringTable {
            get {
                return this.tableStringTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StringTable_HistoryDataTable StringTable_History {
            get {
                return this.tableStringTable_History;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NetErrorTableDataTable NetErrorTable {
            get {
                return this.tableNetErrorTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NetErrorTable_HistoryDataTable NetErrorTable_History {
            get {
                return this.tableNetErrorTable_History;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TextureStringManagerDataTable TextureStringManager {
            get {
                return this.tableTextureStringManager;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TextureStringManager_HistoryDataTable TextureStringManager_History {
            get {
                return this.tableTextureStringManager_History;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SkillEnumDataTable SkillEnum {
            get {
                return this.tableSkillEnum;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SkillTableDataTable SkillTable {
            get {
                return this.tableSkillTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ScriptData_JPDataSet cln = ((ScriptData_JPDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Item"] != null)) {
                    base.Tables.Add(new ItemDataTable(ds.Tables["Item"]));
                }
                if ((ds.Tables["Item_History"] != null)) {
                    base.Tables.Add(new Item_HistoryDataTable(ds.Tables["Item_History"]));
                }
                if ((ds.Tables["SetItem"] != null)) {
                    base.Tables.Add(new SetItemDataTable(ds.Tables["SetItem"]));
                }
                if ((ds.Tables["SetItem_History"] != null)) {
                    base.Tables.Add(new SetItem_HistoryDataTable(ds.Tables["SetItem_History"]));
                }
                if ((ds.Tables["QuestTable"] != null)) {
                    base.Tables.Add(new QuestTableDataTable(ds.Tables["QuestTable"]));
                }
                if ((ds.Tables["QuestTable_History"] != null)) {
                    base.Tables.Add(new QuestTable_HistoryDataTable(ds.Tables["QuestTable_History"]));
                }
                if ((ds.Tables["SubQuestTable"] != null)) {
                    base.Tables.Add(new SubQuestTableDataTable(ds.Tables["SubQuestTable"]));
                }
                if ((ds.Tables["SubQuestTable_History"] != null)) {
                    base.Tables.Add(new SubQuestTable_HistoryDataTable(ds.Tables["SubQuestTable_History"]));
                }
                if ((ds.Tables["TitleTable"] != null)) {
                    base.Tables.Add(new TitleTableDataTable(ds.Tables["TitleTable"]));
                }
                if ((ds.Tables["TitleTable_History"] != null)) {
                    base.Tables.Add(new TitleTable_HistoryDataTable(ds.Tables["TitleTable_History"]));
                }
                if ((ds.Tables["TitleMission"] != null)) {
                    base.Tables.Add(new TitleMissionDataTable(ds.Tables["TitleMission"]));
                }
                if ((ds.Tables["TitleMission_History"] != null)) {
                    base.Tables.Add(new TitleMission_HistoryDataTable(ds.Tables["TitleMission_History"]));
                }
                if ((ds.Tables["SubTitleMission"] != null)) {
                    base.Tables.Add(new SubTitleMissionDataTable(ds.Tables["SubTitleMission"]));
                }
                if ((ds.Tables["SubTitleMission_History"] != null)) {
                    base.Tables.Add(new SubTitleMission_HistoryDataTable(ds.Tables["SubTitleMission_History"]));
                }
                if ((ds.Tables["StringTable"] != null)) {
                    base.Tables.Add(new StringTableDataTable(ds.Tables["StringTable"]));
                }
                if ((ds.Tables["StringTable_History"] != null)) {
                    base.Tables.Add(new StringTable_HistoryDataTable(ds.Tables["StringTable_History"]));
                }
                if ((ds.Tables["NetErrorTable"] != null)) {
                    base.Tables.Add(new NetErrorTableDataTable(ds.Tables["NetErrorTable"]));
                }
                if ((ds.Tables["NetErrorTable_History"] != null)) {
                    base.Tables.Add(new NetErrorTable_HistoryDataTable(ds.Tables["NetErrorTable_History"]));
                }
                if ((ds.Tables["TextureStringManager"] != null)) {
                    base.Tables.Add(new TextureStringManagerDataTable(ds.Tables["TextureStringManager"]));
                }
                if ((ds.Tables["TextureStringManager_History"] != null)) {
                    base.Tables.Add(new TextureStringManager_HistoryDataTable(ds.Tables["TextureStringManager_History"]));
                }
                if ((ds.Tables["SkillEnum"] != null)) {
                    base.Tables.Add(new SkillEnumDataTable(ds.Tables["SkillEnum"]));
                }
                if ((ds.Tables["SkillTable"] != null)) {
                    base.Tables.Add(new SkillTableDataTable(ds.Tables["SkillTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableItem = ((ItemDataTable)(base.Tables["Item"]));
            if ((initTable == true)) {
                if ((this.tableItem != null)) {
                    this.tableItem.InitVars();
                }
            }
            this.tableItem_History = ((Item_HistoryDataTable)(base.Tables["Item_History"]));
            if ((initTable == true)) {
                if ((this.tableItem_History != null)) {
                    this.tableItem_History.InitVars();
                }
            }
            this.tableSetItem = ((SetItemDataTable)(base.Tables["SetItem"]));
            if ((initTable == true)) {
                if ((this.tableSetItem != null)) {
                    this.tableSetItem.InitVars();
                }
            }
            this.tableSetItem_History = ((SetItem_HistoryDataTable)(base.Tables["SetItem_History"]));
            if ((initTable == true)) {
                if ((this.tableSetItem_History != null)) {
                    this.tableSetItem_History.InitVars();
                }
            }
            this.tableQuestTable = ((QuestTableDataTable)(base.Tables["QuestTable"]));
            if ((initTable == true)) {
                if ((this.tableQuestTable != null)) {
                    this.tableQuestTable.InitVars();
                }
            }
            this.tableQuestTable_History = ((QuestTable_HistoryDataTable)(base.Tables["QuestTable_History"]));
            if ((initTable == true)) {
                if ((this.tableQuestTable_History != null)) {
                    this.tableQuestTable_History.InitVars();
                }
            }
            this.tableSubQuestTable = ((SubQuestTableDataTable)(base.Tables["SubQuestTable"]));
            if ((initTable == true)) {
                if ((this.tableSubQuestTable != null)) {
                    this.tableSubQuestTable.InitVars();
                }
            }
            this.tableSubQuestTable_History = ((SubQuestTable_HistoryDataTable)(base.Tables["SubQuestTable_History"]));
            if ((initTable == true)) {
                if ((this.tableSubQuestTable_History != null)) {
                    this.tableSubQuestTable_History.InitVars();
                }
            }
            this.tableTitleTable = ((TitleTableDataTable)(base.Tables["TitleTable"]));
            if ((initTable == true)) {
                if ((this.tableTitleTable != null)) {
                    this.tableTitleTable.InitVars();
                }
            }
            this.tableTitleTable_History = ((TitleTable_HistoryDataTable)(base.Tables["TitleTable_History"]));
            if ((initTable == true)) {
                if ((this.tableTitleTable_History != null)) {
                    this.tableTitleTable_History.InitVars();
                }
            }
            this.tableTitleMission = ((TitleMissionDataTable)(base.Tables["TitleMission"]));
            if ((initTable == true)) {
                if ((this.tableTitleMission != null)) {
                    this.tableTitleMission.InitVars();
                }
            }
            this.tableTitleMission_History = ((TitleMission_HistoryDataTable)(base.Tables["TitleMission_History"]));
            if ((initTable == true)) {
                if ((this.tableTitleMission_History != null)) {
                    this.tableTitleMission_History.InitVars();
                }
            }
            this.tableSubTitleMission = ((SubTitleMissionDataTable)(base.Tables["SubTitleMission"]));
            if ((initTable == true)) {
                if ((this.tableSubTitleMission != null)) {
                    this.tableSubTitleMission.InitVars();
                }
            }
            this.tableSubTitleMission_History = ((SubTitleMission_HistoryDataTable)(base.Tables["SubTitleMission_History"]));
            if ((initTable == true)) {
                if ((this.tableSubTitleMission_History != null)) {
                    this.tableSubTitleMission_History.InitVars();
                }
            }
            this.tableStringTable = ((StringTableDataTable)(base.Tables["StringTable"]));
            if ((initTable == true)) {
                if ((this.tableStringTable != null)) {
                    this.tableStringTable.InitVars();
                }
            }
            this.tableStringTable_History = ((StringTable_HistoryDataTable)(base.Tables["StringTable_History"]));
            if ((initTable == true)) {
                if ((this.tableStringTable_History != null)) {
                    this.tableStringTable_History.InitVars();
                }
            }
            this.tableNetErrorTable = ((NetErrorTableDataTable)(base.Tables["NetErrorTable"]));
            if ((initTable == true)) {
                if ((this.tableNetErrorTable != null)) {
                    this.tableNetErrorTable.InitVars();
                }
            }
            this.tableNetErrorTable_History = ((NetErrorTable_HistoryDataTable)(base.Tables["NetErrorTable_History"]));
            if ((initTable == true)) {
                if ((this.tableNetErrorTable_History != null)) {
                    this.tableNetErrorTable_History.InitVars();
                }
            }
            this.tableTextureStringManager = ((TextureStringManagerDataTable)(base.Tables["TextureStringManager"]));
            if ((initTable == true)) {
                if ((this.tableTextureStringManager != null)) {
                    this.tableTextureStringManager.InitVars();
                }
            }
            this.tableTextureStringManager_History = ((TextureStringManager_HistoryDataTable)(base.Tables["TextureStringManager_History"]));
            if ((initTable == true)) {
                if ((this.tableTextureStringManager_History != null)) {
                    this.tableTextureStringManager_History.InitVars();
                }
            }
            this.tableSkillEnum = ((SkillEnumDataTable)(base.Tables["SkillEnum"]));
            if ((initTable == true)) {
                if ((this.tableSkillEnum != null)) {
                    this.tableSkillEnum.InitVars();
                }
            }
            this.tableSkillTable = ((SkillTableDataTable)(base.Tables["SkillTable"]));
            if ((initTable == true)) {
                if ((this.tableSkillTable != null)) {
                    this.tableSkillTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ScriptData_JPDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ScriptData_JPDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableItem = new ItemDataTable();
            base.Tables.Add(this.tableItem);
            this.tableItem_History = new Item_HistoryDataTable();
            base.Tables.Add(this.tableItem_History);
            this.tableSetItem = new SetItemDataTable();
            base.Tables.Add(this.tableSetItem);
            this.tableSetItem_History = new SetItem_HistoryDataTable();
            base.Tables.Add(this.tableSetItem_History);
            this.tableQuestTable = new QuestTableDataTable();
            base.Tables.Add(this.tableQuestTable);
            this.tableQuestTable_History = new QuestTable_HistoryDataTable();
            base.Tables.Add(this.tableQuestTable_History);
            this.tableSubQuestTable = new SubQuestTableDataTable();
            base.Tables.Add(this.tableSubQuestTable);
            this.tableSubQuestTable_History = new SubQuestTable_HistoryDataTable();
            base.Tables.Add(this.tableSubQuestTable_History);
            this.tableTitleTable = new TitleTableDataTable();
            base.Tables.Add(this.tableTitleTable);
            this.tableTitleTable_History = new TitleTable_HistoryDataTable();
            base.Tables.Add(this.tableTitleTable_History);
            this.tableTitleMission = new TitleMissionDataTable();
            base.Tables.Add(this.tableTitleMission);
            this.tableTitleMission_History = new TitleMission_HistoryDataTable();
            base.Tables.Add(this.tableTitleMission_History);
            this.tableSubTitleMission = new SubTitleMissionDataTable();
            base.Tables.Add(this.tableSubTitleMission);
            this.tableSubTitleMission_History = new SubTitleMission_HistoryDataTable();
            base.Tables.Add(this.tableSubTitleMission_History);
            this.tableStringTable = new StringTableDataTable();
            base.Tables.Add(this.tableStringTable);
            this.tableStringTable_History = new StringTable_HistoryDataTable();
            base.Tables.Add(this.tableStringTable_History);
            this.tableNetErrorTable = new NetErrorTableDataTable();
            base.Tables.Add(this.tableNetErrorTable);
            this.tableNetErrorTable_History = new NetErrorTable_HistoryDataTable();
            base.Tables.Add(this.tableNetErrorTable_History);
            this.tableTextureStringManager = new TextureStringManagerDataTable();
            base.Tables.Add(this.tableTextureStringManager);
            this.tableTextureStringManager_History = new TextureStringManager_HistoryDataTable();
            base.Tables.Add(this.tableTextureStringManager_History);
            this.tableSkillEnum = new SkillEnumDataTable();
            base.Tables.Add(this.tableSkillEnum);
            this.tableSkillTable = new SkillTableDataTable();
            base.Tables.Add(this.tableSkillTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItem_History() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSetItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSetItem_History() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeQuestTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeQuestTable_History() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSubQuestTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSubQuestTable_History() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTitleTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTitleTable_History() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTitleMission() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTitleMission_History() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSubTitleMission() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSubTitleMission_History() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStringTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStringTable_History() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNetErrorTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNetErrorTable_History() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTextureStringManager() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTextureStringManager_History() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSkillEnum() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSkillTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ItemRowChangeEventHandler(object sender, ItemRowChangeEvent e);
        
        public delegate void Item_HistoryRowChangeEventHandler(object sender, Item_HistoryRowChangeEvent e);
        
        public delegate void SetItemRowChangeEventHandler(object sender, SetItemRowChangeEvent e);
        
        public delegate void SetItem_HistoryRowChangeEventHandler(object sender, SetItem_HistoryRowChangeEvent e);
        
        public delegate void QuestTableRowChangeEventHandler(object sender, QuestTableRowChangeEvent e);
        
        public delegate void QuestTable_HistoryRowChangeEventHandler(object sender, QuestTable_HistoryRowChangeEvent e);
        
        public delegate void SubQuestTableRowChangeEventHandler(object sender, SubQuestTableRowChangeEvent e);
        
        public delegate void SubQuestTable_HistoryRowChangeEventHandler(object sender, SubQuestTable_HistoryRowChangeEvent e);
        
        public delegate void TitleTableRowChangeEventHandler(object sender, TitleTableRowChangeEvent e);
        
        public delegate void TitleTable_HistoryRowChangeEventHandler(object sender, TitleTable_HistoryRowChangeEvent e);
        
        public delegate void TitleMissionRowChangeEventHandler(object sender, TitleMissionRowChangeEvent e);
        
        public delegate void TitleMission_HistoryRowChangeEventHandler(object sender, TitleMission_HistoryRowChangeEvent e);
        
        public delegate void SubTitleMissionRowChangeEventHandler(object sender, SubTitleMissionRowChangeEvent e);
        
        public delegate void SubTitleMission_HistoryRowChangeEventHandler(object sender, SubTitleMission_HistoryRowChangeEvent e);
        
        public delegate void StringTableRowChangeEventHandler(object sender, StringTableRowChangeEvent e);
        
        public delegate void StringTable_HistoryRowChangeEventHandler(object sender, StringTable_HistoryRowChangeEvent e);
        
        public delegate void NetErrorTableRowChangeEventHandler(object sender, NetErrorTableRowChangeEvent e);
        
        public delegate void NetErrorTable_HistoryRowChangeEventHandler(object sender, NetErrorTable_HistoryRowChangeEvent e);
        
        public delegate void TextureStringManagerRowChangeEventHandler(object sender, TextureStringManagerRowChangeEvent e);
        
        public delegate void TextureStringManager_HistoryRowChangeEventHandler(object sender, TextureStringManager_HistoryRowChangeEvent e);
        
        public delegate void SkillEnumRowChangeEventHandler(object sender, SkillEnumRowChangeEvent e);
        
        public delegate void SkillTableRowChangeEventHandler(object sender, SkillTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItemDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnDescription_In_Shop;
            
            private global::System.Data.DataColumn columnModel_Name;
            
            private global::System.Data.DataColumn columnTexture_Change_XET_Name;
            
            private global::System.Data.DataColumn columnELSWORD_MODEL_NAME;
            
            private global::System.Data.DataColumn columnELSWORD_XET_NAME;
            
            private global::System.Data.DataColumn columnAISHA_MODEL_NAME;
            
            private global::System.Data.DataColumn columnAISHA_XET_NAME;
            
            private global::System.Data.DataColumn columnRENA_MODEL_NAME;
            
            private global::System.Data.DataColumn columnRENA_XET_NAME;
            
            private global::System.Data.DataColumn columnRAVEN_MODEL_NAME;
            
            private global::System.Data.DataColumn columnRAVEN_XET_NAME;
            
            private global::System.Data.DataColumn columnEVE_MODEL_NAME;
            
            private global::System.Data.DataColumn columnEVE_XET_NAME;
            
            private global::System.Data.DataColumn columnAnim_XET_Name;
            
            private global::System.Data.DataColumn columnAnim_Name;
            
            private global::System.Data.DataColumn columnShop_Image;
            
            private global::System.Data.DataColumn columnDrop_Viewer;
            
            private global::System.Data.DataColumn columnItem_Type;
            
            private global::System.Data.DataColumn columnItem_Type_;
            
            private global::System.Data.DataColumn columnITEMTYPE_C;
            
            private global::System.Data.DataColumn columnFashion;
            
            private global::System.Data.DataColumn columnVested;
            
            private global::System.Data.DataColumn columnCan_Enchant;
            
            private global::System.Data.DataColumn columnUse_Type;
            
            private global::System.Data.DataColumn columnUse_Type_;
            
            private global::System.Data.DataColumn columnUSETYPE_C;
            
            private global::System.Data.DataColumn columnAttach_FrameName;
            
            private global::System.Data.DataColumn columnFO_Elsword_X;
            
            private global::System.Data.DataColumn columnFO_Elsword_Y;
            
            private global::System.Data.DataColumn columnFO_Elsword_Z;
            
            private global::System.Data.DataColumn columnFO_Lena_X;
            
            private global::System.Data.DataColumn columnFO_Lena_Y;
            
            private global::System.Data.DataColumn columnFO_Lena_Z;
            
            private global::System.Data.DataColumn columnFO_Aisha_X;
            
            private global::System.Data.DataColumn columnFO_Aisha_Y;
            
            private global::System.Data.DataColumn columnFO_Aisha_Z;
            
            private global::System.Data.DataColumn columnFO_Raven_X;
            
            private global::System.Data.DataColumn columnFO_Raven_Y;
            
            private global::System.Data.DataColumn columnFO_Raven_Z;
            
            private global::System.Data.DataColumn columnFO_Eve_X;
            
            private global::System.Data.DataColumn columnFO_Eve_Y;
            
            private global::System.Data.DataColumn columnFO_Eve_Z;
            
            private global::System.Data.DataColumn columnCan_HyperMode;
            
            private global::System.Data.DataColumn columnPeriod_Type;
            
            private global::System.Data.DataColumn columnPeriod_Type_;
            
            private global::System.Data.DataColumn columnPERIODTYPE_C;
            
            private global::System.Data.DataColumn columnEndurance;
            
            private global::System.Data.DataColumn columnEnduranceDamageMin;
            
            private global::System.Data.DataColumn columnEnduranceDamageMax;
            
            private global::System.Data.DataColumn columnRepair_ED;
            
            private global::System.Data.DataColumn columnRepair_VP;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnPrice_Type;
            
            private global::System.Data.DataColumn columnPrice_Type_;
            
            private global::System.Data.DataColumn columnPRICETYPE_C;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnPrice_PvP_Point;
            
            private global::System.Data.DataColumn columnUse_Condition;
            
            private global::System.Data.DataColumn columnUse_Condition_;
            
            private global::System.Data.DataColumn columnUSECONDITION_C;
            
            private global::System.Data.DataColumn columnUnit_Type;
            
            private global::System.Data.DataColumn columnUnit_Type_;
            
            private global::System.Data.DataColumn columnUNITTYPE_C;
            
            private global::System.Data.DataColumn columnUnit_Class;
            
            private global::System.Data.DataColumn columnUnit_Class_;
            
            private global::System.Data.DataColumn columnUNITCLASS_C;
            
            private global::System.Data.DataColumn columnUse_Level;
            
            private global::System.Data.DataColumn columnEqip_Position;
            
            private global::System.Data.DataColumn columnEqip_Position_;
            
            private global::System.Data.DataColumn columnEQIPPOSITION_C;
            
            private global::System.Data.DataColumn columnItem_Grade;
            
            private global::System.Data.DataColumn columnItem_Grade_;
            
            private global::System.Data.DataColumn columnITEMGRADE_C;
            
            private global::System.Data.DataColumn columnBASE_HP;
            
            private global::System.Data.DataColumn columnATK_PHYSIC;
            
            private global::System.Data.DataColumn columnATK_MAGIC;
            
            private global::System.Data.DataColumn columnDEF_PHYSIC;
            
            private global::System.Data.DataColumn columnDEF_MAGIC;
            
            private global::System.Data.DataColumn columnSA_NUM;
            
            private global::System.Data.DataColumn columnSA_01;
            
            private global::System.Data.DataColumn columnSA_02;
            
            private global::System.Data.DataColumn columnSA_03;
            
            private global::System.Data.DataColumn columnSA_04;
            
            private global::System.Data.DataColumn columnSA_05;
            
            private global::System.Data.DataColumn columnSA_06;
            
            private global::System.Data.DataColumn columnSA_07;
            
            private global::System.Data.DataColumn columnSA_08;
            
            private global::System.Data.DataColumn columnSA_09;
            
            private global::System.Data.DataColumn columnSA_10;
            
            private global::System.Data.DataColumn columnSO_01;
            
            private global::System.Data.DataColumn columnSO_02;
            
            private global::System.Data.DataColumn columnSO_03;
            
            private global::System.Data.DataColumn columnSO_04;
            
            private global::System.Data.DataColumn columnSO_05;
            
            private global::System.Data.DataColumn columnSO_06;
            
            private global::System.Data.DataColumn columnSO_07;
            
            private global::System.Data.DataColumn columnSO_08;
            
            private global::System.Data.DataColumn columnSO_09;
            
            private global::System.Data.DataColumn columnCOOL_TIME;
            
            private global::System.Data.DataColumn columnSET_ID;
            
            private global::System.Data.DataColumn columnCan_Use_Inventory;
            
            private global::System.Data.DataColumn columnNoEquip;
            
            private global::System.Data.DataColumn columnSLASH_TRACE_COLOR;
            
            private global::System.Data.DataColumn columnSLASH_TRACE_TIP_COLOR;
            
            private global::System.Data.DataColumn columnHYPER_SLASH_TRACE_COLOR;
            
            private global::System.Data.DataColumn columnHYPER_SLASH_TRACE_TIP_COLOR;
            
            private global::System.Data.DataColumn columnELSWORD_ITEM_SCALE_ROTATE;
            
            private global::System.Data.DataColumn columnAISHA_ITEM_SCALE_ROTATE;
            
            private global::System.Data.DataColumn columnRENA_ITEM_SCALE_ROTATE;
            
            private global::System.Data.DataColumn columnRAVEN_ITEM_SCALE_ROTATE;
            
            private global::System.Data.DataColumn columnEVE_ITEM_SCALE_ROTATE;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_NAME1;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_BONE_NAME1;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_NAME2;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_BONE_NAME2;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_NAME3;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_BONE_NAME3;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_NAME4;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_BONE_NAME4;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_NAME5;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_BONE_NAME5;
            
            private global::System.Data.DataColumn columnModel_Name1;
            
            private global::System.Data.DataColumn columnAttach_FrameName1;
            
            private global::System.Data.DataColumn columnATTACHED_PARTICLE_NAME1;
            
            private global::System.Data.DataColumn columnATTACHED_PARTICLE_BONE_NAME1;
            
            private global::System.Data.DataColumn columnATTACHED_PARTICLE_NAME2;
            
            private global::System.Data.DataColumn columnATTACHED_PARTICLE_BONE_NAME2;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDataTable() {
                this.TableName = "Item";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Description_In_ShopColumn {
                get {
                    return this.columnDescription_In_Shop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Model_NameColumn {
                get {
                    return this.columnModel_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Texture_Change_XET_NameColumn {
                get {
                    return this.columnTexture_Change_XET_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELSWORD_MODEL_NAMEColumn {
                get {
                    return this.columnELSWORD_MODEL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELSWORD_XET_NAMEColumn {
                get {
                    return this.columnELSWORD_XET_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AISHA_MODEL_NAMEColumn {
                get {
                    return this.columnAISHA_MODEL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AISHA_XET_NAMEColumn {
                get {
                    return this.columnAISHA_XET_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENA_MODEL_NAMEColumn {
                get {
                    return this.columnRENA_MODEL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENA_XET_NAMEColumn {
                get {
                    return this.columnRENA_XET_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAVEN_MODEL_NAMEColumn {
                get {
                    return this.columnRAVEN_MODEL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAVEN_XET_NAMEColumn {
                get {
                    return this.columnRAVEN_XET_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EVE_MODEL_NAMEColumn {
                get {
                    return this.columnEVE_MODEL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EVE_XET_NAMEColumn {
                get {
                    return this.columnEVE_XET_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Anim_XET_NameColumn {
                get {
                    return this.columnAnim_XET_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Anim_NameColumn {
                get {
                    return this.columnAnim_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Shop_ImageColumn {
                get {
                    return this.columnShop_Image;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Drop_ViewerColumn {
                get {
                    return this.columnDrop_Viewer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_TypeColumn {
                get {
                    return this.columnItem_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_Type_Column {
                get {
                    return this.columnItem_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEMTYPE_CColumn {
                get {
                    return this.columnITEMTYPE_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FashionColumn {
                get {
                    return this.columnFashion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VestedColumn {
                get {
                    return this.columnVested;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Can_EnchantColumn {
                get {
                    return this.columnCan_Enchant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Use_TypeColumn {
                get {
                    return this.columnUse_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Use_Type_Column {
                get {
                    return this.columnUse_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USETYPE_CColumn {
                get {
                    return this.columnUSETYPE_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Attach_FrameNameColumn {
                get {
                    return this.columnAttach_FrameName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Elsword_XColumn {
                get {
                    return this.columnFO_Elsword_X;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Elsword_YColumn {
                get {
                    return this.columnFO_Elsword_Y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Elsword_ZColumn {
                get {
                    return this.columnFO_Elsword_Z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Lena_XColumn {
                get {
                    return this.columnFO_Lena_X;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Lena_YColumn {
                get {
                    return this.columnFO_Lena_Y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Lena_ZColumn {
                get {
                    return this.columnFO_Lena_Z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Aisha_XColumn {
                get {
                    return this.columnFO_Aisha_X;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Aisha_YColumn {
                get {
                    return this.columnFO_Aisha_Y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Aisha_ZColumn {
                get {
                    return this.columnFO_Aisha_Z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Raven_XColumn {
                get {
                    return this.columnFO_Raven_X;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Raven_YColumn {
                get {
                    return this.columnFO_Raven_Y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Raven_ZColumn {
                get {
                    return this.columnFO_Raven_Z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Eve_XColumn {
                get {
                    return this.columnFO_Eve_X;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Eve_YColumn {
                get {
                    return this.columnFO_Eve_Y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Eve_ZColumn {
                get {
                    return this.columnFO_Eve_Z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Can_HyperModeColumn {
                get {
                    return this.columnCan_HyperMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Period_TypeColumn {
                get {
                    return this.columnPeriod_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Period_Type_Column {
                get {
                    return this.columnPeriod_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PERIODTYPE_CColumn {
                get {
                    return this.columnPERIODTYPE_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnduranceColumn {
                get {
                    return this.columnEndurance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnduranceDamageMinColumn {
                get {
                    return this.columnEnduranceDamageMin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnduranceDamageMaxColumn {
                get {
                    return this.columnEnduranceDamageMax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Repair_EDColumn {
                get {
                    return this.columnRepair_ED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Repair_VPColumn {
                get {
                    return this.columnRepair_VP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Price_TypeColumn {
                get {
                    return this.columnPrice_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Price_Type_Column {
                get {
                    return this.columnPrice_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICETYPE_CColumn {
                get {
                    return this.columnPRICETYPE_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Price_PvP_PointColumn {
                get {
                    return this.columnPrice_PvP_Point;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Use_ConditionColumn {
                get {
                    return this.columnUse_Condition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Use_Condition_Column {
                get {
                    return this.columnUse_Condition_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USECONDITION_CColumn {
                get {
                    return this.columnUSECONDITION_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_TypeColumn {
                get {
                    return this.columnUnit_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_Type_Column {
                get {
                    return this.columnUnit_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNITTYPE_CColumn {
                get {
                    return this.columnUNITTYPE_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_ClassColumn {
                get {
                    return this.columnUnit_Class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_Class_Column {
                get {
                    return this.columnUnit_Class_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNITCLASS_CColumn {
                get {
                    return this.columnUNITCLASS_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Use_LevelColumn {
                get {
                    return this.columnUse_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Eqip_PositionColumn {
                get {
                    return this.columnEqip_Position;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Eqip_Position_Column {
                get {
                    return this.columnEqip_Position_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EQIPPOSITION_CColumn {
                get {
                    return this.columnEQIPPOSITION_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_GradeColumn {
                get {
                    return this.columnItem_Grade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_Grade_Column {
                get {
                    return this.columnItem_Grade_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEMGRADE_CColumn {
                get {
                    return this.columnITEMGRADE_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BASE_HPColumn {
                get {
                    return this.columnBASE_HP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATK_PHYSICColumn {
                get {
                    return this.columnATK_PHYSIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATK_MAGICColumn {
                get {
                    return this.columnATK_MAGIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEF_PHYSICColumn {
                get {
                    return this.columnDEF_PHYSIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEF_MAGICColumn {
                get {
                    return this.columnDEF_MAGIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_NUMColumn {
                get {
                    return this.columnSA_NUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_01Column {
                get {
                    return this.columnSA_01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_02Column {
                get {
                    return this.columnSA_02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_03Column {
                get {
                    return this.columnSA_03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_04Column {
                get {
                    return this.columnSA_04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_05Column {
                get {
                    return this.columnSA_05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_06Column {
                get {
                    return this.columnSA_06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_07Column {
                get {
                    return this.columnSA_07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_08Column {
                get {
                    return this.columnSA_08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_09Column {
                get {
                    return this.columnSA_09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_10Column {
                get {
                    return this.columnSA_10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_01Column {
                get {
                    return this.columnSO_01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_02Column {
                get {
                    return this.columnSO_02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_03Column {
                get {
                    return this.columnSO_03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_04Column {
                get {
                    return this.columnSO_04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_05Column {
                get {
                    return this.columnSO_05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_06Column {
                get {
                    return this.columnSO_06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_07Column {
                get {
                    return this.columnSO_07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_08Column {
                get {
                    return this.columnSO_08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_09Column {
                get {
                    return this.columnSO_09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COOL_TIMEColumn {
                get {
                    return this.columnCOOL_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SET_IDColumn {
                get {
                    return this.columnSET_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Can_Use_InventoryColumn {
                get {
                    return this.columnCan_Use_Inventory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoEquipColumn {
                get {
                    return this.columnNoEquip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLASH_TRACE_COLORColumn {
                get {
                    return this.columnSLASH_TRACE_COLOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLASH_TRACE_TIP_COLORColumn {
                get {
                    return this.columnSLASH_TRACE_TIP_COLOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HYPER_SLASH_TRACE_COLORColumn {
                get {
                    return this.columnHYPER_SLASH_TRACE_COLOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HYPER_SLASH_TRACE_TIP_COLORColumn {
                get {
                    return this.columnHYPER_SLASH_TRACE_TIP_COLOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELSWORD_ITEM_SCALE_ROTATEColumn {
                get {
                    return this.columnELSWORD_ITEM_SCALE_ROTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AISHA_ITEM_SCALE_ROTATEColumn {
                get {
                    return this.columnAISHA_ITEM_SCALE_ROTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENA_ITEM_SCALE_ROTATEColumn {
                get {
                    return this.columnRENA_ITEM_SCALE_ROTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAVEN_ITEM_SCALE_ROTATEColumn {
                get {
                    return this.columnRAVEN_ITEM_SCALE_ROTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EVE_ITEM_SCALE_ROTATEColumn {
                get {
                    return this.columnEVE_ITEM_SCALE_ROTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_NAME1Column {
                get {
                    return this.columnATTACHED_MESH_NAME1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_BONE_NAME1Column {
                get {
                    return this.columnATTACHED_MESH_BONE_NAME1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_NAME2Column {
                get {
                    return this.columnATTACHED_MESH_NAME2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_BONE_NAME2Column {
                get {
                    return this.columnATTACHED_MESH_BONE_NAME2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_NAME3Column {
                get {
                    return this.columnATTACHED_MESH_NAME3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_BONE_NAME3Column {
                get {
                    return this.columnATTACHED_MESH_BONE_NAME3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_NAME4Column {
                get {
                    return this.columnATTACHED_MESH_NAME4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_BONE_NAME4Column {
                get {
                    return this.columnATTACHED_MESH_BONE_NAME4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_NAME5Column {
                get {
                    return this.columnATTACHED_MESH_NAME5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_BONE_NAME5Column {
                get {
                    return this.columnATTACHED_MESH_BONE_NAME5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Model_Name1Column {
                get {
                    return this.columnModel_Name1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Attach_FrameName1Column {
                get {
                    return this.columnAttach_FrameName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_PARTICLE_NAME1Column {
                get {
                    return this.columnATTACHED_PARTICLE_NAME1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_PARTICLE_BONE_NAME1Column {
                get {
                    return this.columnATTACHED_PARTICLE_BONE_NAME1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_PARTICLE_NAME2Column {
                get {
                    return this.columnATTACHED_PARTICLE_NAME2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_PARTICLE_BONE_NAME2Column {
                get {
                    return this.columnATTACHED_PARTICLE_BONE_NAME2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemRow this[int index] {
                get {
                    return ((ItemRow)(this.Rows[index]));
                }
            }
            
            public event ItemRowChangeEventHandler ItemRowChanging;
            
            public event ItemRowChangeEventHandler ItemRowChanged;
            
            public event ItemRowChangeEventHandler ItemRowDeleting;
            
            public event ItemRowChangeEventHandler ItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItemRow(ItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemRow AddItemRow(
                        int IndexKey, 
                        int ID, 
                        string Name, 
                        string Description, 
                        string Description_In_Shop, 
                        string Model_Name, 
                        string Texture_Change_XET_Name, 
                        string ELSWORD_MODEL_NAME, 
                        string ELSWORD_XET_NAME, 
                        string AISHA_MODEL_NAME, 
                        string AISHA_XET_NAME, 
                        string RENA_MODEL_NAME, 
                        string RENA_XET_NAME, 
                        string RAVEN_MODEL_NAME, 
                        string RAVEN_XET_NAME, 
                        string EVE_MODEL_NAME, 
                        string EVE_XET_NAME, 
                        string Anim_XET_Name, 
                        string Anim_Name, 
                        string Shop_Image, 
                        string Drop_Viewer, 
                        byte Item_Type, 
                        string Item_Type_, 
                        string ITEMTYPE_C, 
                        bool Fashion, 
                        bool Vested, 
                        bool Can_Enchant, 
                        double Use_Type, 
                        string Use_Type_, 
                        string USETYPE_C, 
                        string Attach_FrameName, 
                        double FO_Elsword_X, 
                        double FO_Elsword_Y, 
                        double FO_Elsword_Z, 
                        double FO_Lena_X, 
                        double FO_Lena_Y, 
                        double FO_Lena_Z, 
                        double FO_Aisha_X, 
                        double FO_Aisha_Y, 
                        double FO_Aisha_Z, 
                        double FO_Raven_X, 
                        double FO_Raven_Y, 
                        double FO_Raven_Z, 
                        double FO_Eve_X, 
                        double FO_Eve_Y, 
                        double FO_Eve_Z, 
                        bool Can_HyperMode, 
                        byte Period_Type, 
                        string Period_Type_, 
                        string PERIODTYPE_C, 
                        int Endurance, 
                        byte EnduranceDamageMin, 
                        byte EnduranceDamageMax, 
                        double Repair_ED, 
                        double Repair_VP, 
                        int Quantity, 
                        byte Price_Type, 
                        string Price_Type_, 
                        string PRICETYPE_C, 
                        string Price, 
                        int Price_PvP_Point, 
                        byte Use_Condition, 
                        string Use_Condition_, 
                        string USECONDITION_C, 
                        byte Unit_Type, 
                        string Unit_Type_, 
                        string UNITTYPE_C, 
                        byte Unit_Class, 
                        string Unit_Class_, 
                        string UNITCLASS_C, 
                        byte Use_Level, 
                        byte Eqip_Position, 
                        string Eqip_Position_, 
                        string EQIPPOSITION_C, 
                        byte Item_Grade, 
                        string Item_Grade_, 
                        string ITEMGRADE_C, 
                        int BASE_HP, 
                        int ATK_PHYSIC, 
                        int ATK_MAGIC, 
                        int DEF_PHYSIC, 
                        int DEF_MAGIC, 
                        int SA_NUM, 
                        int SA_01, 
                        int SA_02, 
                        int SA_03, 
                        int SA_04, 
                        int SA_05, 
                        int SA_06, 
                        int SA_07, 
                        int SA_08, 
                        int SA_09, 
                        int SA_10, 
                        int SO_01, 
                        int SO_02, 
                        int SO_03, 
                        int SO_04, 
                        int SO_05, 
                        int SO_06, 
                        int SO_07, 
                        int SO_08, 
                        int SO_09, 
                        byte COOL_TIME, 
                        int SET_ID, 
                        bool Can_Use_Inventory, 
                        bool NoEquip, 
                        string SLASH_TRACE_COLOR, 
                        string SLASH_TRACE_TIP_COLOR, 
                        string HYPER_SLASH_TRACE_COLOR, 
                        string HYPER_SLASH_TRACE_TIP_COLOR, 
                        string ELSWORD_ITEM_SCALE_ROTATE, 
                        string AISHA_ITEM_SCALE_ROTATE, 
                        string RENA_ITEM_SCALE_ROTATE, 
                        string RAVEN_ITEM_SCALE_ROTATE, 
                        string EVE_ITEM_SCALE_ROTATE, 
                        string ATTACHED_MESH_NAME1, 
                        string ATTACHED_MESH_BONE_NAME1, 
                        string ATTACHED_MESH_NAME2, 
                        string ATTACHED_MESH_BONE_NAME2, 
                        string ATTACHED_MESH_NAME3, 
                        string ATTACHED_MESH_BONE_NAME3, 
                        string ATTACHED_MESH_NAME4, 
                        string ATTACHED_MESH_BONE_NAME4, 
                        string ATTACHED_MESH_NAME5, 
                        string ATTACHED_MESH_BONE_NAME5, 
                        string Model_Name1, 
                        string Attach_FrameName1, 
                        string ATTACHED_PARTICLE_NAME1, 
                        string ATTACHED_PARTICLE_BONE_NAME1, 
                        string ATTACHED_PARTICLE_NAME2, 
                        string ATTACHED_PARTICLE_BONE_NAME2, 
                        System.DateTime Regdate) {
                ItemRow rowItemRow = ((ItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        ID,
                        Name,
                        Description,
                        Description_In_Shop,
                        Model_Name,
                        Texture_Change_XET_Name,
                        ELSWORD_MODEL_NAME,
                        ELSWORD_XET_NAME,
                        AISHA_MODEL_NAME,
                        AISHA_XET_NAME,
                        RENA_MODEL_NAME,
                        RENA_XET_NAME,
                        RAVEN_MODEL_NAME,
                        RAVEN_XET_NAME,
                        EVE_MODEL_NAME,
                        EVE_XET_NAME,
                        Anim_XET_Name,
                        Anim_Name,
                        Shop_Image,
                        Drop_Viewer,
                        Item_Type,
                        Item_Type_,
                        ITEMTYPE_C,
                        Fashion,
                        Vested,
                        Can_Enchant,
                        Use_Type,
                        Use_Type_,
                        USETYPE_C,
                        Attach_FrameName,
                        FO_Elsword_X,
                        FO_Elsword_Y,
                        FO_Elsword_Z,
                        FO_Lena_X,
                        FO_Lena_Y,
                        FO_Lena_Z,
                        FO_Aisha_X,
                        FO_Aisha_Y,
                        FO_Aisha_Z,
                        FO_Raven_X,
                        FO_Raven_Y,
                        FO_Raven_Z,
                        FO_Eve_X,
                        FO_Eve_Y,
                        FO_Eve_Z,
                        Can_HyperMode,
                        Period_Type,
                        Period_Type_,
                        PERIODTYPE_C,
                        Endurance,
                        EnduranceDamageMin,
                        EnduranceDamageMax,
                        Repair_ED,
                        Repair_VP,
                        Quantity,
                        Price_Type,
                        Price_Type_,
                        PRICETYPE_C,
                        Price,
                        Price_PvP_Point,
                        Use_Condition,
                        Use_Condition_,
                        USECONDITION_C,
                        Unit_Type,
                        Unit_Type_,
                        UNITTYPE_C,
                        Unit_Class,
                        Unit_Class_,
                        UNITCLASS_C,
                        Use_Level,
                        Eqip_Position,
                        Eqip_Position_,
                        EQIPPOSITION_C,
                        Item_Grade,
                        Item_Grade_,
                        ITEMGRADE_C,
                        BASE_HP,
                        ATK_PHYSIC,
                        ATK_MAGIC,
                        DEF_PHYSIC,
                        DEF_MAGIC,
                        SA_NUM,
                        SA_01,
                        SA_02,
                        SA_03,
                        SA_04,
                        SA_05,
                        SA_06,
                        SA_07,
                        SA_08,
                        SA_09,
                        SA_10,
                        SO_01,
                        SO_02,
                        SO_03,
                        SO_04,
                        SO_05,
                        SO_06,
                        SO_07,
                        SO_08,
                        SO_09,
                        COOL_TIME,
                        SET_ID,
                        Can_Use_Inventory,
                        NoEquip,
                        SLASH_TRACE_COLOR,
                        SLASH_TRACE_TIP_COLOR,
                        HYPER_SLASH_TRACE_COLOR,
                        HYPER_SLASH_TRACE_TIP_COLOR,
                        ELSWORD_ITEM_SCALE_ROTATE,
                        AISHA_ITEM_SCALE_ROTATE,
                        RENA_ITEM_SCALE_ROTATE,
                        RAVEN_ITEM_SCALE_ROTATE,
                        EVE_ITEM_SCALE_ROTATE,
                        ATTACHED_MESH_NAME1,
                        ATTACHED_MESH_BONE_NAME1,
                        ATTACHED_MESH_NAME2,
                        ATTACHED_MESH_BONE_NAME2,
                        ATTACHED_MESH_NAME3,
                        ATTACHED_MESH_BONE_NAME3,
                        ATTACHED_MESH_NAME4,
                        ATTACHED_MESH_BONE_NAME4,
                        ATTACHED_MESH_NAME5,
                        ATTACHED_MESH_BONE_NAME5,
                        Model_Name1,
                        Attach_FrameName1,
                        ATTACHED_PARTICLE_NAME1,
                        ATTACHED_PARTICLE_BONE_NAME1,
                        ATTACHED_PARTICLE_NAME2,
                        ATTACHED_PARTICLE_BONE_NAME2,
                        Regdate};
                rowItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItemRow);
                return rowItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemRow FindByIndexKey(int IndexKey) {
                return ((ItemRow)(this.Rows.Find(new object[] {
                            IndexKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ItemDataTable cln = ((ItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnID = base.Columns["ID"];
                this.columnName = base.Columns["Name"];
                this.columnDescription = base.Columns["Description"];
                this.columnDescription_In_Shop = base.Columns["Description In Shop"];
                this.columnModel_Name = base.Columns["Model Name"];
                this.columnTexture_Change_XET_Name = base.Columns["Texture Change XET Name"];
                this.columnELSWORD_MODEL_NAME = base.Columns["ELSWORD_MODEL_NAME"];
                this.columnELSWORD_XET_NAME = base.Columns["ELSWORD_XET_NAME"];
                this.columnAISHA_MODEL_NAME = base.Columns["AISHA_MODEL_NAME"];
                this.columnAISHA_XET_NAME = base.Columns["AISHA_XET_NAME"];
                this.columnRENA_MODEL_NAME = base.Columns["RENA_MODEL_NAME"];
                this.columnRENA_XET_NAME = base.Columns["RENA_XET_NAME"];
                this.columnRAVEN_MODEL_NAME = base.Columns["RAVEN_MODEL_NAME"];
                this.columnRAVEN_XET_NAME = base.Columns["RAVEN_XET_NAME"];
                this.columnEVE_MODEL_NAME = base.Columns["EVE_MODEL_NAME"];
                this.columnEVE_XET_NAME = base.Columns["EVE_XET_NAME"];
                this.columnAnim_XET_Name = base.Columns["Anim XET Name"];
                this.columnAnim_Name = base.Columns["Anim Name"];
                this.columnShop_Image = base.Columns["Shop Image"];
                this.columnDrop_Viewer = base.Columns["Drop Viewer"];
                this.columnItem_Type = base.Columns["Item Type"];
                this.columnItem_Type_ = base.Columns["Item Type_"];
                this.columnITEMTYPE_C = base.Columns["ITEMTYPE_C"];
                this.columnFashion = base.Columns["Fashion"];
                this.columnVested = base.Columns["Vested"];
                this.columnCan_Enchant = base.Columns["Can Enchant"];
                this.columnUse_Type = base.Columns["Use Type"];
                this.columnUse_Type_ = base.Columns["Use Type_"];
                this.columnUSETYPE_C = base.Columns["USETYPE_C"];
                this.columnAttach_FrameName = base.Columns["Attach FrameName"];
                this.columnFO_Elsword_X = base.Columns["FO_Elsword_X"];
                this.columnFO_Elsword_Y = base.Columns["FO_Elsword_Y"];
                this.columnFO_Elsword_Z = base.Columns["FO_Elsword_Z"];
                this.columnFO_Lena_X = base.Columns["FO_Lena_X"];
                this.columnFO_Lena_Y = base.Columns["FO_Lena_Y"];
                this.columnFO_Lena_Z = base.Columns["FO_Lena_Z"];
                this.columnFO_Aisha_X = base.Columns["FO_Aisha_X"];
                this.columnFO_Aisha_Y = base.Columns["FO_Aisha_Y"];
                this.columnFO_Aisha_Z = base.Columns["FO_Aisha_Z"];
                this.columnFO_Raven_X = base.Columns["FO_Raven_X"];
                this.columnFO_Raven_Y = base.Columns["FO_Raven_Y"];
                this.columnFO_Raven_Z = base.Columns["FO_Raven_Z"];
                this.columnFO_Eve_X = base.Columns["FO_Eve_X"];
                this.columnFO_Eve_Y = base.Columns["FO_Eve_Y"];
                this.columnFO_Eve_Z = base.Columns["FO_Eve_Z"];
                this.columnCan_HyperMode = base.Columns["Can HyperMode"];
                this.columnPeriod_Type = base.Columns["Period Type"];
                this.columnPeriod_Type_ = base.Columns["Period Type_"];
                this.columnPERIODTYPE_C = base.Columns["PERIODTYPE_C"];
                this.columnEndurance = base.Columns["Endurance"];
                this.columnEnduranceDamageMin = base.Columns["EnduranceDamageMin"];
                this.columnEnduranceDamageMax = base.Columns["EnduranceDamageMax"];
                this.columnRepair_ED = base.Columns["Repair ED"];
                this.columnRepair_VP = base.Columns["Repair VP"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnPrice_Type = base.Columns["Price Type"];
                this.columnPrice_Type_ = base.Columns["Price Type_"];
                this.columnPRICETYPE_C = base.Columns["PRICETYPE_C"];
                this.columnPrice = base.Columns["Price"];
                this.columnPrice_PvP_Point = base.Columns["Price PvP Point"];
                this.columnUse_Condition = base.Columns["Use Condition"];
                this.columnUse_Condition_ = base.Columns["Use Condition_"];
                this.columnUSECONDITION_C = base.Columns["USECONDITION_C"];
                this.columnUnit_Type = base.Columns["Unit Type"];
                this.columnUnit_Type_ = base.Columns["Unit Type_"];
                this.columnUNITTYPE_C = base.Columns["UNITTYPE_C"];
                this.columnUnit_Class = base.Columns["Unit Class"];
                this.columnUnit_Class_ = base.Columns["Unit Class_"];
                this.columnUNITCLASS_C = base.Columns["UNITCLASS_C"];
                this.columnUse_Level = base.Columns["Use Level"];
                this.columnEqip_Position = base.Columns["Eqip Position"];
                this.columnEqip_Position_ = base.Columns["Eqip Position_"];
                this.columnEQIPPOSITION_C = base.Columns["EQIPPOSITION_C"];
                this.columnItem_Grade = base.Columns["Item Grade"];
                this.columnItem_Grade_ = base.Columns["Item Grade_"];
                this.columnITEMGRADE_C = base.Columns["ITEMGRADE_C"];
                this.columnBASE_HP = base.Columns["BASE_HP"];
                this.columnATK_PHYSIC = base.Columns["ATK_PHYSIC"];
                this.columnATK_MAGIC = base.Columns["ATK_MAGIC"];
                this.columnDEF_PHYSIC = base.Columns["DEF_PHYSIC"];
                this.columnDEF_MAGIC = base.Columns["DEF_MAGIC"];
                this.columnSA_NUM = base.Columns["SA_NUM"];
                this.columnSA_01 = base.Columns["SA_01"];
                this.columnSA_02 = base.Columns["SA_02"];
                this.columnSA_03 = base.Columns["SA_03"];
                this.columnSA_04 = base.Columns["SA_04"];
                this.columnSA_05 = base.Columns["SA_05"];
                this.columnSA_06 = base.Columns["SA_06"];
                this.columnSA_07 = base.Columns["SA_07"];
                this.columnSA_08 = base.Columns["SA_08"];
                this.columnSA_09 = base.Columns["SA_09"];
                this.columnSA_10 = base.Columns["SA_10"];
                this.columnSO_01 = base.Columns["SO_01"];
                this.columnSO_02 = base.Columns["SO_02"];
                this.columnSO_03 = base.Columns["SO_03"];
                this.columnSO_04 = base.Columns["SO_04"];
                this.columnSO_05 = base.Columns["SO_05"];
                this.columnSO_06 = base.Columns["SO_06"];
                this.columnSO_07 = base.Columns["SO_07"];
                this.columnSO_08 = base.Columns["SO_08"];
                this.columnSO_09 = base.Columns["SO_09"];
                this.columnCOOL_TIME = base.Columns["COOL_TIME"];
                this.columnSET_ID = base.Columns["SET_ID"];
                this.columnCan_Use_Inventory = base.Columns["Can Use Inventory"];
                this.columnNoEquip = base.Columns["NoEquip"];
                this.columnSLASH_TRACE_COLOR = base.Columns["SLASH_TRACE_COLOR"];
                this.columnSLASH_TRACE_TIP_COLOR = base.Columns["SLASH_TRACE_TIP_COLOR"];
                this.columnHYPER_SLASH_TRACE_COLOR = base.Columns["HYPER_SLASH_TRACE_COLOR"];
                this.columnHYPER_SLASH_TRACE_TIP_COLOR = base.Columns["HYPER_SLASH_TRACE_TIP_COLOR"];
                this.columnELSWORD_ITEM_SCALE_ROTATE = base.Columns["ELSWORD_ITEM_SCALE_ROTATE"];
                this.columnAISHA_ITEM_SCALE_ROTATE = base.Columns["AISHA_ITEM_SCALE_ROTATE"];
                this.columnRENA_ITEM_SCALE_ROTATE = base.Columns["RENA_ITEM_SCALE_ROTATE"];
                this.columnRAVEN_ITEM_SCALE_ROTATE = base.Columns["RAVEN_ITEM_SCALE_ROTATE"];
                this.columnEVE_ITEM_SCALE_ROTATE = base.Columns["EVE_ITEM_SCALE_ROTATE"];
                this.columnATTACHED_MESH_NAME1 = base.Columns["ATTACHED_MESH_NAME1"];
                this.columnATTACHED_MESH_BONE_NAME1 = base.Columns["ATTACHED_MESH_BONE_NAME1"];
                this.columnATTACHED_MESH_NAME2 = base.Columns["ATTACHED_MESH_NAME2"];
                this.columnATTACHED_MESH_BONE_NAME2 = base.Columns["ATTACHED_MESH_BONE_NAME2"];
                this.columnATTACHED_MESH_NAME3 = base.Columns["ATTACHED_MESH_NAME3"];
                this.columnATTACHED_MESH_BONE_NAME3 = base.Columns["ATTACHED_MESH_BONE_NAME3"];
                this.columnATTACHED_MESH_NAME4 = base.Columns["ATTACHED_MESH_NAME4"];
                this.columnATTACHED_MESH_BONE_NAME4 = base.Columns["ATTACHED_MESH_BONE_NAME4"];
                this.columnATTACHED_MESH_NAME5 = base.Columns["ATTACHED_MESH_NAME5"];
                this.columnATTACHED_MESH_BONE_NAME5 = base.Columns["ATTACHED_MESH_BONE_NAME5"];
                this.columnModel_Name1 = base.Columns["Model Name1"];
                this.columnAttach_FrameName1 = base.Columns["Attach FrameName1"];
                this.columnATTACHED_PARTICLE_NAME1 = base.Columns["ATTACHED_PARTICLE_NAME1"];
                this.columnATTACHED_PARTICLE_BONE_NAME1 = base.Columns["ATTACHED_PARTICLE_BONE_NAME1"];
                this.columnATTACHED_PARTICLE_NAME2 = base.Columns["ATTACHED_PARTICLE_NAME2"];
                this.columnATTACHED_PARTICLE_BONE_NAME2 = base.Columns["ATTACHED_PARTICLE_BONE_NAME2"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnDescription_In_Shop = new global::System.Data.DataColumn("Description In Shop", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription_In_Shop);
                this.columnModel_Name = new global::System.Data.DataColumn("Model Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel_Name);
                this.columnTexture_Change_XET_Name = new global::System.Data.DataColumn("Texture Change XET Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTexture_Change_XET_Name);
                this.columnELSWORD_MODEL_NAME = new global::System.Data.DataColumn("ELSWORD_MODEL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELSWORD_MODEL_NAME);
                this.columnELSWORD_XET_NAME = new global::System.Data.DataColumn("ELSWORD_XET_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELSWORD_XET_NAME);
                this.columnAISHA_MODEL_NAME = new global::System.Data.DataColumn("AISHA_MODEL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAISHA_MODEL_NAME);
                this.columnAISHA_XET_NAME = new global::System.Data.DataColumn("AISHA_XET_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAISHA_XET_NAME);
                this.columnRENA_MODEL_NAME = new global::System.Data.DataColumn("RENA_MODEL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENA_MODEL_NAME);
                this.columnRENA_XET_NAME = new global::System.Data.DataColumn("RENA_XET_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENA_XET_NAME);
                this.columnRAVEN_MODEL_NAME = new global::System.Data.DataColumn("RAVEN_MODEL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAVEN_MODEL_NAME);
                this.columnRAVEN_XET_NAME = new global::System.Data.DataColumn("RAVEN_XET_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAVEN_XET_NAME);
                this.columnEVE_MODEL_NAME = new global::System.Data.DataColumn("EVE_MODEL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEVE_MODEL_NAME);
                this.columnEVE_XET_NAME = new global::System.Data.DataColumn("EVE_XET_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEVE_XET_NAME);
                this.columnAnim_XET_Name = new global::System.Data.DataColumn("Anim XET Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnim_XET_Name);
                this.columnAnim_Name = new global::System.Data.DataColumn("Anim Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnim_Name);
                this.columnShop_Image = new global::System.Data.DataColumn("Shop Image", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShop_Image);
                this.columnDrop_Viewer = new global::System.Data.DataColumn("Drop Viewer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrop_Viewer);
                this.columnItem_Type = new global::System.Data.DataColumn("Item Type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Type);
                this.columnItem_Type_ = new global::System.Data.DataColumn("Item Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Type_);
                this.columnITEMTYPE_C = new global::System.Data.DataColumn("ITEMTYPE_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMTYPE_C);
                this.columnFashion = new global::System.Data.DataColumn("Fashion", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFashion);
                this.columnVested = new global::System.Data.DataColumn("Vested", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVested);
                this.columnCan_Enchant = new global::System.Data.DataColumn("Can Enchant", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCan_Enchant);
                this.columnUse_Type = new global::System.Data.DataColumn("Use Type", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUse_Type);
                this.columnUse_Type_ = new global::System.Data.DataColumn("Use Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUse_Type_);
                this.columnUSETYPE_C = new global::System.Data.DataColumn("USETYPE_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSETYPE_C);
                this.columnAttach_FrameName = new global::System.Data.DataColumn("Attach FrameName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttach_FrameName);
                this.columnFO_Elsword_X = new global::System.Data.DataColumn("FO_Elsword_X", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Elsword_X);
                this.columnFO_Elsword_Y = new global::System.Data.DataColumn("FO_Elsword_Y", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Elsword_Y);
                this.columnFO_Elsword_Z = new global::System.Data.DataColumn("FO_Elsword_Z", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Elsword_Z);
                this.columnFO_Lena_X = new global::System.Data.DataColumn("FO_Lena_X", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Lena_X);
                this.columnFO_Lena_Y = new global::System.Data.DataColumn("FO_Lena_Y", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Lena_Y);
                this.columnFO_Lena_Z = new global::System.Data.DataColumn("FO_Lena_Z", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Lena_Z);
                this.columnFO_Aisha_X = new global::System.Data.DataColumn("FO_Aisha_X", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Aisha_X);
                this.columnFO_Aisha_Y = new global::System.Data.DataColumn("FO_Aisha_Y", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Aisha_Y);
                this.columnFO_Aisha_Z = new global::System.Data.DataColumn("FO_Aisha_Z", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Aisha_Z);
                this.columnFO_Raven_X = new global::System.Data.DataColumn("FO_Raven_X", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Raven_X);
                this.columnFO_Raven_Y = new global::System.Data.DataColumn("FO_Raven_Y", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Raven_Y);
                this.columnFO_Raven_Z = new global::System.Data.DataColumn("FO_Raven_Z", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Raven_Z);
                this.columnFO_Eve_X = new global::System.Data.DataColumn("FO_Eve_X", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Eve_X);
                this.columnFO_Eve_Y = new global::System.Data.DataColumn("FO_Eve_Y", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Eve_Y);
                this.columnFO_Eve_Z = new global::System.Data.DataColumn("FO_Eve_Z", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Eve_Z);
                this.columnCan_HyperMode = new global::System.Data.DataColumn("Can HyperMode", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCan_HyperMode);
                this.columnPeriod_Type = new global::System.Data.DataColumn("Period Type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod_Type);
                this.columnPeriod_Type_ = new global::System.Data.DataColumn("Period Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod_Type_);
                this.columnPERIODTYPE_C = new global::System.Data.DataColumn("PERIODTYPE_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERIODTYPE_C);
                this.columnEndurance = new global::System.Data.DataColumn("Endurance", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndurance);
                this.columnEnduranceDamageMin = new global::System.Data.DataColumn("EnduranceDamageMin", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnduranceDamageMin);
                this.columnEnduranceDamageMax = new global::System.Data.DataColumn("EnduranceDamageMax", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnduranceDamageMax);
                this.columnRepair_ED = new global::System.Data.DataColumn("Repair ED", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepair_ED);
                this.columnRepair_VP = new global::System.Data.DataColumn("Repair VP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepair_VP);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnPrice_Type = new global::System.Data.DataColumn("Price Type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice_Type);
                this.columnPrice_Type_ = new global::System.Data.DataColumn("Price Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice_Type_);
                this.columnPRICETYPE_C = new global::System.Data.DataColumn("PRICETYPE_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICETYPE_C);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnPrice_PvP_Point = new global::System.Data.DataColumn("Price PvP Point", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice_PvP_Point);
                this.columnUse_Condition = new global::System.Data.DataColumn("Use Condition", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUse_Condition);
                this.columnUse_Condition_ = new global::System.Data.DataColumn("Use Condition_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUse_Condition_);
                this.columnUSECONDITION_C = new global::System.Data.DataColumn("USECONDITION_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSECONDITION_C);
                this.columnUnit_Type = new global::System.Data.DataColumn("Unit Type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Type);
                this.columnUnit_Type_ = new global::System.Data.DataColumn("Unit Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Type_);
                this.columnUNITTYPE_C = new global::System.Data.DataColumn("UNITTYPE_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNITTYPE_C);
                this.columnUnit_Class = new global::System.Data.DataColumn("Unit Class", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Class);
                this.columnUnit_Class_ = new global::System.Data.DataColumn("Unit Class_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Class_);
                this.columnUNITCLASS_C = new global::System.Data.DataColumn("UNITCLASS_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNITCLASS_C);
                this.columnUse_Level = new global::System.Data.DataColumn("Use Level", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUse_Level);
                this.columnEqip_Position = new global::System.Data.DataColumn("Eqip Position", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEqip_Position);
                this.columnEqip_Position_ = new global::System.Data.DataColumn("Eqip Position_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEqip_Position_);
                this.columnEQIPPOSITION_C = new global::System.Data.DataColumn("EQIPPOSITION_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQIPPOSITION_C);
                this.columnItem_Grade = new global::System.Data.DataColumn("Item Grade", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Grade);
                this.columnItem_Grade_ = new global::System.Data.DataColumn("Item Grade_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Grade_);
                this.columnITEMGRADE_C = new global::System.Data.DataColumn("ITEMGRADE_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMGRADE_C);
                this.columnBASE_HP = new global::System.Data.DataColumn("BASE_HP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASE_HP);
                this.columnATK_PHYSIC = new global::System.Data.DataColumn("ATK_PHYSIC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATK_PHYSIC);
                this.columnATK_MAGIC = new global::System.Data.DataColumn("ATK_MAGIC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATK_MAGIC);
                this.columnDEF_PHYSIC = new global::System.Data.DataColumn("DEF_PHYSIC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEF_PHYSIC);
                this.columnDEF_MAGIC = new global::System.Data.DataColumn("DEF_MAGIC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEF_MAGIC);
                this.columnSA_NUM = new global::System.Data.DataColumn("SA_NUM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_NUM);
                this.columnSA_01 = new global::System.Data.DataColumn("SA_01", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_01);
                this.columnSA_02 = new global::System.Data.DataColumn("SA_02", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_02);
                this.columnSA_03 = new global::System.Data.DataColumn("SA_03", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_03);
                this.columnSA_04 = new global::System.Data.DataColumn("SA_04", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_04);
                this.columnSA_05 = new global::System.Data.DataColumn("SA_05", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_05);
                this.columnSA_06 = new global::System.Data.DataColumn("SA_06", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_06);
                this.columnSA_07 = new global::System.Data.DataColumn("SA_07", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_07);
                this.columnSA_08 = new global::System.Data.DataColumn("SA_08", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_08);
                this.columnSA_09 = new global::System.Data.DataColumn("SA_09", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_09);
                this.columnSA_10 = new global::System.Data.DataColumn("SA_10", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_10);
                this.columnSO_01 = new global::System.Data.DataColumn("SO_01", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_01);
                this.columnSO_02 = new global::System.Data.DataColumn("SO_02", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_02);
                this.columnSO_03 = new global::System.Data.DataColumn("SO_03", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_03);
                this.columnSO_04 = new global::System.Data.DataColumn("SO_04", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_04);
                this.columnSO_05 = new global::System.Data.DataColumn("SO_05", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_05);
                this.columnSO_06 = new global::System.Data.DataColumn("SO_06", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_06);
                this.columnSO_07 = new global::System.Data.DataColumn("SO_07", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_07);
                this.columnSO_08 = new global::System.Data.DataColumn("SO_08", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_08);
                this.columnSO_09 = new global::System.Data.DataColumn("SO_09", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_09);
                this.columnCOOL_TIME = new global::System.Data.DataColumn("COOL_TIME", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOOL_TIME);
                this.columnSET_ID = new global::System.Data.DataColumn("SET_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSET_ID);
                this.columnCan_Use_Inventory = new global::System.Data.DataColumn("Can Use Inventory", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCan_Use_Inventory);
                this.columnNoEquip = new global::System.Data.DataColumn("NoEquip", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoEquip);
                this.columnSLASH_TRACE_COLOR = new global::System.Data.DataColumn("SLASH_TRACE_COLOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLASH_TRACE_COLOR);
                this.columnSLASH_TRACE_TIP_COLOR = new global::System.Data.DataColumn("SLASH_TRACE_TIP_COLOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLASH_TRACE_TIP_COLOR);
                this.columnHYPER_SLASH_TRACE_COLOR = new global::System.Data.DataColumn("HYPER_SLASH_TRACE_COLOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHYPER_SLASH_TRACE_COLOR);
                this.columnHYPER_SLASH_TRACE_TIP_COLOR = new global::System.Data.DataColumn("HYPER_SLASH_TRACE_TIP_COLOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHYPER_SLASH_TRACE_TIP_COLOR);
                this.columnELSWORD_ITEM_SCALE_ROTATE = new global::System.Data.DataColumn("ELSWORD_ITEM_SCALE_ROTATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELSWORD_ITEM_SCALE_ROTATE);
                this.columnAISHA_ITEM_SCALE_ROTATE = new global::System.Data.DataColumn("AISHA_ITEM_SCALE_ROTATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAISHA_ITEM_SCALE_ROTATE);
                this.columnRENA_ITEM_SCALE_ROTATE = new global::System.Data.DataColumn("RENA_ITEM_SCALE_ROTATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENA_ITEM_SCALE_ROTATE);
                this.columnRAVEN_ITEM_SCALE_ROTATE = new global::System.Data.DataColumn("RAVEN_ITEM_SCALE_ROTATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAVEN_ITEM_SCALE_ROTATE);
                this.columnEVE_ITEM_SCALE_ROTATE = new global::System.Data.DataColumn("EVE_ITEM_SCALE_ROTATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEVE_ITEM_SCALE_ROTATE);
                this.columnATTACHED_MESH_NAME1 = new global::System.Data.DataColumn("ATTACHED_MESH_NAME1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_NAME1);
                this.columnATTACHED_MESH_BONE_NAME1 = new global::System.Data.DataColumn("ATTACHED_MESH_BONE_NAME1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_BONE_NAME1);
                this.columnATTACHED_MESH_NAME2 = new global::System.Data.DataColumn("ATTACHED_MESH_NAME2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_NAME2);
                this.columnATTACHED_MESH_BONE_NAME2 = new global::System.Data.DataColumn("ATTACHED_MESH_BONE_NAME2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_BONE_NAME2);
                this.columnATTACHED_MESH_NAME3 = new global::System.Data.DataColumn("ATTACHED_MESH_NAME3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_NAME3);
                this.columnATTACHED_MESH_BONE_NAME3 = new global::System.Data.DataColumn("ATTACHED_MESH_BONE_NAME3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_BONE_NAME3);
                this.columnATTACHED_MESH_NAME4 = new global::System.Data.DataColumn("ATTACHED_MESH_NAME4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_NAME4);
                this.columnATTACHED_MESH_BONE_NAME4 = new global::System.Data.DataColumn("ATTACHED_MESH_BONE_NAME4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_BONE_NAME4);
                this.columnATTACHED_MESH_NAME5 = new global::System.Data.DataColumn("ATTACHED_MESH_NAME5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_NAME5);
                this.columnATTACHED_MESH_BONE_NAME5 = new global::System.Data.DataColumn("ATTACHED_MESH_BONE_NAME5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_BONE_NAME5);
                this.columnModel_Name1 = new global::System.Data.DataColumn("Model Name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel_Name1);
                this.columnAttach_FrameName1 = new global::System.Data.DataColumn("Attach FrameName1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttach_FrameName1);
                this.columnATTACHED_PARTICLE_NAME1 = new global::System.Data.DataColumn("ATTACHED_PARTICLE_NAME1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_PARTICLE_NAME1);
                this.columnATTACHED_PARTICLE_BONE_NAME1 = new global::System.Data.DataColumn("ATTACHED_PARTICLE_BONE_NAME1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_PARTICLE_BONE_NAME1);
                this.columnATTACHED_PARTICLE_NAME2 = new global::System.Data.DataColumn("ATTACHED_PARTICLE_NAME2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_PARTICLE_NAME2);
                this.columnATTACHED_PARTICLE_BONE_NAME2 = new global::System.Data.DataColumn("ATTACHED_PARTICLE_BONE_NAME2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_PARTICLE_BONE_NAME2);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndexKey}, true));
                this.columnIndexKey.AllowDBNull = false;
                this.columnIndexKey.Unique = true;
                this.columnID.AllowDBNull = false;
                this.columnName.MaxLength = 255;
                this.columnDescription.MaxLength = 255;
                this.columnDescription_In_Shop.MaxLength = 255;
                this.columnModel_Name.MaxLength = 255;
                this.columnTexture_Change_XET_Name.MaxLength = 255;
                this.columnELSWORD_MODEL_NAME.MaxLength = 255;
                this.columnELSWORD_XET_NAME.MaxLength = 255;
                this.columnAISHA_MODEL_NAME.MaxLength = 255;
                this.columnAISHA_XET_NAME.MaxLength = 255;
                this.columnRENA_MODEL_NAME.MaxLength = 255;
                this.columnRENA_XET_NAME.MaxLength = 255;
                this.columnRAVEN_MODEL_NAME.MaxLength = 255;
                this.columnRAVEN_XET_NAME.MaxLength = 255;
                this.columnEVE_MODEL_NAME.MaxLength = 255;
                this.columnEVE_XET_NAME.MaxLength = 255;
                this.columnAnim_XET_Name.MaxLength = 255;
                this.columnAnim_Name.MaxLength = 255;
                this.columnShop_Image.MaxLength = 255;
                this.columnDrop_Viewer.MaxLength = 255;
                this.columnItem_Type_.MaxLength = 255;
                this.columnITEMTYPE_C.MaxLength = 255;
                this.columnUse_Type_.MaxLength = 255;
                this.columnUSETYPE_C.MaxLength = 255;
                this.columnAttach_FrameName.MaxLength = 255;
                this.columnPeriod_Type_.MaxLength = 255;
                this.columnPERIODTYPE_C.MaxLength = 255;
                this.columnPrice_Type_.MaxLength = 255;
                this.columnPRICETYPE_C.MaxLength = 255;
                this.columnPrice.MaxLength = 50;
                this.columnUse_Condition_.MaxLength = 255;
                this.columnUSECONDITION_C.MaxLength = 255;
                this.columnUnit_Type_.MaxLength = 255;
                this.columnUNITTYPE_C.MaxLength = 255;
                this.columnUnit_Class_.MaxLength = 255;
                this.columnUNITCLASS_C.MaxLength = 255;
                this.columnEqip_Position_.MaxLength = 255;
                this.columnEQIPPOSITION_C.MaxLength = 255;
                this.columnItem_Grade_.MaxLength = 255;
                this.columnITEMGRADE_C.MaxLength = 255;
                this.columnSLASH_TRACE_COLOR.MaxLength = 255;
                this.columnSLASH_TRACE_TIP_COLOR.MaxLength = 255;
                this.columnHYPER_SLASH_TRACE_COLOR.MaxLength = 255;
                this.columnHYPER_SLASH_TRACE_TIP_COLOR.MaxLength = 255;
                this.columnELSWORD_ITEM_SCALE_ROTATE.MaxLength = 255;
                this.columnAISHA_ITEM_SCALE_ROTATE.MaxLength = 255;
                this.columnRENA_ITEM_SCALE_ROTATE.MaxLength = 255;
                this.columnRAVEN_ITEM_SCALE_ROTATE.MaxLength = 255;
                this.columnEVE_ITEM_SCALE_ROTATE.MaxLength = 255;
                this.columnATTACHED_MESH_NAME1.MaxLength = 255;
                this.columnATTACHED_MESH_BONE_NAME1.MaxLength = 255;
                this.columnATTACHED_MESH_NAME2.MaxLength = 255;
                this.columnATTACHED_MESH_BONE_NAME2.MaxLength = 255;
                this.columnATTACHED_MESH_NAME3.MaxLength = 255;
                this.columnATTACHED_MESH_BONE_NAME3.MaxLength = 255;
                this.columnATTACHED_MESH_NAME4.MaxLength = 255;
                this.columnATTACHED_MESH_BONE_NAME4.MaxLength = 255;
                this.columnATTACHED_MESH_NAME5.MaxLength = 255;
                this.columnATTACHED_MESH_BONE_NAME5.MaxLength = 255;
                this.columnModel_Name1.MaxLength = 255;
                this.columnAttach_FrameName1.MaxLength = 255;
                this.columnATTACHED_PARTICLE_NAME1.MaxLength = 255;
                this.columnATTACHED_PARTICLE_BONE_NAME1.MaxLength = 255;
                this.columnATTACHED_PARTICLE_NAME2.MaxLength = 255;
                this.columnATTACHED_PARTICLE_BONE_NAME2.MaxLength = 255;
                this.columnRegdate.AllowDBNull = false;
                this.ExtendedProperties.Add("Generator_RowClassName", "ItemRow");
                this.ExtendedProperties.Add("Generator_RowEvArgName", "ItemRowChangeEvent");
                this.ExtendedProperties.Add("Generator_RowEvHandlerName", "ItemRowChangeEventHandler");
                this.ExtendedProperties.Add("Generator_TableClassName", "ItemDataTable");
                this.ExtendedProperties.Add("Generator_TablePropName", "Item");
                this.ExtendedProperties.Add("Generator_TableVarName", "tableItem");
                this.ExtendedProperties.Add("Generator_UserTableName", "Item");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemRow NewItemRow() {
                return ((ItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItemRowChanged != null)) {
                    this.ItemRowChanged(this, new ItemRowChangeEvent(((ItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItemRowChanging != null)) {
                    this.ItemRowChanging(this, new ItemRowChangeEvent(((ItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItemRowDeleted != null)) {
                    this.ItemRowDeleted(this, new ItemRowChangeEvent(((ItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItemRowDeleting != null)) {
                    this.ItemRowDeleting(this, new ItemRowChangeEvent(((ItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItemRow(ItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Item_HistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnDescription_In_Shop;
            
            private global::System.Data.DataColumn columnModel_Name;
            
            private global::System.Data.DataColumn columnTexture_Change_XET_Name;
            
            private global::System.Data.DataColumn columnELSWORD_MODEL_NAME;
            
            private global::System.Data.DataColumn columnELSWORD_XET_NAME;
            
            private global::System.Data.DataColumn columnAISHA_MODEL_NAME;
            
            private global::System.Data.DataColumn columnAISHA_XET_NAME;
            
            private global::System.Data.DataColumn columnRENA_MODEL_NAME;
            
            private global::System.Data.DataColumn columnRENA_XET_NAME;
            
            private global::System.Data.DataColumn columnRAVEN_MODEL_NAME;
            
            private global::System.Data.DataColumn columnRAVEN_XET_NAME;
            
            private global::System.Data.DataColumn columnEVE_MODEL_NAME;
            
            private global::System.Data.DataColumn columnEVE_XET_NAME;
            
            private global::System.Data.DataColumn columnAnim_XET_Name;
            
            private global::System.Data.DataColumn columnAnim_Name;
            
            private global::System.Data.DataColumn columnShop_Image;
            
            private global::System.Data.DataColumn columnDrop_Viewer;
            
            private global::System.Data.DataColumn columnItem_Type;
            
            private global::System.Data.DataColumn columnItem_Type_;
            
            private global::System.Data.DataColumn columnITEMTYPE_C;
            
            private global::System.Data.DataColumn columnFashion;
            
            private global::System.Data.DataColumn columnVested;
            
            private global::System.Data.DataColumn columnCan_Enchant;
            
            private global::System.Data.DataColumn columnUse_Type;
            
            private global::System.Data.DataColumn columnUse_Type_;
            
            private global::System.Data.DataColumn columnUSETYPE_C;
            
            private global::System.Data.DataColumn columnAttach_FrameName;
            
            private global::System.Data.DataColumn columnFO_Elsword_X;
            
            private global::System.Data.DataColumn columnFO_Elsword_Y;
            
            private global::System.Data.DataColumn columnFO_Elsword_Z;
            
            private global::System.Data.DataColumn columnFO_Lena_X;
            
            private global::System.Data.DataColumn columnFO_Lena_Y;
            
            private global::System.Data.DataColumn columnFO_Lena_Z;
            
            private global::System.Data.DataColumn columnFO_Aisha_X;
            
            private global::System.Data.DataColumn columnFO_Aisha_Y;
            
            private global::System.Data.DataColumn columnFO_Aisha_Z;
            
            private global::System.Data.DataColumn columnFO_Raven_X;
            
            private global::System.Data.DataColumn columnFO_Raven_Y;
            
            private global::System.Data.DataColumn columnFO_Raven_Z;
            
            private global::System.Data.DataColumn columnFO_Eve_X;
            
            private global::System.Data.DataColumn columnFO_Eve_Y;
            
            private global::System.Data.DataColumn columnFO_Eve_Z;
            
            private global::System.Data.DataColumn columnCan_HyperMode;
            
            private global::System.Data.DataColumn columnPeriod_Type;
            
            private global::System.Data.DataColumn columnPeriod_Type_;
            
            private global::System.Data.DataColumn columnPERIODTYPE_C;
            
            private global::System.Data.DataColumn columnEndurance;
            
            private global::System.Data.DataColumn columnEnduranceDamageMin;
            
            private global::System.Data.DataColumn columnEnduranceDamageMax;
            
            private global::System.Data.DataColumn columnRepair_ED;
            
            private global::System.Data.DataColumn columnRepair_VP;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnPrice_Type;
            
            private global::System.Data.DataColumn columnPrice_Type_;
            
            private global::System.Data.DataColumn columnPRICETYPE_C;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnPrice_PvP_Point;
            
            private global::System.Data.DataColumn columnUse_Condition;
            
            private global::System.Data.DataColumn columnUse_Condition_;
            
            private global::System.Data.DataColumn columnUSECONDITION_C;
            
            private global::System.Data.DataColumn columnUnit_Type;
            
            private global::System.Data.DataColumn columnUnit_Type_;
            
            private global::System.Data.DataColumn columnUNITTYPE_C;
            
            private global::System.Data.DataColumn columnUnit_Class;
            
            private global::System.Data.DataColumn columnUnit_Class_;
            
            private global::System.Data.DataColumn columnUNITCLASS_C;
            
            private global::System.Data.DataColumn columnUse_Level;
            
            private global::System.Data.DataColumn columnEqip_Position;
            
            private global::System.Data.DataColumn columnEqip_Position_;
            
            private global::System.Data.DataColumn columnEQIPPOSITION_C;
            
            private global::System.Data.DataColumn columnItem_Grade;
            
            private global::System.Data.DataColumn columnItem_Grade_;
            
            private global::System.Data.DataColumn columnITEMGRADE_C;
            
            private global::System.Data.DataColumn columnBASE_HP;
            
            private global::System.Data.DataColumn columnATK_PHYSIC;
            
            private global::System.Data.DataColumn columnATK_MAGIC;
            
            private global::System.Data.DataColumn columnDEF_PHYSIC;
            
            private global::System.Data.DataColumn columnDEF_MAGIC;
            
            private global::System.Data.DataColumn columnSA_NUM;
            
            private global::System.Data.DataColumn columnSA_01;
            
            private global::System.Data.DataColumn columnSA_02;
            
            private global::System.Data.DataColumn columnSA_03;
            
            private global::System.Data.DataColumn columnSA_04;
            
            private global::System.Data.DataColumn columnSA_05;
            
            private global::System.Data.DataColumn columnSA_06;
            
            private global::System.Data.DataColumn columnSA_07;
            
            private global::System.Data.DataColumn columnSA_08;
            
            private global::System.Data.DataColumn columnSA_09;
            
            private global::System.Data.DataColumn columnSA_10;
            
            private global::System.Data.DataColumn columnSO_01;
            
            private global::System.Data.DataColumn columnSO_02;
            
            private global::System.Data.DataColumn columnSO_03;
            
            private global::System.Data.DataColumn columnSO_04;
            
            private global::System.Data.DataColumn columnSO_05;
            
            private global::System.Data.DataColumn columnSO_06;
            
            private global::System.Data.DataColumn columnSO_07;
            
            private global::System.Data.DataColumn columnSO_08;
            
            private global::System.Data.DataColumn columnSO_09;
            
            private global::System.Data.DataColumn columnCOOL_TIME;
            
            private global::System.Data.DataColumn columnSET_ID;
            
            private global::System.Data.DataColumn columnCan_Use_Inventory;
            
            private global::System.Data.DataColumn columnNoEquip;
            
            private global::System.Data.DataColumn columnSLASH_TRACE_COLOR;
            
            private global::System.Data.DataColumn columnSLASH_TRACE_TIP_COLOR;
            
            private global::System.Data.DataColumn columnHYPER_SLASH_TRACE_COLOR;
            
            private global::System.Data.DataColumn columnHYPER_SLASH_TRACE_TIP_COLOR;
            
            private global::System.Data.DataColumn columnELSWORD_ITEM_SCALE_ROTATE;
            
            private global::System.Data.DataColumn columnAISHA_ITEM_SCALE_ROTATE;
            
            private global::System.Data.DataColumn columnRENA_ITEM_SCALE_ROTATE;
            
            private global::System.Data.DataColumn columnRAVEN_ITEM_SCALE_ROTATE;
            
            private global::System.Data.DataColumn columnEVE_ITEM_SCALE_ROTATE;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_NAME1;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_BONE_NAME1;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_NAME2;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_BONE_NAME2;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_NAME3;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_BONE_NAME3;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_NAME4;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_BONE_NAME4;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_NAME5;
            
            private global::System.Data.DataColumn columnATTACHED_MESH_BONE_NAME5;
            
            private global::System.Data.DataColumn columnModel_Name1;
            
            private global::System.Data.DataColumn columnAttach_FrameName1;
            
            private global::System.Data.DataColumn columnATTACHED_PARTICLE_NAME1;
            
            private global::System.Data.DataColumn columnATTACHED_PARTICLE_BONE_NAME1;
            
            private global::System.Data.DataColumn columnATTACHED_PARTICLE_NAME2;
            
            private global::System.Data.DataColumn columnATTACHED_PARTICLE_BONE_NAME2;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnUserIP;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Item_HistoryDataTable() {
                this.TableName = "Item_History";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Item_HistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Item_HistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Description_In_ShopColumn {
                get {
                    return this.columnDescription_In_Shop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Model_NameColumn {
                get {
                    return this.columnModel_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Texture_Change_XET_NameColumn {
                get {
                    return this.columnTexture_Change_XET_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELSWORD_MODEL_NAMEColumn {
                get {
                    return this.columnELSWORD_MODEL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELSWORD_XET_NAMEColumn {
                get {
                    return this.columnELSWORD_XET_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AISHA_MODEL_NAMEColumn {
                get {
                    return this.columnAISHA_MODEL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AISHA_XET_NAMEColumn {
                get {
                    return this.columnAISHA_XET_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENA_MODEL_NAMEColumn {
                get {
                    return this.columnRENA_MODEL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENA_XET_NAMEColumn {
                get {
                    return this.columnRENA_XET_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAVEN_MODEL_NAMEColumn {
                get {
                    return this.columnRAVEN_MODEL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAVEN_XET_NAMEColumn {
                get {
                    return this.columnRAVEN_XET_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EVE_MODEL_NAMEColumn {
                get {
                    return this.columnEVE_MODEL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EVE_XET_NAMEColumn {
                get {
                    return this.columnEVE_XET_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Anim_XET_NameColumn {
                get {
                    return this.columnAnim_XET_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Anim_NameColumn {
                get {
                    return this.columnAnim_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Shop_ImageColumn {
                get {
                    return this.columnShop_Image;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Drop_ViewerColumn {
                get {
                    return this.columnDrop_Viewer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_TypeColumn {
                get {
                    return this.columnItem_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_Type_Column {
                get {
                    return this.columnItem_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEMTYPE_CColumn {
                get {
                    return this.columnITEMTYPE_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FashionColumn {
                get {
                    return this.columnFashion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VestedColumn {
                get {
                    return this.columnVested;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Can_EnchantColumn {
                get {
                    return this.columnCan_Enchant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Use_TypeColumn {
                get {
                    return this.columnUse_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Use_Type_Column {
                get {
                    return this.columnUse_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USETYPE_CColumn {
                get {
                    return this.columnUSETYPE_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Attach_FrameNameColumn {
                get {
                    return this.columnAttach_FrameName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Elsword_XColumn {
                get {
                    return this.columnFO_Elsword_X;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Elsword_YColumn {
                get {
                    return this.columnFO_Elsword_Y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Elsword_ZColumn {
                get {
                    return this.columnFO_Elsword_Z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Lena_XColumn {
                get {
                    return this.columnFO_Lena_X;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Lena_YColumn {
                get {
                    return this.columnFO_Lena_Y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Lena_ZColumn {
                get {
                    return this.columnFO_Lena_Z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Aisha_XColumn {
                get {
                    return this.columnFO_Aisha_X;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Aisha_YColumn {
                get {
                    return this.columnFO_Aisha_Y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Aisha_ZColumn {
                get {
                    return this.columnFO_Aisha_Z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Raven_XColumn {
                get {
                    return this.columnFO_Raven_X;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Raven_YColumn {
                get {
                    return this.columnFO_Raven_Y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Raven_ZColumn {
                get {
                    return this.columnFO_Raven_Z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Eve_XColumn {
                get {
                    return this.columnFO_Eve_X;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Eve_YColumn {
                get {
                    return this.columnFO_Eve_Y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FO_Eve_ZColumn {
                get {
                    return this.columnFO_Eve_Z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Can_HyperModeColumn {
                get {
                    return this.columnCan_HyperMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Period_TypeColumn {
                get {
                    return this.columnPeriod_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Period_Type_Column {
                get {
                    return this.columnPeriod_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PERIODTYPE_CColumn {
                get {
                    return this.columnPERIODTYPE_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnduranceColumn {
                get {
                    return this.columnEndurance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnduranceDamageMinColumn {
                get {
                    return this.columnEnduranceDamageMin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnduranceDamageMaxColumn {
                get {
                    return this.columnEnduranceDamageMax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Repair_EDColumn {
                get {
                    return this.columnRepair_ED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Repair_VPColumn {
                get {
                    return this.columnRepair_VP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Price_TypeColumn {
                get {
                    return this.columnPrice_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Price_Type_Column {
                get {
                    return this.columnPrice_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICETYPE_CColumn {
                get {
                    return this.columnPRICETYPE_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Price_PvP_PointColumn {
                get {
                    return this.columnPrice_PvP_Point;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Use_ConditionColumn {
                get {
                    return this.columnUse_Condition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Use_Condition_Column {
                get {
                    return this.columnUse_Condition_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USECONDITION_CColumn {
                get {
                    return this.columnUSECONDITION_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_TypeColumn {
                get {
                    return this.columnUnit_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_Type_Column {
                get {
                    return this.columnUnit_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNITTYPE_CColumn {
                get {
                    return this.columnUNITTYPE_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_ClassColumn {
                get {
                    return this.columnUnit_Class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_Class_Column {
                get {
                    return this.columnUnit_Class_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNITCLASS_CColumn {
                get {
                    return this.columnUNITCLASS_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Use_LevelColumn {
                get {
                    return this.columnUse_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Eqip_PositionColumn {
                get {
                    return this.columnEqip_Position;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Eqip_Position_Column {
                get {
                    return this.columnEqip_Position_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EQIPPOSITION_CColumn {
                get {
                    return this.columnEQIPPOSITION_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_GradeColumn {
                get {
                    return this.columnItem_Grade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_Grade_Column {
                get {
                    return this.columnItem_Grade_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEMGRADE_CColumn {
                get {
                    return this.columnITEMGRADE_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BASE_HPColumn {
                get {
                    return this.columnBASE_HP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATK_PHYSICColumn {
                get {
                    return this.columnATK_PHYSIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATK_MAGICColumn {
                get {
                    return this.columnATK_MAGIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEF_PHYSICColumn {
                get {
                    return this.columnDEF_PHYSIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEF_MAGICColumn {
                get {
                    return this.columnDEF_MAGIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_NUMColumn {
                get {
                    return this.columnSA_NUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_01Column {
                get {
                    return this.columnSA_01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_02Column {
                get {
                    return this.columnSA_02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_03Column {
                get {
                    return this.columnSA_03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_04Column {
                get {
                    return this.columnSA_04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_05Column {
                get {
                    return this.columnSA_05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_06Column {
                get {
                    return this.columnSA_06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_07Column {
                get {
                    return this.columnSA_07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_08Column {
                get {
                    return this.columnSA_08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_09Column {
                get {
                    return this.columnSA_09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_10Column {
                get {
                    return this.columnSA_10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_01Column {
                get {
                    return this.columnSO_01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_02Column {
                get {
                    return this.columnSO_02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_03Column {
                get {
                    return this.columnSO_03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_04Column {
                get {
                    return this.columnSO_04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_05Column {
                get {
                    return this.columnSO_05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_06Column {
                get {
                    return this.columnSO_06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_07Column {
                get {
                    return this.columnSO_07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_08Column {
                get {
                    return this.columnSO_08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_09Column {
                get {
                    return this.columnSO_09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COOL_TIMEColumn {
                get {
                    return this.columnCOOL_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SET_IDColumn {
                get {
                    return this.columnSET_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Can_Use_InventoryColumn {
                get {
                    return this.columnCan_Use_Inventory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoEquipColumn {
                get {
                    return this.columnNoEquip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLASH_TRACE_COLORColumn {
                get {
                    return this.columnSLASH_TRACE_COLOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLASH_TRACE_TIP_COLORColumn {
                get {
                    return this.columnSLASH_TRACE_TIP_COLOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HYPER_SLASH_TRACE_COLORColumn {
                get {
                    return this.columnHYPER_SLASH_TRACE_COLOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HYPER_SLASH_TRACE_TIP_COLORColumn {
                get {
                    return this.columnHYPER_SLASH_TRACE_TIP_COLOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELSWORD_ITEM_SCALE_ROTATEColumn {
                get {
                    return this.columnELSWORD_ITEM_SCALE_ROTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AISHA_ITEM_SCALE_ROTATEColumn {
                get {
                    return this.columnAISHA_ITEM_SCALE_ROTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENA_ITEM_SCALE_ROTATEColumn {
                get {
                    return this.columnRENA_ITEM_SCALE_ROTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAVEN_ITEM_SCALE_ROTATEColumn {
                get {
                    return this.columnRAVEN_ITEM_SCALE_ROTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EVE_ITEM_SCALE_ROTATEColumn {
                get {
                    return this.columnEVE_ITEM_SCALE_ROTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_NAME1Column {
                get {
                    return this.columnATTACHED_MESH_NAME1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_BONE_NAME1Column {
                get {
                    return this.columnATTACHED_MESH_BONE_NAME1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_NAME2Column {
                get {
                    return this.columnATTACHED_MESH_NAME2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_BONE_NAME2Column {
                get {
                    return this.columnATTACHED_MESH_BONE_NAME2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_NAME3Column {
                get {
                    return this.columnATTACHED_MESH_NAME3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_BONE_NAME3Column {
                get {
                    return this.columnATTACHED_MESH_BONE_NAME3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_NAME4Column {
                get {
                    return this.columnATTACHED_MESH_NAME4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_BONE_NAME4Column {
                get {
                    return this.columnATTACHED_MESH_BONE_NAME4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_NAME5Column {
                get {
                    return this.columnATTACHED_MESH_NAME5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_MESH_BONE_NAME5Column {
                get {
                    return this.columnATTACHED_MESH_BONE_NAME5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Model_Name1Column {
                get {
                    return this.columnModel_Name1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Attach_FrameName1Column {
                get {
                    return this.columnAttach_FrameName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_PARTICLE_NAME1Column {
                get {
                    return this.columnATTACHED_PARTICLE_NAME1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_PARTICLE_BONE_NAME1Column {
                get {
                    return this.columnATTACHED_PARTICLE_BONE_NAME1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_PARTICLE_NAME2Column {
                get {
                    return this.columnATTACHED_PARTICLE_NAME2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTACHED_PARTICLE_BONE_NAME2Column {
                get {
                    return this.columnATTACHED_PARTICLE_BONE_NAME2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIPColumn {
                get {
                    return this.columnUserIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Item_HistoryRow this[int index] {
                get {
                    return ((Item_HistoryRow)(this.Rows[index]));
                }
            }
            
            public event Item_HistoryRowChangeEventHandler Item_HistoryRowChanging;
            
            public event Item_HistoryRowChangeEventHandler Item_HistoryRowChanged;
            
            public event Item_HistoryRowChangeEventHandler Item_HistoryRowDeleting;
            
            public event Item_HistoryRowChangeEventHandler Item_HistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItem_HistoryRow(Item_HistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Item_HistoryRow AddItem_HistoryRow(
                        int IndexKey, 
                        int ID, 
                        string Name, 
                        string Description, 
                        string Description_In_Shop, 
                        string Model_Name, 
                        string Texture_Change_XET_Name, 
                        string ELSWORD_MODEL_NAME, 
                        string ELSWORD_XET_NAME, 
                        string AISHA_MODEL_NAME, 
                        string AISHA_XET_NAME, 
                        string RENA_MODEL_NAME, 
                        string RENA_XET_NAME, 
                        string RAVEN_MODEL_NAME, 
                        string RAVEN_XET_NAME, 
                        string EVE_MODEL_NAME, 
                        string EVE_XET_NAME, 
                        string Anim_XET_Name, 
                        string Anim_Name, 
                        string Shop_Image, 
                        string Drop_Viewer, 
                        byte Item_Type, 
                        string Item_Type_, 
                        string ITEMTYPE_C, 
                        bool Fashion, 
                        bool Vested, 
                        bool Can_Enchant, 
                        double Use_Type, 
                        string Use_Type_, 
                        string USETYPE_C, 
                        string Attach_FrameName, 
                        double FO_Elsword_X, 
                        double FO_Elsword_Y, 
                        double FO_Elsword_Z, 
                        double FO_Lena_X, 
                        double FO_Lena_Y, 
                        double FO_Lena_Z, 
                        double FO_Aisha_X, 
                        double FO_Aisha_Y, 
                        double FO_Aisha_Z, 
                        double FO_Raven_X, 
                        double FO_Raven_Y, 
                        double FO_Raven_Z, 
                        double FO_Eve_X, 
                        double FO_Eve_Y, 
                        double FO_Eve_Z, 
                        bool Can_HyperMode, 
                        byte Period_Type, 
                        string Period_Type_, 
                        string PERIODTYPE_C, 
                        int Endurance, 
                        byte EnduranceDamageMin, 
                        byte EnduranceDamageMax, 
                        double Repair_ED, 
                        double Repair_VP, 
                        int Quantity, 
                        byte Price_Type, 
                        string Price_Type_, 
                        string PRICETYPE_C, 
                        string Price, 
                        int Price_PvP_Point, 
                        byte Use_Condition, 
                        string Use_Condition_, 
                        string USECONDITION_C, 
                        byte Unit_Type, 
                        string Unit_Type_, 
                        string UNITTYPE_C, 
                        byte Unit_Class, 
                        string Unit_Class_, 
                        string UNITCLASS_C, 
                        byte Use_Level, 
                        byte Eqip_Position, 
                        string Eqip_Position_, 
                        string EQIPPOSITION_C, 
                        byte Item_Grade, 
                        string Item_Grade_, 
                        string ITEMGRADE_C, 
                        int BASE_HP, 
                        int ATK_PHYSIC, 
                        int ATK_MAGIC, 
                        int DEF_PHYSIC, 
                        int DEF_MAGIC, 
                        int SA_NUM, 
                        int SA_01, 
                        int SA_02, 
                        int SA_03, 
                        int SA_04, 
                        int SA_05, 
                        int SA_06, 
                        int SA_07, 
                        int SA_08, 
                        int SA_09, 
                        int SA_10, 
                        int SO_01, 
                        int SO_02, 
                        int SO_03, 
                        int SO_04, 
                        int SO_05, 
                        int SO_06, 
                        int SO_07, 
                        int SO_08, 
                        int SO_09, 
                        byte COOL_TIME, 
                        int SET_ID, 
                        bool Can_Use_Inventory, 
                        bool NoEquip, 
                        string SLASH_TRACE_COLOR, 
                        string SLASH_TRACE_TIP_COLOR, 
                        string HYPER_SLASH_TRACE_COLOR, 
                        string HYPER_SLASH_TRACE_TIP_COLOR, 
                        string ELSWORD_ITEM_SCALE_ROTATE, 
                        string AISHA_ITEM_SCALE_ROTATE, 
                        string RENA_ITEM_SCALE_ROTATE, 
                        string RAVEN_ITEM_SCALE_ROTATE, 
                        string EVE_ITEM_SCALE_ROTATE, 
                        string ATTACHED_MESH_NAME1, 
                        string ATTACHED_MESH_BONE_NAME1, 
                        string ATTACHED_MESH_NAME2, 
                        string ATTACHED_MESH_BONE_NAME2, 
                        string ATTACHED_MESH_NAME3, 
                        string ATTACHED_MESH_BONE_NAME3, 
                        string ATTACHED_MESH_NAME4, 
                        string ATTACHED_MESH_BONE_NAME4, 
                        string ATTACHED_MESH_NAME5, 
                        string ATTACHED_MESH_BONE_NAME5, 
                        string Model_Name1, 
                        string Attach_FrameName1, 
                        string ATTACHED_PARTICLE_NAME1, 
                        string ATTACHED_PARTICLE_BONE_NAME1, 
                        string ATTACHED_PARTICLE_NAME2, 
                        string ATTACHED_PARTICLE_BONE_NAME2, 
                        string UserID, 
                        string UserIP, 
                        System.DateTime Regdate) {
                Item_HistoryRow rowItem_HistoryRow = ((Item_HistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        ID,
                        Name,
                        Description,
                        Description_In_Shop,
                        Model_Name,
                        Texture_Change_XET_Name,
                        ELSWORD_MODEL_NAME,
                        ELSWORD_XET_NAME,
                        AISHA_MODEL_NAME,
                        AISHA_XET_NAME,
                        RENA_MODEL_NAME,
                        RENA_XET_NAME,
                        RAVEN_MODEL_NAME,
                        RAVEN_XET_NAME,
                        EVE_MODEL_NAME,
                        EVE_XET_NAME,
                        Anim_XET_Name,
                        Anim_Name,
                        Shop_Image,
                        Drop_Viewer,
                        Item_Type,
                        Item_Type_,
                        ITEMTYPE_C,
                        Fashion,
                        Vested,
                        Can_Enchant,
                        Use_Type,
                        Use_Type_,
                        USETYPE_C,
                        Attach_FrameName,
                        FO_Elsword_X,
                        FO_Elsword_Y,
                        FO_Elsword_Z,
                        FO_Lena_X,
                        FO_Lena_Y,
                        FO_Lena_Z,
                        FO_Aisha_X,
                        FO_Aisha_Y,
                        FO_Aisha_Z,
                        FO_Raven_X,
                        FO_Raven_Y,
                        FO_Raven_Z,
                        FO_Eve_X,
                        FO_Eve_Y,
                        FO_Eve_Z,
                        Can_HyperMode,
                        Period_Type,
                        Period_Type_,
                        PERIODTYPE_C,
                        Endurance,
                        EnduranceDamageMin,
                        EnduranceDamageMax,
                        Repair_ED,
                        Repair_VP,
                        Quantity,
                        Price_Type,
                        Price_Type_,
                        PRICETYPE_C,
                        Price,
                        Price_PvP_Point,
                        Use_Condition,
                        Use_Condition_,
                        USECONDITION_C,
                        Unit_Type,
                        Unit_Type_,
                        UNITTYPE_C,
                        Unit_Class,
                        Unit_Class_,
                        UNITCLASS_C,
                        Use_Level,
                        Eqip_Position,
                        Eqip_Position_,
                        EQIPPOSITION_C,
                        Item_Grade,
                        Item_Grade_,
                        ITEMGRADE_C,
                        BASE_HP,
                        ATK_PHYSIC,
                        ATK_MAGIC,
                        DEF_PHYSIC,
                        DEF_MAGIC,
                        SA_NUM,
                        SA_01,
                        SA_02,
                        SA_03,
                        SA_04,
                        SA_05,
                        SA_06,
                        SA_07,
                        SA_08,
                        SA_09,
                        SA_10,
                        SO_01,
                        SO_02,
                        SO_03,
                        SO_04,
                        SO_05,
                        SO_06,
                        SO_07,
                        SO_08,
                        SO_09,
                        COOL_TIME,
                        SET_ID,
                        Can_Use_Inventory,
                        NoEquip,
                        SLASH_TRACE_COLOR,
                        SLASH_TRACE_TIP_COLOR,
                        HYPER_SLASH_TRACE_COLOR,
                        HYPER_SLASH_TRACE_TIP_COLOR,
                        ELSWORD_ITEM_SCALE_ROTATE,
                        AISHA_ITEM_SCALE_ROTATE,
                        RENA_ITEM_SCALE_ROTATE,
                        RAVEN_ITEM_SCALE_ROTATE,
                        EVE_ITEM_SCALE_ROTATE,
                        ATTACHED_MESH_NAME1,
                        ATTACHED_MESH_BONE_NAME1,
                        ATTACHED_MESH_NAME2,
                        ATTACHED_MESH_BONE_NAME2,
                        ATTACHED_MESH_NAME3,
                        ATTACHED_MESH_BONE_NAME3,
                        ATTACHED_MESH_NAME4,
                        ATTACHED_MESH_BONE_NAME4,
                        ATTACHED_MESH_NAME5,
                        ATTACHED_MESH_BONE_NAME5,
                        Model_Name1,
                        Attach_FrameName1,
                        ATTACHED_PARTICLE_NAME1,
                        ATTACHED_PARTICLE_BONE_NAME1,
                        ATTACHED_PARTICLE_NAME2,
                        ATTACHED_PARTICLE_BONE_NAME2,
                        UserID,
                        UserIP,
                        Regdate};
                rowItem_HistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItem_HistoryRow);
                return rowItem_HistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Item_HistoryDataTable cln = ((Item_HistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Item_HistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnID = base.Columns["ID"];
                this.columnName = base.Columns["Name"];
                this.columnDescription = base.Columns["Description"];
                this.columnDescription_In_Shop = base.Columns["Description In Shop"];
                this.columnModel_Name = base.Columns["Model Name"];
                this.columnTexture_Change_XET_Name = base.Columns["Texture Change XET Name"];
                this.columnELSWORD_MODEL_NAME = base.Columns["ELSWORD_MODEL_NAME"];
                this.columnELSWORD_XET_NAME = base.Columns["ELSWORD_XET_NAME"];
                this.columnAISHA_MODEL_NAME = base.Columns["AISHA_MODEL_NAME"];
                this.columnAISHA_XET_NAME = base.Columns["AISHA_XET_NAME"];
                this.columnRENA_MODEL_NAME = base.Columns["RENA_MODEL_NAME"];
                this.columnRENA_XET_NAME = base.Columns["RENA_XET_NAME"];
                this.columnRAVEN_MODEL_NAME = base.Columns["RAVEN_MODEL_NAME"];
                this.columnRAVEN_XET_NAME = base.Columns["RAVEN_XET_NAME"];
                this.columnEVE_MODEL_NAME = base.Columns["EVE_MODEL_NAME"];
                this.columnEVE_XET_NAME = base.Columns["EVE_XET_NAME"];
                this.columnAnim_XET_Name = base.Columns["Anim XET Name"];
                this.columnAnim_Name = base.Columns["Anim Name"];
                this.columnShop_Image = base.Columns["Shop Image"];
                this.columnDrop_Viewer = base.Columns["Drop Viewer"];
                this.columnItem_Type = base.Columns["Item Type"];
                this.columnItem_Type_ = base.Columns["Item Type_"];
                this.columnITEMTYPE_C = base.Columns["ITEMTYPE_C"];
                this.columnFashion = base.Columns["Fashion"];
                this.columnVested = base.Columns["Vested"];
                this.columnCan_Enchant = base.Columns["Can Enchant"];
                this.columnUse_Type = base.Columns["Use Type"];
                this.columnUse_Type_ = base.Columns["Use Type_"];
                this.columnUSETYPE_C = base.Columns["USETYPE_C"];
                this.columnAttach_FrameName = base.Columns["Attach FrameName"];
                this.columnFO_Elsword_X = base.Columns["FO_Elsword_X"];
                this.columnFO_Elsword_Y = base.Columns["FO_Elsword_Y"];
                this.columnFO_Elsword_Z = base.Columns["FO_Elsword_Z"];
                this.columnFO_Lena_X = base.Columns["FO_Lena_X"];
                this.columnFO_Lena_Y = base.Columns["FO_Lena_Y"];
                this.columnFO_Lena_Z = base.Columns["FO_Lena_Z"];
                this.columnFO_Aisha_X = base.Columns["FO_Aisha_X"];
                this.columnFO_Aisha_Y = base.Columns["FO_Aisha_Y"];
                this.columnFO_Aisha_Z = base.Columns["FO_Aisha_Z"];
                this.columnFO_Raven_X = base.Columns["FO_Raven_X"];
                this.columnFO_Raven_Y = base.Columns["FO_Raven_Y"];
                this.columnFO_Raven_Z = base.Columns["FO_Raven_Z"];
                this.columnFO_Eve_X = base.Columns["FO_Eve_X"];
                this.columnFO_Eve_Y = base.Columns["FO_Eve_Y"];
                this.columnFO_Eve_Z = base.Columns["FO_Eve_Z"];
                this.columnCan_HyperMode = base.Columns["Can HyperMode"];
                this.columnPeriod_Type = base.Columns["Period Type"];
                this.columnPeriod_Type_ = base.Columns["Period Type_"];
                this.columnPERIODTYPE_C = base.Columns["PERIODTYPE_C"];
                this.columnEndurance = base.Columns["Endurance"];
                this.columnEnduranceDamageMin = base.Columns["EnduranceDamageMin"];
                this.columnEnduranceDamageMax = base.Columns["EnduranceDamageMax"];
                this.columnRepair_ED = base.Columns["Repair ED"];
                this.columnRepair_VP = base.Columns["Repair VP"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnPrice_Type = base.Columns["Price Type"];
                this.columnPrice_Type_ = base.Columns["Price Type_"];
                this.columnPRICETYPE_C = base.Columns["PRICETYPE_C"];
                this.columnPrice = base.Columns["Price"];
                this.columnPrice_PvP_Point = base.Columns["Price PvP Point"];
                this.columnUse_Condition = base.Columns["Use Condition"];
                this.columnUse_Condition_ = base.Columns["Use Condition_"];
                this.columnUSECONDITION_C = base.Columns["USECONDITION_C"];
                this.columnUnit_Type = base.Columns["Unit Type"];
                this.columnUnit_Type_ = base.Columns["Unit Type_"];
                this.columnUNITTYPE_C = base.Columns["UNITTYPE_C"];
                this.columnUnit_Class = base.Columns["Unit Class"];
                this.columnUnit_Class_ = base.Columns["Unit Class_"];
                this.columnUNITCLASS_C = base.Columns["UNITCLASS_C"];
                this.columnUse_Level = base.Columns["Use Level"];
                this.columnEqip_Position = base.Columns["Eqip Position"];
                this.columnEqip_Position_ = base.Columns["Eqip Position_"];
                this.columnEQIPPOSITION_C = base.Columns["EQIPPOSITION_C"];
                this.columnItem_Grade = base.Columns["Item Grade"];
                this.columnItem_Grade_ = base.Columns["Item Grade_"];
                this.columnITEMGRADE_C = base.Columns["ITEMGRADE_C"];
                this.columnBASE_HP = base.Columns["BASE_HP"];
                this.columnATK_PHYSIC = base.Columns["ATK_PHYSIC"];
                this.columnATK_MAGIC = base.Columns["ATK_MAGIC"];
                this.columnDEF_PHYSIC = base.Columns["DEF_PHYSIC"];
                this.columnDEF_MAGIC = base.Columns["DEF_MAGIC"];
                this.columnSA_NUM = base.Columns["SA_NUM"];
                this.columnSA_01 = base.Columns["SA_01"];
                this.columnSA_02 = base.Columns["SA_02"];
                this.columnSA_03 = base.Columns["SA_03"];
                this.columnSA_04 = base.Columns["SA_04"];
                this.columnSA_05 = base.Columns["SA_05"];
                this.columnSA_06 = base.Columns["SA_06"];
                this.columnSA_07 = base.Columns["SA_07"];
                this.columnSA_08 = base.Columns["SA_08"];
                this.columnSA_09 = base.Columns["SA_09"];
                this.columnSA_10 = base.Columns["SA_10"];
                this.columnSO_01 = base.Columns["SO_01"];
                this.columnSO_02 = base.Columns["SO_02"];
                this.columnSO_03 = base.Columns["SO_03"];
                this.columnSO_04 = base.Columns["SO_04"];
                this.columnSO_05 = base.Columns["SO_05"];
                this.columnSO_06 = base.Columns["SO_06"];
                this.columnSO_07 = base.Columns["SO_07"];
                this.columnSO_08 = base.Columns["SO_08"];
                this.columnSO_09 = base.Columns["SO_09"];
                this.columnCOOL_TIME = base.Columns["COOL_TIME"];
                this.columnSET_ID = base.Columns["SET_ID"];
                this.columnCan_Use_Inventory = base.Columns["Can Use Inventory"];
                this.columnNoEquip = base.Columns["NoEquip"];
                this.columnSLASH_TRACE_COLOR = base.Columns["SLASH_TRACE_COLOR"];
                this.columnSLASH_TRACE_TIP_COLOR = base.Columns["SLASH_TRACE_TIP_COLOR"];
                this.columnHYPER_SLASH_TRACE_COLOR = base.Columns["HYPER_SLASH_TRACE_COLOR"];
                this.columnHYPER_SLASH_TRACE_TIP_COLOR = base.Columns["HYPER_SLASH_TRACE_TIP_COLOR"];
                this.columnELSWORD_ITEM_SCALE_ROTATE = base.Columns["ELSWORD_ITEM_SCALE_ROTATE"];
                this.columnAISHA_ITEM_SCALE_ROTATE = base.Columns["AISHA_ITEM_SCALE_ROTATE"];
                this.columnRENA_ITEM_SCALE_ROTATE = base.Columns["RENA_ITEM_SCALE_ROTATE"];
                this.columnRAVEN_ITEM_SCALE_ROTATE = base.Columns["RAVEN_ITEM_SCALE_ROTATE"];
                this.columnEVE_ITEM_SCALE_ROTATE = base.Columns["EVE_ITEM_SCALE_ROTATE"];
                this.columnATTACHED_MESH_NAME1 = base.Columns["ATTACHED_MESH_NAME1"];
                this.columnATTACHED_MESH_BONE_NAME1 = base.Columns["ATTACHED_MESH_BONE_NAME1"];
                this.columnATTACHED_MESH_NAME2 = base.Columns["ATTACHED_MESH_NAME2"];
                this.columnATTACHED_MESH_BONE_NAME2 = base.Columns["ATTACHED_MESH_BONE_NAME2"];
                this.columnATTACHED_MESH_NAME3 = base.Columns["ATTACHED_MESH_NAME3"];
                this.columnATTACHED_MESH_BONE_NAME3 = base.Columns["ATTACHED_MESH_BONE_NAME3"];
                this.columnATTACHED_MESH_NAME4 = base.Columns["ATTACHED_MESH_NAME4"];
                this.columnATTACHED_MESH_BONE_NAME4 = base.Columns["ATTACHED_MESH_BONE_NAME4"];
                this.columnATTACHED_MESH_NAME5 = base.Columns["ATTACHED_MESH_NAME5"];
                this.columnATTACHED_MESH_BONE_NAME5 = base.Columns["ATTACHED_MESH_BONE_NAME5"];
                this.columnModel_Name1 = base.Columns["Model Name1"];
                this.columnAttach_FrameName1 = base.Columns["Attach FrameName1"];
                this.columnATTACHED_PARTICLE_NAME1 = base.Columns["ATTACHED_PARTICLE_NAME1"];
                this.columnATTACHED_PARTICLE_BONE_NAME1 = base.Columns["ATTACHED_PARTICLE_BONE_NAME1"];
                this.columnATTACHED_PARTICLE_NAME2 = base.Columns["ATTACHED_PARTICLE_NAME2"];
                this.columnATTACHED_PARTICLE_BONE_NAME2 = base.Columns["ATTACHED_PARTICLE_BONE_NAME2"];
                this.columnUserID = base.Columns["UserID"];
                this.columnUserIP = base.Columns["UserIP"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnDescription_In_Shop = new global::System.Data.DataColumn("Description In Shop", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription_In_Shop);
                this.columnModel_Name = new global::System.Data.DataColumn("Model Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel_Name);
                this.columnTexture_Change_XET_Name = new global::System.Data.DataColumn("Texture Change XET Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTexture_Change_XET_Name);
                this.columnELSWORD_MODEL_NAME = new global::System.Data.DataColumn("ELSWORD_MODEL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELSWORD_MODEL_NAME);
                this.columnELSWORD_XET_NAME = new global::System.Data.DataColumn("ELSWORD_XET_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELSWORD_XET_NAME);
                this.columnAISHA_MODEL_NAME = new global::System.Data.DataColumn("AISHA_MODEL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAISHA_MODEL_NAME);
                this.columnAISHA_XET_NAME = new global::System.Data.DataColumn("AISHA_XET_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAISHA_XET_NAME);
                this.columnRENA_MODEL_NAME = new global::System.Data.DataColumn("RENA_MODEL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENA_MODEL_NAME);
                this.columnRENA_XET_NAME = new global::System.Data.DataColumn("RENA_XET_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENA_XET_NAME);
                this.columnRAVEN_MODEL_NAME = new global::System.Data.DataColumn("RAVEN_MODEL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAVEN_MODEL_NAME);
                this.columnRAVEN_XET_NAME = new global::System.Data.DataColumn("RAVEN_XET_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAVEN_XET_NAME);
                this.columnEVE_MODEL_NAME = new global::System.Data.DataColumn("EVE_MODEL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEVE_MODEL_NAME);
                this.columnEVE_XET_NAME = new global::System.Data.DataColumn("EVE_XET_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEVE_XET_NAME);
                this.columnAnim_XET_Name = new global::System.Data.DataColumn("Anim XET Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnim_XET_Name);
                this.columnAnim_Name = new global::System.Data.DataColumn("Anim Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnim_Name);
                this.columnShop_Image = new global::System.Data.DataColumn("Shop Image", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShop_Image);
                this.columnDrop_Viewer = new global::System.Data.DataColumn("Drop Viewer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrop_Viewer);
                this.columnItem_Type = new global::System.Data.DataColumn("Item Type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Type);
                this.columnItem_Type_ = new global::System.Data.DataColumn("Item Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Type_);
                this.columnITEMTYPE_C = new global::System.Data.DataColumn("ITEMTYPE_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMTYPE_C);
                this.columnFashion = new global::System.Data.DataColumn("Fashion", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFashion);
                this.columnVested = new global::System.Data.DataColumn("Vested", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVested);
                this.columnCan_Enchant = new global::System.Data.DataColumn("Can Enchant", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCan_Enchant);
                this.columnUse_Type = new global::System.Data.DataColumn("Use Type", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUse_Type);
                this.columnUse_Type_ = new global::System.Data.DataColumn("Use Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUse_Type_);
                this.columnUSETYPE_C = new global::System.Data.DataColumn("USETYPE_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSETYPE_C);
                this.columnAttach_FrameName = new global::System.Data.DataColumn("Attach FrameName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttach_FrameName);
                this.columnFO_Elsword_X = new global::System.Data.DataColumn("FO_Elsword_X", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Elsword_X);
                this.columnFO_Elsword_Y = new global::System.Data.DataColumn("FO_Elsword_Y", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Elsword_Y);
                this.columnFO_Elsword_Z = new global::System.Data.DataColumn("FO_Elsword_Z", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Elsword_Z);
                this.columnFO_Lena_X = new global::System.Data.DataColumn("FO_Lena_X", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Lena_X);
                this.columnFO_Lena_Y = new global::System.Data.DataColumn("FO_Lena_Y", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Lena_Y);
                this.columnFO_Lena_Z = new global::System.Data.DataColumn("FO_Lena_Z", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Lena_Z);
                this.columnFO_Aisha_X = new global::System.Data.DataColumn("FO_Aisha_X", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Aisha_X);
                this.columnFO_Aisha_Y = new global::System.Data.DataColumn("FO_Aisha_Y", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Aisha_Y);
                this.columnFO_Aisha_Z = new global::System.Data.DataColumn("FO_Aisha_Z", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Aisha_Z);
                this.columnFO_Raven_X = new global::System.Data.DataColumn("FO_Raven_X", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Raven_X);
                this.columnFO_Raven_Y = new global::System.Data.DataColumn("FO_Raven_Y", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Raven_Y);
                this.columnFO_Raven_Z = new global::System.Data.DataColumn("FO_Raven_Z", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Raven_Z);
                this.columnFO_Eve_X = new global::System.Data.DataColumn("FO_Eve_X", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Eve_X);
                this.columnFO_Eve_Y = new global::System.Data.DataColumn("FO_Eve_Y", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Eve_Y);
                this.columnFO_Eve_Z = new global::System.Data.DataColumn("FO_Eve_Z", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFO_Eve_Z);
                this.columnCan_HyperMode = new global::System.Data.DataColumn("Can HyperMode", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCan_HyperMode);
                this.columnPeriod_Type = new global::System.Data.DataColumn("Period Type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod_Type);
                this.columnPeriod_Type_ = new global::System.Data.DataColumn("Period Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod_Type_);
                this.columnPERIODTYPE_C = new global::System.Data.DataColumn("PERIODTYPE_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERIODTYPE_C);
                this.columnEndurance = new global::System.Data.DataColumn("Endurance", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndurance);
                this.columnEnduranceDamageMin = new global::System.Data.DataColumn("EnduranceDamageMin", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnduranceDamageMin);
                this.columnEnduranceDamageMax = new global::System.Data.DataColumn("EnduranceDamageMax", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnduranceDamageMax);
                this.columnRepair_ED = new global::System.Data.DataColumn("Repair ED", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepair_ED);
                this.columnRepair_VP = new global::System.Data.DataColumn("Repair VP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepair_VP);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnPrice_Type = new global::System.Data.DataColumn("Price Type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice_Type);
                this.columnPrice_Type_ = new global::System.Data.DataColumn("Price Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice_Type_);
                this.columnPRICETYPE_C = new global::System.Data.DataColumn("PRICETYPE_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICETYPE_C);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnPrice_PvP_Point = new global::System.Data.DataColumn("Price PvP Point", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice_PvP_Point);
                this.columnUse_Condition = new global::System.Data.DataColumn("Use Condition", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUse_Condition);
                this.columnUse_Condition_ = new global::System.Data.DataColumn("Use Condition_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUse_Condition_);
                this.columnUSECONDITION_C = new global::System.Data.DataColumn("USECONDITION_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSECONDITION_C);
                this.columnUnit_Type = new global::System.Data.DataColumn("Unit Type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Type);
                this.columnUnit_Type_ = new global::System.Data.DataColumn("Unit Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Type_);
                this.columnUNITTYPE_C = new global::System.Data.DataColumn("UNITTYPE_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNITTYPE_C);
                this.columnUnit_Class = new global::System.Data.DataColumn("Unit Class", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Class);
                this.columnUnit_Class_ = new global::System.Data.DataColumn("Unit Class_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Class_);
                this.columnUNITCLASS_C = new global::System.Data.DataColumn("UNITCLASS_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNITCLASS_C);
                this.columnUse_Level = new global::System.Data.DataColumn("Use Level", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUse_Level);
                this.columnEqip_Position = new global::System.Data.DataColumn("Eqip Position", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEqip_Position);
                this.columnEqip_Position_ = new global::System.Data.DataColumn("Eqip Position_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEqip_Position_);
                this.columnEQIPPOSITION_C = new global::System.Data.DataColumn("EQIPPOSITION_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQIPPOSITION_C);
                this.columnItem_Grade = new global::System.Data.DataColumn("Item Grade", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Grade);
                this.columnItem_Grade_ = new global::System.Data.DataColumn("Item Grade_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Grade_);
                this.columnITEMGRADE_C = new global::System.Data.DataColumn("ITEMGRADE_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMGRADE_C);
                this.columnBASE_HP = new global::System.Data.DataColumn("BASE_HP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASE_HP);
                this.columnATK_PHYSIC = new global::System.Data.DataColumn("ATK_PHYSIC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATK_PHYSIC);
                this.columnATK_MAGIC = new global::System.Data.DataColumn("ATK_MAGIC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATK_MAGIC);
                this.columnDEF_PHYSIC = new global::System.Data.DataColumn("DEF_PHYSIC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEF_PHYSIC);
                this.columnDEF_MAGIC = new global::System.Data.DataColumn("DEF_MAGIC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEF_MAGIC);
                this.columnSA_NUM = new global::System.Data.DataColumn("SA_NUM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_NUM);
                this.columnSA_01 = new global::System.Data.DataColumn("SA_01", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_01);
                this.columnSA_02 = new global::System.Data.DataColumn("SA_02", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_02);
                this.columnSA_03 = new global::System.Data.DataColumn("SA_03", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_03);
                this.columnSA_04 = new global::System.Data.DataColumn("SA_04", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_04);
                this.columnSA_05 = new global::System.Data.DataColumn("SA_05", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_05);
                this.columnSA_06 = new global::System.Data.DataColumn("SA_06", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_06);
                this.columnSA_07 = new global::System.Data.DataColumn("SA_07", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_07);
                this.columnSA_08 = new global::System.Data.DataColumn("SA_08", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_08);
                this.columnSA_09 = new global::System.Data.DataColumn("SA_09", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_09);
                this.columnSA_10 = new global::System.Data.DataColumn("SA_10", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_10);
                this.columnSO_01 = new global::System.Data.DataColumn("SO_01", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_01);
                this.columnSO_02 = new global::System.Data.DataColumn("SO_02", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_02);
                this.columnSO_03 = new global::System.Data.DataColumn("SO_03", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_03);
                this.columnSO_04 = new global::System.Data.DataColumn("SO_04", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_04);
                this.columnSO_05 = new global::System.Data.DataColumn("SO_05", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_05);
                this.columnSO_06 = new global::System.Data.DataColumn("SO_06", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_06);
                this.columnSO_07 = new global::System.Data.DataColumn("SO_07", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_07);
                this.columnSO_08 = new global::System.Data.DataColumn("SO_08", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_08);
                this.columnSO_09 = new global::System.Data.DataColumn("SO_09", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_09);
                this.columnCOOL_TIME = new global::System.Data.DataColumn("COOL_TIME", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOOL_TIME);
                this.columnSET_ID = new global::System.Data.DataColumn("SET_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSET_ID);
                this.columnCan_Use_Inventory = new global::System.Data.DataColumn("Can Use Inventory", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCan_Use_Inventory);
                this.columnNoEquip = new global::System.Data.DataColumn("NoEquip", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoEquip);
                this.columnSLASH_TRACE_COLOR = new global::System.Data.DataColumn("SLASH_TRACE_COLOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLASH_TRACE_COLOR);
                this.columnSLASH_TRACE_TIP_COLOR = new global::System.Data.DataColumn("SLASH_TRACE_TIP_COLOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLASH_TRACE_TIP_COLOR);
                this.columnHYPER_SLASH_TRACE_COLOR = new global::System.Data.DataColumn("HYPER_SLASH_TRACE_COLOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHYPER_SLASH_TRACE_COLOR);
                this.columnHYPER_SLASH_TRACE_TIP_COLOR = new global::System.Data.DataColumn("HYPER_SLASH_TRACE_TIP_COLOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHYPER_SLASH_TRACE_TIP_COLOR);
                this.columnELSWORD_ITEM_SCALE_ROTATE = new global::System.Data.DataColumn("ELSWORD_ITEM_SCALE_ROTATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELSWORD_ITEM_SCALE_ROTATE);
                this.columnAISHA_ITEM_SCALE_ROTATE = new global::System.Data.DataColumn("AISHA_ITEM_SCALE_ROTATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAISHA_ITEM_SCALE_ROTATE);
                this.columnRENA_ITEM_SCALE_ROTATE = new global::System.Data.DataColumn("RENA_ITEM_SCALE_ROTATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENA_ITEM_SCALE_ROTATE);
                this.columnRAVEN_ITEM_SCALE_ROTATE = new global::System.Data.DataColumn("RAVEN_ITEM_SCALE_ROTATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAVEN_ITEM_SCALE_ROTATE);
                this.columnEVE_ITEM_SCALE_ROTATE = new global::System.Data.DataColumn("EVE_ITEM_SCALE_ROTATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEVE_ITEM_SCALE_ROTATE);
                this.columnATTACHED_MESH_NAME1 = new global::System.Data.DataColumn("ATTACHED_MESH_NAME1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_NAME1);
                this.columnATTACHED_MESH_BONE_NAME1 = new global::System.Data.DataColumn("ATTACHED_MESH_BONE_NAME1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_BONE_NAME1);
                this.columnATTACHED_MESH_NAME2 = new global::System.Data.DataColumn("ATTACHED_MESH_NAME2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_NAME2);
                this.columnATTACHED_MESH_BONE_NAME2 = new global::System.Data.DataColumn("ATTACHED_MESH_BONE_NAME2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_BONE_NAME2);
                this.columnATTACHED_MESH_NAME3 = new global::System.Data.DataColumn("ATTACHED_MESH_NAME3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_NAME3);
                this.columnATTACHED_MESH_BONE_NAME3 = new global::System.Data.DataColumn("ATTACHED_MESH_BONE_NAME3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_BONE_NAME3);
                this.columnATTACHED_MESH_NAME4 = new global::System.Data.DataColumn("ATTACHED_MESH_NAME4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_NAME4);
                this.columnATTACHED_MESH_BONE_NAME4 = new global::System.Data.DataColumn("ATTACHED_MESH_BONE_NAME4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_BONE_NAME4);
                this.columnATTACHED_MESH_NAME5 = new global::System.Data.DataColumn("ATTACHED_MESH_NAME5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_NAME5);
                this.columnATTACHED_MESH_BONE_NAME5 = new global::System.Data.DataColumn("ATTACHED_MESH_BONE_NAME5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_MESH_BONE_NAME5);
                this.columnModel_Name1 = new global::System.Data.DataColumn("Model Name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel_Name1);
                this.columnAttach_FrameName1 = new global::System.Data.DataColumn("Attach FrameName1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttach_FrameName1);
                this.columnATTACHED_PARTICLE_NAME1 = new global::System.Data.DataColumn("ATTACHED_PARTICLE_NAME1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_PARTICLE_NAME1);
                this.columnATTACHED_PARTICLE_BONE_NAME1 = new global::System.Data.DataColumn("ATTACHED_PARTICLE_BONE_NAME1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_PARTICLE_BONE_NAME1);
                this.columnATTACHED_PARTICLE_NAME2 = new global::System.Data.DataColumn("ATTACHED_PARTICLE_NAME2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_PARTICLE_NAME2);
                this.columnATTACHED_PARTICLE_BONE_NAME2 = new global::System.Data.DataColumn("ATTACHED_PARTICLE_BONE_NAME2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTACHED_PARTICLE_BONE_NAME2);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserIP = new global::System.Data.DataColumn("UserIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserIP);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.columnIndexKey.AllowDBNull = false;
                this.columnID.AllowDBNull = false;
                this.columnName.MaxLength = 255;
                this.columnDescription.MaxLength = 255;
                this.columnDescription_In_Shop.MaxLength = 255;
                this.columnModel_Name.MaxLength = 255;
                this.columnTexture_Change_XET_Name.MaxLength = 255;
                this.columnELSWORD_MODEL_NAME.MaxLength = 255;
                this.columnELSWORD_XET_NAME.MaxLength = 255;
                this.columnAISHA_MODEL_NAME.MaxLength = 255;
                this.columnAISHA_XET_NAME.MaxLength = 255;
                this.columnRENA_MODEL_NAME.MaxLength = 255;
                this.columnRENA_XET_NAME.MaxLength = 255;
                this.columnRAVEN_MODEL_NAME.MaxLength = 255;
                this.columnRAVEN_XET_NAME.MaxLength = 255;
                this.columnEVE_MODEL_NAME.MaxLength = 255;
                this.columnEVE_XET_NAME.MaxLength = 255;
                this.columnAnim_XET_Name.MaxLength = 255;
                this.columnAnim_Name.MaxLength = 255;
                this.columnShop_Image.MaxLength = 255;
                this.columnDrop_Viewer.MaxLength = 255;
                this.columnItem_Type_.MaxLength = 255;
                this.columnITEMTYPE_C.MaxLength = 255;
                this.columnUse_Type_.MaxLength = 255;
                this.columnUSETYPE_C.MaxLength = 255;
                this.columnAttach_FrameName.MaxLength = 255;
                this.columnPeriod_Type_.MaxLength = 255;
                this.columnPERIODTYPE_C.MaxLength = 255;
                this.columnPrice_Type_.MaxLength = 255;
                this.columnPRICETYPE_C.MaxLength = 255;
                this.columnPrice.MaxLength = 50;
                this.columnUse_Condition_.MaxLength = 255;
                this.columnUSECONDITION_C.MaxLength = 255;
                this.columnUnit_Type_.MaxLength = 255;
                this.columnUNITTYPE_C.MaxLength = 255;
                this.columnUnit_Class_.MaxLength = 255;
                this.columnUNITCLASS_C.MaxLength = 255;
                this.columnEqip_Position_.MaxLength = 255;
                this.columnEQIPPOSITION_C.MaxLength = 255;
                this.columnItem_Grade_.MaxLength = 255;
                this.columnITEMGRADE_C.MaxLength = 255;
                this.columnSLASH_TRACE_COLOR.MaxLength = 255;
                this.columnSLASH_TRACE_TIP_COLOR.MaxLength = 255;
                this.columnHYPER_SLASH_TRACE_COLOR.MaxLength = 255;
                this.columnHYPER_SLASH_TRACE_TIP_COLOR.MaxLength = 255;
                this.columnELSWORD_ITEM_SCALE_ROTATE.MaxLength = 255;
                this.columnAISHA_ITEM_SCALE_ROTATE.MaxLength = 255;
                this.columnRENA_ITEM_SCALE_ROTATE.MaxLength = 255;
                this.columnRAVEN_ITEM_SCALE_ROTATE.MaxLength = 255;
                this.columnEVE_ITEM_SCALE_ROTATE.MaxLength = 255;
                this.columnATTACHED_MESH_NAME1.MaxLength = 255;
                this.columnATTACHED_MESH_BONE_NAME1.MaxLength = 255;
                this.columnATTACHED_MESH_NAME2.MaxLength = 255;
                this.columnATTACHED_MESH_BONE_NAME2.MaxLength = 255;
                this.columnATTACHED_MESH_NAME3.MaxLength = 255;
                this.columnATTACHED_MESH_BONE_NAME3.MaxLength = 255;
                this.columnATTACHED_MESH_NAME4.MaxLength = 255;
                this.columnATTACHED_MESH_BONE_NAME4.MaxLength = 255;
                this.columnATTACHED_MESH_NAME5.MaxLength = 255;
                this.columnATTACHED_MESH_BONE_NAME5.MaxLength = 255;
                this.columnModel_Name1.MaxLength = 255;
                this.columnAttach_FrameName1.MaxLength = 255;
                this.columnATTACHED_PARTICLE_NAME1.MaxLength = 255;
                this.columnATTACHED_PARTICLE_BONE_NAME1.MaxLength = 255;
                this.columnATTACHED_PARTICLE_NAME2.MaxLength = 255;
                this.columnATTACHED_PARTICLE_BONE_NAME2.MaxLength = 255;
                this.columnUserID.MaxLength = 30;
                this.columnUserIP.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Item_HistoryRow NewItem_HistoryRow() {
                return ((Item_HistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Item_HistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Item_HistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Item_HistoryRowChanged != null)) {
                    this.Item_HistoryRowChanged(this, new Item_HistoryRowChangeEvent(((Item_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Item_HistoryRowChanging != null)) {
                    this.Item_HistoryRowChanging(this, new Item_HistoryRowChangeEvent(((Item_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Item_HistoryRowDeleted != null)) {
                    this.Item_HistoryRowDeleted(this, new Item_HistoryRowChangeEvent(((Item_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Item_HistoryRowDeleting != null)) {
                    this.Item_HistoryRowDeleting(this, new Item_HistoryRowChangeEvent(((Item_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItem_HistoryRow(Item_HistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Item_HistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SetItemDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnSetID;
            
            private global::System.Data.DataColumn columnSetName;
            
            private global::System.Data.DataColumn columnSetItem_Des;
            
            private global::System.Data.DataColumn columnNeedPartsNum;
            
            private global::System.Data.DataColumn columnOption1;
            
            private global::System.Data.DataColumn columnOption2;
            
            private global::System.Data.DataColumn columnOption3;
            
            private global::System.Data.DataColumn columnOption4;
            
            private global::System.Data.DataColumn columnOption5;
            
            private global::System.Data.DataColumn columnOption6;
            
            private global::System.Data.DataColumn columnOption7;
            
            private global::System.Data.DataColumn columnOption8;
            
            private global::System.Data.DataColumn columnOption9;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SetItemDataTable() {
                this.TableName = "SetItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SetItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SetItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetIDColumn {
                get {
                    return this.columnSetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetNameColumn {
                get {
                    return this.columnSetName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetItem_DesColumn {
                get {
                    return this.columnSetItem_Des;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NeedPartsNumColumn {
                get {
                    return this.columnNeedPartsNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option1Column {
                get {
                    return this.columnOption1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option2Column {
                get {
                    return this.columnOption2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option3Column {
                get {
                    return this.columnOption3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option4Column {
                get {
                    return this.columnOption4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option5Column {
                get {
                    return this.columnOption5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option6Column {
                get {
                    return this.columnOption6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option7Column {
                get {
                    return this.columnOption7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option8Column {
                get {
                    return this.columnOption8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option9Column {
                get {
                    return this.columnOption9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SetItemRow this[int index] {
                get {
                    return ((SetItemRow)(this.Rows[index]));
                }
            }
            
            public event SetItemRowChangeEventHandler SetItemRowChanging;
            
            public event SetItemRowChangeEventHandler SetItemRowChanged;
            
            public event SetItemRowChangeEventHandler SetItemRowDeleting;
            
            public event SetItemRowChangeEventHandler SetItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSetItemRow(SetItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SetItemRow AddSetItemRow(int IndexKey, int SetID, string SetName, string SetItem_Des, int NeedPartsNum, int Option1, int Option2, int Option3, int Option4, int Option5, int Option6, int Option7, int Option8, int Option9, System.DateTime Regdate) {
                SetItemRow rowSetItemRow = ((SetItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        SetID,
                        SetName,
                        SetItem_Des,
                        NeedPartsNum,
                        Option1,
                        Option2,
                        Option3,
                        Option4,
                        Option5,
                        Option6,
                        Option7,
                        Option8,
                        Option9,
                        Regdate};
                rowSetItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSetItemRow);
                return rowSetItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SetItemRow FindByIndexKey(int IndexKey) {
                return ((SetItemRow)(this.Rows.Find(new object[] {
                            IndexKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SetItemDataTable cln = ((SetItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SetItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnSetID = base.Columns["SetID"];
                this.columnSetName = base.Columns["SetName"];
                this.columnSetItem_Des = base.Columns["SetItem_Des"];
                this.columnNeedPartsNum = base.Columns["NeedPartsNum"];
                this.columnOption1 = base.Columns["Option1"];
                this.columnOption2 = base.Columns["Option2"];
                this.columnOption3 = base.Columns["Option3"];
                this.columnOption4 = base.Columns["Option4"];
                this.columnOption5 = base.Columns["Option5"];
                this.columnOption6 = base.Columns["Option6"];
                this.columnOption7 = base.Columns["Option7"];
                this.columnOption8 = base.Columns["Option8"];
                this.columnOption9 = base.Columns["Option9"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnSetID = new global::System.Data.DataColumn("SetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetID);
                this.columnSetName = new global::System.Data.DataColumn("SetName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetName);
                this.columnSetItem_Des = new global::System.Data.DataColumn("SetItem_Des", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetItem_Des);
                this.columnNeedPartsNum = new global::System.Data.DataColumn("NeedPartsNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeedPartsNum);
                this.columnOption1 = new global::System.Data.DataColumn("Option1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption1);
                this.columnOption2 = new global::System.Data.DataColumn("Option2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption2);
                this.columnOption3 = new global::System.Data.DataColumn("Option3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption3);
                this.columnOption4 = new global::System.Data.DataColumn("Option4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption4);
                this.columnOption5 = new global::System.Data.DataColumn("Option5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption5);
                this.columnOption6 = new global::System.Data.DataColumn("Option6", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption6);
                this.columnOption7 = new global::System.Data.DataColumn("Option7", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption7);
                this.columnOption8 = new global::System.Data.DataColumn("Option8", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption8);
                this.columnOption9 = new global::System.Data.DataColumn("Option9", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption9);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndexKey}, true));
                this.columnIndexKey.AllowDBNull = false;
                this.columnIndexKey.Unique = true;
                this.columnSetID.AllowDBNull = false;
                this.columnSetName.MaxLength = 50;
                this.columnSetItem_Des.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SetItemRow NewSetItemRow() {
                return ((SetItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SetItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SetItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SetItemRowChanged != null)) {
                    this.SetItemRowChanged(this, new SetItemRowChangeEvent(((SetItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SetItemRowChanging != null)) {
                    this.SetItemRowChanging(this, new SetItemRowChangeEvent(((SetItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SetItemRowDeleted != null)) {
                    this.SetItemRowDeleted(this, new SetItemRowChangeEvent(((SetItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SetItemRowDeleting != null)) {
                    this.SetItemRowDeleting(this, new SetItemRowChangeEvent(((SetItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSetItemRow(SetItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SetItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SetItem_HistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnSetId;
            
            private global::System.Data.DataColumn columnSetName;
            
            private global::System.Data.DataColumn columnSetItem_Des;
            
            private global::System.Data.DataColumn columnNeedPartsNum;
            
            private global::System.Data.DataColumn columnOption1;
            
            private global::System.Data.DataColumn columnOption2;
            
            private global::System.Data.DataColumn columnOption3;
            
            private global::System.Data.DataColumn columnOption4;
            
            private global::System.Data.DataColumn columnOption5;
            
            private global::System.Data.DataColumn columnOption6;
            
            private global::System.Data.DataColumn columnOption7;
            
            private global::System.Data.DataColumn columnOption8;
            
            private global::System.Data.DataColumn columnOption9;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnUserIP;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SetItem_HistoryDataTable() {
                this.TableName = "SetItem_History";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SetItem_HistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SetItem_HistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetIdColumn {
                get {
                    return this.columnSetId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetNameColumn {
                get {
                    return this.columnSetName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetItem_DesColumn {
                get {
                    return this.columnSetItem_Des;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NeedPartsNumColumn {
                get {
                    return this.columnNeedPartsNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option1Column {
                get {
                    return this.columnOption1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option2Column {
                get {
                    return this.columnOption2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option3Column {
                get {
                    return this.columnOption3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option4Column {
                get {
                    return this.columnOption4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option5Column {
                get {
                    return this.columnOption5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option6Column {
                get {
                    return this.columnOption6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option7Column {
                get {
                    return this.columnOption7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option8Column {
                get {
                    return this.columnOption8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Option9Column {
                get {
                    return this.columnOption9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIPColumn {
                get {
                    return this.columnUserIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SetItem_HistoryRow this[int index] {
                get {
                    return ((SetItem_HistoryRow)(this.Rows[index]));
                }
            }
            
            public event SetItem_HistoryRowChangeEventHandler SetItem_HistoryRowChanging;
            
            public event SetItem_HistoryRowChangeEventHandler SetItem_HistoryRowChanged;
            
            public event SetItem_HistoryRowChangeEventHandler SetItem_HistoryRowDeleting;
            
            public event SetItem_HistoryRowChangeEventHandler SetItem_HistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSetItem_HistoryRow(SetItem_HistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SetItem_HistoryRow AddSetItem_HistoryRow(
                        int IndexKey, 
                        int SetId, 
                        string SetName, 
                        string SetItem_Des, 
                        int NeedPartsNum, 
                        int Option1, 
                        int Option2, 
                        int Option3, 
                        int Option4, 
                        int Option5, 
                        int Option6, 
                        int Option7, 
                        int Option8, 
                        int Option9, 
                        string UserID, 
                        string UserIP, 
                        System.DateTime Regdate) {
                SetItem_HistoryRow rowSetItem_HistoryRow = ((SetItem_HistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        SetId,
                        SetName,
                        SetItem_Des,
                        NeedPartsNum,
                        Option1,
                        Option2,
                        Option3,
                        Option4,
                        Option5,
                        Option6,
                        Option7,
                        Option8,
                        Option9,
                        UserID,
                        UserIP,
                        Regdate};
                rowSetItem_HistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSetItem_HistoryRow);
                return rowSetItem_HistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SetItem_HistoryDataTable cln = ((SetItem_HistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SetItem_HistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnSetId = base.Columns["SetId"];
                this.columnSetName = base.Columns["SetName"];
                this.columnSetItem_Des = base.Columns["SetItem_Des"];
                this.columnNeedPartsNum = base.Columns["NeedPartsNum"];
                this.columnOption1 = base.Columns["Option1"];
                this.columnOption2 = base.Columns["Option2"];
                this.columnOption3 = base.Columns["Option3"];
                this.columnOption4 = base.Columns["Option4"];
                this.columnOption5 = base.Columns["Option5"];
                this.columnOption6 = base.Columns["Option6"];
                this.columnOption7 = base.Columns["Option7"];
                this.columnOption8 = base.Columns["Option8"];
                this.columnOption9 = base.Columns["Option9"];
                this.columnUserID = base.Columns["UserID"];
                this.columnUserIP = base.Columns["UserIP"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnSetId = new global::System.Data.DataColumn("SetId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetId);
                this.columnSetName = new global::System.Data.DataColumn("SetName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetName);
                this.columnSetItem_Des = new global::System.Data.DataColumn("SetItem_Des", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetItem_Des);
                this.columnNeedPartsNum = new global::System.Data.DataColumn("NeedPartsNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeedPartsNum);
                this.columnOption1 = new global::System.Data.DataColumn("Option1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption1);
                this.columnOption2 = new global::System.Data.DataColumn("Option2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption2);
                this.columnOption3 = new global::System.Data.DataColumn("Option3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption3);
                this.columnOption4 = new global::System.Data.DataColumn("Option4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption4);
                this.columnOption5 = new global::System.Data.DataColumn("Option5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption5);
                this.columnOption6 = new global::System.Data.DataColumn("Option6", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption6);
                this.columnOption7 = new global::System.Data.DataColumn("Option7", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption7);
                this.columnOption8 = new global::System.Data.DataColumn("Option8", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption8);
                this.columnOption9 = new global::System.Data.DataColumn("Option9", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption9);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserIP = new global::System.Data.DataColumn("UserIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserIP);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.columnIndexKey.AllowDBNull = false;
                this.columnSetId.AllowDBNull = false;
                this.columnSetName.MaxLength = 50;
                this.columnSetItem_Des.MaxLength = 255;
                this.columnUserID.MaxLength = 30;
                this.columnUserIP.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SetItem_HistoryRow NewSetItem_HistoryRow() {
                return ((SetItem_HistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SetItem_HistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SetItem_HistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SetItem_HistoryRowChanged != null)) {
                    this.SetItem_HistoryRowChanged(this, new SetItem_HistoryRowChangeEvent(((SetItem_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SetItem_HistoryRowChanging != null)) {
                    this.SetItem_HistoryRowChanging(this, new SetItem_HistoryRowChangeEvent(((SetItem_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SetItem_HistoryRowDeleted != null)) {
                    this.SetItem_HistoryRowDeleted(this, new SetItem_HistoryRowChangeEvent(((SetItem_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SetItem_HistoryRowDeleting != null)) {
                    this.SetItem_HistoryRowDeleting(this, new SetItem_HistoryRowChangeEvent(((SetItem_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSetItem_HistoryRow(SetItem_HistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SetItem_HistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QuestTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnEnable_Quest;
            
            private global::System.Data.DataColumn columnQuest_Type;
            
            private global::System.Data.DataColumn columnStart_NPC_Name;
            
            private global::System.Data.DataColumn columnEnd_NPC_Name;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnFair_Level;
            
            private global::System.Data.DataColumn columnFair_Dungeon_ID;
            
            private global::System.Data.DataColumn columnQuest_Repeat;
            
            private global::System.Data.DataColumn columnCondition_Lv;
            
            private global::System.Data.DataColumn columnCondition_Unit_Type;
            
            private global::System.Data.DataColumn columnCondition_Unit_Class;
            
            private global::System.Data.DataColumn columnReward_Unit_Class;
            
            private global::System.Data.DataColumn columnChange_Job_Type;
            
            private global::System.Data.DataColumn columnCondition_Item_ID;
            
            private global::System.Data.DataColumn columnCondition_Item_Quantity;
            
            private global::System.Data.DataColumn columnSubQuest1;
            
            private global::System.Data.DataColumn columnSubQuest2;
            
            private global::System.Data.DataColumn columnSubQuest3;
            
            private global::System.Data.DataColumn columnSubQuest4;
            
            private global::System.Data.DataColumn columnSubQUest5;
            
            private global::System.Data.DataColumn columnReward_Enable;
            
            private global::System.Data.DataColumn columnReward_EXP;
            
            private global::System.Data.DataColumn columnReward_ED;
            
            private global::System.Data.DataColumn columnReward_Grade;
            
            private global::System.Data.DataColumn columnReward_Buff;
            
            private global::System.Data.DataColumn columnReward_SP;
            
            private global::System.Data.DataColumn columnReward_Item1;
            
            private global::System.Data.DataColumn columnname1;
            
            private global::System.Data.DataColumn columnPeriod_1;
            
            private global::System.Data.DataColumn columnReward_ItemQuantity1;
            
            private global::System.Data.DataColumn columnSocket_Option1;
            
            private global::System.Data.DataColumn columnReward_Item2;
            
            private global::System.Data.DataColumn columnname2;
            
            private global::System.Data.DataColumn columnPeriod_2;
            
            private global::System.Data.DataColumn columnReward_ItemQuantity2;
            
            private global::System.Data.DataColumn columnSocket_Option2;
            
            private global::System.Data.DataColumn columnReward_Item3;
            
            private global::System.Data.DataColumn columnname3;
            
            private global::System.Data.DataColumn columnPeriod_3;
            
            private global::System.Data.DataColumn columnReward_ItemQuantity3;
            
            private global::System.Data.DataColumn columnSocket_Option3;
            
            private global::System.Data.DataColumn columnSelect_Reward_Item1;
            
            private global::System.Data.DataColumn columnname1_1;
            
            private global::System.Data.DataColumn columnSelect_Period1;
            
            private global::System.Data.DataColumn columnSelect_Reward_ItemQuantity1;
            
            private global::System.Data.DataColumn columnSelect_Socket_Option1;
            
            private global::System.Data.DataColumn columnSelect_Reward_Item2;
            
            private global::System.Data.DataColumn columnname2_1;
            
            private global::System.Data.DataColumn columnSelect_Period2;
            
            private global::System.Data.DataColumn columnSelect_Reward_ItemQuantity2;
            
            private global::System.Data.DataColumn columnSelect_Socket_Option2;
            
            private global::System.Data.DataColumn columnSelect_Reward_Item3;
            
            private global::System.Data.DataColumn columnname3_1;
            
            private global::System.Data.DataColumn columnSelect_Period3;
            
            private global::System.Data.DataColumn columnSelect_Reward_ItemQuantity3;
            
            private global::System.Data.DataColumn columnSelect_Socket_Option3;
            
            private global::System.Data.DataColumn columnSelect_Reward_Item4;
            
            private global::System.Data.DataColumn columnname4_1;
            
            private global::System.Data.DataColumn columnSelect_Period4;
            
            private global::System.Data.DataColumn columnSelect_Reward_ItemQuantity4;
            
            private global::System.Data.DataColumn columnSelect_Socket_Option4;
            
            private global::System.Data.DataColumn columnSelect_Reward_Item5;
            
            private global::System.Data.DataColumn columnname5_1;
            
            private global::System.Data.DataColumn columnSelect_Period5;
            
            private global::System.Data.DataColumn columnSelect_Reward_ItemQuantity5;
            
            private global::System.Data.DataColumn columnSelect_Socket_Option5;
            
            private global::System.Data.DataColumn columnSelect_Reward_ItemCount;
            
            private global::System.Data.DataColumn columnMain_Text;
            
            private global::System.Data.DataColumn columnThanks_Text;
            
            private global::System.Data.DataColumn columnDiss_Clear_Text;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_1;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_2;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_3;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_4;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_5;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_6;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_7;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_8;
            
            private global::System.Data.DataColumn columnCondition_DisClearQuest_ID;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuestTableDataTable() {
                this.TableName = "QuestTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QuestTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected QuestTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Enable_QuestColumn {
                get {
                    return this.columnEnable_Quest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Quest_TypeColumn {
                get {
                    return this.columnQuest_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Start_NPC_NameColumn {
                get {
                    return this.columnStart_NPC_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn End_NPC_NameColumn {
                get {
                    return this.columnEnd_NPC_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fair_LevelColumn {
                get {
                    return this.columnFair_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fair_Dungeon_IDColumn {
                get {
                    return this.columnFair_Dungeon_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Quest_RepeatColumn {
                get {
                    return this.columnQuest_Repeat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_LvColumn {
                get {
                    return this.columnCondition_Lv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_TypeColumn {
                get {
                    return this.columnCondition_Unit_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_ClassColumn {
                get {
                    return this.columnCondition_Unit_Class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_Unit_ClassColumn {
                get {
                    return this.columnReward_Unit_Class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Change_Job_TypeColumn {
                get {
                    return this.columnChange_Job_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Item_IDColumn {
                get {
                    return this.columnCondition_Item_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Item_QuantityColumn {
                get {
                    return this.columnCondition_Item_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubQuest1Column {
                get {
                    return this.columnSubQuest1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubQuest2Column {
                get {
                    return this.columnSubQuest2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubQuest3Column {
                get {
                    return this.columnSubQuest3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubQuest4Column {
                get {
                    return this.columnSubQuest4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubQUest5Column {
                get {
                    return this.columnSubQUest5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_EnableColumn {
                get {
                    return this.columnReward_Enable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_EXPColumn {
                get {
                    return this.columnReward_EXP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_EDColumn {
                get {
                    return this.columnReward_ED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_GradeColumn {
                get {
                    return this.columnReward_Grade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_BuffColumn {
                get {
                    return this.columnReward_Buff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_SPColumn {
                get {
                    return this.columnReward_SP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_Item1Column {
                get {
                    return this.columnReward_Item1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name1Column {
                get {
                    return this.columnname1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Period_1Column {
                get {
                    return this.columnPeriod_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_ItemQuantity1Column {
                get {
                    return this.columnReward_ItemQuantity1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket_Option1Column {
                get {
                    return this.columnSocket_Option1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_Item2Column {
                get {
                    return this.columnReward_Item2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name2Column {
                get {
                    return this.columnname2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Period_2Column {
                get {
                    return this.columnPeriod_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_ItemQuantity2Column {
                get {
                    return this.columnReward_ItemQuantity2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket_Option2Column {
                get {
                    return this.columnSocket_Option2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_Item3Column {
                get {
                    return this.columnReward_Item3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name3Column {
                get {
                    return this.columnname3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Period_3Column {
                get {
                    return this.columnPeriod_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_ItemQuantity3Column {
                get {
                    return this.columnReward_ItemQuantity3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket_Option3Column {
                get {
                    return this.columnSocket_Option3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_Item1Column {
                get {
                    return this.columnSelect_Reward_Item1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name1_1Column {
                get {
                    return this.columnname1_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Period1Column {
                get {
                    return this.columnSelect_Period1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_ItemQuantity1Column {
                get {
                    return this.columnSelect_Reward_ItemQuantity1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Socket_Option1Column {
                get {
                    return this.columnSelect_Socket_Option1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_Item2Column {
                get {
                    return this.columnSelect_Reward_Item2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name2_1Column {
                get {
                    return this.columnname2_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Period2Column {
                get {
                    return this.columnSelect_Period2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_ItemQuantity2Column {
                get {
                    return this.columnSelect_Reward_ItemQuantity2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Socket_Option2Column {
                get {
                    return this.columnSelect_Socket_Option2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_Item3Column {
                get {
                    return this.columnSelect_Reward_Item3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name3_1Column {
                get {
                    return this.columnname3_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Period3Column {
                get {
                    return this.columnSelect_Period3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_ItemQuantity3Column {
                get {
                    return this.columnSelect_Reward_ItemQuantity3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Socket_Option3Column {
                get {
                    return this.columnSelect_Socket_Option3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_Item4Column {
                get {
                    return this.columnSelect_Reward_Item4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name4_1Column {
                get {
                    return this.columnname4_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Period4Column {
                get {
                    return this.columnSelect_Period4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_ItemQuantity4Column {
                get {
                    return this.columnSelect_Reward_ItemQuantity4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Socket_Option4Column {
                get {
                    return this.columnSelect_Socket_Option4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_Item5Column {
                get {
                    return this.columnSelect_Reward_Item5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name5_1Column {
                get {
                    return this.columnname5_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Period5Column {
                get {
                    return this.columnSelect_Period5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_ItemQuantity5Column {
                get {
                    return this.columnSelect_Reward_ItemQuantity5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Socket_Option5Column {
                get {
                    return this.columnSelect_Socket_Option5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_ItemCountColumn {
                get {
                    return this.columnSelect_Reward_ItemCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Main_TextColumn {
                get {
                    return this.columnMain_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Thanks_TextColumn {
                get {
                    return this.columnThanks_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Diss_Clear_TextColumn {
                get {
                    return this.columnDiss_Clear_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_1Column {
                get {
                    return this.columnCondition_ClearQuest_ID_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_2Column {
                get {
                    return this.columnCondition_ClearQuest_ID_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_3Column {
                get {
                    return this.columnCondition_ClearQuest_ID_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_4Column {
                get {
                    return this.columnCondition_ClearQuest_ID_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_5Column {
                get {
                    return this.columnCondition_ClearQuest_ID_5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_6Column {
                get {
                    return this.columnCondition_ClearQuest_ID_6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_7Column {
                get {
                    return this.columnCondition_ClearQuest_ID_7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_8Column {
                get {
                    return this.columnCondition_ClearQuest_ID_8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_DisClearQuest_IDColumn {
                get {
                    return this.columnCondition_DisClearQuest_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuestTableRow this[int index] {
                get {
                    return ((QuestTableRow)(this.Rows[index]));
                }
            }
            
            public event QuestTableRowChangeEventHandler QuestTableRowChanging;
            
            public event QuestTableRowChangeEventHandler QuestTableRowChanged;
            
            public event QuestTableRowChangeEventHandler QuestTableRowDeleting;
            
            public event QuestTableRowChangeEventHandler QuestTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddQuestTableRow(QuestTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuestTableRow AddQuestTableRow(
                        int IndexKey, 
                        int ID, 
                        bool Enable_Quest, 
                        string Quest_Type, 
                        string Start_NPC_Name, 
                        string End_NPC_Name, 
                        string Title, 
                        int Fair_Level, 
                        string Fair_Dungeon_ID, 
                        bool Quest_Repeat, 
                        int Condition_Lv, 
                        string Condition_Unit_Type, 
                        string Condition_Unit_Class, 
                        string Reward_Unit_Class, 
                        string Change_Job_Type, 
                        int Condition_Item_ID, 
                        int Condition_Item_Quantity, 
                        int SubQuest1, 
                        int SubQuest2, 
                        int SubQuest3, 
                        int SubQuest4, 
                        int SubQUest5, 
                        bool Reward_Enable, 
                        int Reward_EXP, 
                        int Reward_ED, 
                        string Reward_Grade, 
                        int Reward_Buff, 
                        int Reward_SP, 
                        int Reward_Item1, 
                        string name1, 
                        int Period_1, 
                        int Reward_ItemQuantity1, 
                        int Socket_Option1, 
                        int Reward_Item2, 
                        string name2, 
                        int Period_2, 
                        int Reward_ItemQuantity2, 
                        int Socket_Option2, 
                        int Reward_Item3, 
                        string name3, 
                        int Period_3, 
                        int Reward_ItemQuantity3, 
                        int Socket_Option3, 
                        int Select_Reward_Item1, 
                        string name1_1, 
                        int Select_Period1, 
                        int Select_Reward_ItemQuantity1, 
                        int Select_Socket_Option1, 
                        int Select_Reward_Item2, 
                        string name2_1, 
                        int Select_Period2, 
                        int Select_Reward_ItemQuantity2, 
                        int Select_Socket_Option2, 
                        int Select_Reward_Item3, 
                        string name3_1, 
                        int Select_Period3, 
                        int Select_Reward_ItemQuantity3, 
                        int Select_Socket_Option3, 
                        int Select_Reward_Item4, 
                        string name4_1, 
                        int Select_Period4, 
                        string Select_Reward_ItemQuantity4, 
                        int Select_Socket_Option4, 
                        int Select_Reward_Item5, 
                        string name5_1, 
                        int Select_Period5, 
                        int Select_Reward_ItemQuantity5, 
                        int Select_Socket_Option5, 
                        int Select_Reward_ItemCount, 
                        string Main_Text, 
                        string Thanks_Text, 
                        string Diss_Clear_Text, 
                        int Condition_ClearQuest_ID_1, 
                        int Condition_ClearQuest_ID_2, 
                        int Condition_ClearQuest_ID_3, 
                        int Condition_ClearQuest_ID_4, 
                        int Condition_ClearQuest_ID_5, 
                        int Condition_ClearQuest_ID_6, 
                        int Condition_ClearQuest_ID_7, 
                        int Condition_ClearQuest_ID_8, 
                        int Condition_DisClearQuest_ID, 
                        System.DateTime Regdate) {
                QuestTableRow rowQuestTableRow = ((QuestTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        ID,
                        Enable_Quest,
                        Quest_Type,
                        Start_NPC_Name,
                        End_NPC_Name,
                        Title,
                        Fair_Level,
                        Fair_Dungeon_ID,
                        Quest_Repeat,
                        Condition_Lv,
                        Condition_Unit_Type,
                        Condition_Unit_Class,
                        Reward_Unit_Class,
                        Change_Job_Type,
                        Condition_Item_ID,
                        Condition_Item_Quantity,
                        SubQuest1,
                        SubQuest2,
                        SubQuest3,
                        SubQuest4,
                        SubQUest5,
                        Reward_Enable,
                        Reward_EXP,
                        Reward_ED,
                        Reward_Grade,
                        Reward_Buff,
                        Reward_SP,
                        Reward_Item1,
                        name1,
                        Period_1,
                        Reward_ItemQuantity1,
                        Socket_Option1,
                        Reward_Item2,
                        name2,
                        Period_2,
                        Reward_ItemQuantity2,
                        Socket_Option2,
                        Reward_Item3,
                        name3,
                        Period_3,
                        Reward_ItemQuantity3,
                        Socket_Option3,
                        Select_Reward_Item1,
                        name1_1,
                        Select_Period1,
                        Select_Reward_ItemQuantity1,
                        Select_Socket_Option1,
                        Select_Reward_Item2,
                        name2_1,
                        Select_Period2,
                        Select_Reward_ItemQuantity2,
                        Select_Socket_Option2,
                        Select_Reward_Item3,
                        name3_1,
                        Select_Period3,
                        Select_Reward_ItemQuantity3,
                        Select_Socket_Option3,
                        Select_Reward_Item4,
                        name4_1,
                        Select_Period4,
                        Select_Reward_ItemQuantity4,
                        Select_Socket_Option4,
                        Select_Reward_Item5,
                        name5_1,
                        Select_Period5,
                        Select_Reward_ItemQuantity5,
                        Select_Socket_Option5,
                        Select_Reward_ItemCount,
                        Main_Text,
                        Thanks_Text,
                        Diss_Clear_Text,
                        Condition_ClearQuest_ID_1,
                        Condition_ClearQuest_ID_2,
                        Condition_ClearQuest_ID_3,
                        Condition_ClearQuest_ID_4,
                        Condition_ClearQuest_ID_5,
                        Condition_ClearQuest_ID_6,
                        Condition_ClearQuest_ID_7,
                        Condition_ClearQuest_ID_8,
                        Condition_DisClearQuest_ID,
                        Regdate};
                rowQuestTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQuestTableRow);
                return rowQuestTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuestTableRow FindByIndexKey(int IndexKey) {
                return ((QuestTableRow)(this.Rows.Find(new object[] {
                            IndexKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                QuestTableDataTable cln = ((QuestTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QuestTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnID = base.Columns["ID"];
                this.columnEnable_Quest = base.Columns["Enable Quest"];
                this.columnQuest_Type = base.Columns["Quest Type"];
                this.columnStart_NPC_Name = base.Columns["Start NPC Name"];
                this.columnEnd_NPC_Name = base.Columns["End NPC Name"];
                this.columnTitle = base.Columns["Title"];
                this.columnFair_Level = base.Columns["Fair Level"];
                this.columnFair_Dungeon_ID = base.Columns["Fair Dungeon ID"];
                this.columnQuest_Repeat = base.Columns["Quest Repeat"];
                this.columnCondition_Lv = base.Columns["Condition Lv"];
                this.columnCondition_Unit_Type = base.Columns["Condition Unit Type"];
                this.columnCondition_Unit_Class = base.Columns["Condition Unit Class"];
                this.columnReward_Unit_Class = base.Columns["Reward Unit Class"];
                this.columnChange_Job_Type = base.Columns["Change Job Type"];
                this.columnCondition_Item_ID = base.Columns["Condition Item ID"];
                this.columnCondition_Item_Quantity = base.Columns["Condition Item Quantity"];
                this.columnSubQuest1 = base.Columns["SubQuest1"];
                this.columnSubQuest2 = base.Columns["SubQuest2"];
                this.columnSubQuest3 = base.Columns["SubQuest3"];
                this.columnSubQuest4 = base.Columns["SubQuest4"];
                this.columnSubQUest5 = base.Columns["SubQUest5"];
                this.columnReward_Enable = base.Columns["Reward Enable"];
                this.columnReward_EXP = base.Columns["Reward EXP"];
                this.columnReward_ED = base.Columns["Reward ED"];
                this.columnReward_Grade = base.Columns["Reward Grade"];
                this.columnReward_Buff = base.Columns["Reward Buff"];
                this.columnReward_SP = base.Columns["Reward SP"];
                this.columnReward_Item1 = base.Columns["Reward Item1"];
                this.columnname1 = base.Columns["name1"];
                this.columnPeriod_1 = base.Columns["Period 1"];
                this.columnReward_ItemQuantity1 = base.Columns["Reward ItemQuantity1"];
                this.columnSocket_Option1 = base.Columns["Socket Option1"];
                this.columnReward_Item2 = base.Columns["Reward Item2"];
                this.columnname2 = base.Columns["name2"];
                this.columnPeriod_2 = base.Columns["Period 2"];
                this.columnReward_ItemQuantity2 = base.Columns["Reward ItemQuantity2"];
                this.columnSocket_Option2 = base.Columns["Socket Option2"];
                this.columnReward_Item3 = base.Columns["Reward Item3"];
                this.columnname3 = base.Columns["name3"];
                this.columnPeriod_3 = base.Columns["Period 3"];
                this.columnReward_ItemQuantity3 = base.Columns["Reward ItemQuantity3"];
                this.columnSocket_Option3 = base.Columns["Socket Option3"];
                this.columnSelect_Reward_Item1 = base.Columns["Select Reward Item1"];
                this.columnname1_1 = base.Columns["name1_1"];
                this.columnSelect_Period1 = base.Columns["Select Period1"];
                this.columnSelect_Reward_ItemQuantity1 = base.Columns["Select Reward ItemQuantity1"];
                this.columnSelect_Socket_Option1 = base.Columns["Select Socket Option1"];
                this.columnSelect_Reward_Item2 = base.Columns["Select Reward Item2"];
                this.columnname2_1 = base.Columns["name2_1"];
                this.columnSelect_Period2 = base.Columns["Select Period2"];
                this.columnSelect_Reward_ItemQuantity2 = base.Columns["Select Reward ItemQuantity2"];
                this.columnSelect_Socket_Option2 = base.Columns["Select Socket Option2"];
                this.columnSelect_Reward_Item3 = base.Columns["Select Reward Item3"];
                this.columnname3_1 = base.Columns["name3_1"];
                this.columnSelect_Period3 = base.Columns["Select Period3"];
                this.columnSelect_Reward_ItemQuantity3 = base.Columns["Select Reward ItemQuantity3"];
                this.columnSelect_Socket_Option3 = base.Columns["Select Socket Option3"];
                this.columnSelect_Reward_Item4 = base.Columns["Select Reward Item4"];
                this.columnname4_1 = base.Columns["name4_1"];
                this.columnSelect_Period4 = base.Columns["Select Period4"];
                this.columnSelect_Reward_ItemQuantity4 = base.Columns["Select Reward ItemQuantity4"];
                this.columnSelect_Socket_Option4 = base.Columns["Select Socket Option4"];
                this.columnSelect_Reward_Item5 = base.Columns["Select Reward Item5"];
                this.columnname5_1 = base.Columns["name5_1"];
                this.columnSelect_Period5 = base.Columns["Select Period5"];
                this.columnSelect_Reward_ItemQuantity5 = base.Columns["Select Reward ItemQuantity5"];
                this.columnSelect_Socket_Option5 = base.Columns["Select Socket Option5"];
                this.columnSelect_Reward_ItemCount = base.Columns["Select Reward ItemCount"];
                this.columnMain_Text = base.Columns["Main Text"];
                this.columnThanks_Text = base.Columns["Thanks Text"];
                this.columnDiss_Clear_Text = base.Columns["Diss Clear Text"];
                this.columnCondition_ClearQuest_ID_1 = base.Columns["Condition ClearQuest ID 1"];
                this.columnCondition_ClearQuest_ID_2 = base.Columns["Condition ClearQuest ID 2"];
                this.columnCondition_ClearQuest_ID_3 = base.Columns["Condition ClearQuest ID 3"];
                this.columnCondition_ClearQuest_ID_4 = base.Columns["Condition ClearQuest ID 4"];
                this.columnCondition_ClearQuest_ID_5 = base.Columns["Condition ClearQuest ID 5"];
                this.columnCondition_ClearQuest_ID_6 = base.Columns["Condition ClearQuest ID 6"];
                this.columnCondition_ClearQuest_ID_7 = base.Columns["Condition ClearQuest ID 7"];
                this.columnCondition_ClearQuest_ID_8 = base.Columns["Condition ClearQuest ID 8"];
                this.columnCondition_DisClearQuest_ID = base.Columns["Condition DisClearQuest ID"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnEnable_Quest = new global::System.Data.DataColumn("Enable Quest", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnable_Quest);
                this.columnQuest_Type = new global::System.Data.DataColumn("Quest Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuest_Type);
                this.columnStart_NPC_Name = new global::System.Data.DataColumn("Start NPC Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStart_NPC_Name);
                this.columnEnd_NPC_Name = new global::System.Data.DataColumn("End NPC Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnd_NPC_Name);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnFair_Level = new global::System.Data.DataColumn("Fair Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFair_Level);
                this.columnFair_Dungeon_ID = new global::System.Data.DataColumn("Fair Dungeon ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFair_Dungeon_ID);
                this.columnQuest_Repeat = new global::System.Data.DataColumn("Quest Repeat", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuest_Repeat);
                this.columnCondition_Lv = new global::System.Data.DataColumn("Condition Lv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Lv);
                this.columnCondition_Unit_Type = new global::System.Data.DataColumn("Condition Unit Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Type);
                this.columnCondition_Unit_Class = new global::System.Data.DataColumn("Condition Unit Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Class);
                this.columnReward_Unit_Class = new global::System.Data.DataColumn("Reward Unit Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Unit_Class);
                this.columnChange_Job_Type = new global::System.Data.DataColumn("Change Job Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChange_Job_Type);
                this.columnCondition_Item_ID = new global::System.Data.DataColumn("Condition Item ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Item_ID);
                this.columnCondition_Item_Quantity = new global::System.Data.DataColumn("Condition Item Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Item_Quantity);
                this.columnSubQuest1 = new global::System.Data.DataColumn("SubQuest1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubQuest1);
                this.columnSubQuest2 = new global::System.Data.DataColumn("SubQuest2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubQuest2);
                this.columnSubQuest3 = new global::System.Data.DataColumn("SubQuest3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubQuest3);
                this.columnSubQuest4 = new global::System.Data.DataColumn("SubQuest4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubQuest4);
                this.columnSubQUest5 = new global::System.Data.DataColumn("SubQUest5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubQUest5);
                this.columnReward_Enable = new global::System.Data.DataColumn("Reward Enable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Enable);
                this.columnReward_EXP = new global::System.Data.DataColumn("Reward EXP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_EXP);
                this.columnReward_ED = new global::System.Data.DataColumn("Reward ED", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_ED);
                this.columnReward_Grade = new global::System.Data.DataColumn("Reward Grade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Grade);
                this.columnReward_Buff = new global::System.Data.DataColumn("Reward Buff", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Buff);
                this.columnReward_SP = new global::System.Data.DataColumn("Reward SP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_SP);
                this.columnReward_Item1 = new global::System.Data.DataColumn("Reward Item1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Item1);
                this.columnname1 = new global::System.Data.DataColumn("name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname1);
                this.columnPeriod_1 = new global::System.Data.DataColumn("Period 1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod_1);
                this.columnReward_ItemQuantity1 = new global::System.Data.DataColumn("Reward ItemQuantity1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_ItemQuantity1);
                this.columnSocket_Option1 = new global::System.Data.DataColumn("Socket Option1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket_Option1);
                this.columnReward_Item2 = new global::System.Data.DataColumn("Reward Item2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Item2);
                this.columnname2 = new global::System.Data.DataColumn("name2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname2);
                this.columnPeriod_2 = new global::System.Data.DataColumn("Period 2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod_2);
                this.columnReward_ItemQuantity2 = new global::System.Data.DataColumn("Reward ItemQuantity2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_ItemQuantity2);
                this.columnSocket_Option2 = new global::System.Data.DataColumn("Socket Option2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket_Option2);
                this.columnReward_Item3 = new global::System.Data.DataColumn("Reward Item3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Item3);
                this.columnname3 = new global::System.Data.DataColumn("name3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname3);
                this.columnPeriod_3 = new global::System.Data.DataColumn("Period 3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod_3);
                this.columnReward_ItemQuantity3 = new global::System.Data.DataColumn("Reward ItemQuantity3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_ItemQuantity3);
                this.columnSocket_Option3 = new global::System.Data.DataColumn("Socket Option3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket_Option3);
                this.columnSelect_Reward_Item1 = new global::System.Data.DataColumn("Select Reward Item1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_Item1);
                this.columnname1_1 = new global::System.Data.DataColumn("name1_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname1_1);
                this.columnSelect_Period1 = new global::System.Data.DataColumn("Select Period1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Period1);
                this.columnSelect_Reward_ItemQuantity1 = new global::System.Data.DataColumn("Select Reward ItemQuantity1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_ItemQuantity1);
                this.columnSelect_Socket_Option1 = new global::System.Data.DataColumn("Select Socket Option1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Socket_Option1);
                this.columnSelect_Reward_Item2 = new global::System.Data.DataColumn("Select Reward Item2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_Item2);
                this.columnname2_1 = new global::System.Data.DataColumn("name2_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname2_1);
                this.columnSelect_Period2 = new global::System.Data.DataColumn("Select Period2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Period2);
                this.columnSelect_Reward_ItemQuantity2 = new global::System.Data.DataColumn("Select Reward ItemQuantity2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_ItemQuantity2);
                this.columnSelect_Socket_Option2 = new global::System.Data.DataColumn("Select Socket Option2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Socket_Option2);
                this.columnSelect_Reward_Item3 = new global::System.Data.DataColumn("Select Reward Item3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_Item3);
                this.columnname3_1 = new global::System.Data.DataColumn("name3_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname3_1);
                this.columnSelect_Period3 = new global::System.Data.DataColumn("Select Period3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Period3);
                this.columnSelect_Reward_ItemQuantity3 = new global::System.Data.DataColumn("Select Reward ItemQuantity3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_ItemQuantity3);
                this.columnSelect_Socket_Option3 = new global::System.Data.DataColumn("Select Socket Option3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Socket_Option3);
                this.columnSelect_Reward_Item4 = new global::System.Data.DataColumn("Select Reward Item4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_Item4);
                this.columnname4_1 = new global::System.Data.DataColumn("name4_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname4_1);
                this.columnSelect_Period4 = new global::System.Data.DataColumn("Select Period4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Period4);
                this.columnSelect_Reward_ItemQuantity4 = new global::System.Data.DataColumn("Select Reward ItemQuantity4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_ItemQuantity4);
                this.columnSelect_Socket_Option4 = new global::System.Data.DataColumn("Select Socket Option4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Socket_Option4);
                this.columnSelect_Reward_Item5 = new global::System.Data.DataColumn("Select Reward Item5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_Item5);
                this.columnname5_1 = new global::System.Data.DataColumn("name5_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname5_1);
                this.columnSelect_Period5 = new global::System.Data.DataColumn("Select Period5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Period5);
                this.columnSelect_Reward_ItemQuantity5 = new global::System.Data.DataColumn("Select Reward ItemQuantity5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_ItemQuantity5);
                this.columnSelect_Socket_Option5 = new global::System.Data.DataColumn("Select Socket Option5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Socket_Option5);
                this.columnSelect_Reward_ItemCount = new global::System.Data.DataColumn("Select Reward ItemCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_ItemCount);
                this.columnMain_Text = new global::System.Data.DataColumn("Main Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMain_Text);
                this.columnThanks_Text = new global::System.Data.DataColumn("Thanks Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThanks_Text);
                this.columnDiss_Clear_Text = new global::System.Data.DataColumn("Diss Clear Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiss_Clear_Text);
                this.columnCondition_ClearQuest_ID_1 = new global::System.Data.DataColumn("Condition ClearQuest ID 1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_1);
                this.columnCondition_ClearQuest_ID_2 = new global::System.Data.DataColumn("Condition ClearQuest ID 2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_2);
                this.columnCondition_ClearQuest_ID_3 = new global::System.Data.DataColumn("Condition ClearQuest ID 3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_3);
                this.columnCondition_ClearQuest_ID_4 = new global::System.Data.DataColumn("Condition ClearQuest ID 4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_4);
                this.columnCondition_ClearQuest_ID_5 = new global::System.Data.DataColumn("Condition ClearQuest ID 5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_5);
                this.columnCondition_ClearQuest_ID_6 = new global::System.Data.DataColumn("Condition ClearQuest ID 6", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_6);
                this.columnCondition_ClearQuest_ID_7 = new global::System.Data.DataColumn("Condition ClearQuest ID 7", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_7);
                this.columnCondition_ClearQuest_ID_8 = new global::System.Data.DataColumn("Condition ClearQuest ID 8", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_8);
                this.columnCondition_DisClearQuest_ID = new global::System.Data.DataColumn("Condition DisClearQuest ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_DisClearQuest_ID);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndexKey}, true));
                this.columnIndexKey.AllowDBNull = false;
                this.columnIndexKey.Unique = true;
                this.columnQuest_Type.MaxLength = 30;
                this.columnStart_NPC_Name.MaxLength = 30;
                this.columnEnd_NPC_Name.MaxLength = 30;
                this.columnTitle.MaxLength = 255;
                this.columnFair_Dungeon_ID.MaxLength = 30;
                this.columnCondition_Unit_Type.MaxLength = 30;
                this.columnCondition_Unit_Class.MaxLength = 30;
                this.columnReward_Unit_Class.MaxLength = 30;
                this.columnChange_Job_Type.MaxLength = 30;
                this.columnReward_Grade.MaxLength = 20;
                this.columnname1.MaxLength = 255;
                this.columnname2.MaxLength = 255;
                this.columnname3.MaxLength = 255;
                this.columnname1_1.MaxLength = 255;
                this.columnname2_1.MaxLength = 255;
                this.columnname3_1.MaxLength = 255;
                this.columnname4_1.MaxLength = 255;
                this.columnSelect_Reward_ItemQuantity4.MaxLength = 255;
                this.columnname5_1.MaxLength = 255;
                this.columnMain_Text.MaxLength = 500;
                this.columnThanks_Text.MaxLength = 500;
                this.columnDiss_Clear_Text.MaxLength = 500;
                this.columnRegdate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuestTableRow NewQuestTableRow() {
                return ((QuestTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QuestTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(QuestTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QuestTableRowChanged != null)) {
                    this.QuestTableRowChanged(this, new QuestTableRowChangeEvent(((QuestTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QuestTableRowChanging != null)) {
                    this.QuestTableRowChanging(this, new QuestTableRowChangeEvent(((QuestTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QuestTableRowDeleted != null)) {
                    this.QuestTableRowDeleted(this, new QuestTableRowChangeEvent(((QuestTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QuestTableRowDeleting != null)) {
                    this.QuestTableRowDeleting(this, new QuestTableRowChangeEvent(((QuestTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveQuestTableRow(QuestTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QuestTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QuestTable_HistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnEnable_Quest;
            
            private global::System.Data.DataColumn columnQuest_Type;
            
            private global::System.Data.DataColumn columnStart_NPC_Name;
            
            private global::System.Data.DataColumn columnEnd_NPC_Name;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnFair_Level;
            
            private global::System.Data.DataColumn columnFair_Dungeon_ID;
            
            private global::System.Data.DataColumn columnQuest_Repeat;
            
            private global::System.Data.DataColumn columnCondition_Lv;
            
            private global::System.Data.DataColumn columnCondition_Unit_Type;
            
            private global::System.Data.DataColumn columnCondition_Unit_Class;
            
            private global::System.Data.DataColumn columnReward_Unit_Class;
            
            private global::System.Data.DataColumn columnChange_Job_Type;
            
            private global::System.Data.DataColumn columnCondition_Item_ID;
            
            private global::System.Data.DataColumn columnCondition_Item_Quantity;
            
            private global::System.Data.DataColumn columnSubQuest1;
            
            private global::System.Data.DataColumn columnSubQuest2;
            
            private global::System.Data.DataColumn columnSubQuest3;
            
            private global::System.Data.DataColumn columnSubQuest4;
            
            private global::System.Data.DataColumn columnSubQUest5;
            
            private global::System.Data.DataColumn columnReward_Enable;
            
            private global::System.Data.DataColumn columnReward_EXP;
            
            private global::System.Data.DataColumn columnReward_ED;
            
            private global::System.Data.DataColumn columnReward_Grade;
            
            private global::System.Data.DataColumn columnReward_Buff;
            
            private global::System.Data.DataColumn columnReward_SP;
            
            private global::System.Data.DataColumn columnReward_Item1;
            
            private global::System.Data.DataColumn columnname1;
            
            private global::System.Data.DataColumn columnPeriod_1;
            
            private global::System.Data.DataColumn columnReward_ItemQuantity1;
            
            private global::System.Data.DataColumn columnSocket_Option1;
            
            private global::System.Data.DataColumn columnReward_Item2;
            
            private global::System.Data.DataColumn columnname2;
            
            private global::System.Data.DataColumn columnPeriod_2;
            
            private global::System.Data.DataColumn columnReward_ItemQuantity2;
            
            private global::System.Data.DataColumn columnSocket_Option2;
            
            private global::System.Data.DataColumn columnReward_Item3;
            
            private global::System.Data.DataColumn columnname3;
            
            private global::System.Data.DataColumn columnPeriod_3;
            
            private global::System.Data.DataColumn columnReward_ItemQuantity3;
            
            private global::System.Data.DataColumn columnSocket_Option3;
            
            private global::System.Data.DataColumn columnSelect_Reward_Item1;
            
            private global::System.Data.DataColumn columnname1_1;
            
            private global::System.Data.DataColumn columnSelect_Period1;
            
            private global::System.Data.DataColumn columnSelect_Reward_ItemQuantity1;
            
            private global::System.Data.DataColumn columnSelect_Socket_Option1;
            
            private global::System.Data.DataColumn columnSelect_Reward_Item2;
            
            private global::System.Data.DataColumn columnname2_1;
            
            private global::System.Data.DataColumn columnSelect_Period2;
            
            private global::System.Data.DataColumn columnSelect_Reward_ItemQuantity2;
            
            private global::System.Data.DataColumn columnSelect_Socket_Option2;
            
            private global::System.Data.DataColumn columnSelect_Reward_Item3;
            
            private global::System.Data.DataColumn columnname3_1;
            
            private global::System.Data.DataColumn columnSelect_Period3;
            
            private global::System.Data.DataColumn columnSelect_Reward_ItemQuantity3;
            
            private global::System.Data.DataColumn columnSelect_Socket_Option3;
            
            private global::System.Data.DataColumn columnSelect_Reward_Item4;
            
            private global::System.Data.DataColumn columnname4_1;
            
            private global::System.Data.DataColumn columnSelect_Period4;
            
            private global::System.Data.DataColumn columnSelect_Reward_ItemQuantity4;
            
            private global::System.Data.DataColumn columnSelect_Socket_Option4;
            
            private global::System.Data.DataColumn columnSelect_Reward_Item5;
            
            private global::System.Data.DataColumn columnname5_1;
            
            private global::System.Data.DataColumn columnSelect_Period_5;
            
            private global::System.Data.DataColumn columnSelect_Reward_ItemQuantity5;
            
            private global::System.Data.DataColumn columnSelect_Socket_Option5;
            
            private global::System.Data.DataColumn columnSelect_Reward_ItemCount;
            
            private global::System.Data.DataColumn columnMain_Text;
            
            private global::System.Data.DataColumn columnThanks_Text;
            
            private global::System.Data.DataColumn columnDiss_Clear_Text;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_1;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_2;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_3;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_4;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_5;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_6;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_7;
            
            private global::System.Data.DataColumn columnCondition_ClearQuest_ID_8;
            
            private global::System.Data.DataColumn columnCondition_DisClearQuest_ID;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnUserIP;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuestTable_HistoryDataTable() {
                this.TableName = "QuestTable_History";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QuestTable_HistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected QuestTable_HistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Enable_QuestColumn {
                get {
                    return this.columnEnable_Quest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Quest_TypeColumn {
                get {
                    return this.columnQuest_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Start_NPC_NameColumn {
                get {
                    return this.columnStart_NPC_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn End_NPC_NameColumn {
                get {
                    return this.columnEnd_NPC_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fair_LevelColumn {
                get {
                    return this.columnFair_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fair_Dungeon_IDColumn {
                get {
                    return this.columnFair_Dungeon_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Quest_RepeatColumn {
                get {
                    return this.columnQuest_Repeat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_LvColumn {
                get {
                    return this.columnCondition_Lv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_TypeColumn {
                get {
                    return this.columnCondition_Unit_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_ClassColumn {
                get {
                    return this.columnCondition_Unit_Class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_Unit_ClassColumn {
                get {
                    return this.columnReward_Unit_Class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Change_Job_TypeColumn {
                get {
                    return this.columnChange_Job_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Item_IDColumn {
                get {
                    return this.columnCondition_Item_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Item_QuantityColumn {
                get {
                    return this.columnCondition_Item_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubQuest1Column {
                get {
                    return this.columnSubQuest1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubQuest2Column {
                get {
                    return this.columnSubQuest2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubQuest3Column {
                get {
                    return this.columnSubQuest3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubQuest4Column {
                get {
                    return this.columnSubQuest4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubQUest5Column {
                get {
                    return this.columnSubQUest5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_EnableColumn {
                get {
                    return this.columnReward_Enable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_EXPColumn {
                get {
                    return this.columnReward_EXP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_EDColumn {
                get {
                    return this.columnReward_ED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_GradeColumn {
                get {
                    return this.columnReward_Grade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_BuffColumn {
                get {
                    return this.columnReward_Buff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_SPColumn {
                get {
                    return this.columnReward_SP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_Item1Column {
                get {
                    return this.columnReward_Item1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name1Column {
                get {
                    return this.columnname1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Period_1Column {
                get {
                    return this.columnPeriod_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_ItemQuantity1Column {
                get {
                    return this.columnReward_ItemQuantity1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket_Option1Column {
                get {
                    return this.columnSocket_Option1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_Item2Column {
                get {
                    return this.columnReward_Item2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name2Column {
                get {
                    return this.columnname2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Period_2Column {
                get {
                    return this.columnPeriod_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_ItemQuantity2Column {
                get {
                    return this.columnReward_ItemQuantity2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket_Option2Column {
                get {
                    return this.columnSocket_Option2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_Item3Column {
                get {
                    return this.columnReward_Item3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name3Column {
                get {
                    return this.columnname3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Period_3Column {
                get {
                    return this.columnPeriod_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_ItemQuantity3Column {
                get {
                    return this.columnReward_ItemQuantity3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket_Option3Column {
                get {
                    return this.columnSocket_Option3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_Item1Column {
                get {
                    return this.columnSelect_Reward_Item1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name1_1Column {
                get {
                    return this.columnname1_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Period1Column {
                get {
                    return this.columnSelect_Period1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_ItemQuantity1Column {
                get {
                    return this.columnSelect_Reward_ItemQuantity1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Socket_Option1Column {
                get {
                    return this.columnSelect_Socket_Option1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_Item2Column {
                get {
                    return this.columnSelect_Reward_Item2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name2_1Column {
                get {
                    return this.columnname2_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Period2Column {
                get {
                    return this.columnSelect_Period2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_ItemQuantity2Column {
                get {
                    return this.columnSelect_Reward_ItemQuantity2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Socket_Option2Column {
                get {
                    return this.columnSelect_Socket_Option2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_Item3Column {
                get {
                    return this.columnSelect_Reward_Item3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name3_1Column {
                get {
                    return this.columnname3_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Period3Column {
                get {
                    return this.columnSelect_Period3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_ItemQuantity3Column {
                get {
                    return this.columnSelect_Reward_ItemQuantity3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Socket_Option3Column {
                get {
                    return this.columnSelect_Socket_Option3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_Item4Column {
                get {
                    return this.columnSelect_Reward_Item4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name4_1Column {
                get {
                    return this.columnname4_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Period4Column {
                get {
                    return this.columnSelect_Period4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_ItemQuantity4Column {
                get {
                    return this.columnSelect_Reward_ItemQuantity4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Socket_Option4Column {
                get {
                    return this.columnSelect_Socket_Option4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_Item5Column {
                get {
                    return this.columnSelect_Reward_Item5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name5_1Column {
                get {
                    return this.columnname5_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Period_5Column {
                get {
                    return this.columnSelect_Period_5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_ItemQuantity5Column {
                get {
                    return this.columnSelect_Reward_ItemQuantity5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Socket_Option5Column {
                get {
                    return this.columnSelect_Socket_Option5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Select_Reward_ItemCountColumn {
                get {
                    return this.columnSelect_Reward_ItemCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Main_TextColumn {
                get {
                    return this.columnMain_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Thanks_TextColumn {
                get {
                    return this.columnThanks_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Diss_Clear_TextColumn {
                get {
                    return this.columnDiss_Clear_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_1Column {
                get {
                    return this.columnCondition_ClearQuest_ID_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_2Column {
                get {
                    return this.columnCondition_ClearQuest_ID_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_3Column {
                get {
                    return this.columnCondition_ClearQuest_ID_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_4Column {
                get {
                    return this.columnCondition_ClearQuest_ID_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_5Column {
                get {
                    return this.columnCondition_ClearQuest_ID_5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_6Column {
                get {
                    return this.columnCondition_ClearQuest_ID_6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_7Column {
                get {
                    return this.columnCondition_ClearQuest_ID_7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearQuest_ID_8Column {
                get {
                    return this.columnCondition_ClearQuest_ID_8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_DisClearQuest_IDColumn {
                get {
                    return this.columnCondition_DisClearQuest_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIPColumn {
                get {
                    return this.columnUserIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuestTable_HistoryRow this[int index] {
                get {
                    return ((QuestTable_HistoryRow)(this.Rows[index]));
                }
            }
            
            public event QuestTable_HistoryRowChangeEventHandler QuestTable_HistoryRowChanging;
            
            public event QuestTable_HistoryRowChangeEventHandler QuestTable_HistoryRowChanged;
            
            public event QuestTable_HistoryRowChangeEventHandler QuestTable_HistoryRowDeleting;
            
            public event QuestTable_HistoryRowChangeEventHandler QuestTable_HistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddQuestTable_HistoryRow(QuestTable_HistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuestTable_HistoryRow AddQuestTable_HistoryRow(
                        int IndexKey, 
                        int ID, 
                        bool Enable_Quest, 
                        string Quest_Type, 
                        string Start_NPC_Name, 
                        string End_NPC_Name, 
                        string Title, 
                        int Fair_Level, 
                        string Fair_Dungeon_ID, 
                        string Quest_Repeat, 
                        int Condition_Lv, 
                        string Condition_Unit_Type, 
                        string Condition_Unit_Class, 
                        string Reward_Unit_Class, 
                        string Change_Job_Type, 
                        int Condition_Item_ID, 
                        int Condition_Item_Quantity, 
                        int SubQuest1, 
                        int SubQuest2, 
                        int SubQuest3, 
                        int SubQuest4, 
                        int SubQUest5, 
                        string Reward_Enable, 
                        int Reward_EXP, 
                        int Reward_ED, 
                        string Reward_Grade, 
                        int Reward_Buff, 
                        int Reward_SP, 
                        int Reward_Item1, 
                        string name1, 
                        int Period_1, 
                        int Reward_ItemQuantity1, 
                        int Socket_Option1, 
                        int Reward_Item2, 
                        string name2, 
                        int Period_2, 
                        int Reward_ItemQuantity2, 
                        int Socket_Option2, 
                        int Reward_Item3, 
                        string name3, 
                        int Period_3, 
                        int Reward_ItemQuantity3, 
                        int Socket_Option3, 
                        int Select_Reward_Item1, 
                        string name1_1, 
                        int Select_Period1, 
                        int Select_Reward_ItemQuantity1, 
                        int Select_Socket_Option1, 
                        int Select_Reward_Item2, 
                        string name2_1, 
                        int Select_Period2, 
                        int Select_Reward_ItemQuantity2, 
                        int Select_Socket_Option2, 
                        int Select_Reward_Item3, 
                        string name3_1, 
                        int Select_Period3, 
                        int Select_Reward_ItemQuantity3, 
                        int Select_Socket_Option3, 
                        int Select_Reward_Item4, 
                        string name4_1, 
                        int Select_Period4, 
                        string Select_Reward_ItemQuantity4, 
                        int Select_Socket_Option4, 
                        int Select_Reward_Item5, 
                        string name5_1, 
                        int Select_Period_5, 
                        int Select_Reward_ItemQuantity5, 
                        int Select_Socket_Option5, 
                        int Select_Reward_ItemCount, 
                        string Main_Text, 
                        string Thanks_Text, 
                        string Diss_Clear_Text, 
                        int Condition_ClearQuest_ID_1, 
                        int Condition_ClearQuest_ID_2, 
                        int Condition_ClearQuest_ID_3, 
                        int Condition_ClearQuest_ID_4, 
                        int Condition_ClearQuest_ID_5, 
                        int Condition_ClearQuest_ID_6, 
                        int Condition_ClearQuest_ID_7, 
                        int Condition_ClearQuest_ID_8, 
                        int Condition_DisClearQuest_ID, 
                        string UserID, 
                        string UserIP, 
                        System.DateTime Regdate) {
                QuestTable_HistoryRow rowQuestTable_HistoryRow = ((QuestTable_HistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        ID,
                        Enable_Quest,
                        Quest_Type,
                        Start_NPC_Name,
                        End_NPC_Name,
                        Title,
                        Fair_Level,
                        Fair_Dungeon_ID,
                        Quest_Repeat,
                        Condition_Lv,
                        Condition_Unit_Type,
                        Condition_Unit_Class,
                        Reward_Unit_Class,
                        Change_Job_Type,
                        Condition_Item_ID,
                        Condition_Item_Quantity,
                        SubQuest1,
                        SubQuest2,
                        SubQuest3,
                        SubQuest4,
                        SubQUest5,
                        Reward_Enable,
                        Reward_EXP,
                        Reward_ED,
                        Reward_Grade,
                        Reward_Buff,
                        Reward_SP,
                        Reward_Item1,
                        name1,
                        Period_1,
                        Reward_ItemQuantity1,
                        Socket_Option1,
                        Reward_Item2,
                        name2,
                        Period_2,
                        Reward_ItemQuantity2,
                        Socket_Option2,
                        Reward_Item3,
                        name3,
                        Period_3,
                        Reward_ItemQuantity3,
                        Socket_Option3,
                        Select_Reward_Item1,
                        name1_1,
                        Select_Period1,
                        Select_Reward_ItemQuantity1,
                        Select_Socket_Option1,
                        Select_Reward_Item2,
                        name2_1,
                        Select_Period2,
                        Select_Reward_ItemQuantity2,
                        Select_Socket_Option2,
                        Select_Reward_Item3,
                        name3_1,
                        Select_Period3,
                        Select_Reward_ItemQuantity3,
                        Select_Socket_Option3,
                        Select_Reward_Item4,
                        name4_1,
                        Select_Period4,
                        Select_Reward_ItemQuantity4,
                        Select_Socket_Option4,
                        Select_Reward_Item5,
                        name5_1,
                        Select_Period_5,
                        Select_Reward_ItemQuantity5,
                        Select_Socket_Option5,
                        Select_Reward_ItemCount,
                        Main_Text,
                        Thanks_Text,
                        Diss_Clear_Text,
                        Condition_ClearQuest_ID_1,
                        Condition_ClearQuest_ID_2,
                        Condition_ClearQuest_ID_3,
                        Condition_ClearQuest_ID_4,
                        Condition_ClearQuest_ID_5,
                        Condition_ClearQuest_ID_6,
                        Condition_ClearQuest_ID_7,
                        Condition_ClearQuest_ID_8,
                        Condition_DisClearQuest_ID,
                        UserID,
                        UserIP,
                        Regdate};
                rowQuestTable_HistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQuestTable_HistoryRow);
                return rowQuestTable_HistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                QuestTable_HistoryDataTable cln = ((QuestTable_HistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QuestTable_HistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnID = base.Columns["ID"];
                this.columnEnable_Quest = base.Columns["Enable Quest"];
                this.columnQuest_Type = base.Columns["Quest Type"];
                this.columnStart_NPC_Name = base.Columns["Start NPC Name"];
                this.columnEnd_NPC_Name = base.Columns["End NPC Name"];
                this.columnTitle = base.Columns["Title"];
                this.columnFair_Level = base.Columns["Fair Level"];
                this.columnFair_Dungeon_ID = base.Columns["Fair Dungeon ID"];
                this.columnQuest_Repeat = base.Columns["Quest Repeat"];
                this.columnCondition_Lv = base.Columns["Condition Lv"];
                this.columnCondition_Unit_Type = base.Columns["Condition Unit Type"];
                this.columnCondition_Unit_Class = base.Columns["Condition Unit Class"];
                this.columnReward_Unit_Class = base.Columns["Reward Unit Class"];
                this.columnChange_Job_Type = base.Columns["Change Job Type"];
                this.columnCondition_Item_ID = base.Columns["Condition Item ID"];
                this.columnCondition_Item_Quantity = base.Columns["Condition Item Quantity"];
                this.columnSubQuest1 = base.Columns["SubQuest1"];
                this.columnSubQuest2 = base.Columns["SubQuest2"];
                this.columnSubQuest3 = base.Columns["SubQuest3"];
                this.columnSubQuest4 = base.Columns["SubQuest4"];
                this.columnSubQUest5 = base.Columns["SubQUest5"];
                this.columnReward_Enable = base.Columns["Reward Enable"];
                this.columnReward_EXP = base.Columns["Reward EXP"];
                this.columnReward_ED = base.Columns["Reward ED"];
                this.columnReward_Grade = base.Columns["Reward Grade"];
                this.columnReward_Buff = base.Columns["Reward Buff"];
                this.columnReward_SP = base.Columns["Reward SP"];
                this.columnReward_Item1 = base.Columns["Reward Item1"];
                this.columnname1 = base.Columns["name1"];
                this.columnPeriod_1 = base.Columns["Period 1"];
                this.columnReward_ItemQuantity1 = base.Columns["Reward ItemQuantity1"];
                this.columnSocket_Option1 = base.Columns["Socket Option1"];
                this.columnReward_Item2 = base.Columns["Reward Item2"];
                this.columnname2 = base.Columns["name2"];
                this.columnPeriod_2 = base.Columns["Period 2"];
                this.columnReward_ItemQuantity2 = base.Columns["Reward ItemQuantity2"];
                this.columnSocket_Option2 = base.Columns["Socket Option2"];
                this.columnReward_Item3 = base.Columns["Reward Item3"];
                this.columnname3 = base.Columns["name3"];
                this.columnPeriod_3 = base.Columns["Period 3"];
                this.columnReward_ItemQuantity3 = base.Columns["Reward ItemQuantity3"];
                this.columnSocket_Option3 = base.Columns["Socket Option3"];
                this.columnSelect_Reward_Item1 = base.Columns["Select Reward Item1"];
                this.columnname1_1 = base.Columns["name1_1"];
                this.columnSelect_Period1 = base.Columns["Select Period1"];
                this.columnSelect_Reward_ItemQuantity1 = base.Columns["Select Reward ItemQuantity1"];
                this.columnSelect_Socket_Option1 = base.Columns["Select Socket Option1"];
                this.columnSelect_Reward_Item2 = base.Columns["Select Reward Item2"];
                this.columnname2_1 = base.Columns["name2_1"];
                this.columnSelect_Period2 = base.Columns["Select Period2"];
                this.columnSelect_Reward_ItemQuantity2 = base.Columns["Select Reward ItemQuantity2"];
                this.columnSelect_Socket_Option2 = base.Columns["Select Socket Option2"];
                this.columnSelect_Reward_Item3 = base.Columns["Select Reward Item3"];
                this.columnname3_1 = base.Columns["name3_1"];
                this.columnSelect_Period3 = base.Columns["Select Period3"];
                this.columnSelect_Reward_ItemQuantity3 = base.Columns["Select Reward ItemQuantity3"];
                this.columnSelect_Socket_Option3 = base.Columns["Select Socket Option3"];
                this.columnSelect_Reward_Item4 = base.Columns["Select Reward Item4"];
                this.columnname4_1 = base.Columns["name4_1"];
                this.columnSelect_Period4 = base.Columns["Select Period4"];
                this.columnSelect_Reward_ItemQuantity4 = base.Columns["Select Reward ItemQuantity4"];
                this.columnSelect_Socket_Option4 = base.Columns["Select Socket Option4"];
                this.columnSelect_Reward_Item5 = base.Columns["Select Reward Item5"];
                this.columnname5_1 = base.Columns["name5_1"];
                this.columnSelect_Period_5 = base.Columns["Select Period 5"];
                this.columnSelect_Reward_ItemQuantity5 = base.Columns["Select Reward ItemQuantity5"];
                this.columnSelect_Socket_Option5 = base.Columns["Select Socket Option5"];
                this.columnSelect_Reward_ItemCount = base.Columns["Select Reward ItemCount"];
                this.columnMain_Text = base.Columns["Main Text"];
                this.columnThanks_Text = base.Columns["Thanks Text"];
                this.columnDiss_Clear_Text = base.Columns["Diss Clear Text"];
                this.columnCondition_ClearQuest_ID_1 = base.Columns["Condition ClearQuest ID 1"];
                this.columnCondition_ClearQuest_ID_2 = base.Columns["Condition ClearQuest ID 2"];
                this.columnCondition_ClearQuest_ID_3 = base.Columns["Condition ClearQuest ID 3"];
                this.columnCondition_ClearQuest_ID_4 = base.Columns["Condition ClearQuest ID 4"];
                this.columnCondition_ClearQuest_ID_5 = base.Columns["Condition ClearQuest ID 5"];
                this.columnCondition_ClearQuest_ID_6 = base.Columns["Condition ClearQuest ID 6"];
                this.columnCondition_ClearQuest_ID_7 = base.Columns["Condition ClearQuest ID 7"];
                this.columnCondition_ClearQuest_ID_8 = base.Columns["Condition ClearQuest ID 8"];
                this.columnCondition_DisClearQuest_ID = base.Columns["Condition DisClearQuest ID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnUserIP = base.Columns["UserIP"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnEnable_Quest = new global::System.Data.DataColumn("Enable Quest", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnable_Quest);
                this.columnQuest_Type = new global::System.Data.DataColumn("Quest Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuest_Type);
                this.columnStart_NPC_Name = new global::System.Data.DataColumn("Start NPC Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStart_NPC_Name);
                this.columnEnd_NPC_Name = new global::System.Data.DataColumn("End NPC Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnd_NPC_Name);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnFair_Level = new global::System.Data.DataColumn("Fair Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFair_Level);
                this.columnFair_Dungeon_ID = new global::System.Data.DataColumn("Fair Dungeon ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFair_Dungeon_ID);
                this.columnQuest_Repeat = new global::System.Data.DataColumn("Quest Repeat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuest_Repeat);
                this.columnCondition_Lv = new global::System.Data.DataColumn("Condition Lv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Lv);
                this.columnCondition_Unit_Type = new global::System.Data.DataColumn("Condition Unit Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Type);
                this.columnCondition_Unit_Class = new global::System.Data.DataColumn("Condition Unit Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Class);
                this.columnReward_Unit_Class = new global::System.Data.DataColumn("Reward Unit Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Unit_Class);
                this.columnChange_Job_Type = new global::System.Data.DataColumn("Change Job Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChange_Job_Type);
                this.columnCondition_Item_ID = new global::System.Data.DataColumn("Condition Item ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Item_ID);
                this.columnCondition_Item_Quantity = new global::System.Data.DataColumn("Condition Item Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Item_Quantity);
                this.columnSubQuest1 = new global::System.Data.DataColumn("SubQuest1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubQuest1);
                this.columnSubQuest2 = new global::System.Data.DataColumn("SubQuest2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubQuest2);
                this.columnSubQuest3 = new global::System.Data.DataColumn("SubQuest3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubQuest3);
                this.columnSubQuest4 = new global::System.Data.DataColumn("SubQuest4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubQuest4);
                this.columnSubQUest5 = new global::System.Data.DataColumn("SubQUest5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubQUest5);
                this.columnReward_Enable = new global::System.Data.DataColumn("Reward Enable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Enable);
                this.columnReward_EXP = new global::System.Data.DataColumn("Reward EXP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_EXP);
                this.columnReward_ED = new global::System.Data.DataColumn("Reward ED", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_ED);
                this.columnReward_Grade = new global::System.Data.DataColumn("Reward Grade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Grade);
                this.columnReward_Buff = new global::System.Data.DataColumn("Reward Buff", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Buff);
                this.columnReward_SP = new global::System.Data.DataColumn("Reward SP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_SP);
                this.columnReward_Item1 = new global::System.Data.DataColumn("Reward Item1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Item1);
                this.columnname1 = new global::System.Data.DataColumn("name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname1);
                this.columnPeriod_1 = new global::System.Data.DataColumn("Period 1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod_1);
                this.columnReward_ItemQuantity1 = new global::System.Data.DataColumn("Reward ItemQuantity1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_ItemQuantity1);
                this.columnSocket_Option1 = new global::System.Data.DataColumn("Socket Option1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket_Option1);
                this.columnReward_Item2 = new global::System.Data.DataColumn("Reward Item2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Item2);
                this.columnname2 = new global::System.Data.DataColumn("name2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname2);
                this.columnPeriod_2 = new global::System.Data.DataColumn("Period 2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod_2);
                this.columnReward_ItemQuantity2 = new global::System.Data.DataColumn("Reward ItemQuantity2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_ItemQuantity2);
                this.columnSocket_Option2 = new global::System.Data.DataColumn("Socket Option2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket_Option2);
                this.columnReward_Item3 = new global::System.Data.DataColumn("Reward Item3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Item3);
                this.columnname3 = new global::System.Data.DataColumn("name3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname3);
                this.columnPeriod_3 = new global::System.Data.DataColumn("Period 3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod_3);
                this.columnReward_ItemQuantity3 = new global::System.Data.DataColumn("Reward ItemQuantity3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_ItemQuantity3);
                this.columnSocket_Option3 = new global::System.Data.DataColumn("Socket Option3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket_Option3);
                this.columnSelect_Reward_Item1 = new global::System.Data.DataColumn("Select Reward Item1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_Item1);
                this.columnname1_1 = new global::System.Data.DataColumn("name1_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname1_1);
                this.columnSelect_Period1 = new global::System.Data.DataColumn("Select Period1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Period1);
                this.columnSelect_Reward_ItemQuantity1 = new global::System.Data.DataColumn("Select Reward ItemQuantity1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_ItemQuantity1);
                this.columnSelect_Socket_Option1 = new global::System.Data.DataColumn("Select Socket Option1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Socket_Option1);
                this.columnSelect_Reward_Item2 = new global::System.Data.DataColumn("Select Reward Item2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_Item2);
                this.columnname2_1 = new global::System.Data.DataColumn("name2_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname2_1);
                this.columnSelect_Period2 = new global::System.Data.DataColumn("Select Period2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Period2);
                this.columnSelect_Reward_ItemQuantity2 = new global::System.Data.DataColumn("Select Reward ItemQuantity2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_ItemQuantity2);
                this.columnSelect_Socket_Option2 = new global::System.Data.DataColumn("Select Socket Option2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Socket_Option2);
                this.columnSelect_Reward_Item3 = new global::System.Data.DataColumn("Select Reward Item3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_Item3);
                this.columnname3_1 = new global::System.Data.DataColumn("name3_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname3_1);
                this.columnSelect_Period3 = new global::System.Data.DataColumn("Select Period3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Period3);
                this.columnSelect_Reward_ItemQuantity3 = new global::System.Data.DataColumn("Select Reward ItemQuantity3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_ItemQuantity3);
                this.columnSelect_Socket_Option3 = new global::System.Data.DataColumn("Select Socket Option3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Socket_Option3);
                this.columnSelect_Reward_Item4 = new global::System.Data.DataColumn("Select Reward Item4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_Item4);
                this.columnname4_1 = new global::System.Data.DataColumn("name4_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname4_1);
                this.columnSelect_Period4 = new global::System.Data.DataColumn("Select Period4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Period4);
                this.columnSelect_Reward_ItemQuantity4 = new global::System.Data.DataColumn("Select Reward ItemQuantity4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_ItemQuantity4);
                this.columnSelect_Socket_Option4 = new global::System.Data.DataColumn("Select Socket Option4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Socket_Option4);
                this.columnSelect_Reward_Item5 = new global::System.Data.DataColumn("Select Reward Item5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_Item5);
                this.columnname5_1 = new global::System.Data.DataColumn("name5_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname5_1);
                this.columnSelect_Period_5 = new global::System.Data.DataColumn("Select Period 5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Period_5);
                this.columnSelect_Reward_ItemQuantity5 = new global::System.Data.DataColumn("Select Reward ItemQuantity5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_ItemQuantity5);
                this.columnSelect_Socket_Option5 = new global::System.Data.DataColumn("Select Socket Option5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Socket_Option5);
                this.columnSelect_Reward_ItemCount = new global::System.Data.DataColumn("Select Reward ItemCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelect_Reward_ItemCount);
                this.columnMain_Text = new global::System.Data.DataColumn("Main Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMain_Text);
                this.columnThanks_Text = new global::System.Data.DataColumn("Thanks Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThanks_Text);
                this.columnDiss_Clear_Text = new global::System.Data.DataColumn("Diss Clear Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiss_Clear_Text);
                this.columnCondition_ClearQuest_ID_1 = new global::System.Data.DataColumn("Condition ClearQuest ID 1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_1);
                this.columnCondition_ClearQuest_ID_2 = new global::System.Data.DataColumn("Condition ClearQuest ID 2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_2);
                this.columnCondition_ClearQuest_ID_3 = new global::System.Data.DataColumn("Condition ClearQuest ID 3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_3);
                this.columnCondition_ClearQuest_ID_4 = new global::System.Data.DataColumn("Condition ClearQuest ID 4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_4);
                this.columnCondition_ClearQuest_ID_5 = new global::System.Data.DataColumn("Condition ClearQuest ID 5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_5);
                this.columnCondition_ClearQuest_ID_6 = new global::System.Data.DataColumn("Condition ClearQuest ID 6", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_6);
                this.columnCondition_ClearQuest_ID_7 = new global::System.Data.DataColumn("Condition ClearQuest ID 7", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_7);
                this.columnCondition_ClearQuest_ID_8 = new global::System.Data.DataColumn("Condition ClearQuest ID 8", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearQuest_ID_8);
                this.columnCondition_DisClearQuest_ID = new global::System.Data.DataColumn("Condition DisClearQuest ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_DisClearQuest_ID);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserIP = new global::System.Data.DataColumn("UserIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserIP);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.columnIndexKey.AllowDBNull = false;
                this.columnQuest_Type.MaxLength = 30;
                this.columnStart_NPC_Name.MaxLength = 30;
                this.columnEnd_NPC_Name.MaxLength = 30;
                this.columnTitle.MaxLength = 255;
                this.columnFair_Dungeon_ID.MaxLength = 30;
                this.columnQuest_Repeat.MaxLength = 30;
                this.columnCondition_Unit_Type.MaxLength = 30;
                this.columnCondition_Unit_Class.MaxLength = 30;
                this.columnReward_Unit_Class.MaxLength = 30;
                this.columnChange_Job_Type.MaxLength = 30;
                this.columnReward_Enable.MaxLength = 15;
                this.columnReward_Grade.MaxLength = 20;
                this.columnname1.MaxLength = 255;
                this.columnname2.MaxLength = 255;
                this.columnname3.MaxLength = 255;
                this.columnname1_1.MaxLength = 255;
                this.columnname2_1.MaxLength = 255;
                this.columnname3_1.MaxLength = 255;
                this.columnname4_1.MaxLength = 255;
                this.columnSelect_Reward_ItemQuantity4.MaxLength = 255;
                this.columnname5_1.MaxLength = 255;
                this.columnMain_Text.MaxLength = 500;
                this.columnThanks_Text.MaxLength = 500;
                this.columnDiss_Clear_Text.MaxLength = 500;
                this.columnUserID.MaxLength = 30;
                this.columnUserIP.MaxLength = 15;
                this.columnRegdate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuestTable_HistoryRow NewQuestTable_HistoryRow() {
                return ((QuestTable_HistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QuestTable_HistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(QuestTable_HistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QuestTable_HistoryRowChanged != null)) {
                    this.QuestTable_HistoryRowChanged(this, new QuestTable_HistoryRowChangeEvent(((QuestTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QuestTable_HistoryRowChanging != null)) {
                    this.QuestTable_HistoryRowChanging(this, new QuestTable_HistoryRowChangeEvent(((QuestTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QuestTable_HistoryRowDeleted != null)) {
                    this.QuestTable_HistoryRowDeleted(this, new QuestTable_HistoryRowChangeEvent(((QuestTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QuestTable_HistoryRowDeleting != null)) {
                    this.QuestTable_HistoryRowDeleting(this, new QuestTable_HistoryRowChangeEvent(((QuestTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveQuestTable_HistoryRow(QuestTable_HistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QuestTable_HistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SubQuestTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnClear_Type;
            
            private global::System.Data.DataColumn columnClear_Condition_Kill_NPC_ID;
            
            private global::System.Data.DataColumn columnClear_Condition_Kill_NPC_Quantity;
            
            private global::System.Data.DataColumn columnClear_Condition_Collection_Item_ID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnClear_Condition_Collection_Item_Quantity;
            
            private global::System.Data.DataColumn columnQuest_Item_Drop_Rate;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Difficulty;
            
            private global::System.Data.DataColumn columnClear_Condition_Upper_Difficulty;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_ID;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Damage;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Rank;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Clear_Time;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_clear_count;
            
            private global::System.Data.DataColumn columnClear_Condition_Talk_NPC_ID;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_TYPE;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_PLAY;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_WIN;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_KILL;
            
            private global::System.Data.DataColumn columnAutomaticDescription;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubQuestTableDataTable() {
                this.TableName = "SubQuestTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SubQuestTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SubQuestTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_TypeColumn {
                get {
                    return this.columnClear_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Kill_NPC_IDColumn {
                get {
                    return this.columnClear_Condition_Kill_NPC_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Kill_NPC_QuantityColumn {
                get {
                    return this.columnClear_Condition_Kill_NPC_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Collection_Item_IDColumn {
                get {
                    return this.columnClear_Condition_Collection_Item_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Collection_Item_QuantityColumn {
                get {
                    return this.columnClear_Condition_Collection_Item_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Quest_Item_Drop_RateColumn {
                get {
                    return this.columnQuest_Item_Drop_Rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_DifficultyColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Difficulty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Upper_DifficultyColumn {
                get {
                    return this.columnClear_Condition_Upper_Difficulty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_IDColumn {
                get {
                    return this.columnClear_Condition_Dungeon_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_DamageColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Damage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_RankColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_Clear_TimeColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Clear_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_clear_countColumn {
                get {
                    return this.columnClear_Condition_Dungeon_clear_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Talk_NPC_IDColumn {
                get {
                    return this.columnClear_Condition_Talk_NPC_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_TYPEColumn {
                get {
                    return this.columnClear_Condition_PVP_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_PLAYColumn {
                get {
                    return this.columnClear_Condition_PVP_PLAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_WINColumn {
                get {
                    return this.columnClear_Condition_PVP_WIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_KILLColumn {
                get {
                    return this.columnClear_Condition_PVP_KILL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AutomaticDescriptionColumn {
                get {
                    return this.columnAutomaticDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubQuestTableRow this[int index] {
                get {
                    return ((SubQuestTableRow)(this.Rows[index]));
                }
            }
            
            public event SubQuestTableRowChangeEventHandler SubQuestTableRowChanging;
            
            public event SubQuestTableRowChangeEventHandler SubQuestTableRowChanged;
            
            public event SubQuestTableRowChangeEventHandler SubQuestTableRowDeleting;
            
            public event SubQuestTableRowChangeEventHandler SubQuestTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSubQuestTableRow(SubQuestTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubQuestTableRow AddSubQuestTableRow(
                        int IndexKey, 
                        int ID, 
                        string Clear_Type, 
                        string Clear_Condition_Kill_NPC_ID, 
                        int Clear_Condition_Kill_NPC_Quantity, 
                        int Clear_Condition_Collection_Item_ID, 
                        string Name, 
                        int Clear_Condition_Collection_Item_Quantity, 
                        double Quest_Item_Drop_Rate, 
                        string Clear_Condition_Dungeon_Difficulty, 
                        bool Clear_Condition_Upper_Difficulty, 
                        string Clear_Condition_Dungeon_ID, 
                        int Clear_Condition_Dungeon_Damage, 
                        int Clear_Condition_Dungeon_Rank, 
                        int Clear_Condition_Dungeon_Clear_Time, 
                        int Clear_Condition_Dungeon_clear_count, 
                        string Clear_Condition_Talk_NPC_ID, 
                        string Clear_Condition_PVP_TYPE, 
                        int Clear_Condition_PVP_PLAY, 
                        int Clear_Condition_PVP_WIN, 
                        int Clear_Condition_PVP_KILL, 
                        bool AutomaticDescription, 
                        string Description, 
                        System.DateTime Regdate) {
                SubQuestTableRow rowSubQuestTableRow = ((SubQuestTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        ID,
                        Clear_Type,
                        Clear_Condition_Kill_NPC_ID,
                        Clear_Condition_Kill_NPC_Quantity,
                        Clear_Condition_Collection_Item_ID,
                        Name,
                        Clear_Condition_Collection_Item_Quantity,
                        Quest_Item_Drop_Rate,
                        Clear_Condition_Dungeon_Difficulty,
                        Clear_Condition_Upper_Difficulty,
                        Clear_Condition_Dungeon_ID,
                        Clear_Condition_Dungeon_Damage,
                        Clear_Condition_Dungeon_Rank,
                        Clear_Condition_Dungeon_Clear_Time,
                        Clear_Condition_Dungeon_clear_count,
                        Clear_Condition_Talk_NPC_ID,
                        Clear_Condition_PVP_TYPE,
                        Clear_Condition_PVP_PLAY,
                        Clear_Condition_PVP_WIN,
                        Clear_Condition_PVP_KILL,
                        AutomaticDescription,
                        Description,
                        Regdate};
                rowSubQuestTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSubQuestTableRow);
                return rowSubQuestTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubQuestTableRow FindByIndexKey(int IndexKey) {
                return ((SubQuestTableRow)(this.Rows.Find(new object[] {
                            IndexKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SubQuestTableDataTable cln = ((SubQuestTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SubQuestTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnID = base.Columns["ID"];
                this.columnClear_Type = base.Columns["Clear Type"];
                this.columnClear_Condition_Kill_NPC_ID = base.Columns["Clear Condition Kill NPC ID"];
                this.columnClear_Condition_Kill_NPC_Quantity = base.Columns["Clear Condition Kill NPC Quantity"];
                this.columnClear_Condition_Collection_Item_ID = base.Columns["Clear Condition Collection Item ID"];
                this.columnName = base.Columns["Name"];
                this.columnClear_Condition_Collection_Item_Quantity = base.Columns["Clear Condition Collection Item Quantity"];
                this.columnQuest_Item_Drop_Rate = base.Columns["Quest Item Drop Rate"];
                this.columnClear_Condition_Dungeon_Difficulty = base.Columns["Clear Condition Dungeon Difficulty"];
                this.columnClear_Condition_Upper_Difficulty = base.Columns["Clear Condition Upper Difficulty"];
                this.columnClear_Condition_Dungeon_ID = base.Columns["Clear Condition Dungeon ID"];
                this.columnClear_Condition_Dungeon_Damage = base.Columns["Clear Condition Dungeon Damage"];
                this.columnClear_Condition_Dungeon_Rank = base.Columns["Clear Condition Dungeon Rank"];
                this.columnClear_Condition_Dungeon_Clear_Time = base.Columns["Clear Condition Dungeon Clear Time"];
                this.columnClear_Condition_Dungeon_clear_count = base.Columns["Clear Condition Dungeon clear count"];
                this.columnClear_Condition_Talk_NPC_ID = base.Columns["Clear Condition Talk NPC ID"];
                this.columnClear_Condition_PVP_TYPE = base.Columns["Clear Condition PVP_TYPE"];
                this.columnClear_Condition_PVP_PLAY = base.Columns["Clear Condition PVP_PLAY"];
                this.columnClear_Condition_PVP_WIN = base.Columns["Clear Condition PVP_WIN"];
                this.columnClear_Condition_PVP_KILL = base.Columns["Clear Condition PVP_KILL"];
                this.columnAutomaticDescription = base.Columns["AutomaticDescription"];
                this.columnDescription = base.Columns["Description"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnClear_Type = new global::System.Data.DataColumn("Clear Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Type);
                this.columnClear_Condition_Kill_NPC_ID = new global::System.Data.DataColumn("Clear Condition Kill NPC ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Kill_NPC_ID);
                this.columnClear_Condition_Kill_NPC_Quantity = new global::System.Data.DataColumn("Clear Condition Kill NPC Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Kill_NPC_Quantity);
                this.columnClear_Condition_Collection_Item_ID = new global::System.Data.DataColumn("Clear Condition Collection Item ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Collection_Item_ID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnClear_Condition_Collection_Item_Quantity = new global::System.Data.DataColumn("Clear Condition Collection Item Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Collection_Item_Quantity);
                this.columnQuest_Item_Drop_Rate = new global::System.Data.DataColumn("Quest Item Drop Rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuest_Item_Drop_Rate);
                this.columnClear_Condition_Dungeon_Difficulty = new global::System.Data.DataColumn("Clear Condition Dungeon Difficulty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Dungeon_Difficulty);
                this.columnClear_Condition_Upper_Difficulty = new global::System.Data.DataColumn("Clear Condition Upper Difficulty", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Upper_Difficulty);
                this.columnClear_Condition_Dungeon_ID = new global::System.Data.DataColumn("Clear Condition Dungeon ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Dungeon_ID);
                this.columnClear_Condition_Dungeon_Damage = new global::System.Data.DataColumn("Clear Condition Dungeon Damage", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Dungeon_Damage);
                this.columnClear_Condition_Dungeon_Rank = new global::System.Data.DataColumn("Clear Condition Dungeon Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Dungeon_Rank);
                this.columnClear_Condition_Dungeon_Clear_Time = new global::System.Data.DataColumn("Clear Condition Dungeon Clear Time", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Dungeon_Clear_Time);
                this.columnClear_Condition_Dungeon_clear_count = new global::System.Data.DataColumn("Clear Condition Dungeon clear count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Dungeon_clear_count);
                this.columnClear_Condition_Talk_NPC_ID = new global::System.Data.DataColumn("Clear Condition Talk NPC ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Talk_NPC_ID);
                this.columnClear_Condition_PVP_TYPE = new global::System.Data.DataColumn("Clear Condition PVP_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_PVP_TYPE);
                this.columnClear_Condition_PVP_PLAY = new global::System.Data.DataColumn("Clear Condition PVP_PLAY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_PVP_PLAY);
                this.columnClear_Condition_PVP_WIN = new global::System.Data.DataColumn("Clear Condition PVP_WIN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_PVP_WIN);
                this.columnClear_Condition_PVP_KILL = new global::System.Data.DataColumn("Clear Condition PVP_KILL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_PVP_KILL);
                this.columnAutomaticDescription = new global::System.Data.DataColumn("AutomaticDescription", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutomaticDescription);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndexKey}, true));
                this.columnIndexKey.AllowDBNull = false;
                this.columnIndexKey.Unique = true;
                this.columnClear_Type.MaxLength = 255;
                this.columnClear_Condition_Kill_NPC_ID.MaxLength = 255;
                this.columnName.MaxLength = 255;
                this.columnClear_Condition_Dungeon_Difficulty.MaxLength = 50;
                this.columnClear_Condition_Dungeon_ID.MaxLength = 255;
                this.columnClear_Condition_Talk_NPC_ID.MaxLength = 50;
                this.columnClear_Condition_PVP_TYPE.MaxLength = 50;
                this.columnDescription.MaxLength = 255;
                this.columnRegdate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubQuestTableRow NewSubQuestTableRow() {
                return ((SubQuestTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SubQuestTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SubQuestTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SubQuestTableRowChanged != null)) {
                    this.SubQuestTableRowChanged(this, new SubQuestTableRowChangeEvent(((SubQuestTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SubQuestTableRowChanging != null)) {
                    this.SubQuestTableRowChanging(this, new SubQuestTableRowChangeEvent(((SubQuestTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SubQuestTableRowDeleted != null)) {
                    this.SubQuestTableRowDeleted(this, new SubQuestTableRowChangeEvent(((SubQuestTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SubQuestTableRowDeleting != null)) {
                    this.SubQuestTableRowDeleting(this, new SubQuestTableRowChangeEvent(((SubQuestTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSubQuestTableRow(SubQuestTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SubQuestTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SubQuestTable_HistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnClear_Type;
            
            private global::System.Data.DataColumn columnClear_Condition_Kill_NPC_ID;
            
            private global::System.Data.DataColumn columnClear_Condition_Kill_NPC_Quantity;
            
            private global::System.Data.DataColumn columnClear_Condition_Collection_Item_ID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnClear_Condition_Collection_Item_Quantity;
            
            private global::System.Data.DataColumn columnQuest_Item_Drop_Rate;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Difficulty;
            
            private global::System.Data.DataColumn columnClear_Condition_Upper_Difficulty;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_ID;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Damage;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Rank;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Clear_Time;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_clear_count;
            
            private global::System.Data.DataColumn columnClear_Condition_Talk_NPC_ID;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_TYPE;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_PLAY;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_WIN;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_KILL;
            
            private global::System.Data.DataColumn columnAutomaticDescription;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnUserIP;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubQuestTable_HistoryDataTable() {
                this.TableName = "SubQuestTable_History";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SubQuestTable_HistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SubQuestTable_HistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_TypeColumn {
                get {
                    return this.columnClear_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Kill_NPC_IDColumn {
                get {
                    return this.columnClear_Condition_Kill_NPC_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Kill_NPC_QuantityColumn {
                get {
                    return this.columnClear_Condition_Kill_NPC_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Collection_Item_IDColumn {
                get {
                    return this.columnClear_Condition_Collection_Item_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Collection_Item_QuantityColumn {
                get {
                    return this.columnClear_Condition_Collection_Item_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Quest_Item_Drop_RateColumn {
                get {
                    return this.columnQuest_Item_Drop_Rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_DifficultyColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Difficulty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Upper_DifficultyColumn {
                get {
                    return this.columnClear_Condition_Upper_Difficulty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_IDColumn {
                get {
                    return this.columnClear_Condition_Dungeon_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_DamageColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Damage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_RankColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_Clear_TimeColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Clear_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_clear_countColumn {
                get {
                    return this.columnClear_Condition_Dungeon_clear_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Talk_NPC_IDColumn {
                get {
                    return this.columnClear_Condition_Talk_NPC_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_TYPEColumn {
                get {
                    return this.columnClear_Condition_PVP_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_PLAYColumn {
                get {
                    return this.columnClear_Condition_PVP_PLAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_WINColumn {
                get {
                    return this.columnClear_Condition_PVP_WIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_KILLColumn {
                get {
                    return this.columnClear_Condition_PVP_KILL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AutomaticDescriptionColumn {
                get {
                    return this.columnAutomaticDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIPColumn {
                get {
                    return this.columnUserIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubQuestTable_HistoryRow this[int index] {
                get {
                    return ((SubQuestTable_HistoryRow)(this.Rows[index]));
                }
            }
            
            public event SubQuestTable_HistoryRowChangeEventHandler SubQuestTable_HistoryRowChanging;
            
            public event SubQuestTable_HistoryRowChangeEventHandler SubQuestTable_HistoryRowChanged;
            
            public event SubQuestTable_HistoryRowChangeEventHandler SubQuestTable_HistoryRowDeleting;
            
            public event SubQuestTable_HistoryRowChangeEventHandler SubQuestTable_HistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSubQuestTable_HistoryRow(SubQuestTable_HistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubQuestTable_HistoryRow AddSubQuestTable_HistoryRow(
                        int IndexKey, 
                        int ID, 
                        string Clear_Type, 
                        string Clear_Condition_Kill_NPC_ID, 
                        int Clear_Condition_Kill_NPC_Quantity, 
                        int Clear_Condition_Collection_Item_ID, 
                        string Name, 
                        int Clear_Condition_Collection_Item_Quantity, 
                        double Quest_Item_Drop_Rate, 
                        string Clear_Condition_Dungeon_Difficulty, 
                        bool Clear_Condition_Upper_Difficulty, 
                        string Clear_Condition_Dungeon_ID, 
                        int Clear_Condition_Dungeon_Damage, 
                        int Clear_Condition_Dungeon_Rank, 
                        int Clear_Condition_Dungeon_Clear_Time, 
                        int Clear_Condition_Dungeon_clear_count, 
                        string Clear_Condition_Talk_NPC_ID, 
                        string Clear_Condition_PVP_TYPE, 
                        int Clear_Condition_PVP_PLAY, 
                        int Clear_Condition_PVP_WIN, 
                        int Clear_Condition_PVP_KILL, 
                        bool AutomaticDescription, 
                        string Description, 
                        string UserID, 
                        string UserIP, 
                        System.DateTime Regdate) {
                SubQuestTable_HistoryRow rowSubQuestTable_HistoryRow = ((SubQuestTable_HistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        ID,
                        Clear_Type,
                        Clear_Condition_Kill_NPC_ID,
                        Clear_Condition_Kill_NPC_Quantity,
                        Clear_Condition_Collection_Item_ID,
                        Name,
                        Clear_Condition_Collection_Item_Quantity,
                        Quest_Item_Drop_Rate,
                        Clear_Condition_Dungeon_Difficulty,
                        Clear_Condition_Upper_Difficulty,
                        Clear_Condition_Dungeon_ID,
                        Clear_Condition_Dungeon_Damage,
                        Clear_Condition_Dungeon_Rank,
                        Clear_Condition_Dungeon_Clear_Time,
                        Clear_Condition_Dungeon_clear_count,
                        Clear_Condition_Talk_NPC_ID,
                        Clear_Condition_PVP_TYPE,
                        Clear_Condition_PVP_PLAY,
                        Clear_Condition_PVP_WIN,
                        Clear_Condition_PVP_KILL,
                        AutomaticDescription,
                        Description,
                        UserID,
                        UserIP,
                        Regdate};
                rowSubQuestTable_HistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSubQuestTable_HistoryRow);
                return rowSubQuestTable_HistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SubQuestTable_HistoryDataTable cln = ((SubQuestTable_HistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SubQuestTable_HistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnID = base.Columns["ID"];
                this.columnClear_Type = base.Columns["Clear Type"];
                this.columnClear_Condition_Kill_NPC_ID = base.Columns["Clear Condition Kill NPC ID"];
                this.columnClear_Condition_Kill_NPC_Quantity = base.Columns["Clear Condition Kill NPC Quantity"];
                this.columnClear_Condition_Collection_Item_ID = base.Columns["Clear Condition Collection Item ID"];
                this.columnName = base.Columns["Name"];
                this.columnClear_Condition_Collection_Item_Quantity = base.Columns["Clear Condition Collection Item Quantity"];
                this.columnQuest_Item_Drop_Rate = base.Columns["Quest Item Drop Rate"];
                this.columnClear_Condition_Dungeon_Difficulty = base.Columns["Clear Condition Dungeon Difficulty"];
                this.columnClear_Condition_Upper_Difficulty = base.Columns["Clear Condition Upper Difficulty"];
                this.columnClear_Condition_Dungeon_ID = base.Columns["Clear Condition Dungeon ID"];
                this.columnClear_Condition_Dungeon_Damage = base.Columns["Clear Condition Dungeon Damage"];
                this.columnClear_Condition_Dungeon_Rank = base.Columns["Clear Condition Dungeon Rank"];
                this.columnClear_Condition_Dungeon_Clear_Time = base.Columns["Clear Condition Dungeon Clear Time"];
                this.columnClear_Condition_Dungeon_clear_count = base.Columns["Clear Condition Dungeon clear count"];
                this.columnClear_Condition_Talk_NPC_ID = base.Columns["Clear Condition Talk NPC ID"];
                this.columnClear_Condition_PVP_TYPE = base.Columns["Clear Condition PVP_TYPE"];
                this.columnClear_Condition_PVP_PLAY = base.Columns["Clear Condition PVP_PLAY"];
                this.columnClear_Condition_PVP_WIN = base.Columns["Clear Condition PVP_WIN"];
                this.columnClear_Condition_PVP_KILL = base.Columns["Clear Condition PVP_KILL"];
                this.columnAutomaticDescription = base.Columns["AutomaticDescription"];
                this.columnDescription = base.Columns["Description"];
                this.columnUserID = base.Columns["UserID"];
                this.columnUserIP = base.Columns["UserIP"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnClear_Type = new global::System.Data.DataColumn("Clear Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Type);
                this.columnClear_Condition_Kill_NPC_ID = new global::System.Data.DataColumn("Clear Condition Kill NPC ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Kill_NPC_ID);
                this.columnClear_Condition_Kill_NPC_Quantity = new global::System.Data.DataColumn("Clear Condition Kill NPC Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Kill_NPC_Quantity);
                this.columnClear_Condition_Collection_Item_ID = new global::System.Data.DataColumn("Clear Condition Collection Item ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Collection_Item_ID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnClear_Condition_Collection_Item_Quantity = new global::System.Data.DataColumn("Clear Condition Collection Item Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Collection_Item_Quantity);
                this.columnQuest_Item_Drop_Rate = new global::System.Data.DataColumn("Quest Item Drop Rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuest_Item_Drop_Rate);
                this.columnClear_Condition_Dungeon_Difficulty = new global::System.Data.DataColumn("Clear Condition Dungeon Difficulty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Dungeon_Difficulty);
                this.columnClear_Condition_Upper_Difficulty = new global::System.Data.DataColumn("Clear Condition Upper Difficulty", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Upper_Difficulty);
                this.columnClear_Condition_Dungeon_ID = new global::System.Data.DataColumn("Clear Condition Dungeon ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Dungeon_ID);
                this.columnClear_Condition_Dungeon_Damage = new global::System.Data.DataColumn("Clear Condition Dungeon Damage", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Dungeon_Damage);
                this.columnClear_Condition_Dungeon_Rank = new global::System.Data.DataColumn("Clear Condition Dungeon Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Dungeon_Rank);
                this.columnClear_Condition_Dungeon_Clear_Time = new global::System.Data.DataColumn("Clear Condition Dungeon Clear Time", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Dungeon_Clear_Time);
                this.columnClear_Condition_Dungeon_clear_count = new global::System.Data.DataColumn("Clear Condition Dungeon clear count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Dungeon_clear_count);
                this.columnClear_Condition_Talk_NPC_ID = new global::System.Data.DataColumn("Clear Condition Talk NPC ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Talk_NPC_ID);
                this.columnClear_Condition_PVP_TYPE = new global::System.Data.DataColumn("Clear Condition PVP_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_PVP_TYPE);
                this.columnClear_Condition_PVP_PLAY = new global::System.Data.DataColumn("Clear Condition PVP_PLAY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_PVP_PLAY);
                this.columnClear_Condition_PVP_WIN = new global::System.Data.DataColumn("Clear Condition PVP_WIN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_PVP_WIN);
                this.columnClear_Condition_PVP_KILL = new global::System.Data.DataColumn("Clear Condition PVP_KILL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_PVP_KILL);
                this.columnAutomaticDescription = new global::System.Data.DataColumn("AutomaticDescription", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutomaticDescription);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserIP = new global::System.Data.DataColumn("UserIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserIP);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.columnIndexKey.AllowDBNull = false;
                this.columnClear_Type.MaxLength = 255;
                this.columnClear_Condition_Kill_NPC_ID.MaxLength = 255;
                this.columnName.MaxLength = 255;
                this.columnClear_Condition_Dungeon_Difficulty.MaxLength = 50;
                this.columnClear_Condition_Dungeon_ID.MaxLength = 255;
                this.columnClear_Condition_Talk_NPC_ID.MaxLength = 50;
                this.columnClear_Condition_PVP_TYPE.MaxLength = 50;
                this.columnDescription.MaxLength = 255;
                this.columnUserID.MaxLength = 30;
                this.columnUserIP.MaxLength = 15;
                this.columnRegdate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubQuestTable_HistoryRow NewSubQuestTable_HistoryRow() {
                return ((SubQuestTable_HistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SubQuestTable_HistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SubQuestTable_HistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SubQuestTable_HistoryRowChanged != null)) {
                    this.SubQuestTable_HistoryRowChanged(this, new SubQuestTable_HistoryRowChangeEvent(((SubQuestTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SubQuestTable_HistoryRowChanging != null)) {
                    this.SubQuestTable_HistoryRowChanging(this, new SubQuestTable_HistoryRowChangeEvent(((SubQuestTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SubQuestTable_HistoryRowDeleted != null)) {
                    this.SubQuestTable_HistoryRowDeleted(this, new SubQuestTable_HistoryRowChangeEvent(((SubQuestTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SubQuestTable_HistoryRowDeleting != null)) {
                    this.SubQuestTable_HistoryRowDeleting(this, new SubQuestTable_HistoryRowChangeEvent(((SubQuestTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSubQuestTable_HistoryRow(SubQuestTable_HistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SubQuestTable_HistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TitleTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnTitleID;
            
            private global::System.Data.DataColumn columnTitle_Name;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnSort_Num;
            
            private global::System.Data.DataColumn columnTitle_Type;
            
            private global::System.Data.DataColumn columnTitle_Type_;
            
            private global::System.Data.DataColumn columnParticle_Name;
            
            private global::System.Data.DataColumn columnCondition_Unit_Type;
            
            private global::System.Data.DataColumn columnCondition_Unit_Type_;
            
            private global::System.Data.DataColumn columnCondition_Unit_Class;
            
            private global::System.Data.DataColumn columnCondition_Unit_Class_;
            
            private global::System.Data.DataColumn columnOpen_Level;
            
            private global::System.Data.DataColumn columnSecret_Title;
            
            private global::System.Data.DataColumn columnBase_HP;
            
            private global::System.Data.DataColumn columnAtk_Physic;
            
            private global::System.Data.DataColumn columnAtk_Magic;
            
            private global::System.Data.DataColumn columnDef_Physic;
            
            private global::System.Data.DataColumn columnDef_Magic;
            
            private global::System.Data.DataColumn columnSocket01;
            
            private global::System.Data.DataColumn columnSocket02;
            
            private global::System.Data.DataColumn columnSocket03;
            
            private global::System.Data.DataColumn columnSocket04;
            
            private global::System.Data.DataColumn columnSocket05;
            
            private global::System.Data.DataColumn columnSocket06;
            
            private global::System.Data.DataColumn columnSocket07;
            
            private global::System.Data.DataColumn columnSocket08;
            
            private global::System.Data.DataColumn columnSocket09;
            
            private global::System.Data.DataColumn columnSocket10;
            
            private global::System.Data.DataColumn columnVisible;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleTableDataTable() {
                this.TableName = "TitleTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TitleTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TitleTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TitleIDColumn {
                get {
                    return this.columnTitleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Title_NameColumn {
                get {
                    return this.columnTitle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sort_NumColumn {
                get {
                    return this.columnSort_Num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Title_TypeColumn {
                get {
                    return this.columnTitle_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Title_Type_Column {
                get {
                    return this.columnTitle_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Particle_NameColumn {
                get {
                    return this.columnParticle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_TypeColumn {
                get {
                    return this.columnCondition_Unit_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_Type_Column {
                get {
                    return this.columnCondition_Unit_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_ClassColumn {
                get {
                    return this.columnCondition_Unit_Class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_Class_Column {
                get {
                    return this.columnCondition_Unit_Class_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Open_LevelColumn {
                get {
                    return this.columnOpen_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Secret_TitleColumn {
                get {
                    return this.columnSecret_Title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Base_HPColumn {
                get {
                    return this.columnBase_HP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Atk_PhysicColumn {
                get {
                    return this.columnAtk_Physic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Atk_MagicColumn {
                get {
                    return this.columnAtk_Magic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Def_PhysicColumn {
                get {
                    return this.columnDef_Physic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Def_MagicColumn {
                get {
                    return this.columnDef_Magic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket01Column {
                get {
                    return this.columnSocket01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket02Column {
                get {
                    return this.columnSocket02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket03Column {
                get {
                    return this.columnSocket03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket04Column {
                get {
                    return this.columnSocket04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket05Column {
                get {
                    return this.columnSocket05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket06Column {
                get {
                    return this.columnSocket06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket07Column {
                get {
                    return this.columnSocket07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket08Column {
                get {
                    return this.columnSocket08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket09Column {
                get {
                    return this.columnSocket09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket10Column {
                get {
                    return this.columnSocket10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VisibleColumn {
                get {
                    return this.columnVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleTableRow this[int index] {
                get {
                    return ((TitleTableRow)(this.Rows[index]));
                }
            }
            
            public event TitleTableRowChangeEventHandler TitleTableRowChanging;
            
            public event TitleTableRowChangeEventHandler TitleTableRowChanged;
            
            public event TitleTableRowChangeEventHandler TitleTableRowDeleting;
            
            public event TitleTableRowChangeEventHandler TitleTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTitleTableRow(TitleTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleTableRow AddTitleTableRow(
                        int IndexKey, 
                        int TitleID, 
                        string Title_Name, 
                        string Description, 
                        int Sort_Num, 
                        int Title_Type, 
                        string Title_Type_, 
                        string Particle_Name, 
                        int Condition_Unit_Type, 
                        string Condition_Unit_Type_, 
                        int Condition_Unit_Class, 
                        string Condition_Unit_Class_, 
                        int Open_Level, 
                        bool Secret_Title, 
                        int Base_HP, 
                        int Atk_Physic, 
                        int Atk_Magic, 
                        int Def_Physic, 
                        int Def_Magic, 
                        int Socket01, 
                        int Socket02, 
                        int Socket03, 
                        int Socket04, 
                        int Socket05, 
                        int Socket06, 
                        int Socket07, 
                        int Socket08, 
                        int Socket09, 
                        int Socket10, 
                        bool Visible, 
                        System.DateTime Regdate) {
                TitleTableRow rowTitleTableRow = ((TitleTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        TitleID,
                        Title_Name,
                        Description,
                        Sort_Num,
                        Title_Type,
                        Title_Type_,
                        Particle_Name,
                        Condition_Unit_Type,
                        Condition_Unit_Type_,
                        Condition_Unit_Class,
                        Condition_Unit_Class_,
                        Open_Level,
                        Secret_Title,
                        Base_HP,
                        Atk_Physic,
                        Atk_Magic,
                        Def_Physic,
                        Def_Magic,
                        Socket01,
                        Socket02,
                        Socket03,
                        Socket04,
                        Socket05,
                        Socket06,
                        Socket07,
                        Socket08,
                        Socket09,
                        Socket10,
                        Visible,
                        Regdate};
                rowTitleTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTitleTableRow);
                return rowTitleTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleTableRow FindByIndexKey(int IndexKey) {
                return ((TitleTableRow)(this.Rows.Find(new object[] {
                            IndexKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TitleTableDataTable cln = ((TitleTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TitleTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnTitleID = base.Columns["TitleID"];
                this.columnTitle_Name = base.Columns["Title_Name"];
                this.columnDescription = base.Columns["Description"];
                this.columnSort_Num = base.Columns["Sort_Num"];
                this.columnTitle_Type = base.Columns["Title_Type"];
                this.columnTitle_Type_ = base.Columns["Title_Type_"];
                this.columnParticle_Name = base.Columns["Particle_Name"];
                this.columnCondition_Unit_Type = base.Columns["Condition Unit Type"];
                this.columnCondition_Unit_Type_ = base.Columns["Condition_Unit_Type_"];
                this.columnCondition_Unit_Class = base.Columns["Condition Unit Class"];
                this.columnCondition_Unit_Class_ = base.Columns["Condition_Unit_Class_"];
                this.columnOpen_Level = base.Columns["Open_Level"];
                this.columnSecret_Title = base.Columns["Secret_Title"];
                this.columnBase_HP = base.Columns["Base_HP"];
                this.columnAtk_Physic = base.Columns["Atk_Physic"];
                this.columnAtk_Magic = base.Columns["Atk_Magic"];
                this.columnDef_Physic = base.Columns["Def_Physic"];
                this.columnDef_Magic = base.Columns["Def_Magic"];
                this.columnSocket01 = base.Columns["Socket01"];
                this.columnSocket02 = base.Columns["Socket02"];
                this.columnSocket03 = base.Columns["Socket03"];
                this.columnSocket04 = base.Columns["Socket04"];
                this.columnSocket05 = base.Columns["Socket05"];
                this.columnSocket06 = base.Columns["Socket06"];
                this.columnSocket07 = base.Columns["Socket07"];
                this.columnSocket08 = base.Columns["Socket08"];
                this.columnSocket09 = base.Columns["Socket09"];
                this.columnSocket10 = base.Columns["Socket10"];
                this.columnVisible = base.Columns["Visible"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnTitleID = new global::System.Data.DataColumn("TitleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitleID);
                this.columnTitle_Name = new global::System.Data.DataColumn("Title_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle_Name);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnSort_Num = new global::System.Data.DataColumn("Sort_Num", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSort_Num);
                this.columnTitle_Type = new global::System.Data.DataColumn("Title_Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle_Type);
                this.columnTitle_Type_ = new global::System.Data.DataColumn("Title_Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle_Type_);
                this.columnParticle_Name = new global::System.Data.DataColumn("Particle_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParticle_Name);
                this.columnCondition_Unit_Type = new global::System.Data.DataColumn("Condition Unit Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Type);
                this.columnCondition_Unit_Type_ = new global::System.Data.DataColumn("Condition_Unit_Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Type_);
                this.columnCondition_Unit_Class = new global::System.Data.DataColumn("Condition Unit Class", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Class);
                this.columnCondition_Unit_Class_ = new global::System.Data.DataColumn("Condition_Unit_Class_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Class_);
                this.columnOpen_Level = new global::System.Data.DataColumn("Open_Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpen_Level);
                this.columnSecret_Title = new global::System.Data.DataColumn("Secret_Title", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecret_Title);
                this.columnBase_HP = new global::System.Data.DataColumn("Base_HP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBase_HP);
                this.columnAtk_Physic = new global::System.Data.DataColumn("Atk_Physic", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtk_Physic);
                this.columnAtk_Magic = new global::System.Data.DataColumn("Atk_Magic", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtk_Magic);
                this.columnDef_Physic = new global::System.Data.DataColumn("Def_Physic", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDef_Physic);
                this.columnDef_Magic = new global::System.Data.DataColumn("Def_Magic", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDef_Magic);
                this.columnSocket01 = new global::System.Data.DataColumn("Socket01", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket01);
                this.columnSocket02 = new global::System.Data.DataColumn("Socket02", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket02);
                this.columnSocket03 = new global::System.Data.DataColumn("Socket03", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket03);
                this.columnSocket04 = new global::System.Data.DataColumn("Socket04", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket04);
                this.columnSocket05 = new global::System.Data.DataColumn("Socket05", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket05);
                this.columnSocket06 = new global::System.Data.DataColumn("Socket06", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket06);
                this.columnSocket07 = new global::System.Data.DataColumn("Socket07", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket07);
                this.columnSocket08 = new global::System.Data.DataColumn("Socket08", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket08);
                this.columnSocket09 = new global::System.Data.DataColumn("Socket09", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket09);
                this.columnSocket10 = new global::System.Data.DataColumn("Socket10", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket10);
                this.columnVisible = new global::System.Data.DataColumn("Visible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisible);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndexKey}, true));
                this.columnIndexKey.AllowDBNull = false;
                this.columnIndexKey.Unique = true;
                this.columnTitleID.AllowDBNull = false;
                this.columnTitle_Name.MaxLength = 150;
                this.columnDescription.MaxLength = 500;
                this.columnTitle_Type_.MaxLength = 150;
                this.columnParticle_Name.MaxLength = 150;
                this.columnCondition_Unit_Type_.MaxLength = 150;
                this.columnCondition_Unit_Class_.MaxLength = 150;
                this.columnRegdate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleTableRow NewTitleTableRow() {
                return ((TitleTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TitleTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TitleTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TitleTableRowChanged != null)) {
                    this.TitleTableRowChanged(this, new TitleTableRowChangeEvent(((TitleTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TitleTableRowChanging != null)) {
                    this.TitleTableRowChanging(this, new TitleTableRowChangeEvent(((TitleTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TitleTableRowDeleted != null)) {
                    this.TitleTableRowDeleted(this, new TitleTableRowChangeEvent(((TitleTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TitleTableRowDeleting != null)) {
                    this.TitleTableRowDeleting(this, new TitleTableRowChangeEvent(((TitleTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTitleTableRow(TitleTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TitleTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TitleTable_HistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnTitleID;
            
            private global::System.Data.DataColumn columnTitle_Name;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnSort_Num;
            
            private global::System.Data.DataColumn columnTitle_Type;
            
            private global::System.Data.DataColumn columnTitle_Type_;
            
            private global::System.Data.DataColumn columnParticle_Name;
            
            private global::System.Data.DataColumn columnCondition_Unit_Type;
            
            private global::System.Data.DataColumn columnCondition_Unit_Type_;
            
            private global::System.Data.DataColumn columnCondition_Unit_Class;
            
            private global::System.Data.DataColumn columnCondition_Unit_Class_;
            
            private global::System.Data.DataColumn columnOpen_Level;
            
            private global::System.Data.DataColumn columnSecret_Title;
            
            private global::System.Data.DataColumn columnBase_HP;
            
            private global::System.Data.DataColumn columnAtk_Physic;
            
            private global::System.Data.DataColumn columnAtk_Magic;
            
            private global::System.Data.DataColumn columnDef_Physic;
            
            private global::System.Data.DataColumn columnDef_Magic;
            
            private global::System.Data.DataColumn columnSocket01;
            
            private global::System.Data.DataColumn columnSocket02;
            
            private global::System.Data.DataColumn columnSocket03;
            
            private global::System.Data.DataColumn columnSocket04;
            
            private global::System.Data.DataColumn columnSocket05;
            
            private global::System.Data.DataColumn columnSocket06;
            
            private global::System.Data.DataColumn columnSocket07;
            
            private global::System.Data.DataColumn columnSocket08;
            
            private global::System.Data.DataColumn columnSocket09;
            
            private global::System.Data.DataColumn columnSocket10;
            
            private global::System.Data.DataColumn columnVisible;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnUserIP;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleTable_HistoryDataTable() {
                this.TableName = "TitleTable_History";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TitleTable_HistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TitleTable_HistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TitleIDColumn {
                get {
                    return this.columnTitleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Title_NameColumn {
                get {
                    return this.columnTitle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sort_NumColumn {
                get {
                    return this.columnSort_Num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Title_TypeColumn {
                get {
                    return this.columnTitle_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Title_Type_Column {
                get {
                    return this.columnTitle_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Particle_NameColumn {
                get {
                    return this.columnParticle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_TypeColumn {
                get {
                    return this.columnCondition_Unit_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_Type_Column {
                get {
                    return this.columnCondition_Unit_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_ClassColumn {
                get {
                    return this.columnCondition_Unit_Class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_Class_Column {
                get {
                    return this.columnCondition_Unit_Class_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Open_LevelColumn {
                get {
                    return this.columnOpen_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Secret_TitleColumn {
                get {
                    return this.columnSecret_Title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Base_HPColumn {
                get {
                    return this.columnBase_HP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Atk_PhysicColumn {
                get {
                    return this.columnAtk_Physic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Atk_MagicColumn {
                get {
                    return this.columnAtk_Magic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Def_PhysicColumn {
                get {
                    return this.columnDef_Physic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Def_MagicColumn {
                get {
                    return this.columnDef_Magic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket01Column {
                get {
                    return this.columnSocket01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket02Column {
                get {
                    return this.columnSocket02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket03Column {
                get {
                    return this.columnSocket03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket04Column {
                get {
                    return this.columnSocket04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket05Column {
                get {
                    return this.columnSocket05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket06Column {
                get {
                    return this.columnSocket06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket07Column {
                get {
                    return this.columnSocket07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket08Column {
                get {
                    return this.columnSocket08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket09Column {
                get {
                    return this.columnSocket09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Socket10Column {
                get {
                    return this.columnSocket10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VisibleColumn {
                get {
                    return this.columnVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIPColumn {
                get {
                    return this.columnUserIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleTable_HistoryRow this[int index] {
                get {
                    return ((TitleTable_HistoryRow)(this.Rows[index]));
                }
            }
            
            public event TitleTable_HistoryRowChangeEventHandler TitleTable_HistoryRowChanging;
            
            public event TitleTable_HistoryRowChangeEventHandler TitleTable_HistoryRowChanged;
            
            public event TitleTable_HistoryRowChangeEventHandler TitleTable_HistoryRowDeleting;
            
            public event TitleTable_HistoryRowChangeEventHandler TitleTable_HistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTitleTable_HistoryRow(TitleTable_HistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleTable_HistoryRow AddTitleTable_HistoryRow(
                        int IndexKey, 
                        int TitleID, 
                        string Title_Name, 
                        string Description, 
                        int Sort_Num, 
                        int Title_Type, 
                        string Title_Type_, 
                        string Particle_Name, 
                        int Condition_Unit_Type, 
                        string Condition_Unit_Type_, 
                        int Condition_Unit_Class, 
                        string Condition_Unit_Class_, 
                        int Open_Level, 
                        bool Secret_Title, 
                        int Base_HP, 
                        int Atk_Physic, 
                        int Atk_Magic, 
                        int Def_Physic, 
                        int Def_Magic, 
                        int Socket01, 
                        int Socket02, 
                        int Socket03, 
                        int Socket04, 
                        int Socket05, 
                        int Socket06, 
                        int Socket07, 
                        int Socket08, 
                        int Socket09, 
                        int Socket10, 
                        bool Visible, 
                        string UserID, 
                        string UserIP, 
                        System.DateTime Regdate) {
                TitleTable_HistoryRow rowTitleTable_HistoryRow = ((TitleTable_HistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        TitleID,
                        Title_Name,
                        Description,
                        Sort_Num,
                        Title_Type,
                        Title_Type_,
                        Particle_Name,
                        Condition_Unit_Type,
                        Condition_Unit_Type_,
                        Condition_Unit_Class,
                        Condition_Unit_Class_,
                        Open_Level,
                        Secret_Title,
                        Base_HP,
                        Atk_Physic,
                        Atk_Magic,
                        Def_Physic,
                        Def_Magic,
                        Socket01,
                        Socket02,
                        Socket03,
                        Socket04,
                        Socket05,
                        Socket06,
                        Socket07,
                        Socket08,
                        Socket09,
                        Socket10,
                        Visible,
                        UserID,
                        UserIP,
                        Regdate};
                rowTitleTable_HistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTitleTable_HistoryRow);
                return rowTitleTable_HistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TitleTable_HistoryDataTable cln = ((TitleTable_HistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TitleTable_HistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnTitleID = base.Columns["TitleID"];
                this.columnTitle_Name = base.Columns["Title_Name"];
                this.columnDescription = base.Columns["Description"];
                this.columnSort_Num = base.Columns["Sort_Num"];
                this.columnTitle_Type = base.Columns["Title_Type"];
                this.columnTitle_Type_ = base.Columns["Title_Type_"];
                this.columnParticle_Name = base.Columns["Particle_Name"];
                this.columnCondition_Unit_Type = base.Columns["Condition Unit Type"];
                this.columnCondition_Unit_Type_ = base.Columns["Condition_Unit_Type_"];
                this.columnCondition_Unit_Class = base.Columns["Condition Unit Class"];
                this.columnCondition_Unit_Class_ = base.Columns["Condition_Unit_Class_"];
                this.columnOpen_Level = base.Columns["Open_Level"];
                this.columnSecret_Title = base.Columns["Secret_Title"];
                this.columnBase_HP = base.Columns["Base_HP"];
                this.columnAtk_Physic = base.Columns["Atk_Physic"];
                this.columnAtk_Magic = base.Columns["Atk_Magic"];
                this.columnDef_Physic = base.Columns["Def_Physic"];
                this.columnDef_Magic = base.Columns["Def_Magic"];
                this.columnSocket01 = base.Columns["Socket01"];
                this.columnSocket02 = base.Columns["Socket02"];
                this.columnSocket03 = base.Columns["Socket03"];
                this.columnSocket04 = base.Columns["Socket04"];
                this.columnSocket05 = base.Columns["Socket05"];
                this.columnSocket06 = base.Columns["Socket06"];
                this.columnSocket07 = base.Columns["Socket07"];
                this.columnSocket08 = base.Columns["Socket08"];
                this.columnSocket09 = base.Columns["Socket09"];
                this.columnSocket10 = base.Columns["Socket10"];
                this.columnVisible = base.Columns["Visible"];
                this.columnUserID = base.Columns["UserID"];
                this.columnUserIP = base.Columns["UserIP"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnTitleID = new global::System.Data.DataColumn("TitleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitleID);
                this.columnTitle_Name = new global::System.Data.DataColumn("Title_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle_Name);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnSort_Num = new global::System.Data.DataColumn("Sort_Num", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSort_Num);
                this.columnTitle_Type = new global::System.Data.DataColumn("Title_Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle_Type);
                this.columnTitle_Type_ = new global::System.Data.DataColumn("Title_Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle_Type_);
                this.columnParticle_Name = new global::System.Data.DataColumn("Particle_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParticle_Name);
                this.columnCondition_Unit_Type = new global::System.Data.DataColumn("Condition Unit Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Type);
                this.columnCondition_Unit_Type_ = new global::System.Data.DataColumn("Condition_Unit_Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Type_);
                this.columnCondition_Unit_Class = new global::System.Data.DataColumn("Condition Unit Class", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Class);
                this.columnCondition_Unit_Class_ = new global::System.Data.DataColumn("Condition_Unit_Class_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Class_);
                this.columnOpen_Level = new global::System.Data.DataColumn("Open_Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpen_Level);
                this.columnSecret_Title = new global::System.Data.DataColumn("Secret_Title", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecret_Title);
                this.columnBase_HP = new global::System.Data.DataColumn("Base_HP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBase_HP);
                this.columnAtk_Physic = new global::System.Data.DataColumn("Atk_Physic", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtk_Physic);
                this.columnAtk_Magic = new global::System.Data.DataColumn("Atk_Magic", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtk_Magic);
                this.columnDef_Physic = new global::System.Data.DataColumn("Def_Physic", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDef_Physic);
                this.columnDef_Magic = new global::System.Data.DataColumn("Def_Magic", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDef_Magic);
                this.columnSocket01 = new global::System.Data.DataColumn("Socket01", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket01);
                this.columnSocket02 = new global::System.Data.DataColumn("Socket02", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket02);
                this.columnSocket03 = new global::System.Data.DataColumn("Socket03", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket03);
                this.columnSocket04 = new global::System.Data.DataColumn("Socket04", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket04);
                this.columnSocket05 = new global::System.Data.DataColumn("Socket05", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket05);
                this.columnSocket06 = new global::System.Data.DataColumn("Socket06", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket06);
                this.columnSocket07 = new global::System.Data.DataColumn("Socket07", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket07);
                this.columnSocket08 = new global::System.Data.DataColumn("Socket08", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket08);
                this.columnSocket09 = new global::System.Data.DataColumn("Socket09", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket09);
                this.columnSocket10 = new global::System.Data.DataColumn("Socket10", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocket10);
                this.columnVisible = new global::System.Data.DataColumn("Visible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisible);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserIP = new global::System.Data.DataColumn("UserIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserIP);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.columnIndexKey.AllowDBNull = false;
                this.columnTitleID.AllowDBNull = false;
                this.columnTitle_Name.MaxLength = 150;
                this.columnDescription.MaxLength = 500;
                this.columnTitle_Type_.MaxLength = 150;
                this.columnParticle_Name.MaxLength = 150;
                this.columnCondition_Unit_Type_.MaxLength = 150;
                this.columnCondition_Unit_Class_.MaxLength = 150;
                this.columnUserID.MaxLength = 30;
                this.columnUserIP.MaxLength = 15;
                this.columnRegdate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleTable_HistoryRow NewTitleTable_HistoryRow() {
                return ((TitleTable_HistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TitleTable_HistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TitleTable_HistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TitleTable_HistoryRowChanged != null)) {
                    this.TitleTable_HistoryRowChanged(this, new TitleTable_HistoryRowChangeEvent(((TitleTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TitleTable_HistoryRowChanging != null)) {
                    this.TitleTable_HistoryRowChanging(this, new TitleTable_HistoryRowChangeEvent(((TitleTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TitleTable_HistoryRowDeleted != null)) {
                    this.TitleTable_HistoryRowDeleted(this, new TitleTable_HistoryRowChangeEvent(((TitleTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TitleTable_HistoryRowDeleting != null)) {
                    this.TitleTable_HistoryRowDeleting(this, new TitleTable_HistoryRowChangeEvent(((TitleTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTitleTable_HistoryRow(TitleTable_HistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TitleTable_HistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TitleMissionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMission_Clear_Type;
            
            private global::System.Data.DataColumn columnMission_Clear_Type_;
            
            private global::System.Data.DataColumn columnMission_Name;
            
            private global::System.Data.DataColumn columnCondition_Lv;
            
            private global::System.Data.DataColumn columnCondition_Unit_Type;
            
            private global::System.Data.DataColumn columnCondition_Unit_Type_;
            
            private global::System.Data.DataColumn columnCondition_Unit_Class;
            
            private global::System.Data.DataColumn columnCondition_Unit_Class_;
            
            private global::System.Data.DataColumn columnSubMission_1;
            
            private global::System.Data.DataColumn columnSubMission_2;
            
            private global::System.Data.DataColumn columnSubMission_3;
            
            private global::System.Data.DataColumn columnSubMission_4;
            
            private global::System.Data.DataColumn columnSubMission_5;
            
            private global::System.Data.DataColumn columnPeriod;
            
            private global::System.Data.DataColumn columnReward_Title_ID;
            
            private global::System.Data.DataColumn columnTitle_Name;
            
            private global::System.Data.DataColumn columnCondition_ClearMission_ID;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleMissionDataTable() {
                this.TableName = "TitleMission";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TitleMissionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TitleMissionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mission_Clear_TypeColumn {
                get {
                    return this.columnMission_Clear_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mission_Clear_Type_Column {
                get {
                    return this.columnMission_Clear_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mission_NameColumn {
                get {
                    return this.columnMission_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_LvColumn {
                get {
                    return this.columnCondition_Lv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_TypeColumn {
                get {
                    return this.columnCondition_Unit_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_Type_Column {
                get {
                    return this.columnCondition_Unit_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_ClassColumn {
                get {
                    return this.columnCondition_Unit_Class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_Class_Column {
                get {
                    return this.columnCondition_Unit_Class_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubMission_1Column {
                get {
                    return this.columnSubMission_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubMission_2Column {
                get {
                    return this.columnSubMission_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubMission_3Column {
                get {
                    return this.columnSubMission_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubMission_4Column {
                get {
                    return this.columnSubMission_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubMission_5Column {
                get {
                    return this.columnSubMission_5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodColumn {
                get {
                    return this.columnPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_Title_IDColumn {
                get {
                    return this.columnReward_Title_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Title_NameColumn {
                get {
                    return this.columnTitle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearMission_IDColumn {
                get {
                    return this.columnCondition_ClearMission_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleMissionRow this[int index] {
                get {
                    return ((TitleMissionRow)(this.Rows[index]));
                }
            }
            
            public event TitleMissionRowChangeEventHandler TitleMissionRowChanging;
            
            public event TitleMissionRowChangeEventHandler TitleMissionRowChanged;
            
            public event TitleMissionRowChangeEventHandler TitleMissionRowDeleting;
            
            public event TitleMissionRowChangeEventHandler TitleMissionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTitleMissionRow(TitleMissionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleMissionRow AddTitleMissionRow(
                        int IndexKey, 
                        int ID, 
                        int Mission_Clear_Type, 
                        string Mission_Clear_Type_, 
                        string Mission_Name, 
                        int Condition_Lv, 
                        int Condition_Unit_Type, 
                        string Condition_Unit_Type_, 
                        int Condition_Unit_Class, 
                        string Condition_Unit_Class_, 
                        int SubMission_1, 
                        int SubMission_2, 
                        int SubMission_3, 
                        int SubMission_4, 
                        string SubMission_5, 
                        int Period, 
                        int Reward_Title_ID, 
                        string Title_Name, 
                        int Condition_ClearMission_ID, 
                        System.DateTime Regdate) {
                TitleMissionRow rowTitleMissionRow = ((TitleMissionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        ID,
                        Mission_Clear_Type,
                        Mission_Clear_Type_,
                        Mission_Name,
                        Condition_Lv,
                        Condition_Unit_Type,
                        Condition_Unit_Type_,
                        Condition_Unit_Class,
                        Condition_Unit_Class_,
                        SubMission_1,
                        SubMission_2,
                        SubMission_3,
                        SubMission_4,
                        SubMission_5,
                        Period,
                        Reward_Title_ID,
                        Title_Name,
                        Condition_ClearMission_ID,
                        Regdate};
                rowTitleMissionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTitleMissionRow);
                return rowTitleMissionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleMissionRow FindByIndexKey(int IndexKey) {
                return ((TitleMissionRow)(this.Rows.Find(new object[] {
                            IndexKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TitleMissionDataTable cln = ((TitleMissionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TitleMissionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnID = base.Columns["ID"];
                this.columnMission_Clear_Type = base.Columns["Mission Clear Type"];
                this.columnMission_Clear_Type_ = base.Columns["Mission_Clear_Type_"];
                this.columnMission_Name = base.Columns["Mission_Name"];
                this.columnCondition_Lv = base.Columns["Condition_Lv"];
                this.columnCondition_Unit_Type = base.Columns["Condition Unit Type"];
                this.columnCondition_Unit_Type_ = base.Columns["Condition_Unit_Type_"];
                this.columnCondition_Unit_Class = base.Columns["Condition Unit Class"];
                this.columnCondition_Unit_Class_ = base.Columns["Condition_Unit_Class_"];
                this.columnSubMission_1 = base.Columns["SubMission_1"];
                this.columnSubMission_2 = base.Columns["SubMission_2"];
                this.columnSubMission_3 = base.Columns["SubMission_3"];
                this.columnSubMission_4 = base.Columns["SubMission_4"];
                this.columnSubMission_5 = base.Columns["SubMission_5"];
                this.columnPeriod = base.Columns["Period"];
                this.columnReward_Title_ID = base.Columns["Reward_Title_ID"];
                this.columnTitle_Name = base.Columns["Title Name"];
                this.columnCondition_ClearMission_ID = base.Columns["Condition_ClearMission_ID"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMission_Clear_Type = new global::System.Data.DataColumn("Mission Clear Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMission_Clear_Type);
                this.columnMission_Clear_Type_ = new global::System.Data.DataColumn("Mission_Clear_Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMission_Clear_Type_);
                this.columnMission_Name = new global::System.Data.DataColumn("Mission_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMission_Name);
                this.columnCondition_Lv = new global::System.Data.DataColumn("Condition_Lv", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnCondition_Lv.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Condition_Lv");
                this.columnCondition_Lv.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Condition_LvColumn");
                this.columnCondition_Lv.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnCondition_Lv");
                this.columnCondition_Lv.ExtendedProperties.Add("Generator_UserColumnName", "Condition_Lv");
                base.Columns.Add(this.columnCondition_Lv);
                this.columnCondition_Unit_Type = new global::System.Data.DataColumn("Condition Unit Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Type);
                this.columnCondition_Unit_Type_ = new global::System.Data.DataColumn("Condition_Unit_Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Type_);
                this.columnCondition_Unit_Class = new global::System.Data.DataColumn("Condition Unit Class", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Class);
                this.columnCondition_Unit_Class_ = new global::System.Data.DataColumn("Condition_Unit_Class_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Class_);
                this.columnSubMission_1 = new global::System.Data.DataColumn("SubMission_1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubMission_1);
                this.columnSubMission_2 = new global::System.Data.DataColumn("SubMission_2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubMission_2);
                this.columnSubMission_3 = new global::System.Data.DataColumn("SubMission_3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubMission_3);
                this.columnSubMission_4 = new global::System.Data.DataColumn("SubMission_4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubMission_4);
                this.columnSubMission_5 = new global::System.Data.DataColumn("SubMission_5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubMission_5);
                this.columnPeriod = new global::System.Data.DataColumn("Period", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod);
                this.columnReward_Title_ID = new global::System.Data.DataColumn("Reward_Title_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Title_ID);
                this.columnTitle_Name = new global::System.Data.DataColumn("Title Name", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnTitle_Name.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Title_Name");
                this.columnTitle_Name.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Title_NameColumn");
                this.columnTitle_Name.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnTitle_Name");
                this.columnTitle_Name.ExtendedProperties.Add("Generator_UserColumnName", "Title Name");
                base.Columns.Add(this.columnTitle_Name);
                this.columnCondition_ClearMission_ID = new global::System.Data.DataColumn("Condition_ClearMission_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearMission_ID);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndexKey}, true));
                this.columnIndexKey.AllowDBNull = false;
                this.columnIndexKey.Unique = true;
                this.columnID.AllowDBNull = false;
                this.columnMission_Clear_Type_.MaxLength = 150;
                this.columnMission_Name.MaxLength = 150;
                this.columnCondition_Unit_Type_.MaxLength = 50;
                this.columnCondition_Unit_Class_.MaxLength = 50;
                this.columnSubMission_5.MaxLength = 10;
                this.columnTitle_Name.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleMissionRow NewTitleMissionRow() {
                return ((TitleMissionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TitleMissionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TitleMissionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TitleMissionRowChanged != null)) {
                    this.TitleMissionRowChanged(this, new TitleMissionRowChangeEvent(((TitleMissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TitleMissionRowChanging != null)) {
                    this.TitleMissionRowChanging(this, new TitleMissionRowChangeEvent(((TitleMissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TitleMissionRowDeleted != null)) {
                    this.TitleMissionRowDeleted(this, new TitleMissionRowChangeEvent(((TitleMissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TitleMissionRowDeleting != null)) {
                    this.TitleMissionRowDeleting(this, new TitleMissionRowChangeEvent(((TitleMissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTitleMissionRow(TitleMissionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TitleMissionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TitleMission_HistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMission_Clear_Type;
            
            private global::System.Data.DataColumn columnMission_Clear_Type_;
            
            private global::System.Data.DataColumn columnMission_Name;
            
            private global::System.Data.DataColumn columnCondition_Lv;
            
            private global::System.Data.DataColumn columnCondition_Unit_Type;
            
            private global::System.Data.DataColumn columnCondition_Unit_Type_;
            
            private global::System.Data.DataColumn columnCondition_Unit_Class;
            
            private global::System.Data.DataColumn columnCondition_Unit_Class_;
            
            private global::System.Data.DataColumn columnSubMission_1;
            
            private global::System.Data.DataColumn columnSubMission_2;
            
            private global::System.Data.DataColumn columnSubMission_3;
            
            private global::System.Data.DataColumn columnSubMission_4;
            
            private global::System.Data.DataColumn columnSubMission_5;
            
            private global::System.Data.DataColumn columnPeriod;
            
            private global::System.Data.DataColumn columnReward_Title_ID;
            
            private global::System.Data.DataColumn columnTitle_Name;
            
            private global::System.Data.DataColumn columnCondition_ClearMission_ID;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnUserIP;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleMission_HistoryDataTable() {
                this.TableName = "TitleMission_History";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TitleMission_HistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TitleMission_HistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mission_Clear_TypeColumn {
                get {
                    return this.columnMission_Clear_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mission_Clear_Type_Column {
                get {
                    return this.columnMission_Clear_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mission_NameColumn {
                get {
                    return this.columnMission_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_LvColumn {
                get {
                    return this.columnCondition_Lv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_TypeColumn {
                get {
                    return this.columnCondition_Unit_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_Type_Column {
                get {
                    return this.columnCondition_Unit_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_ClassColumn {
                get {
                    return this.columnCondition_Unit_Class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_Unit_Class_Column {
                get {
                    return this.columnCondition_Unit_Class_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubMission_1Column {
                get {
                    return this.columnSubMission_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubMission_2Column {
                get {
                    return this.columnSubMission_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubMission_3Column {
                get {
                    return this.columnSubMission_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubMission_4Column {
                get {
                    return this.columnSubMission_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubMission_5Column {
                get {
                    return this.columnSubMission_5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodColumn {
                get {
                    return this.columnPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Reward_Title_IDColumn {
                get {
                    return this.columnReward_Title_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Title_NameColumn {
                get {
                    return this.columnTitle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Condition_ClearMission_IDColumn {
                get {
                    return this.columnCondition_ClearMission_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIPColumn {
                get {
                    return this.columnUserIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleMission_HistoryRow this[int index] {
                get {
                    return ((TitleMission_HistoryRow)(this.Rows[index]));
                }
            }
            
            public event TitleMission_HistoryRowChangeEventHandler TitleMission_HistoryRowChanging;
            
            public event TitleMission_HistoryRowChangeEventHandler TitleMission_HistoryRowChanged;
            
            public event TitleMission_HistoryRowChangeEventHandler TitleMission_HistoryRowDeleting;
            
            public event TitleMission_HistoryRowChangeEventHandler TitleMission_HistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTitleMission_HistoryRow(TitleMission_HistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleMission_HistoryRow AddTitleMission_HistoryRow(
                        int IndexKey, 
                        int ID, 
                        int Mission_Clear_Type, 
                        string Mission_Clear_Type_, 
                        string Mission_Name, 
                        int Condition_Lv, 
                        int Condition_Unit_Type, 
                        string Condition_Unit_Type_, 
                        int Condition_Unit_Class, 
                        string Condition_Unit_Class_, 
                        int SubMission_1, 
                        int SubMission_2, 
                        int SubMission_3, 
                        int SubMission_4, 
                        string SubMission_5, 
                        int Period, 
                        int Reward_Title_ID, 
                        string Title_Name, 
                        int Condition_ClearMission_ID, 
                        string UserID, 
                        string UserIP, 
                        System.DateTime Regdate) {
                TitleMission_HistoryRow rowTitleMission_HistoryRow = ((TitleMission_HistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        ID,
                        Mission_Clear_Type,
                        Mission_Clear_Type_,
                        Mission_Name,
                        Condition_Lv,
                        Condition_Unit_Type,
                        Condition_Unit_Type_,
                        Condition_Unit_Class,
                        Condition_Unit_Class_,
                        SubMission_1,
                        SubMission_2,
                        SubMission_3,
                        SubMission_4,
                        SubMission_5,
                        Period,
                        Reward_Title_ID,
                        Title_Name,
                        Condition_ClearMission_ID,
                        UserID,
                        UserIP,
                        Regdate};
                rowTitleMission_HistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTitleMission_HistoryRow);
                return rowTitleMission_HistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TitleMission_HistoryDataTable cln = ((TitleMission_HistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TitleMission_HistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnID = base.Columns["ID"];
                this.columnMission_Clear_Type = base.Columns["Mission Clear Type"];
                this.columnMission_Clear_Type_ = base.Columns["Mission_Clear_Type_"];
                this.columnMission_Name = base.Columns["Mission_Name"];
                this.columnCondition_Lv = base.Columns["Condition_Lv"];
                this.columnCondition_Unit_Type = base.Columns["Condition Unit Type"];
                this.columnCondition_Unit_Type_ = base.Columns["Condition_Unit_Type_"];
                this.columnCondition_Unit_Class = base.Columns["Condition Unit Class"];
                this.columnCondition_Unit_Class_ = base.Columns["Condition_Unit_Class_"];
                this.columnSubMission_1 = base.Columns["SubMission_1"];
                this.columnSubMission_2 = base.Columns["SubMission_2"];
                this.columnSubMission_3 = base.Columns["SubMission_3"];
                this.columnSubMission_4 = base.Columns["SubMission_4"];
                this.columnSubMission_5 = base.Columns["SubMission_5"];
                this.columnPeriod = base.Columns["Period"];
                this.columnReward_Title_ID = base.Columns["Reward_Title_ID"];
                this.columnTitle_Name = base.Columns["Title Name"];
                this.columnCondition_ClearMission_ID = base.Columns["Condition_ClearMission_ID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnUserIP = base.Columns["UserIP"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMission_Clear_Type = new global::System.Data.DataColumn("Mission Clear Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMission_Clear_Type);
                this.columnMission_Clear_Type_ = new global::System.Data.DataColumn("Mission_Clear_Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMission_Clear_Type_);
                this.columnMission_Name = new global::System.Data.DataColumn("Mission_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMission_Name);
                this.columnCondition_Lv = new global::System.Data.DataColumn("Condition_Lv", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnCondition_Lv.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Condition_Lv");
                this.columnCondition_Lv.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Condition_LvColumn");
                this.columnCondition_Lv.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnCondition_Lv");
                this.columnCondition_Lv.ExtendedProperties.Add("Generator_UserColumnName", "Condition_Lv");
                base.Columns.Add(this.columnCondition_Lv);
                this.columnCondition_Unit_Type = new global::System.Data.DataColumn("Condition Unit Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Type);
                this.columnCondition_Unit_Type_ = new global::System.Data.DataColumn("Condition_Unit_Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Type_);
                this.columnCondition_Unit_Class = new global::System.Data.DataColumn("Condition Unit Class", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Class);
                this.columnCondition_Unit_Class_ = new global::System.Data.DataColumn("Condition_Unit_Class_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_Unit_Class_);
                this.columnSubMission_1 = new global::System.Data.DataColumn("SubMission_1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubMission_1);
                this.columnSubMission_2 = new global::System.Data.DataColumn("SubMission_2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubMission_2);
                this.columnSubMission_3 = new global::System.Data.DataColumn("SubMission_3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubMission_3);
                this.columnSubMission_4 = new global::System.Data.DataColumn("SubMission_4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubMission_4);
                this.columnSubMission_5 = new global::System.Data.DataColumn("SubMission_5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubMission_5);
                this.columnPeriod = new global::System.Data.DataColumn("Period", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod);
                this.columnReward_Title_ID = new global::System.Data.DataColumn("Reward_Title_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReward_Title_ID);
                this.columnTitle_Name = new global::System.Data.DataColumn("Title Name", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnTitle_Name.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Title_Name");
                this.columnTitle_Name.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Title_NameColumn");
                this.columnTitle_Name.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnTitle_Name");
                this.columnTitle_Name.ExtendedProperties.Add("Generator_UserColumnName", "Title Name");
                base.Columns.Add(this.columnTitle_Name);
                this.columnCondition_ClearMission_ID = new global::System.Data.DataColumn("Condition_ClearMission_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition_ClearMission_ID);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserIP = new global::System.Data.DataColumn("UserIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserIP);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.columnIndexKey.AllowDBNull = false;
                this.columnID.AllowDBNull = false;
                this.columnMission_Clear_Type_.MaxLength = 150;
                this.columnMission_Name.MaxLength = 150;
                this.columnCondition_Unit_Type_.MaxLength = 50;
                this.columnCondition_Unit_Class_.MaxLength = 50;
                this.columnSubMission_5.MaxLength = 10;
                this.columnTitle_Name.MaxLength = 150;
                this.columnUserID.MaxLength = 30;
                this.columnUserIP.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleMission_HistoryRow NewTitleMission_HistoryRow() {
                return ((TitleMission_HistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TitleMission_HistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TitleMission_HistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TitleMission_HistoryRowChanged != null)) {
                    this.TitleMission_HistoryRowChanged(this, new TitleMission_HistoryRowChangeEvent(((TitleMission_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TitleMission_HistoryRowChanging != null)) {
                    this.TitleMission_HistoryRowChanging(this, new TitleMission_HistoryRowChangeEvent(((TitleMission_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TitleMission_HistoryRowDeleted != null)) {
                    this.TitleMission_HistoryRowDeleted(this, new TitleMission_HistoryRowChangeEvent(((TitleMission_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TitleMission_HistoryRowDeleting != null)) {
                    this.TitleMission_HistoryRowDeleting(this, new TitleMission_HistoryRowChangeEvent(((TitleMission_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTitleMission_HistoryRow(TitleMission_HistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TitleMission_HistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SubTitleMissionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnClear_Type_Idx;
            
            private global::System.Data.DataColumn columnClear_Type_;
            
            private global::System.Data.DataColumn columnNPC_ID;
            
            private global::System.Data.DataColumn columnClear_Condition_Kill_NPC_ID;
            
            private global::System.Data.DataColumn columnClear_Condition_Kill_NPC_Quantity;
            
            private global::System.Data.DataColumn columnClear_Condition_Collection_Item_ID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnClear_Condition_Collection_Item_Quantity;
            
            private global::System.Data.DataColumn columnQuest_Item_Drop_Rate;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Difficulty;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_ID;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Damage;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Rank;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Clear_Time;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_clear_count;
            
            private global::System.Data.DataColumn columnClear_Condition_Talk_NPC_ID;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_TYPE;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_PLAY;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_WIN;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_KILL;
            
            private global::System.Data.DataColumn columnClear_Condition_QUEST;
            
            private global::System.Data.DataColumn columnClear_Condition_COLLECT_TITLE;
            
            private global::System.Data.DataColumn columnClear_Condition_USE_ITEM;
            
            private global::System.Data.DataColumn columnAutomaticDescription;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubTitleMissionDataTable() {
                this.TableName = "SubTitleMission";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SubTitleMissionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SubTitleMissionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Type_IdxColumn {
                get {
                    return this.columnClear_Type_Idx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Type_Column {
                get {
                    return this.columnClear_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NPC_IDColumn {
                get {
                    return this.columnNPC_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Kill_NPC_IDColumn {
                get {
                    return this.columnClear_Condition_Kill_NPC_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Kill_NPC_QuantityColumn {
                get {
                    return this.columnClear_Condition_Kill_NPC_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Collection_Item_IDColumn {
                get {
                    return this.columnClear_Condition_Collection_Item_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Collection_Item_QuantityColumn {
                get {
                    return this.columnClear_Condition_Collection_Item_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Quest_Item_Drop_RateColumn {
                get {
                    return this.columnQuest_Item_Drop_Rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_DifficultyColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Difficulty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_IDColumn {
                get {
                    return this.columnClear_Condition_Dungeon_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_DamageColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Damage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_RankColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_Clear_TimeColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Clear_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_clear_countColumn {
                get {
                    return this.columnClear_Condition_Dungeon_clear_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Talk_NPC_IDColumn {
                get {
                    return this.columnClear_Condition_Talk_NPC_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_TYPEColumn {
                get {
                    return this.columnClear_Condition_PVP_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_PLAYColumn {
                get {
                    return this.columnClear_Condition_PVP_PLAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_WINColumn {
                get {
                    return this.columnClear_Condition_PVP_WIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_KILLColumn {
                get {
                    return this.columnClear_Condition_PVP_KILL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_QUESTColumn {
                get {
                    return this.columnClear_Condition_QUEST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_COLLECT_TITLEColumn {
                get {
                    return this.columnClear_Condition_COLLECT_TITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_USE_ITEMColumn {
                get {
                    return this.columnClear_Condition_USE_ITEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AutomaticDescriptionColumn {
                get {
                    return this.columnAutomaticDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubTitleMissionRow this[int index] {
                get {
                    return ((SubTitleMissionRow)(this.Rows[index]));
                }
            }
            
            public event SubTitleMissionRowChangeEventHandler SubTitleMissionRowChanging;
            
            public event SubTitleMissionRowChangeEventHandler SubTitleMissionRowChanged;
            
            public event SubTitleMissionRowChangeEventHandler SubTitleMissionRowDeleting;
            
            public event SubTitleMissionRowChangeEventHandler SubTitleMissionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSubTitleMissionRow(SubTitleMissionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubTitleMissionRow AddSubTitleMissionRow(
                        int IndexKey, 
                        int ID, 
                        int Clear_Type_Idx, 
                        string Clear_Type_, 
                        int NPC_ID, 
                        string Clear_Condition_Kill_NPC_ID, 
                        int Clear_Condition_Kill_NPC_Quantity, 
                        int Clear_Condition_Collection_Item_ID, 
                        string Name, 
                        int Clear_Condition_Collection_Item_Quantity, 
                        string Quest_Item_Drop_Rate, 
                        string Clear_Condition_Dungeon_Difficulty, 
                        string Clear_Condition_Dungeon_ID, 
                        int Clear_Condition_Dungeon_Damage, 
                        int Clear_Condition_Dungeon_Rank, 
                        int Clear_Condition_Dungeon_Clear_Time, 
                        int Clear_Condition_Dungeon_clear_count, 
                        string Clear_Condition_Talk_NPC_ID, 
                        string Clear_Condition_PVP_TYPE, 
                        int Clear_Condition_PVP_PLAY, 
                        int Clear_Condition_PVP_WIN, 
                        int Clear_Condition_PVP_KILL, 
                        int Clear_Condition_QUEST, 
                        int Clear_Condition_COLLECT_TITLE, 
                        int Clear_Condition_USE_ITEM, 
                        bool AutomaticDescription, 
                        string Description, 
                        System.DateTime Regdate) {
                SubTitleMissionRow rowSubTitleMissionRow = ((SubTitleMissionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        ID,
                        Clear_Type_Idx,
                        Clear_Type_,
                        NPC_ID,
                        Clear_Condition_Kill_NPC_ID,
                        Clear_Condition_Kill_NPC_Quantity,
                        Clear_Condition_Collection_Item_ID,
                        Name,
                        Clear_Condition_Collection_Item_Quantity,
                        Quest_Item_Drop_Rate,
                        Clear_Condition_Dungeon_Difficulty,
                        Clear_Condition_Dungeon_ID,
                        Clear_Condition_Dungeon_Damage,
                        Clear_Condition_Dungeon_Rank,
                        Clear_Condition_Dungeon_Clear_Time,
                        Clear_Condition_Dungeon_clear_count,
                        Clear_Condition_Talk_NPC_ID,
                        Clear_Condition_PVP_TYPE,
                        Clear_Condition_PVP_PLAY,
                        Clear_Condition_PVP_WIN,
                        Clear_Condition_PVP_KILL,
                        Clear_Condition_QUEST,
                        Clear_Condition_COLLECT_TITLE,
                        Clear_Condition_USE_ITEM,
                        AutomaticDescription,
                        Description,
                        Regdate};
                rowSubTitleMissionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSubTitleMissionRow);
                return rowSubTitleMissionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubTitleMissionRow FindByIndexKey(int IndexKey) {
                return ((SubTitleMissionRow)(this.Rows.Find(new object[] {
                            IndexKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SubTitleMissionDataTable cln = ((SubTitleMissionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SubTitleMissionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnID = base.Columns["ID"];
                this.columnClear_Type_Idx = base.Columns["Clear_Type_Idx"];
                this.columnClear_Type_ = base.Columns["Clear_Type_"];
                this.columnNPC_ID = base.Columns["NPC ID"];
                this.columnClear_Condition_Kill_NPC_ID = base.Columns["Clear Condition Kill NPC ID"];
                this.columnClear_Condition_Kill_NPC_Quantity = base.Columns["Clear Condition Kill NPC Quantity"];
                this.columnClear_Condition_Collection_Item_ID = base.Columns["Clear_Condition_Collection_Item_ID"];
                this.columnName = base.Columns["Name"];
                this.columnClear_Condition_Collection_Item_Quantity = base.Columns["Clear_Condition_Collection_Item_Quantity"];
                this.columnQuest_Item_Drop_Rate = base.Columns["Quest_Item_Drop_Rate"];
                this.columnClear_Condition_Dungeon_Difficulty = base.Columns["Clear_Condition_Dungeon_Difficulty"];
                this.columnClear_Condition_Dungeon_ID = base.Columns["Clear_Condition_Dungeon_ID"];
                this.columnClear_Condition_Dungeon_Damage = base.Columns["Clear_Condition_Dungeon_Damage"];
                this.columnClear_Condition_Dungeon_Rank = base.Columns["Clear_Condition_Dungeon_Rank"];
                this.columnClear_Condition_Dungeon_Clear_Time = base.Columns["Clear_Condition_Dungeon_Clear_Time"];
                this.columnClear_Condition_Dungeon_clear_count = base.Columns["Clear_Condition_Dungeon_clear_count"];
                this.columnClear_Condition_Talk_NPC_ID = base.Columns["Clear_Condition_Talk_NPC_ID"];
                this.columnClear_Condition_PVP_TYPE = base.Columns["Clear_Condition_PVP_TYPE"];
                this.columnClear_Condition_PVP_PLAY = base.Columns["Clear_Condition_PVP_PLAY"];
                this.columnClear_Condition_PVP_WIN = base.Columns["Clear_Condition_PVP_WIN"];
                this.columnClear_Condition_PVP_KILL = base.Columns["Clear_Condition_PVP_KILL"];
                this.columnClear_Condition_QUEST = base.Columns["Clear_Condition_QUEST"];
                this.columnClear_Condition_COLLECT_TITLE = base.Columns["Clear_Condition_COLLECT_TITLE"];
                this.columnClear_Condition_USE_ITEM = base.Columns["Clear_Condition_USE_ITEM"];
                this.columnAutomaticDescription = base.Columns["AutomaticDescription"];
                this.columnDescription = base.Columns["Description"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnClear_Type_Idx = new global::System.Data.DataColumn("Clear_Type_Idx", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Type_Idx);
                this.columnClear_Type_ = new global::System.Data.DataColumn("Clear_Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Type_);
                this.columnNPC_ID = new global::System.Data.DataColumn("NPC ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNPC_ID);
                this.columnClear_Condition_Kill_NPC_ID = new global::System.Data.DataColumn("Clear Condition Kill NPC ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Kill_NPC_ID);
                this.columnClear_Condition_Kill_NPC_Quantity = new global::System.Data.DataColumn("Clear Condition Kill NPC Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Kill_NPC_Quantity);
                this.columnClear_Condition_Collection_Item_ID = new global::System.Data.DataColumn("Clear_Condition_Collection_Item_ID", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Collection_Item_ID.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Collection_Item_ID");
                this.columnClear_Condition_Collection_Item_ID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Collection_Item_IDColumn");
                this.columnClear_Condition_Collection_Item_ID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Collection_Item_ID");
                this.columnClear_Condition_Collection_Item_ID.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Collection_Item_ID");
                base.Columns.Add(this.columnClear_Condition_Collection_Item_ID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnClear_Condition_Collection_Item_Quantity = new global::System.Data.DataColumn("Clear_Condition_Collection_Item_Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Collection_Item_Quantity.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Collection_Item_Quantity");
                this.columnClear_Condition_Collection_Item_Quantity.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Collection_Item_QuantityColumn");
                this.columnClear_Condition_Collection_Item_Quantity.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Collection_Item_Quantity");
                this.columnClear_Condition_Collection_Item_Quantity.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Collection_Item_Quantity");
                base.Columns.Add(this.columnClear_Condition_Collection_Item_Quantity);
                this.columnQuest_Item_Drop_Rate = new global::System.Data.DataColumn("Quest_Item_Drop_Rate", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnQuest_Item_Drop_Rate.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Quest_Item_Drop_Rate");
                this.columnQuest_Item_Drop_Rate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Quest_Item_Drop_RateColumn");
                this.columnQuest_Item_Drop_Rate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnQuest_Item_Drop_Rate");
                this.columnQuest_Item_Drop_Rate.ExtendedProperties.Add("Generator_UserColumnName", "Quest_Item_Drop_Rate");
                base.Columns.Add(this.columnQuest_Item_Drop_Rate);
                this.columnClear_Condition_Dungeon_Difficulty = new global::System.Data.DataColumn("Clear_Condition_Dungeon_Difficulty", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Dungeon_Difficulty.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Dungeon_Difficulty");
                this.columnClear_Condition_Dungeon_Difficulty.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Dungeon_DifficultyColumn");
                this.columnClear_Condition_Dungeon_Difficulty.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Dungeon_Difficulty");
                this.columnClear_Condition_Dungeon_Difficulty.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Dungeon_Difficulty");
                base.Columns.Add(this.columnClear_Condition_Dungeon_Difficulty);
                this.columnClear_Condition_Dungeon_ID = new global::System.Data.DataColumn("Clear_Condition_Dungeon_ID", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Dungeon_ID.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Dungeon_ID");
                this.columnClear_Condition_Dungeon_ID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Dungeon_IDColumn");
                this.columnClear_Condition_Dungeon_ID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Dungeon_ID");
                this.columnClear_Condition_Dungeon_ID.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Dungeon_ID");
                base.Columns.Add(this.columnClear_Condition_Dungeon_ID);
                this.columnClear_Condition_Dungeon_Damage = new global::System.Data.DataColumn("Clear_Condition_Dungeon_Damage", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Dungeon_Damage.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Dungeon_Damage");
                this.columnClear_Condition_Dungeon_Damage.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Dungeon_DamageColumn");
                this.columnClear_Condition_Dungeon_Damage.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Dungeon_Damage");
                this.columnClear_Condition_Dungeon_Damage.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Dungeon_Damage");
                base.Columns.Add(this.columnClear_Condition_Dungeon_Damage);
                this.columnClear_Condition_Dungeon_Rank = new global::System.Data.DataColumn("Clear_Condition_Dungeon_Rank", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Dungeon_Rank.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Dungeon_Rank");
                this.columnClear_Condition_Dungeon_Rank.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Dungeon_RankColumn");
                this.columnClear_Condition_Dungeon_Rank.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Dungeon_Rank");
                this.columnClear_Condition_Dungeon_Rank.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Dungeon_Rank");
                base.Columns.Add(this.columnClear_Condition_Dungeon_Rank);
                this.columnClear_Condition_Dungeon_Clear_Time = new global::System.Data.DataColumn("Clear_Condition_Dungeon_Clear_Time", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Dungeon_Clear_Time.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Dungeon_Clear_Time");
                this.columnClear_Condition_Dungeon_Clear_Time.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Dungeon_Clear_TimeColumn");
                this.columnClear_Condition_Dungeon_Clear_Time.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Dungeon_Clear_Time");
                this.columnClear_Condition_Dungeon_Clear_Time.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Dungeon_Clear_Time");
                base.Columns.Add(this.columnClear_Condition_Dungeon_Clear_Time);
                this.columnClear_Condition_Dungeon_clear_count = new global::System.Data.DataColumn("Clear_Condition_Dungeon_clear_count", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Dungeon_clear_count.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Dungeon_clear_count");
                this.columnClear_Condition_Dungeon_clear_count.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Dungeon_clear_countColumn");
                this.columnClear_Condition_Dungeon_clear_count.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Dungeon_clear_count");
                this.columnClear_Condition_Dungeon_clear_count.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Dungeon_clear_count");
                base.Columns.Add(this.columnClear_Condition_Dungeon_clear_count);
                this.columnClear_Condition_Talk_NPC_ID = new global::System.Data.DataColumn("Clear_Condition_Talk_NPC_ID", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Talk_NPC_ID.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Talk_NPC_ID");
                this.columnClear_Condition_Talk_NPC_ID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Talk_NPC_IDColumn");
                this.columnClear_Condition_Talk_NPC_ID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Talk_NPC_ID");
                this.columnClear_Condition_Talk_NPC_ID.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Talk_NPC_ID");
                base.Columns.Add(this.columnClear_Condition_Talk_NPC_ID);
                this.columnClear_Condition_PVP_TYPE = new global::System.Data.DataColumn("Clear_Condition_PVP_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_PVP_TYPE.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_PVP_TYPE");
                this.columnClear_Condition_PVP_TYPE.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_PVP_TYPEColumn");
                this.columnClear_Condition_PVP_TYPE.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_PVP_TYPE");
                this.columnClear_Condition_PVP_TYPE.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_PVP_TYPE");
                base.Columns.Add(this.columnClear_Condition_PVP_TYPE);
                this.columnClear_Condition_PVP_PLAY = new global::System.Data.DataColumn("Clear_Condition_PVP_PLAY", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_PVP_PLAY.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_PVP_PLAY");
                this.columnClear_Condition_PVP_PLAY.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_PVP_PLAYColumn");
                this.columnClear_Condition_PVP_PLAY.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_PVP_PLAY");
                this.columnClear_Condition_PVP_PLAY.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_PVP_PLAY");
                base.Columns.Add(this.columnClear_Condition_PVP_PLAY);
                this.columnClear_Condition_PVP_WIN = new global::System.Data.DataColumn("Clear_Condition_PVP_WIN", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_PVP_WIN.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_PVP_WIN");
                this.columnClear_Condition_PVP_WIN.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_PVP_WINColumn");
                this.columnClear_Condition_PVP_WIN.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_PVP_WIN");
                this.columnClear_Condition_PVP_WIN.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_PVP_WIN");
                base.Columns.Add(this.columnClear_Condition_PVP_WIN);
                this.columnClear_Condition_PVP_KILL = new global::System.Data.DataColumn("Clear_Condition_PVP_KILL", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_PVP_KILL.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_PVP_KILL");
                this.columnClear_Condition_PVP_KILL.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_PVP_KILLColumn");
                this.columnClear_Condition_PVP_KILL.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_PVP_KILL");
                this.columnClear_Condition_PVP_KILL.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_PVP_KILL");
                base.Columns.Add(this.columnClear_Condition_PVP_KILL);
                this.columnClear_Condition_QUEST = new global::System.Data.DataColumn("Clear_Condition_QUEST", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_QUEST);
                this.columnClear_Condition_COLLECT_TITLE = new global::System.Data.DataColumn("Clear_Condition_COLLECT_TITLE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_COLLECT_TITLE);
                this.columnClear_Condition_USE_ITEM = new global::System.Data.DataColumn("Clear_Condition_USE_ITEM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_USE_ITEM);
                this.columnAutomaticDescription = new global::System.Data.DataColumn("AutomaticDescription", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutomaticDescription);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndexKey}, true));
                this.columnIndexKey.AllowDBNull = false;
                this.columnIndexKey.Unique = true;
                this.columnID.AllowDBNull = false;
                this.columnClear_Type_.MaxLength = 255;
                this.columnClear_Condition_Kill_NPC_ID.MaxLength = 100;
                this.columnName.MaxLength = 50;
                this.columnQuest_Item_Drop_Rate.MaxLength = 5;
                this.columnClear_Condition_Dungeon_Difficulty.MaxLength = 30;
                this.columnClear_Condition_Dungeon_ID.MaxLength = 50;
                this.columnClear_Condition_Talk_NPC_ID.MaxLength = 30;
                this.columnClear_Condition_PVP_TYPE.MaxLength = 30;
                this.columnDescription.MaxLength = 255;
                this.columnRegdate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubTitleMissionRow NewSubTitleMissionRow() {
                return ((SubTitleMissionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SubTitleMissionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SubTitleMissionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SubTitleMissionRowChanged != null)) {
                    this.SubTitleMissionRowChanged(this, new SubTitleMissionRowChangeEvent(((SubTitleMissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SubTitleMissionRowChanging != null)) {
                    this.SubTitleMissionRowChanging(this, new SubTitleMissionRowChangeEvent(((SubTitleMissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SubTitleMissionRowDeleted != null)) {
                    this.SubTitleMissionRowDeleted(this, new SubTitleMissionRowChangeEvent(((SubTitleMissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SubTitleMissionRowDeleting != null)) {
                    this.SubTitleMissionRowDeleting(this, new SubTitleMissionRowChangeEvent(((SubTitleMissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSubTitleMissionRow(SubTitleMissionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SubTitleMissionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SubTitleMission_HistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnClear_Type_Idx;
            
            private global::System.Data.DataColumn columnClear_Type_;
            
            private global::System.Data.DataColumn columnNPC_ID;
            
            private global::System.Data.DataColumn columnClear_Condition_Kill_NPC_ID;
            
            private global::System.Data.DataColumn columnClear_Condition_Kill_NPC_Quantity;
            
            private global::System.Data.DataColumn columnClear_Condition_Collection_Item_ID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnClear_Condition_Collection_Item_Quantity;
            
            private global::System.Data.DataColumn columnQuest_Item_Drop_Rate;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Difficulty;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_ID;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Damage;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Rank;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_Clear_Time;
            
            private global::System.Data.DataColumn columnClear_Condition_Dungeon_clear_count;
            
            private global::System.Data.DataColumn columnClear_Condition_Talk_NPC_ID;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_TYPE;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_PLAY;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_WIN;
            
            private global::System.Data.DataColumn columnClear_Condition_PVP_KILL;
            
            private global::System.Data.DataColumn columnClear_Condition_QUEST;
            
            private global::System.Data.DataColumn columnClear_Condition_COLLECT_TITLE;
            
            private global::System.Data.DataColumn columnClear_Condition_USE_ITEM;
            
            private global::System.Data.DataColumn columnAutomaticDescription;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnUserIP;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubTitleMission_HistoryDataTable() {
                this.TableName = "SubTitleMission_History";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SubTitleMission_HistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SubTitleMission_HistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Type_IdxColumn {
                get {
                    return this.columnClear_Type_Idx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Type_Column {
                get {
                    return this.columnClear_Type_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NPC_IDColumn {
                get {
                    return this.columnNPC_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Kill_NPC_IDColumn {
                get {
                    return this.columnClear_Condition_Kill_NPC_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Kill_NPC_QuantityColumn {
                get {
                    return this.columnClear_Condition_Kill_NPC_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Collection_Item_IDColumn {
                get {
                    return this.columnClear_Condition_Collection_Item_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Collection_Item_QuantityColumn {
                get {
                    return this.columnClear_Condition_Collection_Item_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Quest_Item_Drop_RateColumn {
                get {
                    return this.columnQuest_Item_Drop_Rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_DifficultyColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Difficulty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_IDColumn {
                get {
                    return this.columnClear_Condition_Dungeon_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_DamageColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Damage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_RankColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_Clear_TimeColumn {
                get {
                    return this.columnClear_Condition_Dungeon_Clear_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Dungeon_clear_countColumn {
                get {
                    return this.columnClear_Condition_Dungeon_clear_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_Talk_NPC_IDColumn {
                get {
                    return this.columnClear_Condition_Talk_NPC_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_TYPEColumn {
                get {
                    return this.columnClear_Condition_PVP_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_PLAYColumn {
                get {
                    return this.columnClear_Condition_PVP_PLAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_WINColumn {
                get {
                    return this.columnClear_Condition_PVP_WIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_PVP_KILLColumn {
                get {
                    return this.columnClear_Condition_PVP_KILL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_QUESTColumn {
                get {
                    return this.columnClear_Condition_QUEST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_COLLECT_TITLEColumn {
                get {
                    return this.columnClear_Condition_COLLECT_TITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Clear_Condition_USE_ITEMColumn {
                get {
                    return this.columnClear_Condition_USE_ITEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AutomaticDescriptionColumn {
                get {
                    return this.columnAutomaticDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIPColumn {
                get {
                    return this.columnUserIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubTitleMission_HistoryRow this[int index] {
                get {
                    return ((SubTitleMission_HistoryRow)(this.Rows[index]));
                }
            }
            
            public event SubTitleMission_HistoryRowChangeEventHandler SubTitleMission_HistoryRowChanging;
            
            public event SubTitleMission_HistoryRowChangeEventHandler SubTitleMission_HistoryRowChanged;
            
            public event SubTitleMission_HistoryRowChangeEventHandler SubTitleMission_HistoryRowDeleting;
            
            public event SubTitleMission_HistoryRowChangeEventHandler SubTitleMission_HistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSubTitleMission_HistoryRow(SubTitleMission_HistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubTitleMission_HistoryRow AddSubTitleMission_HistoryRow(
                        int IndexKey, 
                        int ID, 
                        int Clear_Type_Idx, 
                        string Clear_Type_, 
                        int NPC_ID, 
                        string Clear_Condition_Kill_NPC_ID, 
                        int Clear_Condition_Kill_NPC_Quantity, 
                        int Clear_Condition_Collection_Item_ID, 
                        string Name, 
                        int Clear_Condition_Collection_Item_Quantity, 
                        string Quest_Item_Drop_Rate, 
                        string Clear_Condition_Dungeon_Difficulty, 
                        string Clear_Condition_Dungeon_ID, 
                        int Clear_Condition_Dungeon_Damage, 
                        int Clear_Condition_Dungeon_Rank, 
                        int Clear_Condition_Dungeon_Clear_Time, 
                        int Clear_Condition_Dungeon_clear_count, 
                        string Clear_Condition_Talk_NPC_ID, 
                        string Clear_Condition_PVP_TYPE, 
                        int Clear_Condition_PVP_PLAY, 
                        int Clear_Condition_PVP_WIN, 
                        int Clear_Condition_PVP_KILL, 
                        int Clear_Condition_QUEST, 
                        int Clear_Condition_COLLECT_TITLE, 
                        int Clear_Condition_USE_ITEM, 
                        bool AutomaticDescription, 
                        string Description, 
                        string UserID, 
                        string UserIP, 
                        System.DateTime Regdate) {
                SubTitleMission_HistoryRow rowSubTitleMission_HistoryRow = ((SubTitleMission_HistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        ID,
                        Clear_Type_Idx,
                        Clear_Type_,
                        NPC_ID,
                        Clear_Condition_Kill_NPC_ID,
                        Clear_Condition_Kill_NPC_Quantity,
                        Clear_Condition_Collection_Item_ID,
                        Name,
                        Clear_Condition_Collection_Item_Quantity,
                        Quest_Item_Drop_Rate,
                        Clear_Condition_Dungeon_Difficulty,
                        Clear_Condition_Dungeon_ID,
                        Clear_Condition_Dungeon_Damage,
                        Clear_Condition_Dungeon_Rank,
                        Clear_Condition_Dungeon_Clear_Time,
                        Clear_Condition_Dungeon_clear_count,
                        Clear_Condition_Talk_NPC_ID,
                        Clear_Condition_PVP_TYPE,
                        Clear_Condition_PVP_PLAY,
                        Clear_Condition_PVP_WIN,
                        Clear_Condition_PVP_KILL,
                        Clear_Condition_QUEST,
                        Clear_Condition_COLLECT_TITLE,
                        Clear_Condition_USE_ITEM,
                        AutomaticDescription,
                        Description,
                        UserID,
                        UserIP,
                        Regdate};
                rowSubTitleMission_HistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSubTitleMission_HistoryRow);
                return rowSubTitleMission_HistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SubTitleMission_HistoryDataTable cln = ((SubTitleMission_HistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SubTitleMission_HistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnID = base.Columns["ID"];
                this.columnClear_Type_Idx = base.Columns["Clear_Type_Idx"];
                this.columnClear_Type_ = base.Columns["Clear_Type_"];
                this.columnNPC_ID = base.Columns["NPC ID"];
                this.columnClear_Condition_Kill_NPC_ID = base.Columns["Clear Condition Kill NPC ID"];
                this.columnClear_Condition_Kill_NPC_Quantity = base.Columns["Clear Condition Kill NPC Quantity"];
                this.columnClear_Condition_Collection_Item_ID = base.Columns["Clear_Condition_Collection_Item_ID"];
                this.columnName = base.Columns["Name"];
                this.columnClear_Condition_Collection_Item_Quantity = base.Columns["Clear_Condition_Collection_Item_Quantity"];
                this.columnQuest_Item_Drop_Rate = base.Columns["Quest_Item_Drop_Rate"];
                this.columnClear_Condition_Dungeon_Difficulty = base.Columns["Clear_Condition_Dungeon_Difficulty"];
                this.columnClear_Condition_Dungeon_ID = base.Columns["Clear_Condition_Dungeon_ID"];
                this.columnClear_Condition_Dungeon_Damage = base.Columns["Clear_Condition_Dungeon_Damage"];
                this.columnClear_Condition_Dungeon_Rank = base.Columns["Clear_Condition_Dungeon_Rank"];
                this.columnClear_Condition_Dungeon_Clear_Time = base.Columns["Clear_Condition_Dungeon_Clear_Time"];
                this.columnClear_Condition_Dungeon_clear_count = base.Columns["Clear_Condition_Dungeon_clear_count"];
                this.columnClear_Condition_Talk_NPC_ID = base.Columns["Clear_Condition_Talk_NPC_ID"];
                this.columnClear_Condition_PVP_TYPE = base.Columns["Clear_Condition_PVP_TYPE"];
                this.columnClear_Condition_PVP_PLAY = base.Columns["Clear_Condition_PVP_PLAY"];
                this.columnClear_Condition_PVP_WIN = base.Columns["Clear_Condition_PVP_WIN"];
                this.columnClear_Condition_PVP_KILL = base.Columns["Clear_Condition_PVP_KILL"];
                this.columnClear_Condition_QUEST = base.Columns["Clear_Condition_QUEST"];
                this.columnClear_Condition_COLLECT_TITLE = base.Columns["Clear_Condition_COLLECT_TITLE"];
                this.columnClear_Condition_USE_ITEM = base.Columns["Clear_Condition_USE_ITEM"];
                this.columnAutomaticDescription = base.Columns["AutomaticDescription"];
                this.columnDescription = base.Columns["Description"];
                this.columnUserID = base.Columns["UserID"];
                this.columnUserIP = base.Columns["UserIP"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnClear_Type_Idx = new global::System.Data.DataColumn("Clear_Type_Idx", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Type_Idx);
                this.columnClear_Type_ = new global::System.Data.DataColumn("Clear_Type_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Type_);
                this.columnNPC_ID = new global::System.Data.DataColumn("NPC ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNPC_ID);
                this.columnClear_Condition_Kill_NPC_ID = new global::System.Data.DataColumn("Clear Condition Kill NPC ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Kill_NPC_ID);
                this.columnClear_Condition_Kill_NPC_Quantity = new global::System.Data.DataColumn("Clear Condition Kill NPC Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_Kill_NPC_Quantity);
                this.columnClear_Condition_Collection_Item_ID = new global::System.Data.DataColumn("Clear_Condition_Collection_Item_ID", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Collection_Item_ID.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Collection_Item_ID");
                this.columnClear_Condition_Collection_Item_ID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Collection_Item_IDColumn");
                this.columnClear_Condition_Collection_Item_ID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Collection_Item_ID");
                this.columnClear_Condition_Collection_Item_ID.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Collection_Item_ID");
                base.Columns.Add(this.columnClear_Condition_Collection_Item_ID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnClear_Condition_Collection_Item_Quantity = new global::System.Data.DataColumn("Clear_Condition_Collection_Item_Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Collection_Item_Quantity.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Collection_Item_Quantity");
                this.columnClear_Condition_Collection_Item_Quantity.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Collection_Item_QuantityColumn");
                this.columnClear_Condition_Collection_Item_Quantity.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Collection_Item_Quantity");
                this.columnClear_Condition_Collection_Item_Quantity.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Collection_Item_Quantity");
                base.Columns.Add(this.columnClear_Condition_Collection_Item_Quantity);
                this.columnQuest_Item_Drop_Rate = new global::System.Data.DataColumn("Quest_Item_Drop_Rate", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnQuest_Item_Drop_Rate.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Quest_Item_Drop_Rate");
                this.columnQuest_Item_Drop_Rate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Quest_Item_Drop_RateColumn");
                this.columnQuest_Item_Drop_Rate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnQuest_Item_Drop_Rate");
                this.columnQuest_Item_Drop_Rate.ExtendedProperties.Add("Generator_UserColumnName", "Quest_Item_Drop_Rate");
                base.Columns.Add(this.columnQuest_Item_Drop_Rate);
                this.columnClear_Condition_Dungeon_Difficulty = new global::System.Data.DataColumn("Clear_Condition_Dungeon_Difficulty", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Dungeon_Difficulty.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Dungeon_Difficulty");
                this.columnClear_Condition_Dungeon_Difficulty.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Dungeon_DifficultyColumn");
                this.columnClear_Condition_Dungeon_Difficulty.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Dungeon_Difficulty");
                this.columnClear_Condition_Dungeon_Difficulty.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Dungeon_Difficulty");
                base.Columns.Add(this.columnClear_Condition_Dungeon_Difficulty);
                this.columnClear_Condition_Dungeon_ID = new global::System.Data.DataColumn("Clear_Condition_Dungeon_ID", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Dungeon_ID.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Dungeon_ID");
                this.columnClear_Condition_Dungeon_ID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Dungeon_IDColumn");
                this.columnClear_Condition_Dungeon_ID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Dungeon_ID");
                this.columnClear_Condition_Dungeon_ID.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Dungeon_ID");
                base.Columns.Add(this.columnClear_Condition_Dungeon_ID);
                this.columnClear_Condition_Dungeon_Damage = new global::System.Data.DataColumn("Clear_Condition_Dungeon_Damage", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Dungeon_Damage.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Dungeon_Damage");
                this.columnClear_Condition_Dungeon_Damage.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Dungeon_DamageColumn");
                this.columnClear_Condition_Dungeon_Damage.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Dungeon_Damage");
                this.columnClear_Condition_Dungeon_Damage.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Dungeon_Damage");
                base.Columns.Add(this.columnClear_Condition_Dungeon_Damage);
                this.columnClear_Condition_Dungeon_Rank = new global::System.Data.DataColumn("Clear_Condition_Dungeon_Rank", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Dungeon_Rank.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Dungeon_Rank");
                this.columnClear_Condition_Dungeon_Rank.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Dungeon_RankColumn");
                this.columnClear_Condition_Dungeon_Rank.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Dungeon_Rank");
                this.columnClear_Condition_Dungeon_Rank.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Dungeon_Rank");
                base.Columns.Add(this.columnClear_Condition_Dungeon_Rank);
                this.columnClear_Condition_Dungeon_Clear_Time = new global::System.Data.DataColumn("Clear_Condition_Dungeon_Clear_Time", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Dungeon_Clear_Time.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Dungeon_Clear_Time");
                this.columnClear_Condition_Dungeon_Clear_Time.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Dungeon_Clear_TimeColumn");
                this.columnClear_Condition_Dungeon_Clear_Time.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Dungeon_Clear_Time");
                this.columnClear_Condition_Dungeon_Clear_Time.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Dungeon_Clear_Time");
                base.Columns.Add(this.columnClear_Condition_Dungeon_Clear_Time);
                this.columnClear_Condition_Dungeon_clear_count = new global::System.Data.DataColumn("Clear_Condition_Dungeon_clear_count", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Dungeon_clear_count.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Dungeon_clear_count");
                this.columnClear_Condition_Dungeon_clear_count.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Dungeon_clear_countColumn");
                this.columnClear_Condition_Dungeon_clear_count.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Dungeon_clear_count");
                this.columnClear_Condition_Dungeon_clear_count.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Dungeon_clear_count");
                base.Columns.Add(this.columnClear_Condition_Dungeon_clear_count);
                this.columnClear_Condition_Talk_NPC_ID = new global::System.Data.DataColumn("Clear_Condition_Talk_NPC_ID", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_Talk_NPC_ID.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_Talk_NPC_ID");
                this.columnClear_Condition_Talk_NPC_ID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_Talk_NPC_IDColumn");
                this.columnClear_Condition_Talk_NPC_ID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_Talk_NPC_ID");
                this.columnClear_Condition_Talk_NPC_ID.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_Talk_NPC_ID");
                base.Columns.Add(this.columnClear_Condition_Talk_NPC_ID);
                this.columnClear_Condition_PVP_TYPE = new global::System.Data.DataColumn("Clear_Condition_PVP_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_PVP_TYPE.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_PVP_TYPE");
                this.columnClear_Condition_PVP_TYPE.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_PVP_TYPEColumn");
                this.columnClear_Condition_PVP_TYPE.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_PVP_TYPE");
                this.columnClear_Condition_PVP_TYPE.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_PVP_TYPE");
                base.Columns.Add(this.columnClear_Condition_PVP_TYPE);
                this.columnClear_Condition_PVP_PLAY = new global::System.Data.DataColumn("Clear_Condition_PVP_PLAY", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_PVP_PLAY.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_PVP_PLAY");
                this.columnClear_Condition_PVP_PLAY.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_PVP_PLAYColumn");
                this.columnClear_Condition_PVP_PLAY.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_PVP_PLAY");
                this.columnClear_Condition_PVP_PLAY.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_PVP_PLAY");
                base.Columns.Add(this.columnClear_Condition_PVP_PLAY);
                this.columnClear_Condition_PVP_WIN = new global::System.Data.DataColumn("Clear_Condition_PVP_WIN", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_PVP_WIN.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_PVP_WIN");
                this.columnClear_Condition_PVP_WIN.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_PVP_WINColumn");
                this.columnClear_Condition_PVP_WIN.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_PVP_WIN");
                this.columnClear_Condition_PVP_WIN.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_PVP_WIN");
                base.Columns.Add(this.columnClear_Condition_PVP_WIN);
                this.columnClear_Condition_PVP_KILL = new global::System.Data.DataColumn("Clear_Condition_PVP_KILL", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnClear_Condition_PVP_KILL.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Clear_Condition_PVP_KILL");
                this.columnClear_Condition_PVP_KILL.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Clear_Condition_PVP_KILLColumn");
                this.columnClear_Condition_PVP_KILL.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnClear_Condition_PVP_KILL");
                this.columnClear_Condition_PVP_KILL.ExtendedProperties.Add("Generator_UserColumnName", "Clear_Condition_PVP_KILL");
                base.Columns.Add(this.columnClear_Condition_PVP_KILL);
                this.columnClear_Condition_QUEST = new global::System.Data.DataColumn("Clear_Condition_QUEST", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_QUEST);
                this.columnClear_Condition_COLLECT_TITLE = new global::System.Data.DataColumn("Clear_Condition_COLLECT_TITLE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_COLLECT_TITLE);
                this.columnClear_Condition_USE_ITEM = new global::System.Data.DataColumn("Clear_Condition_USE_ITEM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Condition_USE_ITEM);
                this.columnAutomaticDescription = new global::System.Data.DataColumn("AutomaticDescription", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutomaticDescription);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserIP = new global::System.Data.DataColumn("UserIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserIP);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.columnIndexKey.AllowDBNull = false;
                this.columnID.AllowDBNull = false;
                this.columnClear_Type_.MaxLength = 255;
                this.columnClear_Condition_Kill_NPC_ID.MaxLength = 100;
                this.columnName.MaxLength = 50;
                this.columnQuest_Item_Drop_Rate.MaxLength = 5;
                this.columnClear_Condition_Dungeon_Difficulty.MaxLength = 30;
                this.columnClear_Condition_Dungeon_ID.MaxLength = 50;
                this.columnClear_Condition_Talk_NPC_ID.MaxLength = 30;
                this.columnClear_Condition_PVP_TYPE.MaxLength = 30;
                this.columnDescription.MaxLength = 255;
                this.columnUserID.MaxLength = 30;
                this.columnUserIP.MaxLength = 15;
                this.columnRegdate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubTitleMission_HistoryRow NewSubTitleMission_HistoryRow() {
                return ((SubTitleMission_HistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SubTitleMission_HistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SubTitleMission_HistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SubTitleMission_HistoryRowChanged != null)) {
                    this.SubTitleMission_HistoryRowChanged(this, new SubTitleMission_HistoryRowChangeEvent(((SubTitleMission_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SubTitleMission_HistoryRowChanging != null)) {
                    this.SubTitleMission_HistoryRowChanging(this, new SubTitleMission_HistoryRowChangeEvent(((SubTitleMission_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SubTitleMission_HistoryRowDeleted != null)) {
                    this.SubTitleMission_HistoryRowDeleted(this, new SubTitleMission_HistoryRowChangeEvent(((SubTitleMission_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SubTitleMission_HistoryRowDeleting != null)) {
                    this.SubTitleMission_HistoryRowDeleting(this, new SubTitleMission_HistoryRowChangeEvent(((SubTitleMission_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSubTitleMission_HistoryRow(SubTitleMission_HistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SubTitleMission_HistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StringTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnENum;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnString;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StringTableDataTable() {
                this.TableName = "StringTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StringTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StringTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENumColumn {
                get {
                    return this.columnENum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StringColumn {
                get {
                    return this.columnString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StringTableRow this[int index] {
                get {
                    return ((StringTableRow)(this.Rows[index]));
                }
            }
            
            public event StringTableRowChangeEventHandler StringTableRowChanging;
            
            public event StringTableRowChangeEventHandler StringTableRowChanged;
            
            public event StringTableRowChangeEventHandler StringTableRowDeleting;
            
            public event StringTableRowChangeEventHandler StringTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStringTableRow(StringTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StringTableRow AddStringTableRow(short ID, string ENum, string Type, string String, System.DateTime Regdate) {
                StringTableRow rowStringTableRow = ((StringTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        ENum,
                        Type,
                        String,
                        Regdate};
                rowStringTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStringTableRow);
                return rowStringTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StringTableRow FindByID(short ID) {
                return ((StringTableRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StringTableDataTable cln = ((StringTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StringTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnENum = base.Columns["ENum"];
                this.columnType = base.Columns["Type"];
                this.columnString = base.Columns["String"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnENum = new global::System.Data.DataColumn("ENum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENum);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnString = new global::System.Data.DataColumn("String", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnENum.MaxLength = 100;
                this.columnType.MaxLength = 100;
                this.columnString.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StringTableRow NewStringTableRow() {
                return ((StringTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StringTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StringTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StringTableRowChanged != null)) {
                    this.StringTableRowChanged(this, new StringTableRowChangeEvent(((StringTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StringTableRowChanging != null)) {
                    this.StringTableRowChanging(this, new StringTableRowChangeEvent(((StringTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StringTableRowDeleted != null)) {
                    this.StringTableRowDeleted(this, new StringTableRowChangeEvent(((StringTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StringTableRowDeleting != null)) {
                    this.StringTableRowDeleting(this, new StringTableRowChangeEvent(((StringTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStringTableRow(StringTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StringTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StringTable_HistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnENum;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnString;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnUserIP;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StringTable_HistoryDataTable() {
                this.TableName = "StringTable_History";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StringTable_HistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StringTable_HistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENumColumn {
                get {
                    return this.columnENum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StringColumn {
                get {
                    return this.columnString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIPColumn {
                get {
                    return this.columnUserIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StringTable_HistoryRow this[int index] {
                get {
                    return ((StringTable_HistoryRow)(this.Rows[index]));
                }
            }
            
            public event StringTable_HistoryRowChangeEventHandler StringTable_HistoryRowChanging;
            
            public event StringTable_HistoryRowChangeEventHandler StringTable_HistoryRowChanged;
            
            public event StringTable_HistoryRowChangeEventHandler StringTable_HistoryRowDeleting;
            
            public event StringTable_HistoryRowChangeEventHandler StringTable_HistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStringTable_HistoryRow(StringTable_HistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StringTable_HistoryRow AddStringTable_HistoryRow(short ID, string ENum, string Type, string String, string UserID, string UserIP, System.DateTime Regdate) {
                StringTable_HistoryRow rowStringTable_HistoryRow = ((StringTable_HistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        ENum,
                        Type,
                        String,
                        UserID,
                        UserIP,
                        Regdate};
                rowStringTable_HistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStringTable_HistoryRow);
                return rowStringTable_HistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StringTable_HistoryDataTable cln = ((StringTable_HistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StringTable_HistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnENum = base.Columns["ENum"];
                this.columnType = base.Columns["Type"];
                this.columnString = base.Columns["String"];
                this.columnUserID = base.Columns["UserID"];
                this.columnUserIP = base.Columns["UserIP"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnENum = new global::System.Data.DataColumn("ENum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENum);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnString = new global::System.Data.DataColumn("String", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserIP = new global::System.Data.DataColumn("UserIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserIP);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.columnID.AllowDBNull = false;
                this.columnENum.MaxLength = 100;
                this.columnType.MaxLength = 100;
                this.columnString.MaxLength = 1000;
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.MaxLength = 30;
                this.columnUserIP.AllowDBNull = false;
                this.columnUserIP.MaxLength = 15;
                this.columnRegdate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StringTable_HistoryRow NewStringTable_HistoryRow() {
                return ((StringTable_HistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StringTable_HistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StringTable_HistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StringTable_HistoryRowChanged != null)) {
                    this.StringTable_HistoryRowChanged(this, new StringTable_HistoryRowChangeEvent(((StringTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StringTable_HistoryRowChanging != null)) {
                    this.StringTable_HistoryRowChanging(this, new StringTable_HistoryRowChangeEvent(((StringTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StringTable_HistoryRowDeleted != null)) {
                    this.StringTable_HistoryRowDeleted(this, new StringTable_HistoryRowChangeEvent(((StringTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StringTable_HistoryRowDeleting != null)) {
                    this.StringTable_HistoryRowDeleting(this, new StringTable_HistoryRowChangeEvent(((StringTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStringTable_HistoryRow(StringTable_HistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StringTable_HistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NetErrorTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnEnum;
            
            private global::System.Data.DataColumn columnString;
            
            private global::System.Data.DataColumn columnPreProcessor;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NetErrorTableDataTable() {
                this.TableName = "NetErrorTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NetErrorTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NetErrorTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnumColumn {
                get {
                    return this.columnEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StringColumn {
                get {
                    return this.columnString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreProcessorColumn {
                get {
                    return this.columnPreProcessor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NetErrorTableRow this[int index] {
                get {
                    return ((NetErrorTableRow)(this.Rows[index]));
                }
            }
            
            public event NetErrorTableRowChangeEventHandler NetErrorTableRowChanging;
            
            public event NetErrorTableRowChangeEventHandler NetErrorTableRowChanged;
            
            public event NetErrorTableRowChangeEventHandler NetErrorTableRowDeleting;
            
            public event NetErrorTableRowChangeEventHandler NetErrorTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNetErrorTableRow(NetErrorTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NetErrorTableRow AddNetErrorTableRow(string Enum, string String, string PreProcessor, System.DateTime Regdate) {
                NetErrorTableRow rowNetErrorTableRow = ((NetErrorTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Enum,
                        String,
                        PreProcessor,
                        Regdate};
                rowNetErrorTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNetErrorTableRow);
                return rowNetErrorTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NetErrorTableRow FindByID(int ID) {
                return ((NetErrorTableRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                NetErrorTableDataTable cln = ((NetErrorTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NetErrorTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnEnum = base.Columns["Enum"];
                this.columnString = base.Columns["String"];
                this.columnPreProcessor = base.Columns["PreProcessor"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnEnum = new global::System.Data.DataColumn("Enum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnum);
                this.columnString = new global::System.Data.DataColumn("String", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString);
                this.columnPreProcessor = new global::System.Data.DataColumn("PreProcessor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreProcessor);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnEnum.MaxLength = 100;
                this.columnString.MaxLength = 500;
                this.columnPreProcessor.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NetErrorTableRow NewNetErrorTableRow() {
                return ((NetErrorTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NetErrorTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(NetErrorTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NetErrorTableRowChanged != null)) {
                    this.NetErrorTableRowChanged(this, new NetErrorTableRowChangeEvent(((NetErrorTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NetErrorTableRowChanging != null)) {
                    this.NetErrorTableRowChanging(this, new NetErrorTableRowChangeEvent(((NetErrorTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NetErrorTableRowDeleted != null)) {
                    this.NetErrorTableRowDeleted(this, new NetErrorTableRowChangeEvent(((NetErrorTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NetErrorTableRowDeleting != null)) {
                    this.NetErrorTableRowDeleting(this, new NetErrorTableRowChangeEvent(((NetErrorTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNetErrorTableRow(NetErrorTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NetErrorTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NetErrorTable_HistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnEnum;
            
            private global::System.Data.DataColumn columnString;
            
            private global::System.Data.DataColumn columnPreProcessor;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnUserIP;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NetErrorTable_HistoryDataTable() {
                this.TableName = "NetErrorTable_History";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NetErrorTable_HistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NetErrorTable_HistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnumColumn {
                get {
                    return this.columnEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StringColumn {
                get {
                    return this.columnString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreProcessorColumn {
                get {
                    return this.columnPreProcessor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIPColumn {
                get {
                    return this.columnUserIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NetErrorTable_HistoryRow this[int index] {
                get {
                    return ((NetErrorTable_HistoryRow)(this.Rows[index]));
                }
            }
            
            public event NetErrorTable_HistoryRowChangeEventHandler NetErrorTable_HistoryRowChanging;
            
            public event NetErrorTable_HistoryRowChangeEventHandler NetErrorTable_HistoryRowChanged;
            
            public event NetErrorTable_HistoryRowChangeEventHandler NetErrorTable_HistoryRowDeleting;
            
            public event NetErrorTable_HistoryRowChangeEventHandler NetErrorTable_HistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNetErrorTable_HistoryRow(NetErrorTable_HistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NetErrorTable_HistoryRow AddNetErrorTable_HistoryRow(int ID, string Enum, string String, string PreProcessor, string UserID, string UserIP, System.DateTime Regdate) {
                NetErrorTable_HistoryRow rowNetErrorTable_HistoryRow = ((NetErrorTable_HistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        Enum,
                        String,
                        PreProcessor,
                        UserID,
                        UserIP,
                        Regdate};
                rowNetErrorTable_HistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNetErrorTable_HistoryRow);
                return rowNetErrorTable_HistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                NetErrorTable_HistoryDataTable cln = ((NetErrorTable_HistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NetErrorTable_HistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnEnum = base.Columns["Enum"];
                this.columnString = base.Columns["String"];
                this.columnPreProcessor = base.Columns["PreProcessor"];
                this.columnUserID = base.Columns["UserID"];
                this.columnUserIP = base.Columns["UserIP"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnEnum = new global::System.Data.DataColumn("Enum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnum);
                this.columnString = new global::System.Data.DataColumn("String", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString);
                this.columnPreProcessor = new global::System.Data.DataColumn("PreProcessor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreProcessor);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserIP = new global::System.Data.DataColumn("UserIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserIP);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.columnID.AllowDBNull = false;
                this.columnEnum.MaxLength = 100;
                this.columnString.MaxLength = 500;
                this.columnPreProcessor.MaxLength = 100;
                this.columnUserID.MaxLength = 30;
                this.columnUserIP.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NetErrorTable_HistoryRow NewNetErrorTable_HistoryRow() {
                return ((NetErrorTable_HistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NetErrorTable_HistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(NetErrorTable_HistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NetErrorTable_HistoryRowChanged != null)) {
                    this.NetErrorTable_HistoryRowChanged(this, new NetErrorTable_HistoryRowChangeEvent(((NetErrorTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NetErrorTable_HistoryRowChanging != null)) {
                    this.NetErrorTable_HistoryRowChanging(this, new NetErrorTable_HistoryRowChangeEvent(((NetErrorTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NetErrorTable_HistoryRowDeleted != null)) {
                    this.NetErrorTable_HistoryRowDeleted(this, new NetErrorTable_HistoryRowChangeEvent(((NetErrorTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NetErrorTable_HistoryRowDeleting != null)) {
                    this.NetErrorTable_HistoryRowDeleting(this, new NetErrorTable_HistoryRowChangeEvent(((NetErrorTable_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNetErrorTable_HistoryRow(NetErrorTable_HistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NetErrorTable_HistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TextureStringManagerDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTextureIDX;
            
            private global::System.Data.DataColumn columnFilePath;
            
            private global::System.Data.DataColumn columnString;
            
            private global::System.Data.DataColumn columnIsChange;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TextureStringManagerDataTable() {
                this.TableName = "TextureStringManager";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TextureStringManagerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TextureStringManagerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextureIDXColumn {
                get {
                    return this.columnTextureIDX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilePathColumn {
                get {
                    return this.columnFilePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StringColumn {
                get {
                    return this.columnString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsChangeColumn {
                get {
                    return this.columnIsChange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TextureStringManagerRow this[int index] {
                get {
                    return ((TextureStringManagerRow)(this.Rows[index]));
                }
            }
            
            public event TextureStringManagerRowChangeEventHandler TextureStringManagerRowChanging;
            
            public event TextureStringManagerRowChangeEventHandler TextureStringManagerRowChanged;
            
            public event TextureStringManagerRowChangeEventHandler TextureStringManagerRowDeleting;
            
            public event TextureStringManagerRowChangeEventHandler TextureStringManagerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTextureStringManagerRow(TextureStringManagerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TextureStringManagerRow AddTextureStringManagerRow(string FilePath, string String, bool IsChange, System.DateTime Regdate) {
                TextureStringManagerRow rowTextureStringManagerRow = ((TextureStringManagerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FilePath,
                        String,
                        IsChange,
                        Regdate};
                rowTextureStringManagerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTextureStringManagerRow);
                return rowTextureStringManagerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TextureStringManagerRow FindByTextureIDX(int TextureIDX) {
                return ((TextureStringManagerRow)(this.Rows.Find(new object[] {
                            TextureIDX})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TextureStringManagerDataTable cln = ((TextureStringManagerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TextureStringManagerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTextureIDX = base.Columns["TextureIDX"];
                this.columnFilePath = base.Columns["FilePath"];
                this.columnString = base.Columns["String"];
                this.columnIsChange = base.Columns["IsChange"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTextureIDX = new global::System.Data.DataColumn("TextureIDX", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextureIDX);
                this.columnFilePath = new global::System.Data.DataColumn("FilePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilePath);
                this.columnString = new global::System.Data.DataColumn("String", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString);
                this.columnIsChange = new global::System.Data.DataColumn("IsChange", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsChange);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTextureIDX}, true));
                this.columnTextureIDX.AutoIncrement = true;
                this.columnTextureIDX.AllowDBNull = false;
                this.columnTextureIDX.ReadOnly = true;
                this.columnTextureIDX.Unique = true;
                this.columnFilePath.MaxLength = 150;
                this.columnString.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TextureStringManagerRow NewTextureStringManagerRow() {
                return ((TextureStringManagerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TextureStringManagerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TextureStringManagerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TextureStringManagerRowChanged != null)) {
                    this.TextureStringManagerRowChanged(this, new TextureStringManagerRowChangeEvent(((TextureStringManagerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TextureStringManagerRowChanging != null)) {
                    this.TextureStringManagerRowChanging(this, new TextureStringManagerRowChangeEvent(((TextureStringManagerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TextureStringManagerRowDeleted != null)) {
                    this.TextureStringManagerRowDeleted(this, new TextureStringManagerRowChangeEvent(((TextureStringManagerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TextureStringManagerRowDeleting != null)) {
                    this.TextureStringManagerRowDeleting(this, new TextureStringManagerRowChangeEvent(((TextureStringManagerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTextureStringManagerRow(TextureStringManagerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TextureStringManagerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TextureStringManager_HistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTextureIDX;
            
            private global::System.Data.DataColumn columnFilePath;
            
            private global::System.Data.DataColumn columnString;
            
            private global::System.Data.DataColumn columnIsChange;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnUserIP;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TextureStringManager_HistoryDataTable() {
                this.TableName = "TextureStringManager_History";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TextureStringManager_HistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TextureStringManager_HistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextureIDXColumn {
                get {
                    return this.columnTextureIDX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilePathColumn {
                get {
                    return this.columnFilePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StringColumn {
                get {
                    return this.columnString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsChangeColumn {
                get {
                    return this.columnIsChange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIPColumn {
                get {
                    return this.columnUserIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TextureStringManager_HistoryRow this[int index] {
                get {
                    return ((TextureStringManager_HistoryRow)(this.Rows[index]));
                }
            }
            
            public event TextureStringManager_HistoryRowChangeEventHandler TextureStringManager_HistoryRowChanging;
            
            public event TextureStringManager_HistoryRowChangeEventHandler TextureStringManager_HistoryRowChanged;
            
            public event TextureStringManager_HistoryRowChangeEventHandler TextureStringManager_HistoryRowDeleting;
            
            public event TextureStringManager_HistoryRowChangeEventHandler TextureStringManager_HistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTextureStringManager_HistoryRow(TextureStringManager_HistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TextureStringManager_HistoryRow AddTextureStringManager_HistoryRow(int TextureIDX, string FilePath, string String, bool IsChange, string UserID, string UserIP, System.DateTime Regdate) {
                TextureStringManager_HistoryRow rowTextureStringManager_HistoryRow = ((TextureStringManager_HistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TextureIDX,
                        FilePath,
                        String,
                        IsChange,
                        UserID,
                        UserIP,
                        Regdate};
                rowTextureStringManager_HistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTextureStringManager_HistoryRow);
                return rowTextureStringManager_HistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TextureStringManager_HistoryDataTable cln = ((TextureStringManager_HistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TextureStringManager_HistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTextureIDX = base.Columns["TextureIDX"];
                this.columnFilePath = base.Columns["FilePath"];
                this.columnString = base.Columns["String"];
                this.columnIsChange = base.Columns["IsChange"];
                this.columnUserID = base.Columns["UserID"];
                this.columnUserIP = base.Columns["UserIP"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTextureIDX = new global::System.Data.DataColumn("TextureIDX", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextureIDX);
                this.columnFilePath = new global::System.Data.DataColumn("FilePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilePath);
                this.columnString = new global::System.Data.DataColumn("String", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString);
                this.columnIsChange = new global::System.Data.DataColumn("IsChange", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsChange);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserIP = new global::System.Data.DataColumn("UserIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserIP);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.columnTextureIDX.AllowDBNull = false;
                this.columnFilePath.MaxLength = 150;
                this.columnString.MaxLength = 250;
                this.columnUserID.MaxLength = 30;
                this.columnUserIP.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TextureStringManager_HistoryRow NewTextureStringManager_HistoryRow() {
                return ((TextureStringManager_HistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TextureStringManager_HistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TextureStringManager_HistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TextureStringManager_HistoryRowChanged != null)) {
                    this.TextureStringManager_HistoryRowChanged(this, new TextureStringManager_HistoryRowChangeEvent(((TextureStringManager_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TextureStringManager_HistoryRowChanging != null)) {
                    this.TextureStringManager_HistoryRowChanging(this, new TextureStringManager_HistoryRowChangeEvent(((TextureStringManager_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TextureStringManager_HistoryRowDeleted != null)) {
                    this.TextureStringManager_HistoryRowDeleted(this, new TextureStringManager_HistoryRowChangeEvent(((TextureStringManager_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TextureStringManager_HistoryRowDeleting != null)) {
                    this.TextureStringManager_HistoryRowDeleting(this, new TextureStringManager_HistoryRowChangeEvent(((TextureStringManager_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTextureStringManager_HistoryRow(TextureStringManager_HistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TextureStringManager_HistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SkillEnumDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnID_Num;
            
            private global::System.Data.DataColumn columnID_Name;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SkillEnumDataTable() {
                this.TableName = "SkillEnum";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SkillEnumDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SkillEnumDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_NumColumn {
                get {
                    return this.columnID_Num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_NameColumn {
                get {
                    return this.columnID_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SkillEnumRow this[int index] {
                get {
                    return ((SkillEnumRow)(this.Rows[index]));
                }
            }
            
            public event SkillEnumRowChangeEventHandler SkillEnumRowChanging;
            
            public event SkillEnumRowChangeEventHandler SkillEnumRowChanged;
            
            public event SkillEnumRowChangeEventHandler SkillEnumRowDeleting;
            
            public event SkillEnumRowChangeEventHandler SkillEnumRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSkillEnumRow(SkillEnumRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SkillEnumRow AddSkillEnumRow(int IndexKey, int ID_Num, string ID_Name, string Description, System.DateTime Regdate) {
                SkillEnumRow rowSkillEnumRow = ((SkillEnumRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        ID_Num,
                        ID_Name,
                        Description,
                        Regdate};
                rowSkillEnumRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSkillEnumRow);
                return rowSkillEnumRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SkillEnumRow FindByIndexKey(int IndexKey) {
                return ((SkillEnumRow)(this.Rows.Find(new object[] {
                            IndexKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SkillEnumDataTable cln = ((SkillEnumDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SkillEnumDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnID_Num = base.Columns["ID Num"];
                this.columnID_Name = base.Columns["ID Name"];
                this.columnDescription = base.Columns["Description"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnID_Num = new global::System.Data.DataColumn("ID Num", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Num);
                this.columnID_Name = new global::System.Data.DataColumn("ID Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Name);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndexKey}, true));
                this.columnIndexKey.AllowDBNull = false;
                this.columnIndexKey.Unique = true;
                this.columnID_Name.MaxLength = 150;
                this.columnDescription.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SkillEnumRow NewSkillEnumRow() {
                return ((SkillEnumRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SkillEnumRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SkillEnumRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SkillEnumRowChanged != null)) {
                    this.SkillEnumRowChanged(this, new SkillEnumRowChangeEvent(((SkillEnumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SkillEnumRowChanging != null)) {
                    this.SkillEnumRowChanging(this, new SkillEnumRowChangeEvent(((SkillEnumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SkillEnumRowDeleted != null)) {
                    this.SkillEnumRowDeleted(this, new SkillEnumRowChangeEvent(((SkillEnumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SkillEnumRowDeleting != null)) {
                    this.SkillEnumRowDeleting(this, new SkillEnumRowChangeEvent(((SkillEnumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSkillEnumRow(SkillEnumRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SkillEnumDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SkillTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndexKey;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnID_ENUM;
            
            private global::System.Data.DataColumn columnTYPE;
            
            private global::System.Data.DataColumn columnTYPE_ENUM;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnDESC;
            
            private global::System.Data.DataColumn columnSKILL_LEVEL;
            
            private global::System.Data.DataColumn columnPOWER_RATE;
            
            private global::System.Data.DataColumn columnCOOL_TIME;
            
            private global::System.Data.DataColumn columnMP_CONSUMPTION;
            
            private global::System.Data.DataColumn columnSTAT_BASE_HP;
            
            private global::System.Data.DataColumn columnSTAT_ATK_PHYSIC;
            
            private global::System.Data.DataColumn columnSTAT_ATK_MAGIC;
            
            private global::System.Data.DataColumn columnSTAT_DEF_PHYSIC;
            
            private global::System.Data.DataColumn columnSTAT_DEF_MAGIC;
            
            private global::System.Data.DataColumn columnICON_TEXTURE_NAME;
            
            private global::System.Data.DataColumn columnICON_TEXTURE_PIECE_NAME;
            
            private global::System.Data.DataColumn columnBORN_SEALED;
            
            private global::System.Data.DataColumn columnSHOW_LEVEL;
            
            private global::System.Data.DataColumn columnACTIVE_SKILL_USE_CONDITION;
            
            private global::System.Data.DataColumn columnACTIVE_SKILL_USE_CONDITION_ENUM;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnIN_HOUSE_TEST_ONLY;
            
            private global::System.Data.DataColumn columnMISC_0;
            
            private global::System.Data.DataColumn columnMISC_1;
            
            private global::System.Data.DataColumn columnMISC_2;
            
            private global::System.Data.DataColumn columnMISC_3;
            
            private global::System.Data.DataColumn columnMISC_4;
            
            private global::System.Data.DataColumn columnMISC_5;
            
            private global::System.Data.DataColumn columnMISC_6;
            
            private global::System.Data.DataColumn columnMISC_7;
            
            private global::System.Data.DataColumn columnRegdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SkillTableDataTable() {
                this.TableName = "SkillTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SkillTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SkillTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexKeyColumn {
                get {
                    return this.columnIndexKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_ENUMColumn {
                get {
                    return this.columnID_ENUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPE_ENUMColumn {
                get {
                    return this.columnTYPE_ENUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCColumn {
                get {
                    return this.columnDESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SKILL_LEVELColumn {
                get {
                    return this.columnSKILL_LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POWER_RATEColumn {
                get {
                    return this.columnPOWER_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COOL_TIMEColumn {
                get {
                    return this.columnCOOL_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_CONSUMPTIONColumn {
                get {
                    return this.columnMP_CONSUMPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STAT_BASE_HPColumn {
                get {
                    return this.columnSTAT_BASE_HP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STAT_ATK_PHYSICColumn {
                get {
                    return this.columnSTAT_ATK_PHYSIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STAT_ATK_MAGICColumn {
                get {
                    return this.columnSTAT_ATK_MAGIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STAT_DEF_PHYSICColumn {
                get {
                    return this.columnSTAT_DEF_PHYSIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STAT_DEF_MAGICColumn {
                get {
                    return this.columnSTAT_DEF_MAGIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ICON_TEXTURE_NAMEColumn {
                get {
                    return this.columnICON_TEXTURE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ICON_TEXTURE_PIECE_NAMEColumn {
                get {
                    return this.columnICON_TEXTURE_PIECE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BORN_SEALEDColumn {
                get {
                    return this.columnBORN_SEALED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHOW_LEVELColumn {
                get {
                    return this.columnSHOW_LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACTIVE_SKILL_USE_CONDITIONColumn {
                get {
                    return this.columnACTIVE_SKILL_USE_CONDITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACTIVE_SKILL_USE_CONDITION_ENUMColumn {
                get {
                    return this.columnACTIVE_SKILL_USE_CONDITION_ENUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IN_HOUSE_TEST_ONLYColumn {
                get {
                    return this.columnIN_HOUSE_TEST_ONLY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MISC_0Column {
                get {
                    return this.columnMISC_0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MISC_1Column {
                get {
                    return this.columnMISC_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MISC_2Column {
                get {
                    return this.columnMISC_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MISC_3Column {
                get {
                    return this.columnMISC_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MISC_4Column {
                get {
                    return this.columnMISC_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MISC_5Column {
                get {
                    return this.columnMISC_5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MISC_6Column {
                get {
                    return this.columnMISC_6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MISC_7Column {
                get {
                    return this.columnMISC_7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SkillTableRow this[int index] {
                get {
                    return ((SkillTableRow)(this.Rows[index]));
                }
            }
            
            public event SkillTableRowChangeEventHandler SkillTableRowChanging;
            
            public event SkillTableRowChangeEventHandler SkillTableRowChanged;
            
            public event SkillTableRowChangeEventHandler SkillTableRowDeleting;
            
            public event SkillTableRowChangeEventHandler SkillTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSkillTableRow(SkillTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SkillTableRow AddSkillTableRow(
                        int IndexKey, 
                        int ID, 
                        string ID_ENUM, 
                        int TYPE, 
                        string TYPE_ENUM, 
                        string NAME, 
                        string DESC, 
                        int SKILL_LEVEL, 
                        double POWER_RATE, 
                        int COOL_TIME, 
                        int MP_CONSUMPTION, 
                        int STAT_BASE_HP, 
                        int STAT_ATK_PHYSIC, 
                        int STAT_ATK_MAGIC, 
                        int STAT_DEF_PHYSIC, 
                        int STAT_DEF_MAGIC, 
                        string ICON_TEXTURE_NAME, 
                        string ICON_TEXTURE_PIECE_NAME, 
                        bool BORN_SEALED, 
                        bool SHOW_LEVEL, 
                        int ACTIVE_SKILL_USE_CONDITION, 
                        string ACTIVE_SKILL_USE_CONDITION_ENUM, 
                        string Description, 
                        bool IN_HOUSE_TEST_ONLY, 
                        string MISC_0, 
                        double MISC_1, 
                        string MISC_2, 
                        double MISC_3, 
                        string MISC_4, 
                        double MISC_5, 
                        string MISC_6, 
                        double MISC_7, 
                        System.DateTime Regdate) {
                SkillTableRow rowSkillTableRow = ((SkillTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndexKey,
                        ID,
                        ID_ENUM,
                        TYPE,
                        TYPE_ENUM,
                        NAME,
                        DESC,
                        SKILL_LEVEL,
                        POWER_RATE,
                        COOL_TIME,
                        MP_CONSUMPTION,
                        STAT_BASE_HP,
                        STAT_ATK_PHYSIC,
                        STAT_ATK_MAGIC,
                        STAT_DEF_PHYSIC,
                        STAT_DEF_MAGIC,
                        ICON_TEXTURE_NAME,
                        ICON_TEXTURE_PIECE_NAME,
                        BORN_SEALED,
                        SHOW_LEVEL,
                        ACTIVE_SKILL_USE_CONDITION,
                        ACTIVE_SKILL_USE_CONDITION_ENUM,
                        Description,
                        IN_HOUSE_TEST_ONLY,
                        MISC_0,
                        MISC_1,
                        MISC_2,
                        MISC_3,
                        MISC_4,
                        MISC_5,
                        MISC_6,
                        MISC_7,
                        Regdate};
                rowSkillTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSkillTableRow);
                return rowSkillTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SkillTableRow FindByIndexKey(int IndexKey) {
                return ((SkillTableRow)(this.Rows.Find(new object[] {
                            IndexKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SkillTableDataTable cln = ((SkillTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SkillTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndexKey = base.Columns["IndexKey"];
                this.columnID = base.Columns["ID"];
                this.columnID_ENUM = base.Columns["ID_ENUM"];
                this.columnTYPE = base.Columns["TYPE"];
                this.columnTYPE_ENUM = base.Columns["TYPE_ENUM"];
                this.columnNAME = base.Columns["NAME"];
                this.columnDESC = base.Columns["DESC"];
                this.columnSKILL_LEVEL = base.Columns["SKILL_LEVEL"];
                this.columnPOWER_RATE = base.Columns["POWER_RATE"];
                this.columnCOOL_TIME = base.Columns["COOL_TIME"];
                this.columnMP_CONSUMPTION = base.Columns["MP_CONSUMPTION"];
                this.columnSTAT_BASE_HP = base.Columns["STAT_BASE_HP"];
                this.columnSTAT_ATK_PHYSIC = base.Columns["STAT_ATK_PHYSIC"];
                this.columnSTAT_ATK_MAGIC = base.Columns["STAT_ATK_MAGIC"];
                this.columnSTAT_DEF_PHYSIC = base.Columns["STAT_DEF_PHYSIC"];
                this.columnSTAT_DEF_MAGIC = base.Columns["STAT_DEF_MAGIC"];
                this.columnICON_TEXTURE_NAME = base.Columns["ICON_TEXTURE_NAME"];
                this.columnICON_TEXTURE_PIECE_NAME = base.Columns["ICON_TEXTURE_PIECE_NAME"];
                this.columnBORN_SEALED = base.Columns["BORN_SEALED"];
                this.columnSHOW_LEVEL = base.Columns["SHOW_LEVEL"];
                this.columnACTIVE_SKILL_USE_CONDITION = base.Columns["ACTIVE_SKILL_USE_CONDITION"];
                this.columnACTIVE_SKILL_USE_CONDITION_ENUM = base.Columns["ACTIVE_SKILL_USE_CONDITION_ENUM"];
                this.columnDescription = base.Columns["Description"];
                this.columnIN_HOUSE_TEST_ONLY = base.Columns["IN_HOUSE_TEST_ONLY"];
                this.columnMISC_0 = base.Columns["MISC_0"];
                this.columnMISC_1 = base.Columns["MISC_1"];
                this.columnMISC_2 = base.Columns["MISC_2"];
                this.columnMISC_3 = base.Columns["MISC_3"];
                this.columnMISC_4 = base.Columns["MISC_4"];
                this.columnMISC_5 = base.Columns["MISC_5"];
                this.columnMISC_6 = base.Columns["MISC_6"];
                this.columnMISC_7 = base.Columns["MISC_7"];
                this.columnRegdate = base.Columns["Regdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndexKey = new global::System.Data.DataColumn("IndexKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexKey);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnID_ENUM = new global::System.Data.DataColumn("ID_ENUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ENUM);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnTYPE_ENUM = new global::System.Data.DataColumn("TYPE_ENUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_ENUM);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnDESC = new global::System.Data.DataColumn("DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESC);
                this.columnSKILL_LEVEL = new global::System.Data.DataColumn("SKILL_LEVEL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSKILL_LEVEL);
                this.columnPOWER_RATE = new global::System.Data.DataColumn("POWER_RATE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOWER_RATE);
                this.columnCOOL_TIME = new global::System.Data.DataColumn("COOL_TIME", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOOL_TIME);
                this.columnMP_CONSUMPTION = new global::System.Data.DataColumn("MP_CONSUMPTION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_CONSUMPTION);
                this.columnSTAT_BASE_HP = new global::System.Data.DataColumn("STAT_BASE_HP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTAT_BASE_HP);
                this.columnSTAT_ATK_PHYSIC = new global::System.Data.DataColumn("STAT_ATK_PHYSIC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTAT_ATK_PHYSIC);
                this.columnSTAT_ATK_MAGIC = new global::System.Data.DataColumn("STAT_ATK_MAGIC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTAT_ATK_MAGIC);
                this.columnSTAT_DEF_PHYSIC = new global::System.Data.DataColumn("STAT_DEF_PHYSIC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTAT_DEF_PHYSIC);
                this.columnSTAT_DEF_MAGIC = new global::System.Data.DataColumn("STAT_DEF_MAGIC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTAT_DEF_MAGIC);
                this.columnICON_TEXTURE_NAME = new global::System.Data.DataColumn("ICON_TEXTURE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICON_TEXTURE_NAME);
                this.columnICON_TEXTURE_PIECE_NAME = new global::System.Data.DataColumn("ICON_TEXTURE_PIECE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICON_TEXTURE_PIECE_NAME);
                this.columnBORN_SEALED = new global::System.Data.DataColumn("BORN_SEALED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBORN_SEALED);
                this.columnSHOW_LEVEL = new global::System.Data.DataColumn("SHOW_LEVEL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHOW_LEVEL);
                this.columnACTIVE_SKILL_USE_CONDITION = new global::System.Data.DataColumn("ACTIVE_SKILL_USE_CONDITION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTIVE_SKILL_USE_CONDITION);
                this.columnACTIVE_SKILL_USE_CONDITION_ENUM = new global::System.Data.DataColumn("ACTIVE_SKILL_USE_CONDITION_ENUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTIVE_SKILL_USE_CONDITION_ENUM);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnIN_HOUSE_TEST_ONLY = new global::System.Data.DataColumn("IN_HOUSE_TEST_ONLY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIN_HOUSE_TEST_ONLY);
                this.columnMISC_0 = new global::System.Data.DataColumn("MISC_0", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMISC_0);
                this.columnMISC_1 = new global::System.Data.DataColumn("MISC_1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMISC_1);
                this.columnMISC_2 = new global::System.Data.DataColumn("MISC_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMISC_2);
                this.columnMISC_3 = new global::System.Data.DataColumn("MISC_3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMISC_3);
                this.columnMISC_4 = new global::System.Data.DataColumn("MISC_4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMISC_4);
                this.columnMISC_5 = new global::System.Data.DataColumn("MISC_5", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMISC_5);
                this.columnMISC_6 = new global::System.Data.DataColumn("MISC_6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMISC_6);
                this.columnMISC_7 = new global::System.Data.DataColumn("MISC_7", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMISC_7);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndexKey}, true));
                this.columnIndexKey.AllowDBNull = false;
                this.columnIndexKey.Unique = true;
                this.columnID_ENUM.MaxLength = 100;
                this.columnTYPE_ENUM.MaxLength = 100;
                this.columnNAME.MaxLength = 100;
                this.columnDESC.MaxLength = 500;
                this.columnICON_TEXTURE_NAME.MaxLength = 150;
                this.columnICON_TEXTURE_PIECE_NAME.MaxLength = 150;
                this.columnACTIVE_SKILL_USE_CONDITION_ENUM.MaxLength = 100;
                this.columnDescription.MaxLength = 100;
                this.columnMISC_0.MaxLength = 100;
                this.columnMISC_2.MaxLength = 100;
                this.columnMISC_4.MaxLength = 100;
                this.columnMISC_6.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SkillTableRow NewSkillTableRow() {
                return ((SkillTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SkillTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SkillTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SkillTableRowChanged != null)) {
                    this.SkillTableRowChanged(this, new SkillTableRowChangeEvent(((SkillTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SkillTableRowChanging != null)) {
                    this.SkillTableRowChanging(this, new SkillTableRowChangeEvent(((SkillTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SkillTableRowDeleted != null)) {
                    this.SkillTableRowDeleted(this, new SkillTableRowChangeEvent(((SkillTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SkillTableRowDeleting != null)) {
                    this.SkillTableRowDeleting(this, new SkillTableRowChangeEvent(((SkillTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSkillTableRow(SkillTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScriptData_JPDataSet ds = new ScriptData_JPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SkillTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ItemRow : global::System.Data.DataRow {
            
            private ItemDataTable tableItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItem = ((ItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableItem.IndexKeyColumn]));
                }
                set {
                    this[this.tableItem.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableItem.IDColumn]));
                }
                set {
                    this[this.tableItem.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableItem.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableItem.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Description\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description_In_Shop {
                get {
                    try {
                        return ((string)(this[this.tableItem.Description_In_ShopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Description In Shop\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Description_In_ShopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Model_Name {
                get {
                    try {
                        return ((string)(this[this.tableItem.Model_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Model Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Model_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Texture_Change_XET_Name {
                get {
                    try {
                        return ((string)(this[this.tableItem.Texture_Change_XET_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Texture Change XET Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Texture_Change_XET_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ELSWORD_MODEL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem.ELSWORD_MODEL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ELSWORD_MODEL_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ELSWORD_MODEL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ELSWORD_XET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem.ELSWORD_XET_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ELSWORD_XET_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ELSWORD_XET_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AISHA_MODEL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem.AISHA_MODEL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'AISHA_MODEL_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.AISHA_MODEL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AISHA_XET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem.AISHA_XET_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'AISHA_XET_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.AISHA_XET_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RENA_MODEL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem.RENA_MODEL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'RENA_MODEL_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.RENA_MODEL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RENA_XET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem.RENA_XET_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'RENA_XET_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.RENA_XET_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RAVEN_MODEL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem.RAVEN_MODEL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'RAVEN_MODEL_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.RAVEN_MODEL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RAVEN_XET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem.RAVEN_XET_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'RAVEN_XET_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.RAVEN_XET_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EVE_MODEL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem.EVE_MODEL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'EVE_MODEL_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.EVE_MODEL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EVE_XET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem.EVE_XET_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'EVE_XET_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.EVE_XET_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Anim_XET_Name {
                get {
                    try {
                        return ((string)(this[this.tableItem.Anim_XET_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Anim XET Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Anim_XET_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Anim_Name {
                get {
                    try {
                        return ((string)(this[this.tableItem.Anim_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Anim Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Anim_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Shop_Image {
                get {
                    try {
                        return ((string)(this[this.tableItem.Shop_ImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Shop Image\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Shop_ImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Drop_Viewer {
                get {
                    try {
                        return ((string)(this[this.tableItem.Drop_ViewerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Drop Viewer\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Drop_ViewerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Item_Type {
                get {
                    try {
                        return ((byte)(this[this.tableItem.Item_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Item Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Item_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableItem.Item_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Item Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Item_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEMTYPE_C {
                get {
                    try {
                        return ((string)(this[this.tableItem.ITEMTYPE_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ITEMTYPE_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ITEMTYPE_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Fashion {
                get {
                    try {
                        return ((bool)(this[this.tableItem.FashionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Fashion\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FashionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Vested {
                get {
                    try {
                        return ((bool)(this[this.tableItem.VestedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Vested\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.VestedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Can_Enchant {
                get {
                    try {
                        return ((bool)(this[this.tableItem.Can_EnchantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Can Enchant\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Can_EnchantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Use_Type {
                get {
                    try {
                        return ((double)(this[this.tableItem.Use_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Use Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Use_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Use_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableItem.Use_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Use Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Use_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USETYPE_C {
                get {
                    try {
                        return ((string)(this[this.tableItem.USETYPE_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'USETYPE_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.USETYPE_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Attach_FrameName {
                get {
                    try {
                        return ((string)(this[this.tableItem.Attach_FrameNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Attach FrameName\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Attach_FrameNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Elsword_X {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Elsword_XColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Elsword_X\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Elsword_XColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Elsword_Y {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Elsword_YColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Elsword_Y\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Elsword_YColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Elsword_Z {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Elsword_ZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Elsword_Z\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Elsword_ZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Lena_X {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Lena_XColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Lena_X\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Lena_XColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Lena_Y {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Lena_YColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Lena_Y\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Lena_YColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Lena_Z {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Lena_ZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Lena_Z\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Lena_ZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Aisha_X {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Aisha_XColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Aisha_X\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Aisha_XColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Aisha_Y {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Aisha_YColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Aisha_Y\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Aisha_YColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Aisha_Z {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Aisha_ZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Aisha_Z\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Aisha_ZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Raven_X {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Raven_XColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Raven_X\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Raven_XColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Raven_Y {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Raven_YColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Raven_Y\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Raven_YColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Raven_Z {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Raven_ZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Raven_Z\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Raven_ZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Eve_X {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Eve_XColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Eve_X\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Eve_XColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Eve_Y {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Eve_YColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Eve_Y\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Eve_YColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Eve_Z {
                get {
                    try {
                        return ((double)(this[this.tableItem.FO_Eve_ZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'FO_Eve_Z\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.FO_Eve_ZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Can_HyperMode {
                get {
                    try {
                        return ((bool)(this[this.tableItem.Can_HyperModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Can HyperMode\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Can_HyperModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Period_Type {
                get {
                    try {
                        return ((byte)(this[this.tableItem.Period_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Period Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Period_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Period_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableItem.Period_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Period Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Period_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PERIODTYPE_C {
                get {
                    try {
                        return ((string)(this[this.tableItem.PERIODTYPE_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'PERIODTYPE_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.PERIODTYPE_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Endurance {
                get {
                    try {
                        return ((int)(this[this.tableItem.EnduranceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Endurance\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.EnduranceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte EnduranceDamageMin {
                get {
                    try {
                        return ((byte)(this[this.tableItem.EnduranceDamageMinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'EnduranceDamageMin\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.EnduranceDamageMinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte EnduranceDamageMax {
                get {
                    try {
                        return ((byte)(this[this.tableItem.EnduranceDamageMaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'EnduranceDamageMax\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.EnduranceDamageMaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Repair_ED {
                get {
                    try {
                        return ((double)(this[this.tableItem.Repair_EDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Repair ED\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Repair_EDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Repair_VP {
                get {
                    try {
                        return ((double)(this[this.tableItem.Repair_VPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Repair VP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Repair_VPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Quantity {
                get {
                    try {
                        return ((int)(this[this.tableItem.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Quantity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Price_Type {
                get {
                    try {
                        return ((byte)(this[this.tableItem.Price_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Price Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Price_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Price_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableItem.Price_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Price Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Price_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRICETYPE_C {
                get {
                    try {
                        return ((string)(this[this.tableItem.PRICETYPE_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'PRICETYPE_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.PRICETYPE_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Price {
                get {
                    try {
                        return ((string)(this[this.tableItem.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Price\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Price_PvP_Point {
                get {
                    try {
                        return ((int)(this[this.tableItem.Price_PvP_PointColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Price PvP Point\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Price_PvP_PointColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Use_Condition {
                get {
                    try {
                        return ((byte)(this[this.tableItem.Use_ConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Use Condition\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Use_ConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Use_Condition_ {
                get {
                    try {
                        return ((string)(this[this.tableItem.Use_Condition_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Use Condition_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Use_Condition_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USECONDITION_C {
                get {
                    try {
                        return ((string)(this[this.tableItem.USECONDITION_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'USECONDITION_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.USECONDITION_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Unit_Type {
                get {
                    try {
                        return ((byte)(this[this.tableItem.Unit_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Unit Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Unit_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableItem.Unit_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Unit Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Unit_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNITTYPE_C {
                get {
                    try {
                        return ((string)(this[this.tableItem.UNITTYPE_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'UNITTYPE_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.UNITTYPE_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Unit_Class {
                get {
                    try {
                        return ((byte)(this[this.tableItem.Unit_ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Unit Class\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Unit_ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit_Class_ {
                get {
                    try {
                        return ((string)(this[this.tableItem.Unit_Class_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Unit Class_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Unit_Class_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNITCLASS_C {
                get {
                    try {
                        return ((string)(this[this.tableItem.UNITCLASS_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'UNITCLASS_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.UNITCLASS_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Use_Level {
                get {
                    try {
                        return ((byte)(this[this.tableItem.Use_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Use Level\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Use_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Eqip_Position {
                get {
                    try {
                        return ((byte)(this[this.tableItem.Eqip_PositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Eqip Position\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Eqip_PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Eqip_Position_ {
                get {
                    try {
                        return ((string)(this[this.tableItem.Eqip_Position_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Eqip Position_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Eqip_Position_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EQIPPOSITION_C {
                get {
                    try {
                        return ((string)(this[this.tableItem.EQIPPOSITION_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'EQIPPOSITION_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.EQIPPOSITION_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Item_Grade {
                get {
                    try {
                        return ((byte)(this[this.tableItem.Item_GradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Item Grade\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Item_GradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Grade_ {
                get {
                    try {
                        return ((string)(this[this.tableItem.Item_Grade_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Item Grade_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Item_Grade_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEMGRADE_C {
                get {
                    try {
                        return ((string)(this[this.tableItem.ITEMGRADE_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ITEMGRADE_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ITEMGRADE_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BASE_HP {
                get {
                    try {
                        return ((int)(this[this.tableItem.BASE_HPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'BASE_HP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.BASE_HPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ATK_PHYSIC {
                get {
                    try {
                        return ((int)(this[this.tableItem.ATK_PHYSICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATK_PHYSIC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATK_PHYSICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ATK_MAGIC {
                get {
                    try {
                        return ((int)(this[this.tableItem.ATK_MAGICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATK_MAGIC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATK_MAGICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEF_PHYSIC {
                get {
                    try {
                        return ((int)(this[this.tableItem.DEF_PHYSICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'DEF_PHYSIC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.DEF_PHYSICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEF_MAGIC {
                get {
                    try {
                        return ((int)(this[this.tableItem.DEF_MAGICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'DEF_MAGIC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.DEF_MAGICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_NUM {
                get {
                    try {
                        return ((int)(this[this.tableItem.SA_NUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SA_NUM\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SA_NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_01 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SA_01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SA_01\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SA_01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_02 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SA_02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SA_02\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SA_02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_03 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SA_03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SA_03\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SA_03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_04 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SA_04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SA_04\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SA_04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_05 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SA_05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SA_05\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SA_05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_06 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SA_06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SA_06\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SA_06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_07 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SA_07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SA_07\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SA_07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_08 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SA_08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SA_08\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SA_08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_09 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SA_09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SA_09\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SA_09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_10 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SA_10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SA_10\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SA_10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_01 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SO_01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SO_01\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SO_01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_02 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SO_02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SO_02\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SO_02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_03 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SO_03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SO_03\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SO_03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_04 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SO_04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SO_04\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SO_04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_05 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SO_05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SO_05\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SO_05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_06 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SO_06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SO_06\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SO_06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_07 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SO_07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SO_07\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SO_07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_08 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SO_08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SO_08\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SO_08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_09 {
                get {
                    try {
                        return ((int)(this[this.tableItem.SO_09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SO_09\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SO_09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte COOL_TIME {
                get {
                    try {
                        return ((byte)(this[this.tableItem.COOL_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'COOL_TIME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.COOL_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SET_ID {
                get {
                    try {
                        return ((int)(this[this.tableItem.SET_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SET_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SET_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Can_Use_Inventory {
                get {
                    try {
                        return ((bool)(this[this.tableItem.Can_Use_InventoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Can Use Inventory\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Can_Use_InventoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool NoEquip {
                get {
                    try {
                        return ((bool)(this[this.tableItem.NoEquipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'NoEquip\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.NoEquipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SLASH_TRACE_COLOR {
                get {
                    try {
                        return ((string)(this[this.tableItem.SLASH_TRACE_COLORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SLASH_TRACE_COLOR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SLASH_TRACE_COLORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SLASH_TRACE_TIP_COLOR {
                get {
                    try {
                        return ((string)(this[this.tableItem.SLASH_TRACE_TIP_COLORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'SLASH_TRACE_TIP_COLOR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.SLASH_TRACE_TIP_COLORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HYPER_SLASH_TRACE_COLOR {
                get {
                    try {
                        return ((string)(this[this.tableItem.HYPER_SLASH_TRACE_COLORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'HYPER_SLASH_TRACE_COLOR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.HYPER_SLASH_TRACE_COLORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HYPER_SLASH_TRACE_TIP_COLOR {
                get {
                    try {
                        return ((string)(this[this.tableItem.HYPER_SLASH_TRACE_TIP_COLORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'HYPER_SLASH_TRACE_TIP_COLOR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.HYPER_SLASH_TRACE_TIP_COLORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ELSWORD_ITEM_SCALE_ROTATE {
                get {
                    try {
                        return ((string)(this[this.tableItem.ELSWORD_ITEM_SCALE_ROTATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ELSWORD_ITEM_SCALE_ROTATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ELSWORD_ITEM_SCALE_ROTATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AISHA_ITEM_SCALE_ROTATE {
                get {
                    try {
                        return ((string)(this[this.tableItem.AISHA_ITEM_SCALE_ROTATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'AISHA_ITEM_SCALE_ROTATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.AISHA_ITEM_SCALE_ROTATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RENA_ITEM_SCALE_ROTATE {
                get {
                    try {
                        return ((string)(this[this.tableItem.RENA_ITEM_SCALE_ROTATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'RENA_ITEM_SCALE_ROTATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.RENA_ITEM_SCALE_ROTATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RAVEN_ITEM_SCALE_ROTATE {
                get {
                    try {
                        return ((string)(this[this.tableItem.RAVEN_ITEM_SCALE_ROTATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'RAVEN_ITEM_SCALE_ROTATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.RAVEN_ITEM_SCALE_ROTATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EVE_ITEM_SCALE_ROTATE {
                get {
                    try {
                        return ((string)(this[this.tableItem.EVE_ITEM_SCALE_ROTATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'EVE_ITEM_SCALE_ROTATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.EVE_ITEM_SCALE_ROTATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_NAME1 {
                get {
                    try {
                        return ((string)(this[this.tableItem.ATTACHED_MESH_NAME1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATTACHED_MESH_NAME1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATTACHED_MESH_NAME1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_BONE_NAME1 {
                get {
                    try {
                        return ((string)(this[this.tableItem.ATTACHED_MESH_BONE_NAME1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATTACHED_MESH_BONE_NAME1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATTACHED_MESH_BONE_NAME1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_NAME2 {
                get {
                    try {
                        return ((string)(this[this.tableItem.ATTACHED_MESH_NAME2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATTACHED_MESH_NAME2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATTACHED_MESH_NAME2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_BONE_NAME2 {
                get {
                    try {
                        return ((string)(this[this.tableItem.ATTACHED_MESH_BONE_NAME2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATTACHED_MESH_BONE_NAME2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATTACHED_MESH_BONE_NAME2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_NAME3 {
                get {
                    try {
                        return ((string)(this[this.tableItem.ATTACHED_MESH_NAME3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATTACHED_MESH_NAME3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATTACHED_MESH_NAME3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_BONE_NAME3 {
                get {
                    try {
                        return ((string)(this[this.tableItem.ATTACHED_MESH_BONE_NAME3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATTACHED_MESH_BONE_NAME3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATTACHED_MESH_BONE_NAME3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_NAME4 {
                get {
                    try {
                        return ((string)(this[this.tableItem.ATTACHED_MESH_NAME4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATTACHED_MESH_NAME4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATTACHED_MESH_NAME4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_BONE_NAME4 {
                get {
                    try {
                        return ((string)(this[this.tableItem.ATTACHED_MESH_BONE_NAME4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATTACHED_MESH_BONE_NAME4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATTACHED_MESH_BONE_NAME4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_NAME5 {
                get {
                    try {
                        return ((string)(this[this.tableItem.ATTACHED_MESH_NAME5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATTACHED_MESH_NAME5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATTACHED_MESH_NAME5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_BONE_NAME5 {
                get {
                    try {
                        return ((string)(this[this.tableItem.ATTACHED_MESH_BONE_NAME5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATTACHED_MESH_BONE_NAME5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATTACHED_MESH_BONE_NAME5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Model_Name1 {
                get {
                    try {
                        return ((string)(this[this.tableItem.Model_Name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Model Name1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Model_Name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Attach_FrameName1 {
                get {
                    try {
                        return ((string)(this[this.tableItem.Attach_FrameName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'Attach FrameName1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.Attach_FrameName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_PARTICLE_NAME1 {
                get {
                    try {
                        return ((string)(this[this.tableItem.ATTACHED_PARTICLE_NAME1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATTACHED_PARTICLE_NAME1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATTACHED_PARTICLE_NAME1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_PARTICLE_BONE_NAME1 {
                get {
                    try {
                        return ((string)(this[this.tableItem.ATTACHED_PARTICLE_BONE_NAME1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATTACHED_PARTICLE_BONE_NAME1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATTACHED_PARTICLE_BONE_NAME1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_PARTICLE_NAME2 {
                get {
                    try {
                        return ((string)(this[this.tableItem.ATTACHED_PARTICLE_NAME2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATTACHED_PARTICLE_NAME2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATTACHED_PARTICLE_NAME2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_PARTICLE_BONE_NAME2 {
                get {
                    try {
                        return ((string)(this[this.tableItem.ATTACHED_PARTICLE_BONE_NAME2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item\' 테이블의 \'ATTACHED_PARTICLE_BONE_NAME2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem.ATTACHED_PARTICLE_BONE_NAME2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    return ((global::System.DateTime)(this[this.tableItem.RegdateColumn]));
                }
                set {
                    this[this.tableItem.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableItem.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableItem.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableItem.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableItem.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescription_In_ShopNull() {
                return this.IsNull(this.tableItem.Description_In_ShopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescription_In_ShopNull() {
                this[this.tableItem.Description_In_ShopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModel_NameNull() {
                return this.IsNull(this.tableItem.Model_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModel_NameNull() {
                this[this.tableItem.Model_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTexture_Change_XET_NameNull() {
                return this.IsNull(this.tableItem.Texture_Change_XET_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTexture_Change_XET_NameNull() {
                this[this.tableItem.Texture_Change_XET_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELSWORD_MODEL_NAMENull() {
                return this.IsNull(this.tableItem.ELSWORD_MODEL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELSWORD_MODEL_NAMENull() {
                this[this.tableItem.ELSWORD_MODEL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELSWORD_XET_NAMENull() {
                return this.IsNull(this.tableItem.ELSWORD_XET_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELSWORD_XET_NAMENull() {
                this[this.tableItem.ELSWORD_XET_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAISHA_MODEL_NAMENull() {
                return this.IsNull(this.tableItem.AISHA_MODEL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAISHA_MODEL_NAMENull() {
                this[this.tableItem.AISHA_MODEL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAISHA_XET_NAMENull() {
                return this.IsNull(this.tableItem.AISHA_XET_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAISHA_XET_NAMENull() {
                this[this.tableItem.AISHA_XET_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRENA_MODEL_NAMENull() {
                return this.IsNull(this.tableItem.RENA_MODEL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRENA_MODEL_NAMENull() {
                this[this.tableItem.RENA_MODEL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRENA_XET_NAMENull() {
                return this.IsNull(this.tableItem.RENA_XET_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRENA_XET_NAMENull() {
                this[this.tableItem.RENA_XET_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAVEN_MODEL_NAMENull() {
                return this.IsNull(this.tableItem.RAVEN_MODEL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAVEN_MODEL_NAMENull() {
                this[this.tableItem.RAVEN_MODEL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAVEN_XET_NAMENull() {
                return this.IsNull(this.tableItem.RAVEN_XET_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAVEN_XET_NAMENull() {
                this[this.tableItem.RAVEN_XET_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEVE_MODEL_NAMENull() {
                return this.IsNull(this.tableItem.EVE_MODEL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEVE_MODEL_NAMENull() {
                this[this.tableItem.EVE_MODEL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEVE_XET_NAMENull() {
                return this.IsNull(this.tableItem.EVE_XET_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEVE_XET_NAMENull() {
                this[this.tableItem.EVE_XET_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnim_XET_NameNull() {
                return this.IsNull(this.tableItem.Anim_XET_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnim_XET_NameNull() {
                this[this.tableItem.Anim_XET_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnim_NameNull() {
                return this.IsNull(this.tableItem.Anim_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnim_NameNull() {
                this[this.tableItem.Anim_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShop_ImageNull() {
                return this.IsNull(this.tableItem.Shop_ImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShop_ImageNull() {
                this[this.tableItem.Shop_ImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrop_ViewerNull() {
                return this.IsNull(this.tableItem.Drop_ViewerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrop_ViewerNull() {
                this[this.tableItem.Drop_ViewerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_TypeNull() {
                return this.IsNull(this.tableItem.Item_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_TypeNull() {
                this[this.tableItem.Item_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_Type_Null() {
                return this.IsNull(this.tableItem.Item_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_Type_Null() {
                this[this.tableItem.Item_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEMTYPE_CNull() {
                return this.IsNull(this.tableItem.ITEMTYPE_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEMTYPE_CNull() {
                this[this.tableItem.ITEMTYPE_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFashionNull() {
                return this.IsNull(this.tableItem.FashionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFashionNull() {
                this[this.tableItem.FashionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVestedNull() {
                return this.IsNull(this.tableItem.VestedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVestedNull() {
                this[this.tableItem.VestedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCan_EnchantNull() {
                return this.IsNull(this.tableItem.Can_EnchantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCan_EnchantNull() {
                this[this.tableItem.Can_EnchantColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUse_TypeNull() {
                return this.IsNull(this.tableItem.Use_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUse_TypeNull() {
                this[this.tableItem.Use_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUse_Type_Null() {
                return this.IsNull(this.tableItem.Use_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUse_Type_Null() {
                this[this.tableItem.Use_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSETYPE_CNull() {
                return this.IsNull(this.tableItem.USETYPE_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSETYPE_CNull() {
                this[this.tableItem.USETYPE_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttach_FrameNameNull() {
                return this.IsNull(this.tableItem.Attach_FrameNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttach_FrameNameNull() {
                this[this.tableItem.Attach_FrameNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Elsword_XNull() {
                return this.IsNull(this.tableItem.FO_Elsword_XColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Elsword_XNull() {
                this[this.tableItem.FO_Elsword_XColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Elsword_YNull() {
                return this.IsNull(this.tableItem.FO_Elsword_YColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Elsword_YNull() {
                this[this.tableItem.FO_Elsword_YColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Elsword_ZNull() {
                return this.IsNull(this.tableItem.FO_Elsword_ZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Elsword_ZNull() {
                this[this.tableItem.FO_Elsword_ZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Lena_XNull() {
                return this.IsNull(this.tableItem.FO_Lena_XColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Lena_XNull() {
                this[this.tableItem.FO_Lena_XColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Lena_YNull() {
                return this.IsNull(this.tableItem.FO_Lena_YColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Lena_YNull() {
                this[this.tableItem.FO_Lena_YColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Lena_ZNull() {
                return this.IsNull(this.tableItem.FO_Lena_ZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Lena_ZNull() {
                this[this.tableItem.FO_Lena_ZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Aisha_XNull() {
                return this.IsNull(this.tableItem.FO_Aisha_XColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Aisha_XNull() {
                this[this.tableItem.FO_Aisha_XColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Aisha_YNull() {
                return this.IsNull(this.tableItem.FO_Aisha_YColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Aisha_YNull() {
                this[this.tableItem.FO_Aisha_YColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Aisha_ZNull() {
                return this.IsNull(this.tableItem.FO_Aisha_ZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Aisha_ZNull() {
                this[this.tableItem.FO_Aisha_ZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Raven_XNull() {
                return this.IsNull(this.tableItem.FO_Raven_XColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Raven_XNull() {
                this[this.tableItem.FO_Raven_XColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Raven_YNull() {
                return this.IsNull(this.tableItem.FO_Raven_YColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Raven_YNull() {
                this[this.tableItem.FO_Raven_YColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Raven_ZNull() {
                return this.IsNull(this.tableItem.FO_Raven_ZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Raven_ZNull() {
                this[this.tableItem.FO_Raven_ZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Eve_XNull() {
                return this.IsNull(this.tableItem.FO_Eve_XColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Eve_XNull() {
                this[this.tableItem.FO_Eve_XColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Eve_YNull() {
                return this.IsNull(this.tableItem.FO_Eve_YColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Eve_YNull() {
                this[this.tableItem.FO_Eve_YColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Eve_ZNull() {
                return this.IsNull(this.tableItem.FO_Eve_ZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Eve_ZNull() {
                this[this.tableItem.FO_Eve_ZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCan_HyperModeNull() {
                return this.IsNull(this.tableItem.Can_HyperModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCan_HyperModeNull() {
                this[this.tableItem.Can_HyperModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriod_TypeNull() {
                return this.IsNull(this.tableItem.Period_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriod_TypeNull() {
                this[this.tableItem.Period_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriod_Type_Null() {
                return this.IsNull(this.tableItem.Period_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriod_Type_Null() {
                this[this.tableItem.Period_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPERIODTYPE_CNull() {
                return this.IsNull(this.tableItem.PERIODTYPE_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPERIODTYPE_CNull() {
                this[this.tableItem.PERIODTYPE_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnduranceNull() {
                return this.IsNull(this.tableItem.EnduranceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnduranceNull() {
                this[this.tableItem.EnduranceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnduranceDamageMinNull() {
                return this.IsNull(this.tableItem.EnduranceDamageMinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnduranceDamageMinNull() {
                this[this.tableItem.EnduranceDamageMinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnduranceDamageMaxNull() {
                return this.IsNull(this.tableItem.EnduranceDamageMaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnduranceDamageMaxNull() {
                this[this.tableItem.EnduranceDamageMaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRepair_EDNull() {
                return this.IsNull(this.tableItem.Repair_EDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRepair_EDNull() {
                this[this.tableItem.Repair_EDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRepair_VPNull() {
                return this.IsNull(this.tableItem.Repair_VPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRepair_VPNull() {
                this[this.tableItem.Repair_VPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableItem.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableItem.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrice_TypeNull() {
                return this.IsNull(this.tableItem.Price_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrice_TypeNull() {
                this[this.tableItem.Price_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrice_Type_Null() {
                return this.IsNull(this.tableItem.Price_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrice_Type_Null() {
                this[this.tableItem.Price_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICETYPE_CNull() {
                return this.IsNull(this.tableItem.PRICETYPE_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICETYPE_CNull() {
                this[this.tableItem.PRICETYPE_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tableItem.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tableItem.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrice_PvP_PointNull() {
                return this.IsNull(this.tableItem.Price_PvP_PointColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrice_PvP_PointNull() {
                this[this.tableItem.Price_PvP_PointColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUse_ConditionNull() {
                return this.IsNull(this.tableItem.Use_ConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUse_ConditionNull() {
                this[this.tableItem.Use_ConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUse_Condition_Null() {
                return this.IsNull(this.tableItem.Use_Condition_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUse_Condition_Null() {
                this[this.tableItem.Use_Condition_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSECONDITION_CNull() {
                return this.IsNull(this.tableItem.USECONDITION_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSECONDITION_CNull() {
                this[this.tableItem.USECONDITION_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_TypeNull() {
                return this.IsNull(this.tableItem.Unit_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_TypeNull() {
                this[this.tableItem.Unit_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_Type_Null() {
                return this.IsNull(this.tableItem.Unit_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_Type_Null() {
                this[this.tableItem.Unit_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNITTYPE_CNull() {
                return this.IsNull(this.tableItem.UNITTYPE_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNITTYPE_CNull() {
                this[this.tableItem.UNITTYPE_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_ClassNull() {
                return this.IsNull(this.tableItem.Unit_ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_ClassNull() {
                this[this.tableItem.Unit_ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_Class_Null() {
                return this.IsNull(this.tableItem.Unit_Class_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_Class_Null() {
                this[this.tableItem.Unit_Class_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNITCLASS_CNull() {
                return this.IsNull(this.tableItem.UNITCLASS_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNITCLASS_CNull() {
                this[this.tableItem.UNITCLASS_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUse_LevelNull() {
                return this.IsNull(this.tableItem.Use_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUse_LevelNull() {
                this[this.tableItem.Use_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEqip_PositionNull() {
                return this.IsNull(this.tableItem.Eqip_PositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEqip_PositionNull() {
                this[this.tableItem.Eqip_PositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEqip_Position_Null() {
                return this.IsNull(this.tableItem.Eqip_Position_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEqip_Position_Null() {
                this[this.tableItem.Eqip_Position_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEQIPPOSITION_CNull() {
                return this.IsNull(this.tableItem.EQIPPOSITION_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEQIPPOSITION_CNull() {
                this[this.tableItem.EQIPPOSITION_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_GradeNull() {
                return this.IsNull(this.tableItem.Item_GradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_GradeNull() {
                this[this.tableItem.Item_GradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_Grade_Null() {
                return this.IsNull(this.tableItem.Item_Grade_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_Grade_Null() {
                this[this.tableItem.Item_Grade_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEMGRADE_CNull() {
                return this.IsNull(this.tableItem.ITEMGRADE_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEMGRADE_CNull() {
                this[this.tableItem.ITEMGRADE_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBASE_HPNull() {
                return this.IsNull(this.tableItem.BASE_HPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBASE_HPNull() {
                this[this.tableItem.BASE_HPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATK_PHYSICNull() {
                return this.IsNull(this.tableItem.ATK_PHYSICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATK_PHYSICNull() {
                this[this.tableItem.ATK_PHYSICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATK_MAGICNull() {
                return this.IsNull(this.tableItem.ATK_MAGICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATK_MAGICNull() {
                this[this.tableItem.ATK_MAGICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEF_PHYSICNull() {
                return this.IsNull(this.tableItem.DEF_PHYSICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEF_PHYSICNull() {
                this[this.tableItem.DEF_PHYSICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEF_MAGICNull() {
                return this.IsNull(this.tableItem.DEF_MAGICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEF_MAGICNull() {
                this[this.tableItem.DEF_MAGICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_NUMNull() {
                return this.IsNull(this.tableItem.SA_NUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_NUMNull() {
                this[this.tableItem.SA_NUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_01Null() {
                return this.IsNull(this.tableItem.SA_01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_01Null() {
                this[this.tableItem.SA_01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_02Null() {
                return this.IsNull(this.tableItem.SA_02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_02Null() {
                this[this.tableItem.SA_02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_03Null() {
                return this.IsNull(this.tableItem.SA_03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_03Null() {
                this[this.tableItem.SA_03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_04Null() {
                return this.IsNull(this.tableItem.SA_04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_04Null() {
                this[this.tableItem.SA_04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_05Null() {
                return this.IsNull(this.tableItem.SA_05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_05Null() {
                this[this.tableItem.SA_05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_06Null() {
                return this.IsNull(this.tableItem.SA_06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_06Null() {
                this[this.tableItem.SA_06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_07Null() {
                return this.IsNull(this.tableItem.SA_07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_07Null() {
                this[this.tableItem.SA_07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_08Null() {
                return this.IsNull(this.tableItem.SA_08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_08Null() {
                this[this.tableItem.SA_08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_09Null() {
                return this.IsNull(this.tableItem.SA_09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_09Null() {
                this[this.tableItem.SA_09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_10Null() {
                return this.IsNull(this.tableItem.SA_10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_10Null() {
                this[this.tableItem.SA_10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_01Null() {
                return this.IsNull(this.tableItem.SO_01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_01Null() {
                this[this.tableItem.SO_01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_02Null() {
                return this.IsNull(this.tableItem.SO_02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_02Null() {
                this[this.tableItem.SO_02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_03Null() {
                return this.IsNull(this.tableItem.SO_03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_03Null() {
                this[this.tableItem.SO_03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_04Null() {
                return this.IsNull(this.tableItem.SO_04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_04Null() {
                this[this.tableItem.SO_04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_05Null() {
                return this.IsNull(this.tableItem.SO_05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_05Null() {
                this[this.tableItem.SO_05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_06Null() {
                return this.IsNull(this.tableItem.SO_06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_06Null() {
                this[this.tableItem.SO_06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_07Null() {
                return this.IsNull(this.tableItem.SO_07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_07Null() {
                this[this.tableItem.SO_07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_08Null() {
                return this.IsNull(this.tableItem.SO_08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_08Null() {
                this[this.tableItem.SO_08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_09Null() {
                return this.IsNull(this.tableItem.SO_09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_09Null() {
                this[this.tableItem.SO_09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOOL_TIMENull() {
                return this.IsNull(this.tableItem.COOL_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOOL_TIMENull() {
                this[this.tableItem.COOL_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSET_IDNull() {
                return this.IsNull(this.tableItem.SET_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSET_IDNull() {
                this[this.tableItem.SET_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCan_Use_InventoryNull() {
                return this.IsNull(this.tableItem.Can_Use_InventoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCan_Use_InventoryNull() {
                this[this.tableItem.Can_Use_InventoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoEquipNull() {
                return this.IsNull(this.tableItem.NoEquipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoEquipNull() {
                this[this.tableItem.NoEquipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLASH_TRACE_COLORNull() {
                return this.IsNull(this.tableItem.SLASH_TRACE_COLORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLASH_TRACE_COLORNull() {
                this[this.tableItem.SLASH_TRACE_COLORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLASH_TRACE_TIP_COLORNull() {
                return this.IsNull(this.tableItem.SLASH_TRACE_TIP_COLORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLASH_TRACE_TIP_COLORNull() {
                this[this.tableItem.SLASH_TRACE_TIP_COLORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHYPER_SLASH_TRACE_COLORNull() {
                return this.IsNull(this.tableItem.HYPER_SLASH_TRACE_COLORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHYPER_SLASH_TRACE_COLORNull() {
                this[this.tableItem.HYPER_SLASH_TRACE_COLORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHYPER_SLASH_TRACE_TIP_COLORNull() {
                return this.IsNull(this.tableItem.HYPER_SLASH_TRACE_TIP_COLORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHYPER_SLASH_TRACE_TIP_COLORNull() {
                this[this.tableItem.HYPER_SLASH_TRACE_TIP_COLORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELSWORD_ITEM_SCALE_ROTATENull() {
                return this.IsNull(this.tableItem.ELSWORD_ITEM_SCALE_ROTATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELSWORD_ITEM_SCALE_ROTATENull() {
                this[this.tableItem.ELSWORD_ITEM_SCALE_ROTATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAISHA_ITEM_SCALE_ROTATENull() {
                return this.IsNull(this.tableItem.AISHA_ITEM_SCALE_ROTATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAISHA_ITEM_SCALE_ROTATENull() {
                this[this.tableItem.AISHA_ITEM_SCALE_ROTATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRENA_ITEM_SCALE_ROTATENull() {
                return this.IsNull(this.tableItem.RENA_ITEM_SCALE_ROTATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRENA_ITEM_SCALE_ROTATENull() {
                this[this.tableItem.RENA_ITEM_SCALE_ROTATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAVEN_ITEM_SCALE_ROTATENull() {
                return this.IsNull(this.tableItem.RAVEN_ITEM_SCALE_ROTATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAVEN_ITEM_SCALE_ROTATENull() {
                this[this.tableItem.RAVEN_ITEM_SCALE_ROTATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEVE_ITEM_SCALE_ROTATENull() {
                return this.IsNull(this.tableItem.EVE_ITEM_SCALE_ROTATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEVE_ITEM_SCALE_ROTATENull() {
                this[this.tableItem.EVE_ITEM_SCALE_ROTATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_NAME1Null() {
                return this.IsNull(this.tableItem.ATTACHED_MESH_NAME1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_NAME1Null() {
                this[this.tableItem.ATTACHED_MESH_NAME1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_BONE_NAME1Null() {
                return this.IsNull(this.tableItem.ATTACHED_MESH_BONE_NAME1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_BONE_NAME1Null() {
                this[this.tableItem.ATTACHED_MESH_BONE_NAME1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_NAME2Null() {
                return this.IsNull(this.tableItem.ATTACHED_MESH_NAME2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_NAME2Null() {
                this[this.tableItem.ATTACHED_MESH_NAME2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_BONE_NAME2Null() {
                return this.IsNull(this.tableItem.ATTACHED_MESH_BONE_NAME2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_BONE_NAME2Null() {
                this[this.tableItem.ATTACHED_MESH_BONE_NAME2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_NAME3Null() {
                return this.IsNull(this.tableItem.ATTACHED_MESH_NAME3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_NAME3Null() {
                this[this.tableItem.ATTACHED_MESH_NAME3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_BONE_NAME3Null() {
                return this.IsNull(this.tableItem.ATTACHED_MESH_BONE_NAME3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_BONE_NAME3Null() {
                this[this.tableItem.ATTACHED_MESH_BONE_NAME3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_NAME4Null() {
                return this.IsNull(this.tableItem.ATTACHED_MESH_NAME4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_NAME4Null() {
                this[this.tableItem.ATTACHED_MESH_NAME4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_BONE_NAME4Null() {
                return this.IsNull(this.tableItem.ATTACHED_MESH_BONE_NAME4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_BONE_NAME4Null() {
                this[this.tableItem.ATTACHED_MESH_BONE_NAME4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_NAME5Null() {
                return this.IsNull(this.tableItem.ATTACHED_MESH_NAME5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_NAME5Null() {
                this[this.tableItem.ATTACHED_MESH_NAME5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_BONE_NAME5Null() {
                return this.IsNull(this.tableItem.ATTACHED_MESH_BONE_NAME5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_BONE_NAME5Null() {
                this[this.tableItem.ATTACHED_MESH_BONE_NAME5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModel_Name1Null() {
                return this.IsNull(this.tableItem.Model_Name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModel_Name1Null() {
                this[this.tableItem.Model_Name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttach_FrameName1Null() {
                return this.IsNull(this.tableItem.Attach_FrameName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttach_FrameName1Null() {
                this[this.tableItem.Attach_FrameName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_PARTICLE_NAME1Null() {
                return this.IsNull(this.tableItem.ATTACHED_PARTICLE_NAME1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_PARTICLE_NAME1Null() {
                this[this.tableItem.ATTACHED_PARTICLE_NAME1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_PARTICLE_BONE_NAME1Null() {
                return this.IsNull(this.tableItem.ATTACHED_PARTICLE_BONE_NAME1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_PARTICLE_BONE_NAME1Null() {
                this[this.tableItem.ATTACHED_PARTICLE_BONE_NAME1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_PARTICLE_NAME2Null() {
                return this.IsNull(this.tableItem.ATTACHED_PARTICLE_NAME2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_PARTICLE_NAME2Null() {
                this[this.tableItem.ATTACHED_PARTICLE_NAME2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_PARTICLE_BONE_NAME2Null() {
                return this.IsNull(this.tableItem.ATTACHED_PARTICLE_BONE_NAME2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_PARTICLE_BONE_NAME2Null() {
                this[this.tableItem.ATTACHED_PARTICLE_BONE_NAME2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Item_HistoryRow : global::System.Data.DataRow {
            
            private Item_HistoryDataTable tableItem_History;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Item_HistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItem_History = ((Item_HistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableItem_History.IndexKeyColumn]));
                }
                set {
                    this[this.tableItem_History.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableItem_History.IDColumn]));
                }
                set {
                    this[this.tableItem_History.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Description\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description_In_Shop {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Description_In_ShopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Description In Shop\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Description_In_ShopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Model_Name {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Model_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Model Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Model_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Texture_Change_XET_Name {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Texture_Change_XET_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Texture Change XET Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Texture_Change_XET_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ELSWORD_MODEL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ELSWORD_MODEL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ELSWORD_MODEL_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ELSWORD_MODEL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ELSWORD_XET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ELSWORD_XET_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ELSWORD_XET_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ELSWORD_XET_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AISHA_MODEL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.AISHA_MODEL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'AISHA_MODEL_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.AISHA_MODEL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AISHA_XET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.AISHA_XET_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'AISHA_XET_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.AISHA_XET_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RENA_MODEL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.RENA_MODEL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'RENA_MODEL_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.RENA_MODEL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RENA_XET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.RENA_XET_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'RENA_XET_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.RENA_XET_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RAVEN_MODEL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.RAVEN_MODEL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'RAVEN_MODEL_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.RAVEN_MODEL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RAVEN_XET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.RAVEN_XET_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'RAVEN_XET_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.RAVEN_XET_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EVE_MODEL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.EVE_MODEL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'EVE_MODEL_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.EVE_MODEL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EVE_XET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.EVE_XET_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'EVE_XET_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.EVE_XET_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Anim_XET_Name {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Anim_XET_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Anim XET Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Anim_XET_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Anim_Name {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Anim_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Anim Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Anim_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Shop_Image {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Shop_ImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Shop Image\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Shop_ImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Drop_Viewer {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Drop_ViewerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Drop Viewer\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Drop_ViewerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Item_Type {
                get {
                    try {
                        return ((byte)(this[this.tableItem_History.Item_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Item Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Item_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Item_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Item Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Item_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEMTYPE_C {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ITEMTYPE_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ITEMTYPE_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ITEMTYPE_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Fashion {
                get {
                    try {
                        return ((bool)(this[this.tableItem_History.FashionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Fashion\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FashionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Vested {
                get {
                    try {
                        return ((bool)(this[this.tableItem_History.VestedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Vested\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.VestedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Can_Enchant {
                get {
                    try {
                        return ((bool)(this[this.tableItem_History.Can_EnchantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Can Enchant\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Can_EnchantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Use_Type {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.Use_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Use Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Use_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Use_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Use_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Use Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Use_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USETYPE_C {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.USETYPE_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'USETYPE_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.USETYPE_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Attach_FrameName {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Attach_FrameNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Attach FrameName\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Attach_FrameNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Elsword_X {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Elsword_XColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Elsword_X\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Elsword_XColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Elsword_Y {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Elsword_YColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Elsword_Y\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Elsword_YColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Elsword_Z {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Elsword_ZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Elsword_Z\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Elsword_ZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Lena_X {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Lena_XColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Lena_X\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Lena_XColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Lena_Y {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Lena_YColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Lena_Y\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Lena_YColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Lena_Z {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Lena_ZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Lena_Z\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Lena_ZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Aisha_X {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Aisha_XColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Aisha_X\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Aisha_XColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Aisha_Y {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Aisha_YColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Aisha_Y\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Aisha_YColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Aisha_Z {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Aisha_ZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Aisha_Z\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Aisha_ZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Raven_X {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Raven_XColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Raven_X\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Raven_XColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Raven_Y {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Raven_YColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Raven_Y\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Raven_YColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Raven_Z {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Raven_ZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Raven_Z\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Raven_ZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Eve_X {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Eve_XColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Eve_X\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Eve_XColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Eve_Y {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Eve_YColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Eve_Y\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Eve_YColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FO_Eve_Z {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.FO_Eve_ZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'FO_Eve_Z\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.FO_Eve_ZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Can_HyperMode {
                get {
                    try {
                        return ((bool)(this[this.tableItem_History.Can_HyperModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Can HyperMode\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Can_HyperModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Period_Type {
                get {
                    try {
                        return ((byte)(this[this.tableItem_History.Period_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Period Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Period_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Period_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Period_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Period Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Period_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PERIODTYPE_C {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.PERIODTYPE_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'PERIODTYPE_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.PERIODTYPE_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Endurance {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.EnduranceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Endurance\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.EnduranceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte EnduranceDamageMin {
                get {
                    try {
                        return ((byte)(this[this.tableItem_History.EnduranceDamageMinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'EnduranceDamageMin\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.EnduranceDamageMinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte EnduranceDamageMax {
                get {
                    try {
                        return ((byte)(this[this.tableItem_History.EnduranceDamageMaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'EnduranceDamageMax\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.EnduranceDamageMaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Repair_ED {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.Repair_EDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Repair ED\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Repair_EDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Repair_VP {
                get {
                    try {
                        return ((double)(this[this.tableItem_History.Repair_VPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Repair VP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Repair_VPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Quantity {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Quantity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Price_Type {
                get {
                    try {
                        return ((byte)(this[this.tableItem_History.Price_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Price Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Price_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Price_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Price_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Price Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Price_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRICETYPE_C {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.PRICETYPE_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'PRICETYPE_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.PRICETYPE_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Price {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Price\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Price_PvP_Point {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.Price_PvP_PointColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Price PvP Point\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Price_PvP_PointColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Use_Condition {
                get {
                    try {
                        return ((byte)(this[this.tableItem_History.Use_ConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Use Condition\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Use_ConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Use_Condition_ {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Use_Condition_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Use Condition_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Use_Condition_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USECONDITION_C {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.USECONDITION_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'USECONDITION_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.USECONDITION_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Unit_Type {
                get {
                    try {
                        return ((byte)(this[this.tableItem_History.Unit_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Unit Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Unit_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Unit_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Unit Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Unit_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNITTYPE_C {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.UNITTYPE_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'UNITTYPE_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.UNITTYPE_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Unit_Class {
                get {
                    try {
                        return ((byte)(this[this.tableItem_History.Unit_ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Unit Class\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Unit_ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit_Class_ {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Unit_Class_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Unit Class_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Unit_Class_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNITCLASS_C {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.UNITCLASS_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'UNITCLASS_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.UNITCLASS_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Use_Level {
                get {
                    try {
                        return ((byte)(this[this.tableItem_History.Use_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Use Level\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Use_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Eqip_Position {
                get {
                    try {
                        return ((byte)(this[this.tableItem_History.Eqip_PositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Eqip Position\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Eqip_PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Eqip_Position_ {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Eqip_Position_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Eqip Position_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Eqip_Position_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EQIPPOSITION_C {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.EQIPPOSITION_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'EQIPPOSITION_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.EQIPPOSITION_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Item_Grade {
                get {
                    try {
                        return ((byte)(this[this.tableItem_History.Item_GradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Item Grade\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Item_GradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Grade_ {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Item_Grade_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Item Grade_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Item_Grade_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEMGRADE_C {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ITEMGRADE_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ITEMGRADE_C\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ITEMGRADE_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BASE_HP {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.BASE_HPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'BASE_HP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.BASE_HPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ATK_PHYSIC {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.ATK_PHYSICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATK_PHYSIC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATK_PHYSICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ATK_MAGIC {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.ATK_MAGICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATK_MAGIC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATK_MAGICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEF_PHYSIC {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.DEF_PHYSICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'DEF_PHYSIC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.DEF_PHYSICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEF_MAGIC {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.DEF_MAGICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'DEF_MAGIC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.DEF_MAGICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_NUM {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SA_NUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SA_NUM\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SA_NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_01 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SA_01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SA_01\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SA_01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_02 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SA_02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SA_02\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SA_02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_03 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SA_03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SA_03\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SA_03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_04 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SA_04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SA_04\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SA_04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_05 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SA_05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SA_05\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SA_05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_06 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SA_06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SA_06\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SA_06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_07 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SA_07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SA_07\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SA_07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_08 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SA_08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SA_08\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SA_08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_09 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SA_09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SA_09\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SA_09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SA_10 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SA_10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SA_10\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SA_10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_01 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SO_01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SO_01\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SO_01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_02 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SO_02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SO_02\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SO_02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_03 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SO_03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SO_03\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SO_03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_04 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SO_04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SO_04\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SO_04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_05 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SO_05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SO_05\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SO_05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_06 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SO_06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SO_06\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SO_06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_07 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SO_07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SO_07\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SO_07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_08 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SO_08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SO_08\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SO_08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_09 {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SO_09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SO_09\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SO_09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte COOL_TIME {
                get {
                    try {
                        return ((byte)(this[this.tableItem_History.COOL_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'COOL_TIME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.COOL_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SET_ID {
                get {
                    try {
                        return ((int)(this[this.tableItem_History.SET_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SET_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SET_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Can_Use_Inventory {
                get {
                    try {
                        return ((bool)(this[this.tableItem_History.Can_Use_InventoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Can Use Inventory\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Can_Use_InventoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool NoEquip {
                get {
                    try {
                        return ((bool)(this[this.tableItem_History.NoEquipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'NoEquip\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.NoEquipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SLASH_TRACE_COLOR {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.SLASH_TRACE_COLORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SLASH_TRACE_COLOR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SLASH_TRACE_COLORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SLASH_TRACE_TIP_COLOR {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.SLASH_TRACE_TIP_COLORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'SLASH_TRACE_TIP_COLOR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.SLASH_TRACE_TIP_COLORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HYPER_SLASH_TRACE_COLOR {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.HYPER_SLASH_TRACE_COLORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'HYPER_SLASH_TRACE_COLOR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.HYPER_SLASH_TRACE_COLORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HYPER_SLASH_TRACE_TIP_COLOR {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.HYPER_SLASH_TRACE_TIP_COLORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'HYPER_SLASH_TRACE_TIP_COLOR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.HYPER_SLASH_TRACE_TIP_COLORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ELSWORD_ITEM_SCALE_ROTATE {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ELSWORD_ITEM_SCALE_ROTATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ELSWORD_ITEM_SCALE_ROTATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ELSWORD_ITEM_SCALE_ROTATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AISHA_ITEM_SCALE_ROTATE {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.AISHA_ITEM_SCALE_ROTATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'AISHA_ITEM_SCALE_ROTATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.AISHA_ITEM_SCALE_ROTATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RENA_ITEM_SCALE_ROTATE {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.RENA_ITEM_SCALE_ROTATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'RENA_ITEM_SCALE_ROTATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.RENA_ITEM_SCALE_ROTATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RAVEN_ITEM_SCALE_ROTATE {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.RAVEN_ITEM_SCALE_ROTATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'RAVEN_ITEM_SCALE_ROTATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.RAVEN_ITEM_SCALE_ROTATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EVE_ITEM_SCALE_ROTATE {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.EVE_ITEM_SCALE_ROTATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'EVE_ITEM_SCALE_ROTATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.EVE_ITEM_SCALE_ROTATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_NAME1 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ATTACHED_MESH_NAME1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATTACHED_MESH_NAME1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATTACHED_MESH_NAME1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_BONE_NAME1 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ATTACHED_MESH_BONE_NAME1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATTACHED_MESH_BONE_NAME1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATTACHED_MESH_BONE_NAME1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_NAME2 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ATTACHED_MESH_NAME2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATTACHED_MESH_NAME2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATTACHED_MESH_NAME2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_BONE_NAME2 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ATTACHED_MESH_BONE_NAME2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATTACHED_MESH_BONE_NAME2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATTACHED_MESH_BONE_NAME2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_NAME3 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ATTACHED_MESH_NAME3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATTACHED_MESH_NAME3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATTACHED_MESH_NAME3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_BONE_NAME3 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ATTACHED_MESH_BONE_NAME3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATTACHED_MESH_BONE_NAME3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATTACHED_MESH_BONE_NAME3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_NAME4 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ATTACHED_MESH_NAME4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATTACHED_MESH_NAME4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATTACHED_MESH_NAME4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_BONE_NAME4 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ATTACHED_MESH_BONE_NAME4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATTACHED_MESH_BONE_NAME4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATTACHED_MESH_BONE_NAME4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_NAME5 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ATTACHED_MESH_NAME5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATTACHED_MESH_NAME5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATTACHED_MESH_NAME5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_MESH_BONE_NAME5 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ATTACHED_MESH_BONE_NAME5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATTACHED_MESH_BONE_NAME5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATTACHED_MESH_BONE_NAME5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Model_Name1 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Model_Name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Model Name1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Model_Name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Attach_FrameName1 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.Attach_FrameName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Attach FrameName1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.Attach_FrameName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_PARTICLE_NAME1 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ATTACHED_PARTICLE_NAME1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATTACHED_PARTICLE_NAME1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATTACHED_PARTICLE_NAME1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_PARTICLE_BONE_NAME1 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ATTACHED_PARTICLE_BONE_NAME1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATTACHED_PARTICLE_BONE_NAME1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATTACHED_PARTICLE_BONE_NAME1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_PARTICLE_NAME2 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ATTACHED_PARTICLE_NAME2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATTACHED_PARTICLE_NAME2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATTACHED_PARTICLE_NAME2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTACHED_PARTICLE_BONE_NAME2 {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.ATTACHED_PARTICLE_BONE_NAME2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'ATTACHED_PARTICLE_BONE_NAME2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.ATTACHED_PARTICLE_BONE_NAME2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'UserID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserIP {
                get {
                    try {
                        return ((string)(this[this.tableItem_History.UserIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'UserIP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.UserIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItem_History.RegdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Item_History\' 테이블의 \'Regdate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableItem_History.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableItem_History.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableItem_History.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableItem_History.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableItem_History.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescription_In_ShopNull() {
                return this.IsNull(this.tableItem_History.Description_In_ShopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescription_In_ShopNull() {
                this[this.tableItem_History.Description_In_ShopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModel_NameNull() {
                return this.IsNull(this.tableItem_History.Model_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModel_NameNull() {
                this[this.tableItem_History.Model_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTexture_Change_XET_NameNull() {
                return this.IsNull(this.tableItem_History.Texture_Change_XET_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTexture_Change_XET_NameNull() {
                this[this.tableItem_History.Texture_Change_XET_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELSWORD_MODEL_NAMENull() {
                return this.IsNull(this.tableItem_History.ELSWORD_MODEL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELSWORD_MODEL_NAMENull() {
                this[this.tableItem_History.ELSWORD_MODEL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELSWORD_XET_NAMENull() {
                return this.IsNull(this.tableItem_History.ELSWORD_XET_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELSWORD_XET_NAMENull() {
                this[this.tableItem_History.ELSWORD_XET_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAISHA_MODEL_NAMENull() {
                return this.IsNull(this.tableItem_History.AISHA_MODEL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAISHA_MODEL_NAMENull() {
                this[this.tableItem_History.AISHA_MODEL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAISHA_XET_NAMENull() {
                return this.IsNull(this.tableItem_History.AISHA_XET_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAISHA_XET_NAMENull() {
                this[this.tableItem_History.AISHA_XET_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRENA_MODEL_NAMENull() {
                return this.IsNull(this.tableItem_History.RENA_MODEL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRENA_MODEL_NAMENull() {
                this[this.tableItem_History.RENA_MODEL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRENA_XET_NAMENull() {
                return this.IsNull(this.tableItem_History.RENA_XET_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRENA_XET_NAMENull() {
                this[this.tableItem_History.RENA_XET_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAVEN_MODEL_NAMENull() {
                return this.IsNull(this.tableItem_History.RAVEN_MODEL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAVEN_MODEL_NAMENull() {
                this[this.tableItem_History.RAVEN_MODEL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAVEN_XET_NAMENull() {
                return this.IsNull(this.tableItem_History.RAVEN_XET_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAVEN_XET_NAMENull() {
                this[this.tableItem_History.RAVEN_XET_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEVE_MODEL_NAMENull() {
                return this.IsNull(this.tableItem_History.EVE_MODEL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEVE_MODEL_NAMENull() {
                this[this.tableItem_History.EVE_MODEL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEVE_XET_NAMENull() {
                return this.IsNull(this.tableItem_History.EVE_XET_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEVE_XET_NAMENull() {
                this[this.tableItem_History.EVE_XET_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnim_XET_NameNull() {
                return this.IsNull(this.tableItem_History.Anim_XET_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnim_XET_NameNull() {
                this[this.tableItem_History.Anim_XET_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnim_NameNull() {
                return this.IsNull(this.tableItem_History.Anim_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnim_NameNull() {
                this[this.tableItem_History.Anim_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShop_ImageNull() {
                return this.IsNull(this.tableItem_History.Shop_ImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShop_ImageNull() {
                this[this.tableItem_History.Shop_ImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrop_ViewerNull() {
                return this.IsNull(this.tableItem_History.Drop_ViewerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrop_ViewerNull() {
                this[this.tableItem_History.Drop_ViewerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_TypeNull() {
                return this.IsNull(this.tableItem_History.Item_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_TypeNull() {
                this[this.tableItem_History.Item_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_Type_Null() {
                return this.IsNull(this.tableItem_History.Item_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_Type_Null() {
                this[this.tableItem_History.Item_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEMTYPE_CNull() {
                return this.IsNull(this.tableItem_History.ITEMTYPE_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEMTYPE_CNull() {
                this[this.tableItem_History.ITEMTYPE_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFashionNull() {
                return this.IsNull(this.tableItem_History.FashionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFashionNull() {
                this[this.tableItem_History.FashionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVestedNull() {
                return this.IsNull(this.tableItem_History.VestedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVestedNull() {
                this[this.tableItem_History.VestedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCan_EnchantNull() {
                return this.IsNull(this.tableItem_History.Can_EnchantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCan_EnchantNull() {
                this[this.tableItem_History.Can_EnchantColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUse_TypeNull() {
                return this.IsNull(this.tableItem_History.Use_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUse_TypeNull() {
                this[this.tableItem_History.Use_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUse_Type_Null() {
                return this.IsNull(this.tableItem_History.Use_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUse_Type_Null() {
                this[this.tableItem_History.Use_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSETYPE_CNull() {
                return this.IsNull(this.tableItem_History.USETYPE_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSETYPE_CNull() {
                this[this.tableItem_History.USETYPE_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttach_FrameNameNull() {
                return this.IsNull(this.tableItem_History.Attach_FrameNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttach_FrameNameNull() {
                this[this.tableItem_History.Attach_FrameNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Elsword_XNull() {
                return this.IsNull(this.tableItem_History.FO_Elsword_XColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Elsword_XNull() {
                this[this.tableItem_History.FO_Elsword_XColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Elsword_YNull() {
                return this.IsNull(this.tableItem_History.FO_Elsword_YColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Elsword_YNull() {
                this[this.tableItem_History.FO_Elsword_YColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Elsword_ZNull() {
                return this.IsNull(this.tableItem_History.FO_Elsword_ZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Elsword_ZNull() {
                this[this.tableItem_History.FO_Elsword_ZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Lena_XNull() {
                return this.IsNull(this.tableItem_History.FO_Lena_XColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Lena_XNull() {
                this[this.tableItem_History.FO_Lena_XColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Lena_YNull() {
                return this.IsNull(this.tableItem_History.FO_Lena_YColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Lena_YNull() {
                this[this.tableItem_History.FO_Lena_YColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Lena_ZNull() {
                return this.IsNull(this.tableItem_History.FO_Lena_ZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Lena_ZNull() {
                this[this.tableItem_History.FO_Lena_ZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Aisha_XNull() {
                return this.IsNull(this.tableItem_History.FO_Aisha_XColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Aisha_XNull() {
                this[this.tableItem_History.FO_Aisha_XColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Aisha_YNull() {
                return this.IsNull(this.tableItem_History.FO_Aisha_YColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Aisha_YNull() {
                this[this.tableItem_History.FO_Aisha_YColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Aisha_ZNull() {
                return this.IsNull(this.tableItem_History.FO_Aisha_ZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Aisha_ZNull() {
                this[this.tableItem_History.FO_Aisha_ZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Raven_XNull() {
                return this.IsNull(this.tableItem_History.FO_Raven_XColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Raven_XNull() {
                this[this.tableItem_History.FO_Raven_XColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Raven_YNull() {
                return this.IsNull(this.tableItem_History.FO_Raven_YColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Raven_YNull() {
                this[this.tableItem_History.FO_Raven_YColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Raven_ZNull() {
                return this.IsNull(this.tableItem_History.FO_Raven_ZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Raven_ZNull() {
                this[this.tableItem_History.FO_Raven_ZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Eve_XNull() {
                return this.IsNull(this.tableItem_History.FO_Eve_XColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Eve_XNull() {
                this[this.tableItem_History.FO_Eve_XColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Eve_YNull() {
                return this.IsNull(this.tableItem_History.FO_Eve_YColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Eve_YNull() {
                this[this.tableItem_History.FO_Eve_YColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFO_Eve_ZNull() {
                return this.IsNull(this.tableItem_History.FO_Eve_ZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFO_Eve_ZNull() {
                this[this.tableItem_History.FO_Eve_ZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCan_HyperModeNull() {
                return this.IsNull(this.tableItem_History.Can_HyperModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCan_HyperModeNull() {
                this[this.tableItem_History.Can_HyperModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriod_TypeNull() {
                return this.IsNull(this.tableItem_History.Period_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriod_TypeNull() {
                this[this.tableItem_History.Period_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriod_Type_Null() {
                return this.IsNull(this.tableItem_History.Period_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriod_Type_Null() {
                this[this.tableItem_History.Period_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPERIODTYPE_CNull() {
                return this.IsNull(this.tableItem_History.PERIODTYPE_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPERIODTYPE_CNull() {
                this[this.tableItem_History.PERIODTYPE_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnduranceNull() {
                return this.IsNull(this.tableItem_History.EnduranceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnduranceNull() {
                this[this.tableItem_History.EnduranceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnduranceDamageMinNull() {
                return this.IsNull(this.tableItem_History.EnduranceDamageMinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnduranceDamageMinNull() {
                this[this.tableItem_History.EnduranceDamageMinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnduranceDamageMaxNull() {
                return this.IsNull(this.tableItem_History.EnduranceDamageMaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnduranceDamageMaxNull() {
                this[this.tableItem_History.EnduranceDamageMaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRepair_EDNull() {
                return this.IsNull(this.tableItem_History.Repair_EDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRepair_EDNull() {
                this[this.tableItem_History.Repair_EDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRepair_VPNull() {
                return this.IsNull(this.tableItem_History.Repair_VPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRepair_VPNull() {
                this[this.tableItem_History.Repair_VPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableItem_History.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableItem_History.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrice_TypeNull() {
                return this.IsNull(this.tableItem_History.Price_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrice_TypeNull() {
                this[this.tableItem_History.Price_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrice_Type_Null() {
                return this.IsNull(this.tableItem_History.Price_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrice_Type_Null() {
                this[this.tableItem_History.Price_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICETYPE_CNull() {
                return this.IsNull(this.tableItem_History.PRICETYPE_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICETYPE_CNull() {
                this[this.tableItem_History.PRICETYPE_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tableItem_History.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tableItem_History.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrice_PvP_PointNull() {
                return this.IsNull(this.tableItem_History.Price_PvP_PointColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrice_PvP_PointNull() {
                this[this.tableItem_History.Price_PvP_PointColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUse_ConditionNull() {
                return this.IsNull(this.tableItem_History.Use_ConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUse_ConditionNull() {
                this[this.tableItem_History.Use_ConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUse_Condition_Null() {
                return this.IsNull(this.tableItem_History.Use_Condition_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUse_Condition_Null() {
                this[this.tableItem_History.Use_Condition_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSECONDITION_CNull() {
                return this.IsNull(this.tableItem_History.USECONDITION_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSECONDITION_CNull() {
                this[this.tableItem_History.USECONDITION_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_TypeNull() {
                return this.IsNull(this.tableItem_History.Unit_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_TypeNull() {
                this[this.tableItem_History.Unit_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_Type_Null() {
                return this.IsNull(this.tableItem_History.Unit_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_Type_Null() {
                this[this.tableItem_History.Unit_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNITTYPE_CNull() {
                return this.IsNull(this.tableItem_History.UNITTYPE_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNITTYPE_CNull() {
                this[this.tableItem_History.UNITTYPE_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_ClassNull() {
                return this.IsNull(this.tableItem_History.Unit_ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_ClassNull() {
                this[this.tableItem_History.Unit_ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_Class_Null() {
                return this.IsNull(this.tableItem_History.Unit_Class_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_Class_Null() {
                this[this.tableItem_History.Unit_Class_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNITCLASS_CNull() {
                return this.IsNull(this.tableItem_History.UNITCLASS_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNITCLASS_CNull() {
                this[this.tableItem_History.UNITCLASS_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUse_LevelNull() {
                return this.IsNull(this.tableItem_History.Use_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUse_LevelNull() {
                this[this.tableItem_History.Use_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEqip_PositionNull() {
                return this.IsNull(this.tableItem_History.Eqip_PositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEqip_PositionNull() {
                this[this.tableItem_History.Eqip_PositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEqip_Position_Null() {
                return this.IsNull(this.tableItem_History.Eqip_Position_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEqip_Position_Null() {
                this[this.tableItem_History.Eqip_Position_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEQIPPOSITION_CNull() {
                return this.IsNull(this.tableItem_History.EQIPPOSITION_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEQIPPOSITION_CNull() {
                this[this.tableItem_History.EQIPPOSITION_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_GradeNull() {
                return this.IsNull(this.tableItem_History.Item_GradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_GradeNull() {
                this[this.tableItem_History.Item_GradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_Grade_Null() {
                return this.IsNull(this.tableItem_History.Item_Grade_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_Grade_Null() {
                this[this.tableItem_History.Item_Grade_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEMGRADE_CNull() {
                return this.IsNull(this.tableItem_History.ITEMGRADE_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEMGRADE_CNull() {
                this[this.tableItem_History.ITEMGRADE_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBASE_HPNull() {
                return this.IsNull(this.tableItem_History.BASE_HPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBASE_HPNull() {
                this[this.tableItem_History.BASE_HPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATK_PHYSICNull() {
                return this.IsNull(this.tableItem_History.ATK_PHYSICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATK_PHYSICNull() {
                this[this.tableItem_History.ATK_PHYSICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATK_MAGICNull() {
                return this.IsNull(this.tableItem_History.ATK_MAGICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATK_MAGICNull() {
                this[this.tableItem_History.ATK_MAGICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEF_PHYSICNull() {
                return this.IsNull(this.tableItem_History.DEF_PHYSICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEF_PHYSICNull() {
                this[this.tableItem_History.DEF_PHYSICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEF_MAGICNull() {
                return this.IsNull(this.tableItem_History.DEF_MAGICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEF_MAGICNull() {
                this[this.tableItem_History.DEF_MAGICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_NUMNull() {
                return this.IsNull(this.tableItem_History.SA_NUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_NUMNull() {
                this[this.tableItem_History.SA_NUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_01Null() {
                return this.IsNull(this.tableItem_History.SA_01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_01Null() {
                this[this.tableItem_History.SA_01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_02Null() {
                return this.IsNull(this.tableItem_History.SA_02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_02Null() {
                this[this.tableItem_History.SA_02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_03Null() {
                return this.IsNull(this.tableItem_History.SA_03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_03Null() {
                this[this.tableItem_History.SA_03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_04Null() {
                return this.IsNull(this.tableItem_History.SA_04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_04Null() {
                this[this.tableItem_History.SA_04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_05Null() {
                return this.IsNull(this.tableItem_History.SA_05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_05Null() {
                this[this.tableItem_History.SA_05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_06Null() {
                return this.IsNull(this.tableItem_History.SA_06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_06Null() {
                this[this.tableItem_History.SA_06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_07Null() {
                return this.IsNull(this.tableItem_History.SA_07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_07Null() {
                this[this.tableItem_History.SA_07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_08Null() {
                return this.IsNull(this.tableItem_History.SA_08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_08Null() {
                this[this.tableItem_History.SA_08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_09Null() {
                return this.IsNull(this.tableItem_History.SA_09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_09Null() {
                this[this.tableItem_History.SA_09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSA_10Null() {
                return this.IsNull(this.tableItem_History.SA_10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSA_10Null() {
                this[this.tableItem_History.SA_10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_01Null() {
                return this.IsNull(this.tableItem_History.SO_01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_01Null() {
                this[this.tableItem_History.SO_01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_02Null() {
                return this.IsNull(this.tableItem_History.SO_02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_02Null() {
                this[this.tableItem_History.SO_02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_03Null() {
                return this.IsNull(this.tableItem_History.SO_03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_03Null() {
                this[this.tableItem_History.SO_03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_04Null() {
                return this.IsNull(this.tableItem_History.SO_04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_04Null() {
                this[this.tableItem_History.SO_04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_05Null() {
                return this.IsNull(this.tableItem_History.SO_05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_05Null() {
                this[this.tableItem_History.SO_05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_06Null() {
                return this.IsNull(this.tableItem_History.SO_06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_06Null() {
                this[this.tableItem_History.SO_06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_07Null() {
                return this.IsNull(this.tableItem_History.SO_07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_07Null() {
                this[this.tableItem_History.SO_07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_08Null() {
                return this.IsNull(this.tableItem_History.SO_08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_08Null() {
                this[this.tableItem_History.SO_08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_09Null() {
                return this.IsNull(this.tableItem_History.SO_09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_09Null() {
                this[this.tableItem_History.SO_09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOOL_TIMENull() {
                return this.IsNull(this.tableItem_History.COOL_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOOL_TIMENull() {
                this[this.tableItem_History.COOL_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSET_IDNull() {
                return this.IsNull(this.tableItem_History.SET_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSET_IDNull() {
                this[this.tableItem_History.SET_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCan_Use_InventoryNull() {
                return this.IsNull(this.tableItem_History.Can_Use_InventoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCan_Use_InventoryNull() {
                this[this.tableItem_History.Can_Use_InventoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoEquipNull() {
                return this.IsNull(this.tableItem_History.NoEquipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoEquipNull() {
                this[this.tableItem_History.NoEquipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLASH_TRACE_COLORNull() {
                return this.IsNull(this.tableItem_History.SLASH_TRACE_COLORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLASH_TRACE_COLORNull() {
                this[this.tableItem_History.SLASH_TRACE_COLORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLASH_TRACE_TIP_COLORNull() {
                return this.IsNull(this.tableItem_History.SLASH_TRACE_TIP_COLORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLASH_TRACE_TIP_COLORNull() {
                this[this.tableItem_History.SLASH_TRACE_TIP_COLORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHYPER_SLASH_TRACE_COLORNull() {
                return this.IsNull(this.tableItem_History.HYPER_SLASH_TRACE_COLORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHYPER_SLASH_TRACE_COLORNull() {
                this[this.tableItem_History.HYPER_SLASH_TRACE_COLORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHYPER_SLASH_TRACE_TIP_COLORNull() {
                return this.IsNull(this.tableItem_History.HYPER_SLASH_TRACE_TIP_COLORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHYPER_SLASH_TRACE_TIP_COLORNull() {
                this[this.tableItem_History.HYPER_SLASH_TRACE_TIP_COLORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELSWORD_ITEM_SCALE_ROTATENull() {
                return this.IsNull(this.tableItem_History.ELSWORD_ITEM_SCALE_ROTATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELSWORD_ITEM_SCALE_ROTATENull() {
                this[this.tableItem_History.ELSWORD_ITEM_SCALE_ROTATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAISHA_ITEM_SCALE_ROTATENull() {
                return this.IsNull(this.tableItem_History.AISHA_ITEM_SCALE_ROTATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAISHA_ITEM_SCALE_ROTATENull() {
                this[this.tableItem_History.AISHA_ITEM_SCALE_ROTATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRENA_ITEM_SCALE_ROTATENull() {
                return this.IsNull(this.tableItem_History.RENA_ITEM_SCALE_ROTATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRENA_ITEM_SCALE_ROTATENull() {
                this[this.tableItem_History.RENA_ITEM_SCALE_ROTATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAVEN_ITEM_SCALE_ROTATENull() {
                return this.IsNull(this.tableItem_History.RAVEN_ITEM_SCALE_ROTATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAVEN_ITEM_SCALE_ROTATENull() {
                this[this.tableItem_History.RAVEN_ITEM_SCALE_ROTATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEVE_ITEM_SCALE_ROTATENull() {
                return this.IsNull(this.tableItem_History.EVE_ITEM_SCALE_ROTATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEVE_ITEM_SCALE_ROTATENull() {
                this[this.tableItem_History.EVE_ITEM_SCALE_ROTATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_NAME1Null() {
                return this.IsNull(this.tableItem_History.ATTACHED_MESH_NAME1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_NAME1Null() {
                this[this.tableItem_History.ATTACHED_MESH_NAME1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_BONE_NAME1Null() {
                return this.IsNull(this.tableItem_History.ATTACHED_MESH_BONE_NAME1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_BONE_NAME1Null() {
                this[this.tableItem_History.ATTACHED_MESH_BONE_NAME1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_NAME2Null() {
                return this.IsNull(this.tableItem_History.ATTACHED_MESH_NAME2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_NAME2Null() {
                this[this.tableItem_History.ATTACHED_MESH_NAME2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_BONE_NAME2Null() {
                return this.IsNull(this.tableItem_History.ATTACHED_MESH_BONE_NAME2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_BONE_NAME2Null() {
                this[this.tableItem_History.ATTACHED_MESH_BONE_NAME2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_NAME3Null() {
                return this.IsNull(this.tableItem_History.ATTACHED_MESH_NAME3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_NAME3Null() {
                this[this.tableItem_History.ATTACHED_MESH_NAME3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_BONE_NAME3Null() {
                return this.IsNull(this.tableItem_History.ATTACHED_MESH_BONE_NAME3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_BONE_NAME3Null() {
                this[this.tableItem_History.ATTACHED_MESH_BONE_NAME3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_NAME4Null() {
                return this.IsNull(this.tableItem_History.ATTACHED_MESH_NAME4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_NAME4Null() {
                this[this.tableItem_History.ATTACHED_MESH_NAME4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_BONE_NAME4Null() {
                return this.IsNull(this.tableItem_History.ATTACHED_MESH_BONE_NAME4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_BONE_NAME4Null() {
                this[this.tableItem_History.ATTACHED_MESH_BONE_NAME4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_NAME5Null() {
                return this.IsNull(this.tableItem_History.ATTACHED_MESH_NAME5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_NAME5Null() {
                this[this.tableItem_History.ATTACHED_MESH_NAME5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_MESH_BONE_NAME5Null() {
                return this.IsNull(this.tableItem_History.ATTACHED_MESH_BONE_NAME5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_MESH_BONE_NAME5Null() {
                this[this.tableItem_History.ATTACHED_MESH_BONE_NAME5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModel_Name1Null() {
                return this.IsNull(this.tableItem_History.Model_Name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModel_Name1Null() {
                this[this.tableItem_History.Model_Name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttach_FrameName1Null() {
                return this.IsNull(this.tableItem_History.Attach_FrameName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttach_FrameName1Null() {
                this[this.tableItem_History.Attach_FrameName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_PARTICLE_NAME1Null() {
                return this.IsNull(this.tableItem_History.ATTACHED_PARTICLE_NAME1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_PARTICLE_NAME1Null() {
                this[this.tableItem_History.ATTACHED_PARTICLE_NAME1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_PARTICLE_BONE_NAME1Null() {
                return this.IsNull(this.tableItem_History.ATTACHED_PARTICLE_BONE_NAME1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_PARTICLE_BONE_NAME1Null() {
                this[this.tableItem_History.ATTACHED_PARTICLE_BONE_NAME1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_PARTICLE_NAME2Null() {
                return this.IsNull(this.tableItem_History.ATTACHED_PARTICLE_NAME2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_PARTICLE_NAME2Null() {
                this[this.tableItem_History.ATTACHED_PARTICLE_NAME2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTACHED_PARTICLE_BONE_NAME2Null() {
                return this.IsNull(this.tableItem_History.ATTACHED_PARTICLE_BONE_NAME2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTACHED_PARTICLE_BONE_NAME2Null() {
                this[this.tableItem_History.ATTACHED_PARTICLE_BONE_NAME2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableItem_History.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableItem_History.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIPNull() {
                return this.IsNull(this.tableItem_History.UserIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIPNull() {
                this[this.tableItem_History.UserIPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegdateNull() {
                return this.IsNull(this.tableItem_History.RegdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegdateNull() {
                this[this.tableItem_History.RegdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SetItemRow : global::System.Data.DataRow {
            
            private SetItemDataTable tableSetItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SetItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSetItem = ((SetItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableSetItem.IndexKeyColumn]));
                }
                set {
                    this[this.tableSetItem.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SetID {
                get {
                    return ((int)(this[this.tableSetItem.SetIDColumn]));
                }
                set {
                    this[this.tableSetItem.SetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetName {
                get {
                    try {
                        return ((string)(this[this.tableSetItem.SetNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem\' 테이블의 \'SetName\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem.SetNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetItem_Des {
                get {
                    try {
                        return ((string)(this[this.tableSetItem.SetItem_DesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem\' 테이블의 \'SetItem_Des\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem.SetItem_DesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NeedPartsNum {
                get {
                    try {
                        return ((int)(this[this.tableSetItem.NeedPartsNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem\' 테이블의 \'NeedPartsNum\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem.NeedPartsNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option1 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem.Option1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem\' 테이블의 \'Option1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem.Option1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option2 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem.Option2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem\' 테이블의 \'Option2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem.Option2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option3 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem.Option3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem\' 테이블의 \'Option3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem.Option3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option4 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem.Option4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem\' 테이블의 \'Option4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem.Option4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option5 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem.Option5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem\' 테이블의 \'Option5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem.Option5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option6 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem.Option6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem\' 테이블의 \'Option6\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem.Option6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option7 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem.Option7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem\' 테이블의 \'Option7\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem.Option7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option8 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem.Option8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem\' 테이블의 \'Option8\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem.Option8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option9 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem.Option9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem\' 테이블의 \'Option9\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem.Option9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSetItem.RegdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem\' 테이블의 \'Regdate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetNameNull() {
                return this.IsNull(this.tableSetItem.SetNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetNameNull() {
                this[this.tableSetItem.SetNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetItem_DesNull() {
                return this.IsNull(this.tableSetItem.SetItem_DesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetItem_DesNull() {
                this[this.tableSetItem.SetItem_DesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeedPartsNumNull() {
                return this.IsNull(this.tableSetItem.NeedPartsNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeedPartsNumNull() {
                this[this.tableSetItem.NeedPartsNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption1Null() {
                return this.IsNull(this.tableSetItem.Option1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption1Null() {
                this[this.tableSetItem.Option1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption2Null() {
                return this.IsNull(this.tableSetItem.Option2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption2Null() {
                this[this.tableSetItem.Option2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption3Null() {
                return this.IsNull(this.tableSetItem.Option3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption3Null() {
                this[this.tableSetItem.Option3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption4Null() {
                return this.IsNull(this.tableSetItem.Option4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption4Null() {
                this[this.tableSetItem.Option4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption5Null() {
                return this.IsNull(this.tableSetItem.Option5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption5Null() {
                this[this.tableSetItem.Option5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption6Null() {
                return this.IsNull(this.tableSetItem.Option6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption6Null() {
                this[this.tableSetItem.Option6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption7Null() {
                return this.IsNull(this.tableSetItem.Option7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption7Null() {
                this[this.tableSetItem.Option7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption8Null() {
                return this.IsNull(this.tableSetItem.Option8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption8Null() {
                this[this.tableSetItem.Option8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption9Null() {
                return this.IsNull(this.tableSetItem.Option9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption9Null() {
                this[this.tableSetItem.Option9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegdateNull() {
                return this.IsNull(this.tableSetItem.RegdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegdateNull() {
                this[this.tableSetItem.RegdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SetItem_HistoryRow : global::System.Data.DataRow {
            
            private SetItem_HistoryDataTable tableSetItem_History;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SetItem_HistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSetItem_History = ((SetItem_HistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableSetItem_History.IndexKeyColumn]));
                }
                set {
                    this[this.tableSetItem_History.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SetId {
                get {
                    return ((int)(this[this.tableSetItem_History.SetIdColumn]));
                }
                set {
                    this[this.tableSetItem_History.SetIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetName {
                get {
                    try {
                        return ((string)(this[this.tableSetItem_History.SetNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'SetName\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.SetNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetItem_Des {
                get {
                    try {
                        return ((string)(this[this.tableSetItem_History.SetItem_DesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'SetItem_Des\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.SetItem_DesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NeedPartsNum {
                get {
                    try {
                        return ((int)(this[this.tableSetItem_History.NeedPartsNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'NeedPartsNum\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.NeedPartsNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option1 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem_History.Option1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'Option1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.Option1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option2 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem_History.Option2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'Option2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.Option2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option3 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem_History.Option3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'Option3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.Option3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option4 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem_History.Option4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'Option4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.Option4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option5 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem_History.Option5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'Option5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.Option5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option6 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem_History.Option6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'Option6\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.Option6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option7 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem_History.Option7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'Option7\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.Option7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option8 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem_History.Option8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'Option8\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.Option8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option9 {
                get {
                    try {
                        return ((int)(this[this.tableSetItem_History.Option9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'Option9\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.Option9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableSetItem_History.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'UserID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserIP {
                get {
                    try {
                        return ((string)(this[this.tableSetItem_History.UserIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'UserIP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.UserIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSetItem_History.RegdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SetItem_History\' 테이블의 \'Regdate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSetItem_History.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetNameNull() {
                return this.IsNull(this.tableSetItem_History.SetNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetNameNull() {
                this[this.tableSetItem_History.SetNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetItem_DesNull() {
                return this.IsNull(this.tableSetItem_History.SetItem_DesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetItem_DesNull() {
                this[this.tableSetItem_History.SetItem_DesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNeedPartsNumNull() {
                return this.IsNull(this.tableSetItem_History.NeedPartsNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNeedPartsNumNull() {
                this[this.tableSetItem_History.NeedPartsNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption1Null() {
                return this.IsNull(this.tableSetItem_History.Option1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption1Null() {
                this[this.tableSetItem_History.Option1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption2Null() {
                return this.IsNull(this.tableSetItem_History.Option2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption2Null() {
                this[this.tableSetItem_History.Option2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption3Null() {
                return this.IsNull(this.tableSetItem_History.Option3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption3Null() {
                this[this.tableSetItem_History.Option3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption4Null() {
                return this.IsNull(this.tableSetItem_History.Option4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption4Null() {
                this[this.tableSetItem_History.Option4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption5Null() {
                return this.IsNull(this.tableSetItem_History.Option5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption5Null() {
                this[this.tableSetItem_History.Option5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption6Null() {
                return this.IsNull(this.tableSetItem_History.Option6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption6Null() {
                this[this.tableSetItem_History.Option6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption7Null() {
                return this.IsNull(this.tableSetItem_History.Option7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption7Null() {
                this[this.tableSetItem_History.Option7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption8Null() {
                return this.IsNull(this.tableSetItem_History.Option8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption8Null() {
                this[this.tableSetItem_History.Option8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOption9Null() {
                return this.IsNull(this.tableSetItem_History.Option9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOption9Null() {
                this[this.tableSetItem_History.Option9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableSetItem_History.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableSetItem_History.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIPNull() {
                return this.IsNull(this.tableSetItem_History.UserIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIPNull() {
                this[this.tableSetItem_History.UserIPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegdateNull() {
                return this.IsNull(this.tableSetItem_History.RegdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegdateNull() {
                this[this.tableSetItem_History.RegdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class QuestTableRow : global::System.Data.DataRow {
            
            private QuestTableDataTable tableQuestTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QuestTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQuestTable = ((QuestTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableQuestTable.IndexKeyColumn]));
                }
                set {
                    this[this.tableQuestTable.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Enable_Quest {
                get {
                    try {
                        return ((bool)(this[this.tableQuestTable.Enable_QuestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Enable Quest\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Enable_QuestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quest_Type {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.Quest_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Quest Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Quest_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Start_NPC_Name {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.Start_NPC_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Start NPC Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Start_NPC_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string End_NPC_Name {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.End_NPC_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'End NPC Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.End_NPC_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Title\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Fair_Level {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Fair_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Fair Level\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Fair_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fair_Dungeon_ID {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.Fair_Dungeon_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Fair Dungeon ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Fair_Dungeon_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Quest_Repeat {
                get {
                    try {
                        return ((bool)(this[this.tableQuestTable.Quest_RepeatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Quest Repeat\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Quest_RepeatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Lv {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Condition_LvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Condition Lv\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Condition_LvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condition_Unit_Type {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.Condition_Unit_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Condition Unit Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Condition_Unit_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condition_Unit_Class {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.Condition_Unit_ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Condition Unit Class\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Condition_Unit_ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reward_Unit_Class {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.Reward_Unit_ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Reward Unit Class\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Reward_Unit_ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Change_Job_Type {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.Change_Job_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Change Job Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Change_Job_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Item_ID {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Condition_Item_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Condition Item ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Condition_Item_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Item_Quantity {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Condition_Item_QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Condition Item Quantity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Condition_Item_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubQuest1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.SubQuest1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'SubQuest1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.SubQuest1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubQuest2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.SubQuest2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'SubQuest2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.SubQuest2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubQuest3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.SubQuest3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'SubQuest3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.SubQuest3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubQuest4 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.SubQuest4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'SubQuest4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.SubQuest4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubQUest5 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.SubQUest5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'SubQUest5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.SubQUest5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Reward_Enable {
                get {
                    try {
                        return ((bool)(this[this.tableQuestTable.Reward_EnableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Reward Enable\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Reward_EnableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_EXP {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Reward_EXPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Reward EXP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Reward_EXPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_ED {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Reward_EDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Reward ED\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Reward_EDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reward_Grade {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.Reward_GradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Reward Grade\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Reward_GradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_Buff {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Reward_BuffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Reward Buff\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Reward_BuffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_SP {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Reward_SPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Reward SP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Reward_SPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_Item1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Reward_Item1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Reward Item1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Reward_Item1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name1 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'name1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Period_1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Period_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Period 1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Period_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_ItemQuantity1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Reward_ItemQuantity1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Reward ItemQuantity1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Reward_ItemQuantity1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket_Option1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Socket_Option1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Socket Option1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Socket_Option1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_Item2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Reward_Item2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Reward Item2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Reward_Item2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name2 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.name2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'name2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.name2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Period_2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Period_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Period 2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Period_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_ItemQuantity2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Reward_ItemQuantity2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Reward ItemQuantity2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Reward_ItemQuantity2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket_Option2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Socket_Option2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Socket Option2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Socket_Option2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_Item3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Reward_Item3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Reward Item3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Reward_Item3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name3 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.name3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'name3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.name3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Period_3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Period_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Period 3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Period_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_ItemQuantity3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Reward_ItemQuantity3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Reward ItemQuantity3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Reward_ItemQuantity3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket_Option3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Socket_Option3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Socket Option3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Socket_Option3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_Item1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Reward_Item1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Reward Item1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Reward_Item1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name1_1 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.name1_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'name1_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.name1_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Period1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Period1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Period1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Period1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_ItemQuantity1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Reward_ItemQuantity1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Reward ItemQuantity1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Reward_ItemQuantity1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Socket_Option1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Socket_Option1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Socket Option1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Socket_Option1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_Item2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Reward_Item2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Reward Item2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Reward_Item2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name2_1 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.name2_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'name2_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.name2_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Period2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Period2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Period2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Period2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_ItemQuantity2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Reward_ItemQuantity2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Reward ItemQuantity2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Reward_ItemQuantity2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Socket_Option2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Socket_Option2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Socket Option2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Socket_Option2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_Item3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Reward_Item3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Reward Item3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Reward_Item3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name3_1 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.name3_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'name3_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.name3_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Period3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Period3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Period3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Period3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_ItemQuantity3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Reward_ItemQuantity3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Reward ItemQuantity3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Reward_ItemQuantity3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Socket_Option3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Socket_Option3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Socket Option3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Socket_Option3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_Item4 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Reward_Item4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Reward Item4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Reward_Item4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name4_1 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.name4_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'name4_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.name4_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Period4 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Period4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Period4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Period4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Select_Reward_ItemQuantity4 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.Select_Reward_ItemQuantity4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Reward ItemQuantity4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Reward_ItemQuantity4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Socket_Option4 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Socket_Option4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Socket Option4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Socket_Option4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_Item5 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Reward_Item5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Reward Item5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Reward_Item5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name5_1 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.name5_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'name5_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.name5_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Period5 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Period5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Period5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Period5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_ItemQuantity5 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Reward_ItemQuantity5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Reward ItemQuantity5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Reward_ItemQuantity5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Socket_Option5 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Socket_Option5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Socket Option5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Socket_Option5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_ItemCount {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Select_Reward_ItemCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Select Reward ItemCount\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Select_Reward_ItemCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Main_Text {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.Main_TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Main Text\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Main_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thanks_Text {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.Thanks_TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Thanks Text\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Thanks_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Diss_Clear_Text {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable.Diss_Clear_TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Diss Clear Text\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Diss_Clear_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Condition_ClearQuest_ID_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Condition ClearQuest ID 1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Condition_ClearQuest_ID_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Condition_ClearQuest_ID_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Condition ClearQuest ID 2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Condition_ClearQuest_ID_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Condition_ClearQuest_ID_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Condition ClearQuest ID 3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Condition_ClearQuest_ID_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_4 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Condition_ClearQuest_ID_4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Condition ClearQuest ID 4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Condition_ClearQuest_ID_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_5 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Condition_ClearQuest_ID_5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Condition ClearQuest ID 5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Condition_ClearQuest_ID_5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_6 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Condition_ClearQuest_ID_6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Condition ClearQuest ID 6\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Condition_ClearQuest_ID_6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_7 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Condition_ClearQuest_ID_7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Condition ClearQuest ID 7\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Condition_ClearQuest_ID_7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_8 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Condition_ClearQuest_ID_8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Condition ClearQuest ID 8\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Condition_ClearQuest_ID_8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_DisClearQuest_ID {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable.Condition_DisClearQuest_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable\' 테이블의 \'Condition DisClearQuest ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable.Condition_DisClearQuest_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    return ((global::System.DateTime)(this[this.tableQuestTable.RegdateColumn]));
                }
                set {
                    this[this.tableQuestTable.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableQuestTable.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableQuestTable.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnable_QuestNull() {
                return this.IsNull(this.tableQuestTable.Enable_QuestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnable_QuestNull() {
                this[this.tableQuestTable.Enable_QuestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuest_TypeNull() {
                return this.IsNull(this.tableQuestTable.Quest_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuest_TypeNull() {
                this[this.tableQuestTable.Quest_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStart_NPC_NameNull() {
                return this.IsNull(this.tableQuestTable.Start_NPC_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStart_NPC_NameNull() {
                this[this.tableQuestTable.Start_NPC_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnd_NPC_NameNull() {
                return this.IsNull(this.tableQuestTable.End_NPC_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnd_NPC_NameNull() {
                this[this.tableQuestTable.End_NPC_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitleNull() {
                return this.IsNull(this.tableQuestTable.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitleNull() {
                this[this.tableQuestTable.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFair_LevelNull() {
                return this.IsNull(this.tableQuestTable.Fair_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFair_LevelNull() {
                this[this.tableQuestTable.Fair_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFair_Dungeon_IDNull() {
                return this.IsNull(this.tableQuestTable.Fair_Dungeon_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFair_Dungeon_IDNull() {
                this[this.tableQuestTable.Fair_Dungeon_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuest_RepeatNull() {
                return this.IsNull(this.tableQuestTable.Quest_RepeatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuest_RepeatNull() {
                this[this.tableQuestTable.Quest_RepeatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_LvNull() {
                return this.IsNull(this.tableQuestTable.Condition_LvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_LvNull() {
                this[this.tableQuestTable.Condition_LvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_TypeNull() {
                return this.IsNull(this.tableQuestTable.Condition_Unit_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_TypeNull() {
                this[this.tableQuestTable.Condition_Unit_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_ClassNull() {
                return this.IsNull(this.tableQuestTable.Condition_Unit_ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_ClassNull() {
                this[this.tableQuestTable.Condition_Unit_ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_Unit_ClassNull() {
                return this.IsNull(this.tableQuestTable.Reward_Unit_ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_Unit_ClassNull() {
                this[this.tableQuestTable.Reward_Unit_ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChange_Job_TypeNull() {
                return this.IsNull(this.tableQuestTable.Change_Job_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChange_Job_TypeNull() {
                this[this.tableQuestTable.Change_Job_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Item_IDNull() {
                return this.IsNull(this.tableQuestTable.Condition_Item_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Item_IDNull() {
                this[this.tableQuestTable.Condition_Item_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Item_QuantityNull() {
                return this.IsNull(this.tableQuestTable.Condition_Item_QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Item_QuantityNull() {
                this[this.tableQuestTable.Condition_Item_QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubQuest1Null() {
                return this.IsNull(this.tableQuestTable.SubQuest1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubQuest1Null() {
                this[this.tableQuestTable.SubQuest1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubQuest2Null() {
                return this.IsNull(this.tableQuestTable.SubQuest2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubQuest2Null() {
                this[this.tableQuestTable.SubQuest2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubQuest3Null() {
                return this.IsNull(this.tableQuestTable.SubQuest3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubQuest3Null() {
                this[this.tableQuestTable.SubQuest3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubQuest4Null() {
                return this.IsNull(this.tableQuestTable.SubQuest4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubQuest4Null() {
                this[this.tableQuestTable.SubQuest4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubQUest5Null() {
                return this.IsNull(this.tableQuestTable.SubQUest5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubQUest5Null() {
                this[this.tableQuestTable.SubQUest5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_EnableNull() {
                return this.IsNull(this.tableQuestTable.Reward_EnableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_EnableNull() {
                this[this.tableQuestTable.Reward_EnableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_EXPNull() {
                return this.IsNull(this.tableQuestTable.Reward_EXPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_EXPNull() {
                this[this.tableQuestTable.Reward_EXPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_EDNull() {
                return this.IsNull(this.tableQuestTable.Reward_EDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_EDNull() {
                this[this.tableQuestTable.Reward_EDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_GradeNull() {
                return this.IsNull(this.tableQuestTable.Reward_GradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_GradeNull() {
                this[this.tableQuestTable.Reward_GradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_BuffNull() {
                return this.IsNull(this.tableQuestTable.Reward_BuffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_BuffNull() {
                this[this.tableQuestTable.Reward_BuffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_SPNull() {
                return this.IsNull(this.tableQuestTable.Reward_SPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_SPNull() {
                this[this.tableQuestTable.Reward_SPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_Item1Null() {
                return this.IsNull(this.tableQuestTable.Reward_Item1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_Item1Null() {
                this[this.tableQuestTable.Reward_Item1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname1Null() {
                return this.IsNull(this.tableQuestTable.name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname1Null() {
                this[this.tableQuestTable.name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriod_1Null() {
                return this.IsNull(this.tableQuestTable.Period_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriod_1Null() {
                this[this.tableQuestTable.Period_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_ItemQuantity1Null() {
                return this.IsNull(this.tableQuestTable.Reward_ItemQuantity1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_ItemQuantity1Null() {
                this[this.tableQuestTable.Reward_ItemQuantity1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket_Option1Null() {
                return this.IsNull(this.tableQuestTable.Socket_Option1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket_Option1Null() {
                this[this.tableQuestTable.Socket_Option1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_Item2Null() {
                return this.IsNull(this.tableQuestTable.Reward_Item2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_Item2Null() {
                this[this.tableQuestTable.Reward_Item2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname2Null() {
                return this.IsNull(this.tableQuestTable.name2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname2Null() {
                this[this.tableQuestTable.name2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriod_2Null() {
                return this.IsNull(this.tableQuestTable.Period_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriod_2Null() {
                this[this.tableQuestTable.Period_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_ItemQuantity2Null() {
                return this.IsNull(this.tableQuestTable.Reward_ItemQuantity2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_ItemQuantity2Null() {
                this[this.tableQuestTable.Reward_ItemQuantity2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket_Option2Null() {
                return this.IsNull(this.tableQuestTable.Socket_Option2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket_Option2Null() {
                this[this.tableQuestTable.Socket_Option2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_Item3Null() {
                return this.IsNull(this.tableQuestTable.Reward_Item3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_Item3Null() {
                this[this.tableQuestTable.Reward_Item3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname3Null() {
                return this.IsNull(this.tableQuestTable.name3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname3Null() {
                this[this.tableQuestTable.name3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriod_3Null() {
                return this.IsNull(this.tableQuestTable.Period_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriod_3Null() {
                this[this.tableQuestTable.Period_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_ItemQuantity3Null() {
                return this.IsNull(this.tableQuestTable.Reward_ItemQuantity3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_ItemQuantity3Null() {
                this[this.tableQuestTable.Reward_ItemQuantity3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket_Option3Null() {
                return this.IsNull(this.tableQuestTable.Socket_Option3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket_Option3Null() {
                this[this.tableQuestTable.Socket_Option3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_Item1Null() {
                return this.IsNull(this.tableQuestTable.Select_Reward_Item1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_Item1Null() {
                this[this.tableQuestTable.Select_Reward_Item1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname1_1Null() {
                return this.IsNull(this.tableQuestTable.name1_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname1_1Null() {
                this[this.tableQuestTable.name1_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Period1Null() {
                return this.IsNull(this.tableQuestTable.Select_Period1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Period1Null() {
                this[this.tableQuestTable.Select_Period1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_ItemQuantity1Null() {
                return this.IsNull(this.tableQuestTable.Select_Reward_ItemQuantity1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_ItemQuantity1Null() {
                this[this.tableQuestTable.Select_Reward_ItemQuantity1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Socket_Option1Null() {
                return this.IsNull(this.tableQuestTable.Select_Socket_Option1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Socket_Option1Null() {
                this[this.tableQuestTable.Select_Socket_Option1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_Item2Null() {
                return this.IsNull(this.tableQuestTable.Select_Reward_Item2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_Item2Null() {
                this[this.tableQuestTable.Select_Reward_Item2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname2_1Null() {
                return this.IsNull(this.tableQuestTable.name2_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname2_1Null() {
                this[this.tableQuestTable.name2_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Period2Null() {
                return this.IsNull(this.tableQuestTable.Select_Period2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Period2Null() {
                this[this.tableQuestTable.Select_Period2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_ItemQuantity2Null() {
                return this.IsNull(this.tableQuestTable.Select_Reward_ItemQuantity2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_ItemQuantity2Null() {
                this[this.tableQuestTable.Select_Reward_ItemQuantity2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Socket_Option2Null() {
                return this.IsNull(this.tableQuestTable.Select_Socket_Option2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Socket_Option2Null() {
                this[this.tableQuestTable.Select_Socket_Option2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_Item3Null() {
                return this.IsNull(this.tableQuestTable.Select_Reward_Item3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_Item3Null() {
                this[this.tableQuestTable.Select_Reward_Item3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname3_1Null() {
                return this.IsNull(this.tableQuestTable.name3_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname3_1Null() {
                this[this.tableQuestTable.name3_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Period3Null() {
                return this.IsNull(this.tableQuestTable.Select_Period3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Period3Null() {
                this[this.tableQuestTable.Select_Period3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_ItemQuantity3Null() {
                return this.IsNull(this.tableQuestTable.Select_Reward_ItemQuantity3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_ItemQuantity3Null() {
                this[this.tableQuestTable.Select_Reward_ItemQuantity3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Socket_Option3Null() {
                return this.IsNull(this.tableQuestTable.Select_Socket_Option3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Socket_Option3Null() {
                this[this.tableQuestTable.Select_Socket_Option3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_Item4Null() {
                return this.IsNull(this.tableQuestTable.Select_Reward_Item4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_Item4Null() {
                this[this.tableQuestTable.Select_Reward_Item4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname4_1Null() {
                return this.IsNull(this.tableQuestTable.name4_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname4_1Null() {
                this[this.tableQuestTable.name4_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Period4Null() {
                return this.IsNull(this.tableQuestTable.Select_Period4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Period4Null() {
                this[this.tableQuestTable.Select_Period4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_ItemQuantity4Null() {
                return this.IsNull(this.tableQuestTable.Select_Reward_ItemQuantity4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_ItemQuantity4Null() {
                this[this.tableQuestTable.Select_Reward_ItemQuantity4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Socket_Option4Null() {
                return this.IsNull(this.tableQuestTable.Select_Socket_Option4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Socket_Option4Null() {
                this[this.tableQuestTable.Select_Socket_Option4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_Item5Null() {
                return this.IsNull(this.tableQuestTable.Select_Reward_Item5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_Item5Null() {
                this[this.tableQuestTable.Select_Reward_Item5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname5_1Null() {
                return this.IsNull(this.tableQuestTable.name5_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname5_1Null() {
                this[this.tableQuestTable.name5_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Period5Null() {
                return this.IsNull(this.tableQuestTable.Select_Period5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Period5Null() {
                this[this.tableQuestTable.Select_Period5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_ItemQuantity5Null() {
                return this.IsNull(this.tableQuestTable.Select_Reward_ItemQuantity5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_ItemQuantity5Null() {
                this[this.tableQuestTable.Select_Reward_ItemQuantity5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Socket_Option5Null() {
                return this.IsNull(this.tableQuestTable.Select_Socket_Option5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Socket_Option5Null() {
                this[this.tableQuestTable.Select_Socket_Option5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_ItemCountNull() {
                return this.IsNull(this.tableQuestTable.Select_Reward_ItemCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_ItemCountNull() {
                this[this.tableQuestTable.Select_Reward_ItemCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMain_TextNull() {
                return this.IsNull(this.tableQuestTable.Main_TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMain_TextNull() {
                this[this.tableQuestTable.Main_TextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThanks_TextNull() {
                return this.IsNull(this.tableQuestTable.Thanks_TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThanks_TextNull() {
                this[this.tableQuestTable.Thanks_TextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiss_Clear_TextNull() {
                return this.IsNull(this.tableQuestTable.Diss_Clear_TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiss_Clear_TextNull() {
                this[this.tableQuestTable.Diss_Clear_TextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_1Null() {
                return this.IsNull(this.tableQuestTable.Condition_ClearQuest_ID_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_1Null() {
                this[this.tableQuestTable.Condition_ClearQuest_ID_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_2Null() {
                return this.IsNull(this.tableQuestTable.Condition_ClearQuest_ID_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_2Null() {
                this[this.tableQuestTable.Condition_ClearQuest_ID_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_3Null() {
                return this.IsNull(this.tableQuestTable.Condition_ClearQuest_ID_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_3Null() {
                this[this.tableQuestTable.Condition_ClearQuest_ID_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_4Null() {
                return this.IsNull(this.tableQuestTable.Condition_ClearQuest_ID_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_4Null() {
                this[this.tableQuestTable.Condition_ClearQuest_ID_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_5Null() {
                return this.IsNull(this.tableQuestTable.Condition_ClearQuest_ID_5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_5Null() {
                this[this.tableQuestTable.Condition_ClearQuest_ID_5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_6Null() {
                return this.IsNull(this.tableQuestTable.Condition_ClearQuest_ID_6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_6Null() {
                this[this.tableQuestTable.Condition_ClearQuest_ID_6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_7Null() {
                return this.IsNull(this.tableQuestTable.Condition_ClearQuest_ID_7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_7Null() {
                this[this.tableQuestTable.Condition_ClearQuest_ID_7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_8Null() {
                return this.IsNull(this.tableQuestTable.Condition_ClearQuest_ID_8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_8Null() {
                this[this.tableQuestTable.Condition_ClearQuest_ID_8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_DisClearQuest_IDNull() {
                return this.IsNull(this.tableQuestTable.Condition_DisClearQuest_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_DisClearQuest_IDNull() {
                this[this.tableQuestTable.Condition_DisClearQuest_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class QuestTable_HistoryRow : global::System.Data.DataRow {
            
            private QuestTable_HistoryDataTable tableQuestTable_History;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QuestTable_HistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQuestTable_History = ((QuestTable_HistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableQuestTable_History.IndexKeyColumn]));
                }
                set {
                    this[this.tableQuestTable_History.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Enable_Quest {
                get {
                    try {
                        return ((bool)(this[this.tableQuestTable_History.Enable_QuestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Enable Quest\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Enable_QuestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quest_Type {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.Quest_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Quest Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Quest_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Start_NPC_Name {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.Start_NPC_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Start NPC Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Start_NPC_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string End_NPC_Name {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.End_NPC_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'End NPC Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.End_NPC_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Title\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Fair_Level {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Fair_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Fair Level\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Fair_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fair_Dungeon_ID {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.Fair_Dungeon_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Fair Dungeon ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Fair_Dungeon_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quest_Repeat {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.Quest_RepeatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Quest Repeat\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Quest_RepeatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Lv {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Condition_LvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Condition Lv\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Condition_LvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condition_Unit_Type {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.Condition_Unit_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Condition Unit Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Condition_Unit_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condition_Unit_Class {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.Condition_Unit_ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Condition Unit Class\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Condition_Unit_ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reward_Unit_Class {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.Reward_Unit_ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Reward Unit Class\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Reward_Unit_ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Change_Job_Type {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.Change_Job_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Change Job Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Change_Job_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Item_ID {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Condition_Item_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Condition Item ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Condition_Item_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Item_Quantity {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Condition_Item_QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Condition Item Quantity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Condition_Item_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubQuest1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.SubQuest1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'SubQuest1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.SubQuest1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubQuest2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.SubQuest2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'SubQuest2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.SubQuest2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubQuest3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.SubQuest3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'SubQuest3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.SubQuest3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubQuest4 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.SubQuest4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'SubQuest4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.SubQuest4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubQUest5 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.SubQUest5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'SubQUest5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.SubQUest5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reward_Enable {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.Reward_EnableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Reward Enable\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Reward_EnableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_EXP {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Reward_EXPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Reward EXP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Reward_EXPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_ED {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Reward_EDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Reward ED\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Reward_EDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reward_Grade {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.Reward_GradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Reward Grade\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Reward_GradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_Buff {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Reward_BuffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Reward Buff\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Reward_BuffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_SP {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Reward_SPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Reward SP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Reward_SPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_Item1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Reward_Item1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Reward Item1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Reward_Item1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name1 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'name1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Period_1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Period_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Period 1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Period_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_ItemQuantity1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Reward_ItemQuantity1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Reward ItemQuantity1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Reward_ItemQuantity1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket_Option1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Socket_Option1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Socket Option1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Socket_Option1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_Item2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Reward_Item2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Reward Item2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Reward_Item2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name2 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.name2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'name2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.name2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Period_2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Period_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Period 2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Period_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_ItemQuantity2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Reward_ItemQuantity2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Reward ItemQuantity2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Reward_ItemQuantity2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket_Option2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Socket_Option2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Socket Option2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Socket_Option2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_Item3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Reward_Item3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Reward Item3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Reward_Item3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name3 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.name3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'name3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.name3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Period_3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Period_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Period 3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Period_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_ItemQuantity3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Reward_ItemQuantity3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Reward ItemQuantity3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Reward_ItemQuantity3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket_Option3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Socket_Option3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Socket Option3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Socket_Option3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_Item1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Reward_Item1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Reward Item1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Reward_Item1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name1_1 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.name1_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'name1_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.name1_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Period1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Period1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Period1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Period1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_ItemQuantity1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Reward_ItemQuantity1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Reward ItemQuantity1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Reward_ItemQuantity1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Socket_Option1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Socket_Option1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Socket Option1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Socket_Option1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_Item2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Reward_Item2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Reward Item2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Reward_Item2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name2_1 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.name2_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'name2_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.name2_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Period2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Period2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Period2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Period2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_ItemQuantity2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Reward_ItemQuantity2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Reward ItemQuantity2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Reward_ItemQuantity2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Socket_Option2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Socket_Option2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Socket Option2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Socket_Option2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_Item3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Reward_Item3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Reward Item3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Reward_Item3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name3_1 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.name3_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'name3_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.name3_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Period3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Period3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Period3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Period3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_ItemQuantity3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Reward_ItemQuantity3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Reward ItemQuantity3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Reward_ItemQuantity3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Socket_Option3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Socket_Option3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Socket Option3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Socket_Option3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_Item4 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Reward_Item4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Reward Item4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Reward_Item4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name4_1 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.name4_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'name4_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.name4_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Period4 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Period4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Period4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Period4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Select_Reward_ItemQuantity4 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.Select_Reward_ItemQuantity4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Reward ItemQuantity4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Reward_ItemQuantity4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Socket_Option4 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Socket_Option4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Socket Option4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Socket_Option4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_Item5 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Reward_Item5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Reward Item5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Reward_Item5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name5_1 {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.name5_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'name5_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.name5_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Period_5 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Period_5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Period 5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Period_5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_ItemQuantity5 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Reward_ItemQuantity5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Reward ItemQuantity5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Reward_ItemQuantity5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Socket_Option5 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Socket_Option5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Socket Option5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Socket_Option5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Select_Reward_ItemCount {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Select_Reward_ItemCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Select Reward ItemCount\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Select_Reward_ItemCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Main_Text {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.Main_TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Main Text\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Main_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thanks_Text {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.Thanks_TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Thanks Text\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Thanks_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Diss_Clear_Text {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.Diss_Clear_TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Diss Clear Text\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Diss_Clear_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_1 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Condition_ClearQuest_ID_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Condition ClearQuest ID 1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Condition_ClearQuest_ID_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_2 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Condition_ClearQuest_ID_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Condition ClearQuest ID 2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Condition_ClearQuest_ID_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_3 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Condition_ClearQuest_ID_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Condition ClearQuest ID 3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Condition_ClearQuest_ID_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_4 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Condition_ClearQuest_ID_4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Condition ClearQuest ID 4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Condition_ClearQuest_ID_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_5 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Condition_ClearQuest_ID_5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Condition ClearQuest ID 5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Condition_ClearQuest_ID_5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_6 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Condition_ClearQuest_ID_6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Condition ClearQuest ID 6\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Condition_ClearQuest_ID_6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_7 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Condition_ClearQuest_ID_7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Condition ClearQuest ID 7\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Condition_ClearQuest_ID_7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearQuest_ID_8 {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Condition_ClearQuest_ID_8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Condition ClearQuest ID 8\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Condition_ClearQuest_ID_8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_DisClearQuest_ID {
                get {
                    try {
                        return ((int)(this[this.tableQuestTable_History.Condition_DisClearQuest_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'Condition DisClearQuest ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.Condition_DisClearQuest_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'UserID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserIP {
                get {
                    try {
                        return ((string)(this[this.tableQuestTable_History.UserIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'QuestTable_History\' 테이블의 \'UserIP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableQuestTable_History.UserIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    return ((global::System.DateTime)(this[this.tableQuestTable_History.RegdateColumn]));
                }
                set {
                    this[this.tableQuestTable_History.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableQuestTable_History.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableQuestTable_History.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnable_QuestNull() {
                return this.IsNull(this.tableQuestTable_History.Enable_QuestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnable_QuestNull() {
                this[this.tableQuestTable_History.Enable_QuestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuest_TypeNull() {
                return this.IsNull(this.tableQuestTable_History.Quest_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuest_TypeNull() {
                this[this.tableQuestTable_History.Quest_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStart_NPC_NameNull() {
                return this.IsNull(this.tableQuestTable_History.Start_NPC_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStart_NPC_NameNull() {
                this[this.tableQuestTable_History.Start_NPC_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnd_NPC_NameNull() {
                return this.IsNull(this.tableQuestTable_History.End_NPC_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnd_NPC_NameNull() {
                this[this.tableQuestTable_History.End_NPC_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitleNull() {
                return this.IsNull(this.tableQuestTable_History.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitleNull() {
                this[this.tableQuestTable_History.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFair_LevelNull() {
                return this.IsNull(this.tableQuestTable_History.Fair_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFair_LevelNull() {
                this[this.tableQuestTable_History.Fair_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFair_Dungeon_IDNull() {
                return this.IsNull(this.tableQuestTable_History.Fair_Dungeon_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFair_Dungeon_IDNull() {
                this[this.tableQuestTable_History.Fair_Dungeon_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuest_RepeatNull() {
                return this.IsNull(this.tableQuestTable_History.Quest_RepeatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuest_RepeatNull() {
                this[this.tableQuestTable_History.Quest_RepeatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_LvNull() {
                return this.IsNull(this.tableQuestTable_History.Condition_LvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_LvNull() {
                this[this.tableQuestTable_History.Condition_LvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_TypeNull() {
                return this.IsNull(this.tableQuestTable_History.Condition_Unit_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_TypeNull() {
                this[this.tableQuestTable_History.Condition_Unit_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_ClassNull() {
                return this.IsNull(this.tableQuestTable_History.Condition_Unit_ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_ClassNull() {
                this[this.tableQuestTable_History.Condition_Unit_ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_Unit_ClassNull() {
                return this.IsNull(this.tableQuestTable_History.Reward_Unit_ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_Unit_ClassNull() {
                this[this.tableQuestTable_History.Reward_Unit_ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChange_Job_TypeNull() {
                return this.IsNull(this.tableQuestTable_History.Change_Job_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChange_Job_TypeNull() {
                this[this.tableQuestTable_History.Change_Job_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Item_IDNull() {
                return this.IsNull(this.tableQuestTable_History.Condition_Item_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Item_IDNull() {
                this[this.tableQuestTable_History.Condition_Item_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Item_QuantityNull() {
                return this.IsNull(this.tableQuestTable_History.Condition_Item_QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Item_QuantityNull() {
                this[this.tableQuestTable_History.Condition_Item_QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubQuest1Null() {
                return this.IsNull(this.tableQuestTable_History.SubQuest1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubQuest1Null() {
                this[this.tableQuestTable_History.SubQuest1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubQuest2Null() {
                return this.IsNull(this.tableQuestTable_History.SubQuest2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubQuest2Null() {
                this[this.tableQuestTable_History.SubQuest2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubQuest3Null() {
                return this.IsNull(this.tableQuestTable_History.SubQuest3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubQuest3Null() {
                this[this.tableQuestTable_History.SubQuest3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubQuest4Null() {
                return this.IsNull(this.tableQuestTable_History.SubQuest4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubQuest4Null() {
                this[this.tableQuestTable_History.SubQuest4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubQUest5Null() {
                return this.IsNull(this.tableQuestTable_History.SubQUest5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubQUest5Null() {
                this[this.tableQuestTable_History.SubQUest5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_EnableNull() {
                return this.IsNull(this.tableQuestTable_History.Reward_EnableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_EnableNull() {
                this[this.tableQuestTable_History.Reward_EnableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_EXPNull() {
                return this.IsNull(this.tableQuestTable_History.Reward_EXPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_EXPNull() {
                this[this.tableQuestTable_History.Reward_EXPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_EDNull() {
                return this.IsNull(this.tableQuestTable_History.Reward_EDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_EDNull() {
                this[this.tableQuestTable_History.Reward_EDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_GradeNull() {
                return this.IsNull(this.tableQuestTable_History.Reward_GradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_GradeNull() {
                this[this.tableQuestTable_History.Reward_GradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_BuffNull() {
                return this.IsNull(this.tableQuestTable_History.Reward_BuffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_BuffNull() {
                this[this.tableQuestTable_History.Reward_BuffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_SPNull() {
                return this.IsNull(this.tableQuestTable_History.Reward_SPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_SPNull() {
                this[this.tableQuestTable_History.Reward_SPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_Item1Null() {
                return this.IsNull(this.tableQuestTable_History.Reward_Item1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_Item1Null() {
                this[this.tableQuestTable_History.Reward_Item1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname1Null() {
                return this.IsNull(this.tableQuestTable_History.name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname1Null() {
                this[this.tableQuestTable_History.name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriod_1Null() {
                return this.IsNull(this.tableQuestTable_History.Period_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriod_1Null() {
                this[this.tableQuestTable_History.Period_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_ItemQuantity1Null() {
                return this.IsNull(this.tableQuestTable_History.Reward_ItemQuantity1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_ItemQuantity1Null() {
                this[this.tableQuestTable_History.Reward_ItemQuantity1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket_Option1Null() {
                return this.IsNull(this.tableQuestTable_History.Socket_Option1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket_Option1Null() {
                this[this.tableQuestTable_History.Socket_Option1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_Item2Null() {
                return this.IsNull(this.tableQuestTable_History.Reward_Item2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_Item2Null() {
                this[this.tableQuestTable_History.Reward_Item2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname2Null() {
                return this.IsNull(this.tableQuestTable_History.name2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname2Null() {
                this[this.tableQuestTable_History.name2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriod_2Null() {
                return this.IsNull(this.tableQuestTable_History.Period_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriod_2Null() {
                this[this.tableQuestTable_History.Period_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_ItemQuantity2Null() {
                return this.IsNull(this.tableQuestTable_History.Reward_ItemQuantity2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_ItemQuantity2Null() {
                this[this.tableQuestTable_History.Reward_ItemQuantity2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket_Option2Null() {
                return this.IsNull(this.tableQuestTable_History.Socket_Option2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket_Option2Null() {
                this[this.tableQuestTable_History.Socket_Option2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_Item3Null() {
                return this.IsNull(this.tableQuestTable_History.Reward_Item3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_Item3Null() {
                this[this.tableQuestTable_History.Reward_Item3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname3Null() {
                return this.IsNull(this.tableQuestTable_History.name3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname3Null() {
                this[this.tableQuestTable_History.name3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriod_3Null() {
                return this.IsNull(this.tableQuestTable_History.Period_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriod_3Null() {
                this[this.tableQuestTable_History.Period_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_ItemQuantity3Null() {
                return this.IsNull(this.tableQuestTable_History.Reward_ItemQuantity3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_ItemQuantity3Null() {
                this[this.tableQuestTable_History.Reward_ItemQuantity3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket_Option3Null() {
                return this.IsNull(this.tableQuestTable_History.Socket_Option3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket_Option3Null() {
                this[this.tableQuestTable_History.Socket_Option3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_Item1Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Reward_Item1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_Item1Null() {
                this[this.tableQuestTable_History.Select_Reward_Item1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname1_1Null() {
                return this.IsNull(this.tableQuestTable_History.name1_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname1_1Null() {
                this[this.tableQuestTable_History.name1_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Period1Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Period1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Period1Null() {
                this[this.tableQuestTable_History.Select_Period1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_ItemQuantity1Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Reward_ItemQuantity1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_ItemQuantity1Null() {
                this[this.tableQuestTable_History.Select_Reward_ItemQuantity1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Socket_Option1Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Socket_Option1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Socket_Option1Null() {
                this[this.tableQuestTable_History.Select_Socket_Option1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_Item2Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Reward_Item2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_Item2Null() {
                this[this.tableQuestTable_History.Select_Reward_Item2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname2_1Null() {
                return this.IsNull(this.tableQuestTable_History.name2_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname2_1Null() {
                this[this.tableQuestTable_History.name2_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Period2Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Period2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Period2Null() {
                this[this.tableQuestTable_History.Select_Period2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_ItemQuantity2Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Reward_ItemQuantity2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_ItemQuantity2Null() {
                this[this.tableQuestTable_History.Select_Reward_ItemQuantity2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Socket_Option2Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Socket_Option2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Socket_Option2Null() {
                this[this.tableQuestTable_History.Select_Socket_Option2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_Item3Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Reward_Item3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_Item3Null() {
                this[this.tableQuestTable_History.Select_Reward_Item3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname3_1Null() {
                return this.IsNull(this.tableQuestTable_History.name3_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname3_1Null() {
                this[this.tableQuestTable_History.name3_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Period3Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Period3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Period3Null() {
                this[this.tableQuestTable_History.Select_Period3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_ItemQuantity3Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Reward_ItemQuantity3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_ItemQuantity3Null() {
                this[this.tableQuestTable_History.Select_Reward_ItemQuantity3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Socket_Option3Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Socket_Option3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Socket_Option3Null() {
                this[this.tableQuestTable_History.Select_Socket_Option3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_Item4Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Reward_Item4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_Item4Null() {
                this[this.tableQuestTable_History.Select_Reward_Item4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname4_1Null() {
                return this.IsNull(this.tableQuestTable_History.name4_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname4_1Null() {
                this[this.tableQuestTable_History.name4_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Period4Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Period4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Period4Null() {
                this[this.tableQuestTable_History.Select_Period4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_ItemQuantity4Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Reward_ItemQuantity4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_ItemQuantity4Null() {
                this[this.tableQuestTable_History.Select_Reward_ItemQuantity4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Socket_Option4Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Socket_Option4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Socket_Option4Null() {
                this[this.tableQuestTable_History.Select_Socket_Option4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_Item5Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Reward_Item5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_Item5Null() {
                this[this.tableQuestTable_History.Select_Reward_Item5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname5_1Null() {
                return this.IsNull(this.tableQuestTable_History.name5_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname5_1Null() {
                this[this.tableQuestTable_History.name5_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Period_5Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Period_5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Period_5Null() {
                this[this.tableQuestTable_History.Select_Period_5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_ItemQuantity5Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Reward_ItemQuantity5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_ItemQuantity5Null() {
                this[this.tableQuestTable_History.Select_Reward_ItemQuantity5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Socket_Option5Null() {
                return this.IsNull(this.tableQuestTable_History.Select_Socket_Option5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Socket_Option5Null() {
                this[this.tableQuestTable_History.Select_Socket_Option5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelect_Reward_ItemCountNull() {
                return this.IsNull(this.tableQuestTable_History.Select_Reward_ItemCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelect_Reward_ItemCountNull() {
                this[this.tableQuestTable_History.Select_Reward_ItemCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMain_TextNull() {
                return this.IsNull(this.tableQuestTable_History.Main_TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMain_TextNull() {
                this[this.tableQuestTable_History.Main_TextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThanks_TextNull() {
                return this.IsNull(this.tableQuestTable_History.Thanks_TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThanks_TextNull() {
                this[this.tableQuestTable_History.Thanks_TextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiss_Clear_TextNull() {
                return this.IsNull(this.tableQuestTable_History.Diss_Clear_TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiss_Clear_TextNull() {
                this[this.tableQuestTable_History.Diss_Clear_TextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_1Null() {
                return this.IsNull(this.tableQuestTable_History.Condition_ClearQuest_ID_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_1Null() {
                this[this.tableQuestTable_History.Condition_ClearQuest_ID_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_2Null() {
                return this.IsNull(this.tableQuestTable_History.Condition_ClearQuest_ID_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_2Null() {
                this[this.tableQuestTable_History.Condition_ClearQuest_ID_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_3Null() {
                return this.IsNull(this.tableQuestTable_History.Condition_ClearQuest_ID_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_3Null() {
                this[this.tableQuestTable_History.Condition_ClearQuest_ID_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_4Null() {
                return this.IsNull(this.tableQuestTable_History.Condition_ClearQuest_ID_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_4Null() {
                this[this.tableQuestTable_History.Condition_ClearQuest_ID_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_5Null() {
                return this.IsNull(this.tableQuestTable_History.Condition_ClearQuest_ID_5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_5Null() {
                this[this.tableQuestTable_History.Condition_ClearQuest_ID_5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_6Null() {
                return this.IsNull(this.tableQuestTable_History.Condition_ClearQuest_ID_6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_6Null() {
                this[this.tableQuestTable_History.Condition_ClearQuest_ID_6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_7Null() {
                return this.IsNull(this.tableQuestTable_History.Condition_ClearQuest_ID_7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_7Null() {
                this[this.tableQuestTable_History.Condition_ClearQuest_ID_7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearQuest_ID_8Null() {
                return this.IsNull(this.tableQuestTable_History.Condition_ClearQuest_ID_8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearQuest_ID_8Null() {
                this[this.tableQuestTable_History.Condition_ClearQuest_ID_8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_DisClearQuest_IDNull() {
                return this.IsNull(this.tableQuestTable_History.Condition_DisClearQuest_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_DisClearQuest_IDNull() {
                this[this.tableQuestTable_History.Condition_DisClearQuest_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableQuestTable_History.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableQuestTable_History.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIPNull() {
                return this.IsNull(this.tableQuestTable_History.UserIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIPNull() {
                this[this.tableQuestTable_History.UserIPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SubQuestTableRow : global::System.Data.DataRow {
            
            private SubQuestTableDataTable tableSubQuestTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SubQuestTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSubQuestTable = ((SubQuestTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableSubQuestTable.IndexKeyColumn]));
                }
                set {
                    this[this.tableSubQuestTable.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Type {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable.Clear_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Kill_NPC_ID {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable.Clear_Condition_Kill_NPC_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition Kill NPC ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_Kill_NPC_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Kill_NPC_Quantity {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable.Clear_Condition_Kill_NPC_QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition Kill NPC Quantity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_Kill_NPC_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Collection_Item_ID {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable.Clear_Condition_Collection_Item_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition Collection Item ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_Collection_Item_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Collection_Item_Quantity {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable.Clear_Condition_Collection_Item_QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition Collection Item Quantity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_Collection_Item_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Quest_Item_Drop_Rate {
                get {
                    try {
                        return ((double)(this[this.tableSubQuestTable.Quest_Item_Drop_RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Quest Item Drop Rate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Quest_Item_Drop_RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Dungeon_Difficulty {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable.Clear_Condition_Dungeon_DifficultyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition Dungeon Difficulty\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_Dungeon_DifficultyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Clear_Condition_Upper_Difficulty {
                get {
                    try {
                        return ((bool)(this[this.tableSubQuestTable.Clear_Condition_Upper_DifficultyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition Upper Difficulty\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_Upper_DifficultyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Dungeon_ID {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable.Clear_Condition_Dungeon_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition Dungeon ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_Dungeon_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_Damage {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable.Clear_Condition_Dungeon_DamageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition Dungeon Damage\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_Dungeon_DamageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_Rank {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable.Clear_Condition_Dungeon_RankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition Dungeon Rank\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_Dungeon_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_Clear_Time {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable.Clear_Condition_Dungeon_Clear_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition Dungeon Clear Time\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_Dungeon_Clear_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_clear_count {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable.Clear_Condition_Dungeon_clear_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition Dungeon clear count\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_Dungeon_clear_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Talk_NPC_ID {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable.Clear_Condition_Talk_NPC_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition Talk NPC ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_Talk_NPC_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_PVP_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable.Clear_Condition_PVP_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition PVP_TYPE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_PVP_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_PVP_PLAY {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable.Clear_Condition_PVP_PLAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition PVP_PLAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_PVP_PLAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_PVP_WIN {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable.Clear_Condition_PVP_WINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition PVP_WIN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_PVP_WINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_PVP_KILL {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable.Clear_Condition_PVP_KILLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Clear Condition PVP_KILL\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.Clear_Condition_PVP_KILLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AutomaticDescription {
                get {
                    try {
                        return ((bool)(this[this.tableSubQuestTable.AutomaticDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'AutomaticDescription\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.AutomaticDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable\' 테이블의 \'Description\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    return ((global::System.DateTime)(this[this.tableSubQuestTable.RegdateColumn]));
                }
                set {
                    this[this.tableSubQuestTable.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableSubQuestTable.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableSubQuestTable.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_TypeNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_TypeNull() {
                this[this.tableSubQuestTable.Clear_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Kill_NPC_IDNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_Kill_NPC_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Kill_NPC_IDNull() {
                this[this.tableSubQuestTable.Clear_Condition_Kill_NPC_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Kill_NPC_QuantityNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_Kill_NPC_QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Kill_NPC_QuantityNull() {
                this[this.tableSubQuestTable.Clear_Condition_Kill_NPC_QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Collection_Item_IDNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_Collection_Item_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Collection_Item_IDNull() {
                this[this.tableSubQuestTable.Clear_Condition_Collection_Item_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableSubQuestTable.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableSubQuestTable.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Collection_Item_QuantityNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_Collection_Item_QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Collection_Item_QuantityNull() {
                this[this.tableSubQuestTable.Clear_Condition_Collection_Item_QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuest_Item_Drop_RateNull() {
                return this.IsNull(this.tableSubQuestTable.Quest_Item_Drop_RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuest_Item_Drop_RateNull() {
                this[this.tableSubQuestTable.Quest_Item_Drop_RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_DifficultyNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_Dungeon_DifficultyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_DifficultyNull() {
                this[this.tableSubQuestTable.Clear_Condition_Dungeon_DifficultyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Upper_DifficultyNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_Upper_DifficultyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Upper_DifficultyNull() {
                this[this.tableSubQuestTable.Clear_Condition_Upper_DifficultyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_IDNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_Dungeon_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_IDNull() {
                this[this.tableSubQuestTable.Clear_Condition_Dungeon_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_DamageNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_Dungeon_DamageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_DamageNull() {
                this[this.tableSubQuestTable.Clear_Condition_Dungeon_DamageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_RankNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_Dungeon_RankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_RankNull() {
                this[this.tableSubQuestTable.Clear_Condition_Dungeon_RankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_Clear_TimeNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_Dungeon_Clear_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_Clear_TimeNull() {
                this[this.tableSubQuestTable.Clear_Condition_Dungeon_Clear_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_clear_countNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_Dungeon_clear_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_clear_countNull() {
                this[this.tableSubQuestTable.Clear_Condition_Dungeon_clear_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Talk_NPC_IDNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_Talk_NPC_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Talk_NPC_IDNull() {
                this[this.tableSubQuestTable.Clear_Condition_Talk_NPC_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_TYPENull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_PVP_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_TYPENull() {
                this[this.tableSubQuestTable.Clear_Condition_PVP_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_PLAYNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_PVP_PLAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_PLAYNull() {
                this[this.tableSubQuestTable.Clear_Condition_PVP_PLAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_WINNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_PVP_WINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_WINNull() {
                this[this.tableSubQuestTable.Clear_Condition_PVP_WINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_KILLNull() {
                return this.IsNull(this.tableSubQuestTable.Clear_Condition_PVP_KILLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_KILLNull() {
                this[this.tableSubQuestTable.Clear_Condition_PVP_KILLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAutomaticDescriptionNull() {
                return this.IsNull(this.tableSubQuestTable.AutomaticDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAutomaticDescriptionNull() {
                this[this.tableSubQuestTable.AutomaticDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableSubQuestTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableSubQuestTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SubQuestTable_HistoryRow : global::System.Data.DataRow {
            
            private SubQuestTable_HistoryDataTable tableSubQuestTable_History;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SubQuestTable_HistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSubQuestTable_History = ((SubQuestTable_HistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableSubQuestTable_History.IndexKeyColumn]));
                }
                set {
                    this[this.tableSubQuestTable_History.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable_History.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Type {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable_History.Clear_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Kill_NPC_ID {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable_History.Clear_Condition_Kill_NPC_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition Kill NPC ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_Kill_NPC_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Kill_NPC_Quantity {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable_History.Clear_Condition_Kill_NPC_QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition Kill NPC Quantity\' 열의 값이 DBNull입니다." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_Kill_NPC_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Collection_Item_ID {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable_History.Clear_Condition_Collection_Item_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition Collection Item ID\' 열의 값이 DBNull입니다" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_Collection_Item_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable_History.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Collection_Item_Quantity {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable_History.Clear_Condition_Collection_Item_QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition Collection Item Quantity\' 열의 값이 DBN" +
                                "ull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_Collection_Item_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Quest_Item_Drop_Rate {
                get {
                    try {
                        return ((double)(this[this.tableSubQuestTable_History.Quest_Item_Drop_RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Quest Item Drop Rate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Quest_Item_Drop_RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Dungeon_Difficulty {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_DifficultyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition Dungeon Difficulty\' 열의 값이 DBNull입니다" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_DifficultyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Clear_Condition_Upper_Difficulty {
                get {
                    try {
                        return ((bool)(this[this.tableSubQuestTable_History.Clear_Condition_Upper_DifficultyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition Upper Difficulty\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_Upper_DifficultyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Dungeon_ID {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition Dungeon ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_Damage {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_DamageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition Dungeon Damage\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_DamageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_Rank {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_RankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition Dungeon Rank\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_Clear_Time {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_Clear_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition Dungeon Clear Time\' 열의 값이 DBNull입니다" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_Clear_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_clear_count {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_clear_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition Dungeon clear count\' 열의 값이 DBNull입니" +
                                "다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_clear_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Talk_NPC_ID {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable_History.Clear_Condition_Talk_NPC_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition Talk NPC ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_Talk_NPC_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_PVP_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable_History.Clear_Condition_PVP_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition PVP_TYPE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_PVP_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_PVP_PLAY {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable_History.Clear_Condition_PVP_PLAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition PVP_PLAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_PVP_PLAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_PVP_WIN {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable_History.Clear_Condition_PVP_WINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition PVP_WIN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_PVP_WINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_PVP_KILL {
                get {
                    try {
                        return ((int)(this[this.tableSubQuestTable_History.Clear_Condition_PVP_KILLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Clear Condition PVP_KILL\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.Clear_Condition_PVP_KILLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AutomaticDescription {
                get {
                    try {
                        return ((bool)(this[this.tableSubQuestTable_History.AutomaticDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'AutomaticDescription\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.AutomaticDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable_History.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'Description\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable_History.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'UserID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserIP {
                get {
                    try {
                        return ((string)(this[this.tableSubQuestTable_History.UserIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubQuestTable_History\' 테이블의 \'UserIP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubQuestTable_History.UserIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    return ((global::System.DateTime)(this[this.tableSubQuestTable_History.RegdateColumn]));
                }
                set {
                    this[this.tableSubQuestTable_History.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableSubQuestTable_History.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableSubQuestTable_History.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_TypeNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_TypeNull() {
                this[this.tableSubQuestTable_History.Clear_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Kill_NPC_IDNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_Kill_NPC_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Kill_NPC_IDNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_Kill_NPC_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Kill_NPC_QuantityNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_Kill_NPC_QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Kill_NPC_QuantityNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_Kill_NPC_QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Collection_Item_IDNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_Collection_Item_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Collection_Item_IDNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_Collection_Item_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableSubQuestTable_History.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableSubQuestTable_History.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Collection_Item_QuantityNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_Collection_Item_QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Collection_Item_QuantityNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_Collection_Item_QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuest_Item_Drop_RateNull() {
                return this.IsNull(this.tableSubQuestTable_History.Quest_Item_Drop_RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuest_Item_Drop_RateNull() {
                this[this.tableSubQuestTable_History.Quest_Item_Drop_RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_DifficultyNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_Dungeon_DifficultyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_DifficultyNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_DifficultyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Upper_DifficultyNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_Upper_DifficultyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Upper_DifficultyNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_Upper_DifficultyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_IDNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_Dungeon_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_IDNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_DamageNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_Dungeon_DamageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_DamageNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_DamageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_RankNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_Dungeon_RankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_RankNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_RankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_Clear_TimeNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_Dungeon_Clear_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_Clear_TimeNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_Clear_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_clear_countNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_Dungeon_clear_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_clear_countNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_Dungeon_clear_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Talk_NPC_IDNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_Talk_NPC_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Talk_NPC_IDNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_Talk_NPC_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_TYPENull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_PVP_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_TYPENull() {
                this[this.tableSubQuestTable_History.Clear_Condition_PVP_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_PLAYNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_PVP_PLAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_PLAYNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_PVP_PLAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_WINNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_PVP_WINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_WINNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_PVP_WINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_KILLNull() {
                return this.IsNull(this.tableSubQuestTable_History.Clear_Condition_PVP_KILLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_KILLNull() {
                this[this.tableSubQuestTable_History.Clear_Condition_PVP_KILLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAutomaticDescriptionNull() {
                return this.IsNull(this.tableSubQuestTable_History.AutomaticDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAutomaticDescriptionNull() {
                this[this.tableSubQuestTable_History.AutomaticDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableSubQuestTable_History.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableSubQuestTable_History.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableSubQuestTable_History.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableSubQuestTable_History.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIPNull() {
                return this.IsNull(this.tableSubQuestTable_History.UserIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIPNull() {
                this[this.tableSubQuestTable_History.UserIPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TitleTableRow : global::System.Data.DataRow {
            
            private TitleTableDataTable tableTitleTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TitleTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTitleTable = ((TitleTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableTitleTable.IndexKeyColumn]));
                }
                set {
                    this[this.tableTitleTable.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TitleID {
                get {
                    return ((int)(this[this.tableTitleTable.TitleIDColumn]));
                }
                set {
                    this[this.tableTitleTable.TitleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title_Name {
                get {
                    try {
                        return ((string)(this[this.tableTitleTable.Title_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Title_Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Title_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableTitleTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Description\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Sort_Num {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Sort_NumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Sort_Num\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Sort_NumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Title_Type {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Title_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Title_Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Title_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableTitleTable.Title_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Title_Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Title_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Particle_Name {
                get {
                    try {
                        return ((string)(this[this.tableTitleTable.Particle_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Particle_Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Particle_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Unit_Type {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Condition_Unit_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Condition Unit Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Condition_Unit_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condition_Unit_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableTitleTable.Condition_Unit_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Condition_Unit_Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Condition_Unit_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Unit_Class {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Condition_Unit_ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Condition Unit Class\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Condition_Unit_ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condition_Unit_Class_ {
                get {
                    try {
                        return ((string)(this[this.tableTitleTable.Condition_Unit_Class_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Condition_Unit_Class_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Condition_Unit_Class_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Open_Level {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Open_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Open_Level\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Open_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Secret_Title {
                get {
                    try {
                        return ((bool)(this[this.tableTitleTable.Secret_TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Secret_Title\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Secret_TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Base_HP {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Base_HPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Base_HP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Base_HPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Atk_Physic {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Atk_PhysicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Atk_Physic\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Atk_PhysicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Atk_Magic {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Atk_MagicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Atk_Magic\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Atk_MagicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Def_Physic {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Def_PhysicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Def_Physic\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Def_PhysicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Def_Magic {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Def_MagicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Def_Magic\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Def_MagicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket01 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Socket01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Socket01\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Socket01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket02 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Socket02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Socket02\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Socket02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket03 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Socket03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Socket03\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Socket03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket04 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Socket04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Socket04\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Socket04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket05 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Socket05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Socket05\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Socket05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket06 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Socket06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Socket06\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Socket06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket07 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Socket07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Socket07\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Socket07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket08 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Socket08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Socket08\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Socket08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket09 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Socket09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Socket09\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Socket09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket10 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable.Socket10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Socket10\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.Socket10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Visible {
                get {
                    try {
                        return ((bool)(this[this.tableTitleTable.VisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable\' 테이블의 \'Visible\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable.VisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    return ((global::System.DateTime)(this[this.tableTitleTable.RegdateColumn]));
                }
                set {
                    this[this.tableTitleTable.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitle_NameNull() {
                return this.IsNull(this.tableTitleTable.Title_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitle_NameNull() {
                this[this.tableTitleTable.Title_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableTitleTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableTitleTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSort_NumNull() {
                return this.IsNull(this.tableTitleTable.Sort_NumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSort_NumNull() {
                this[this.tableTitleTable.Sort_NumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitle_TypeNull() {
                return this.IsNull(this.tableTitleTable.Title_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitle_TypeNull() {
                this[this.tableTitleTable.Title_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitle_Type_Null() {
                return this.IsNull(this.tableTitleTable.Title_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitle_Type_Null() {
                this[this.tableTitleTable.Title_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParticle_NameNull() {
                return this.IsNull(this.tableTitleTable.Particle_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParticle_NameNull() {
                this[this.tableTitleTable.Particle_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_TypeNull() {
                return this.IsNull(this.tableTitleTable.Condition_Unit_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_TypeNull() {
                this[this.tableTitleTable.Condition_Unit_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_Type_Null() {
                return this.IsNull(this.tableTitleTable.Condition_Unit_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_Type_Null() {
                this[this.tableTitleTable.Condition_Unit_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_ClassNull() {
                return this.IsNull(this.tableTitleTable.Condition_Unit_ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_ClassNull() {
                this[this.tableTitleTable.Condition_Unit_ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_Class_Null() {
                return this.IsNull(this.tableTitleTable.Condition_Unit_Class_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_Class_Null() {
                this[this.tableTitleTable.Condition_Unit_Class_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpen_LevelNull() {
                return this.IsNull(this.tableTitleTable.Open_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpen_LevelNull() {
                this[this.tableTitleTable.Open_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSecret_TitleNull() {
                return this.IsNull(this.tableTitleTable.Secret_TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSecret_TitleNull() {
                this[this.tableTitleTable.Secret_TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBase_HPNull() {
                return this.IsNull(this.tableTitleTable.Base_HPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBase_HPNull() {
                this[this.tableTitleTable.Base_HPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAtk_PhysicNull() {
                return this.IsNull(this.tableTitleTable.Atk_PhysicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAtk_PhysicNull() {
                this[this.tableTitleTable.Atk_PhysicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAtk_MagicNull() {
                return this.IsNull(this.tableTitleTable.Atk_MagicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAtk_MagicNull() {
                this[this.tableTitleTable.Atk_MagicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDef_PhysicNull() {
                return this.IsNull(this.tableTitleTable.Def_PhysicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDef_PhysicNull() {
                this[this.tableTitleTable.Def_PhysicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDef_MagicNull() {
                return this.IsNull(this.tableTitleTable.Def_MagicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDef_MagicNull() {
                this[this.tableTitleTable.Def_MagicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket01Null() {
                return this.IsNull(this.tableTitleTable.Socket01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket01Null() {
                this[this.tableTitleTable.Socket01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket02Null() {
                return this.IsNull(this.tableTitleTable.Socket02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket02Null() {
                this[this.tableTitleTable.Socket02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket03Null() {
                return this.IsNull(this.tableTitleTable.Socket03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket03Null() {
                this[this.tableTitleTable.Socket03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket04Null() {
                return this.IsNull(this.tableTitleTable.Socket04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket04Null() {
                this[this.tableTitleTable.Socket04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket05Null() {
                return this.IsNull(this.tableTitleTable.Socket05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket05Null() {
                this[this.tableTitleTable.Socket05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket06Null() {
                return this.IsNull(this.tableTitleTable.Socket06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket06Null() {
                this[this.tableTitleTable.Socket06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket07Null() {
                return this.IsNull(this.tableTitleTable.Socket07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket07Null() {
                this[this.tableTitleTable.Socket07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket08Null() {
                return this.IsNull(this.tableTitleTable.Socket08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket08Null() {
                this[this.tableTitleTable.Socket08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket09Null() {
                return this.IsNull(this.tableTitleTable.Socket09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket09Null() {
                this[this.tableTitleTable.Socket09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket10Null() {
                return this.IsNull(this.tableTitleTable.Socket10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket10Null() {
                this[this.tableTitleTable.Socket10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVisibleNull() {
                return this.IsNull(this.tableTitleTable.VisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVisibleNull() {
                this[this.tableTitleTable.VisibleColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TitleTable_HistoryRow : global::System.Data.DataRow {
            
            private TitleTable_HistoryDataTable tableTitleTable_History;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TitleTable_HistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTitleTable_History = ((TitleTable_HistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableTitleTable_History.IndexKeyColumn]));
                }
                set {
                    this[this.tableTitleTable_History.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TitleID {
                get {
                    return ((int)(this[this.tableTitleTable_History.TitleIDColumn]));
                }
                set {
                    this[this.tableTitleTable_History.TitleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title_Name {
                get {
                    try {
                        return ((string)(this[this.tableTitleTable_History.Title_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Title_Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Title_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableTitleTable_History.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Description\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Sort_Num {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Sort_NumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Sort_Num\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Sort_NumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Title_Type {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Title_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Title_Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Title_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableTitleTable_History.Title_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Title_Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Title_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Particle_Name {
                get {
                    try {
                        return ((string)(this[this.tableTitleTable_History.Particle_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Particle_Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Particle_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Unit_Type {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Condition_Unit_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Condition Unit Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Condition_Unit_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condition_Unit_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableTitleTable_History.Condition_Unit_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Condition_Unit_Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Condition_Unit_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Unit_Class {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Condition_Unit_ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Condition Unit Class\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Condition_Unit_ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condition_Unit_Class_ {
                get {
                    try {
                        return ((string)(this[this.tableTitleTable_History.Condition_Unit_Class_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Condition_Unit_Class_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Condition_Unit_Class_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Open_Level {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Open_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Open_Level\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Open_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Secret_Title {
                get {
                    try {
                        return ((bool)(this[this.tableTitleTable_History.Secret_TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Secret_Title\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Secret_TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Base_HP {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Base_HPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Base_HP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Base_HPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Atk_Physic {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Atk_PhysicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Atk_Physic\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Atk_PhysicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Atk_Magic {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Atk_MagicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Atk_Magic\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Atk_MagicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Def_Physic {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Def_PhysicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Def_Physic\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Def_PhysicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Def_Magic {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Def_MagicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Def_Magic\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Def_MagicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket01 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Socket01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Socket01\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Socket01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket02 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Socket02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Socket02\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Socket02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket03 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Socket03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Socket03\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Socket03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket04 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Socket04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Socket04\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Socket04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket05 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Socket05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Socket05\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Socket05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket06 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Socket06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Socket06\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Socket06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket07 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Socket07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Socket07\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Socket07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket08 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Socket08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Socket08\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Socket08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket09 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Socket09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Socket09\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Socket09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Socket10 {
                get {
                    try {
                        return ((int)(this[this.tableTitleTable_History.Socket10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Socket10\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.Socket10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Visible {
                get {
                    try {
                        return ((bool)(this[this.tableTitleTable_History.VisibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'Visible\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.VisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableTitleTable_History.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'UserID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserIP {
                get {
                    try {
                        return ((string)(this[this.tableTitleTable_History.UserIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleTable_History\' 테이블의 \'UserIP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleTable_History.UserIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    return ((global::System.DateTime)(this[this.tableTitleTable_History.RegdateColumn]));
                }
                set {
                    this[this.tableTitleTable_History.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitle_NameNull() {
                return this.IsNull(this.tableTitleTable_History.Title_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitle_NameNull() {
                this[this.tableTitleTable_History.Title_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableTitleTable_History.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableTitleTable_History.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSort_NumNull() {
                return this.IsNull(this.tableTitleTable_History.Sort_NumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSort_NumNull() {
                this[this.tableTitleTable_History.Sort_NumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitle_TypeNull() {
                return this.IsNull(this.tableTitleTable_History.Title_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitle_TypeNull() {
                this[this.tableTitleTable_History.Title_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitle_Type_Null() {
                return this.IsNull(this.tableTitleTable_History.Title_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitle_Type_Null() {
                this[this.tableTitleTable_History.Title_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParticle_NameNull() {
                return this.IsNull(this.tableTitleTable_History.Particle_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParticle_NameNull() {
                this[this.tableTitleTable_History.Particle_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_TypeNull() {
                return this.IsNull(this.tableTitleTable_History.Condition_Unit_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_TypeNull() {
                this[this.tableTitleTable_History.Condition_Unit_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_Type_Null() {
                return this.IsNull(this.tableTitleTable_History.Condition_Unit_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_Type_Null() {
                this[this.tableTitleTable_History.Condition_Unit_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_ClassNull() {
                return this.IsNull(this.tableTitleTable_History.Condition_Unit_ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_ClassNull() {
                this[this.tableTitleTable_History.Condition_Unit_ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_Class_Null() {
                return this.IsNull(this.tableTitleTable_History.Condition_Unit_Class_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_Class_Null() {
                this[this.tableTitleTable_History.Condition_Unit_Class_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpen_LevelNull() {
                return this.IsNull(this.tableTitleTable_History.Open_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpen_LevelNull() {
                this[this.tableTitleTable_History.Open_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSecret_TitleNull() {
                return this.IsNull(this.tableTitleTable_History.Secret_TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSecret_TitleNull() {
                this[this.tableTitleTable_History.Secret_TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBase_HPNull() {
                return this.IsNull(this.tableTitleTable_History.Base_HPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBase_HPNull() {
                this[this.tableTitleTable_History.Base_HPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAtk_PhysicNull() {
                return this.IsNull(this.tableTitleTable_History.Atk_PhysicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAtk_PhysicNull() {
                this[this.tableTitleTable_History.Atk_PhysicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAtk_MagicNull() {
                return this.IsNull(this.tableTitleTable_History.Atk_MagicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAtk_MagicNull() {
                this[this.tableTitleTable_History.Atk_MagicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDef_PhysicNull() {
                return this.IsNull(this.tableTitleTable_History.Def_PhysicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDef_PhysicNull() {
                this[this.tableTitleTable_History.Def_PhysicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDef_MagicNull() {
                return this.IsNull(this.tableTitleTable_History.Def_MagicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDef_MagicNull() {
                this[this.tableTitleTable_History.Def_MagicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket01Null() {
                return this.IsNull(this.tableTitleTable_History.Socket01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket01Null() {
                this[this.tableTitleTable_History.Socket01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket02Null() {
                return this.IsNull(this.tableTitleTable_History.Socket02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket02Null() {
                this[this.tableTitleTable_History.Socket02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket03Null() {
                return this.IsNull(this.tableTitleTable_History.Socket03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket03Null() {
                this[this.tableTitleTable_History.Socket03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket04Null() {
                return this.IsNull(this.tableTitleTable_History.Socket04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket04Null() {
                this[this.tableTitleTable_History.Socket04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket05Null() {
                return this.IsNull(this.tableTitleTable_History.Socket05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket05Null() {
                this[this.tableTitleTable_History.Socket05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket06Null() {
                return this.IsNull(this.tableTitleTable_History.Socket06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket06Null() {
                this[this.tableTitleTable_History.Socket06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket07Null() {
                return this.IsNull(this.tableTitleTable_History.Socket07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket07Null() {
                this[this.tableTitleTable_History.Socket07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket08Null() {
                return this.IsNull(this.tableTitleTable_History.Socket08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket08Null() {
                this[this.tableTitleTable_History.Socket08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket09Null() {
                return this.IsNull(this.tableTitleTable_History.Socket09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket09Null() {
                this[this.tableTitleTable_History.Socket09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocket10Null() {
                return this.IsNull(this.tableTitleTable_History.Socket10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocket10Null() {
                this[this.tableTitleTable_History.Socket10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVisibleNull() {
                return this.IsNull(this.tableTitleTable_History.VisibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVisibleNull() {
                this[this.tableTitleTable_History.VisibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableTitleTable_History.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableTitleTable_History.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIPNull() {
                return this.IsNull(this.tableTitleTable_History.UserIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIPNull() {
                this[this.tableTitleTable_History.UserIPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TitleMissionRow : global::System.Data.DataRow {
            
            private TitleMissionDataTable tableTitleMission;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TitleMissionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTitleMission = ((TitleMissionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableTitleMission.IndexKeyColumn]));
                }
                set {
                    this[this.tableTitleMission.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableTitleMission.IDColumn]));
                }
                set {
                    this[this.tableTitleMission.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Mission_Clear_Type {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission.Mission_Clear_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'Mission Clear Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.Mission_Clear_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mission_Clear_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableTitleMission.Mission_Clear_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'Mission_Clear_Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.Mission_Clear_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mission_Name {
                get {
                    try {
                        return ((string)(this[this.tableTitleMission.Mission_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'Mission_Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.Mission_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Lv {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission.Condition_LvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'Condition_Lv\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.Condition_LvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Unit_Type {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission.Condition_Unit_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'Condition Unit Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.Condition_Unit_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condition_Unit_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableTitleMission.Condition_Unit_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'Condition_Unit_Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.Condition_Unit_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Unit_Class {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission.Condition_Unit_ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'Condition Unit Class\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.Condition_Unit_ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condition_Unit_Class_ {
                get {
                    try {
                        return ((string)(this[this.tableTitleMission.Condition_Unit_Class_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'Condition_Unit_Class_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.Condition_Unit_Class_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubMission_1 {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission.SubMission_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'SubMission_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.SubMission_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubMission_2 {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission.SubMission_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'SubMission_2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.SubMission_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubMission_3 {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission.SubMission_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'SubMission_3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.SubMission_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubMission_4 {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission.SubMission_4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'SubMission_4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.SubMission_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubMission_5 {
                get {
                    try {
                        return ((string)(this[this.tableTitleMission.SubMission_5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'SubMission_5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.SubMission_5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Period {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission.PeriodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'Period\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.PeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_Title_ID {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission.Reward_Title_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'Reward_Title_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.Reward_Title_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title_Name {
                get {
                    try {
                        return ((string)(this[this.tableTitleMission.Title_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'Title Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.Title_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearMission_ID {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission.Condition_ClearMission_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'Condition_ClearMission_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.Condition_ClearMission_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTitleMission.RegdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission\' 테이블의 \'Regdate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMission_Clear_TypeNull() {
                return this.IsNull(this.tableTitleMission.Mission_Clear_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMission_Clear_TypeNull() {
                this[this.tableTitleMission.Mission_Clear_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMission_Clear_Type_Null() {
                return this.IsNull(this.tableTitleMission.Mission_Clear_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMission_Clear_Type_Null() {
                this[this.tableTitleMission.Mission_Clear_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMission_NameNull() {
                return this.IsNull(this.tableTitleMission.Mission_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMission_NameNull() {
                this[this.tableTitleMission.Mission_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_LvNull() {
                return this.IsNull(this.tableTitleMission.Condition_LvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_LvNull() {
                this[this.tableTitleMission.Condition_LvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_TypeNull() {
                return this.IsNull(this.tableTitleMission.Condition_Unit_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_TypeNull() {
                this[this.tableTitleMission.Condition_Unit_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_Type_Null() {
                return this.IsNull(this.tableTitleMission.Condition_Unit_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_Type_Null() {
                this[this.tableTitleMission.Condition_Unit_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_ClassNull() {
                return this.IsNull(this.tableTitleMission.Condition_Unit_ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_ClassNull() {
                this[this.tableTitleMission.Condition_Unit_ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_Class_Null() {
                return this.IsNull(this.tableTitleMission.Condition_Unit_Class_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_Class_Null() {
                this[this.tableTitleMission.Condition_Unit_Class_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubMission_1Null() {
                return this.IsNull(this.tableTitleMission.SubMission_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubMission_1Null() {
                this[this.tableTitleMission.SubMission_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubMission_2Null() {
                return this.IsNull(this.tableTitleMission.SubMission_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubMission_2Null() {
                this[this.tableTitleMission.SubMission_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubMission_3Null() {
                return this.IsNull(this.tableTitleMission.SubMission_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubMission_3Null() {
                this[this.tableTitleMission.SubMission_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubMission_4Null() {
                return this.IsNull(this.tableTitleMission.SubMission_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubMission_4Null() {
                this[this.tableTitleMission.SubMission_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubMission_5Null() {
                return this.IsNull(this.tableTitleMission.SubMission_5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubMission_5Null() {
                this[this.tableTitleMission.SubMission_5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodNull() {
                return this.IsNull(this.tableTitleMission.PeriodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodNull() {
                this[this.tableTitleMission.PeriodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_Title_IDNull() {
                return this.IsNull(this.tableTitleMission.Reward_Title_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_Title_IDNull() {
                this[this.tableTitleMission.Reward_Title_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitle_NameNull() {
                return this.IsNull(this.tableTitleMission.Title_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitle_NameNull() {
                this[this.tableTitleMission.Title_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearMission_IDNull() {
                return this.IsNull(this.tableTitleMission.Condition_ClearMission_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearMission_IDNull() {
                this[this.tableTitleMission.Condition_ClearMission_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegdateNull() {
                return this.IsNull(this.tableTitleMission.RegdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegdateNull() {
                this[this.tableTitleMission.RegdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TitleMission_HistoryRow : global::System.Data.DataRow {
            
            private TitleMission_HistoryDataTable tableTitleMission_History;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TitleMission_HistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTitleMission_History = ((TitleMission_HistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableTitleMission_History.IndexKeyColumn]));
                }
                set {
                    this[this.tableTitleMission_History.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableTitleMission_History.IDColumn]));
                }
                set {
                    this[this.tableTitleMission_History.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Mission_Clear_Type {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission_History.Mission_Clear_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'Mission Clear Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.Mission_Clear_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mission_Clear_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableTitleMission_History.Mission_Clear_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'Mission_Clear_Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.Mission_Clear_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mission_Name {
                get {
                    try {
                        return ((string)(this[this.tableTitleMission_History.Mission_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'Mission_Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.Mission_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Lv {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission_History.Condition_LvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'Condition_Lv\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.Condition_LvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Unit_Type {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission_History.Condition_Unit_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'Condition Unit Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.Condition_Unit_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condition_Unit_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableTitleMission_History.Condition_Unit_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'Condition_Unit_Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.Condition_Unit_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_Unit_Class {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission_History.Condition_Unit_ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'Condition Unit Class\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.Condition_Unit_ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condition_Unit_Class_ {
                get {
                    try {
                        return ((string)(this[this.tableTitleMission_History.Condition_Unit_Class_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'Condition_Unit_Class_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.Condition_Unit_Class_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubMission_1 {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission_History.SubMission_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'SubMission_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.SubMission_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubMission_2 {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission_History.SubMission_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'SubMission_2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.SubMission_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubMission_3 {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission_History.SubMission_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'SubMission_3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.SubMission_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubMission_4 {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission_History.SubMission_4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'SubMission_4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.SubMission_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubMission_5 {
                get {
                    try {
                        return ((string)(this[this.tableTitleMission_History.SubMission_5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'SubMission_5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.SubMission_5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Period {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission_History.PeriodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'Period\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.PeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reward_Title_ID {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission_History.Reward_Title_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'Reward_Title_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.Reward_Title_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title_Name {
                get {
                    try {
                        return ((string)(this[this.tableTitleMission_History.Title_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'Title Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.Title_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Condition_ClearMission_ID {
                get {
                    try {
                        return ((int)(this[this.tableTitleMission_History.Condition_ClearMission_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'Condition_ClearMission_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.Condition_ClearMission_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableTitleMission_History.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'UserID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserIP {
                get {
                    try {
                        return ((string)(this[this.tableTitleMission_History.UserIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'UserIP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.UserIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTitleMission_History.RegdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TitleMission_History\' 테이블의 \'Regdate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTitleMission_History.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMission_Clear_TypeNull() {
                return this.IsNull(this.tableTitleMission_History.Mission_Clear_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMission_Clear_TypeNull() {
                this[this.tableTitleMission_History.Mission_Clear_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMission_Clear_Type_Null() {
                return this.IsNull(this.tableTitleMission_History.Mission_Clear_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMission_Clear_Type_Null() {
                this[this.tableTitleMission_History.Mission_Clear_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMission_NameNull() {
                return this.IsNull(this.tableTitleMission_History.Mission_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMission_NameNull() {
                this[this.tableTitleMission_History.Mission_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_LvNull() {
                return this.IsNull(this.tableTitleMission_History.Condition_LvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_LvNull() {
                this[this.tableTitleMission_History.Condition_LvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_TypeNull() {
                return this.IsNull(this.tableTitleMission_History.Condition_Unit_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_TypeNull() {
                this[this.tableTitleMission_History.Condition_Unit_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_Type_Null() {
                return this.IsNull(this.tableTitleMission_History.Condition_Unit_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_Type_Null() {
                this[this.tableTitleMission_History.Condition_Unit_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_ClassNull() {
                return this.IsNull(this.tableTitleMission_History.Condition_Unit_ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_ClassNull() {
                this[this.tableTitleMission_History.Condition_Unit_ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_Unit_Class_Null() {
                return this.IsNull(this.tableTitleMission_History.Condition_Unit_Class_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_Unit_Class_Null() {
                this[this.tableTitleMission_History.Condition_Unit_Class_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubMission_1Null() {
                return this.IsNull(this.tableTitleMission_History.SubMission_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubMission_1Null() {
                this[this.tableTitleMission_History.SubMission_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubMission_2Null() {
                return this.IsNull(this.tableTitleMission_History.SubMission_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubMission_2Null() {
                this[this.tableTitleMission_History.SubMission_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubMission_3Null() {
                return this.IsNull(this.tableTitleMission_History.SubMission_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubMission_3Null() {
                this[this.tableTitleMission_History.SubMission_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubMission_4Null() {
                return this.IsNull(this.tableTitleMission_History.SubMission_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubMission_4Null() {
                this[this.tableTitleMission_History.SubMission_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubMission_5Null() {
                return this.IsNull(this.tableTitleMission_History.SubMission_5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubMission_5Null() {
                this[this.tableTitleMission_History.SubMission_5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodNull() {
                return this.IsNull(this.tableTitleMission_History.PeriodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodNull() {
                this[this.tableTitleMission_History.PeriodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReward_Title_IDNull() {
                return this.IsNull(this.tableTitleMission_History.Reward_Title_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReward_Title_IDNull() {
                this[this.tableTitleMission_History.Reward_Title_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitle_NameNull() {
                return this.IsNull(this.tableTitleMission_History.Title_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitle_NameNull() {
                this[this.tableTitleMission_History.Title_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondition_ClearMission_IDNull() {
                return this.IsNull(this.tableTitleMission_History.Condition_ClearMission_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondition_ClearMission_IDNull() {
                this[this.tableTitleMission_History.Condition_ClearMission_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableTitleMission_History.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableTitleMission_History.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIPNull() {
                return this.IsNull(this.tableTitleMission_History.UserIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIPNull() {
                this[this.tableTitleMission_History.UserIPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegdateNull() {
                return this.IsNull(this.tableTitleMission_History.RegdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegdateNull() {
                this[this.tableTitleMission_History.RegdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SubTitleMissionRow : global::System.Data.DataRow {
            
            private SubTitleMissionDataTable tableSubTitleMission;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SubTitleMissionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSubTitleMission = ((SubTitleMissionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableSubTitleMission.IndexKeyColumn]));
                }
                set {
                    this[this.tableSubTitleMission.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableSubTitleMission.IDColumn]));
                }
                set {
                    this[this.tableSubTitleMission.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Type_Idx {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.Clear_Type_IdxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Type_Idx\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Type_IdxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission.Clear_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NPC_ID {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.NPC_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'NPC ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.NPC_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Kill_NPC_ID {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission.Clear_Condition_Kill_NPC_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear Condition Kill NPC ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_Kill_NPC_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Kill_NPC_Quantity {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.Clear_Condition_Kill_NPC_QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear Condition Kill NPC Quantity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_Kill_NPC_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Collection_Item_ID {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.Clear_Condition_Collection_Item_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_Collection_Item_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_Collection_Item_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Collection_Item_Quantity {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.Clear_Condition_Collection_Item_QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_Collection_Item_Quantity\' 열의 값이 DBNull입니다" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_Collection_Item_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quest_Item_Drop_Rate {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission.Quest_Item_Drop_RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Quest_Item_Drop_Rate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Quest_Item_Drop_RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Dungeon_Difficulty {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission.Clear_Condition_Dungeon_DifficultyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_Dungeon_Difficulty\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_Dungeon_DifficultyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Dungeon_ID {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission.Clear_Condition_Dungeon_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_Dungeon_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_Dungeon_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_Damage {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.Clear_Condition_Dungeon_DamageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_Dungeon_Damage\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_Dungeon_DamageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_Rank {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.Clear_Condition_Dungeon_RankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_Dungeon_Rank\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_Dungeon_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_Clear_Time {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.Clear_Condition_Dungeon_Clear_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_Dungeon_Clear_Time\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_Dungeon_Clear_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_clear_count {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.Clear_Condition_Dungeon_clear_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_Dungeon_clear_count\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_Dungeon_clear_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Talk_NPC_ID {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission.Clear_Condition_Talk_NPC_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_Talk_NPC_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_Talk_NPC_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_PVP_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission.Clear_Condition_PVP_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_PVP_TYPE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_PVP_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_PVP_PLAY {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.Clear_Condition_PVP_PLAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_PVP_PLAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_PVP_PLAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_PVP_WIN {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.Clear_Condition_PVP_WINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_PVP_WIN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_PVP_WINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_PVP_KILL {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.Clear_Condition_PVP_KILLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_PVP_KILL\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_PVP_KILLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_QUEST {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.Clear_Condition_QUESTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_QUEST\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_QUESTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_COLLECT_TITLE {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.Clear_Condition_COLLECT_TITLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_COLLECT_TITLE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_COLLECT_TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_USE_ITEM {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission.Clear_Condition_USE_ITEMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Clear_Condition_USE_ITEM\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.Clear_Condition_USE_ITEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AutomaticDescription {
                get {
                    try {
                        return ((bool)(this[this.tableSubTitleMission.AutomaticDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'AutomaticDescription\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.AutomaticDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission\' 테이블의 \'Description\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    return ((global::System.DateTime)(this[this.tableSubTitleMission.RegdateColumn]));
                }
                set {
                    this[this.tableSubTitleMission.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Type_IdxNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Type_IdxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Type_IdxNull() {
                this[this.tableSubTitleMission.Clear_Type_IdxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Type_Null() {
                return this.IsNull(this.tableSubTitleMission.Clear_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Type_Null() {
                this[this.tableSubTitleMission.Clear_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNPC_IDNull() {
                return this.IsNull(this.tableSubTitleMission.NPC_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNPC_IDNull() {
                this[this.tableSubTitleMission.NPC_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Kill_NPC_IDNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_Kill_NPC_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Kill_NPC_IDNull() {
                this[this.tableSubTitleMission.Clear_Condition_Kill_NPC_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Kill_NPC_QuantityNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_Kill_NPC_QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Kill_NPC_QuantityNull() {
                this[this.tableSubTitleMission.Clear_Condition_Kill_NPC_QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Collection_Item_IDNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_Collection_Item_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Collection_Item_IDNull() {
                this[this.tableSubTitleMission.Clear_Condition_Collection_Item_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableSubTitleMission.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableSubTitleMission.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Collection_Item_QuantityNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_Collection_Item_QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Collection_Item_QuantityNull() {
                this[this.tableSubTitleMission.Clear_Condition_Collection_Item_QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuest_Item_Drop_RateNull() {
                return this.IsNull(this.tableSubTitleMission.Quest_Item_Drop_RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuest_Item_Drop_RateNull() {
                this[this.tableSubTitleMission.Quest_Item_Drop_RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_DifficultyNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_Dungeon_DifficultyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_DifficultyNull() {
                this[this.tableSubTitleMission.Clear_Condition_Dungeon_DifficultyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_IDNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_Dungeon_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_IDNull() {
                this[this.tableSubTitleMission.Clear_Condition_Dungeon_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_DamageNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_Dungeon_DamageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_DamageNull() {
                this[this.tableSubTitleMission.Clear_Condition_Dungeon_DamageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_RankNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_Dungeon_RankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_RankNull() {
                this[this.tableSubTitleMission.Clear_Condition_Dungeon_RankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_Clear_TimeNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_Dungeon_Clear_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_Clear_TimeNull() {
                this[this.tableSubTitleMission.Clear_Condition_Dungeon_Clear_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_clear_countNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_Dungeon_clear_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_clear_countNull() {
                this[this.tableSubTitleMission.Clear_Condition_Dungeon_clear_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Talk_NPC_IDNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_Talk_NPC_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Talk_NPC_IDNull() {
                this[this.tableSubTitleMission.Clear_Condition_Talk_NPC_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_TYPENull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_PVP_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_TYPENull() {
                this[this.tableSubTitleMission.Clear_Condition_PVP_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_PLAYNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_PVP_PLAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_PLAYNull() {
                this[this.tableSubTitleMission.Clear_Condition_PVP_PLAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_WINNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_PVP_WINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_WINNull() {
                this[this.tableSubTitleMission.Clear_Condition_PVP_WINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_KILLNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_PVP_KILLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_KILLNull() {
                this[this.tableSubTitleMission.Clear_Condition_PVP_KILLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_QUESTNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_QUESTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_QUESTNull() {
                this[this.tableSubTitleMission.Clear_Condition_QUESTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_COLLECT_TITLENull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_COLLECT_TITLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_COLLECT_TITLENull() {
                this[this.tableSubTitleMission.Clear_Condition_COLLECT_TITLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_USE_ITEMNull() {
                return this.IsNull(this.tableSubTitleMission.Clear_Condition_USE_ITEMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_USE_ITEMNull() {
                this[this.tableSubTitleMission.Clear_Condition_USE_ITEMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAutomaticDescriptionNull() {
                return this.IsNull(this.tableSubTitleMission.AutomaticDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAutomaticDescriptionNull() {
                this[this.tableSubTitleMission.AutomaticDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableSubTitleMission.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableSubTitleMission.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SubTitleMission_HistoryRow : global::System.Data.DataRow {
            
            private SubTitleMission_HistoryDataTable tableSubTitleMission_History;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SubTitleMission_HistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSubTitleMission_History = ((SubTitleMission_HistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableSubTitleMission_History.IndexKeyColumn]));
                }
                set {
                    this[this.tableSubTitleMission_History.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableSubTitleMission_History.IDColumn]));
                }
                set {
                    this[this.tableSubTitleMission_History.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Type_Idx {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.Clear_Type_IdxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Type_Idx\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Type_IdxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Type_ {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission_History.Clear_Type_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Type_\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Type_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NPC_ID {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.NPC_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'NPC ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.NPC_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Kill_NPC_ID {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission_History.Clear_Condition_Kill_NPC_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear Condition Kill NPC ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_Kill_NPC_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Kill_NPC_Quantity {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.Clear_Condition_Kill_NPC_QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear Condition Kill NPC Quantity\' 열의 값이 DBNull입니" +
                                "다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_Kill_NPC_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Collection_Item_ID {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.Clear_Condition_Collection_Item_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_Collection_Item_ID\' 열의 값이 DBNull입" +
                                "니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_Collection_Item_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission_History.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Collection_Item_Quantity {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.Clear_Condition_Collection_Item_QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_Collection_Item_Quantity\' 열의 값이 D" +
                                "BNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_Collection_Item_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quest_Item_Drop_Rate {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission_History.Quest_Item_Drop_RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Quest_Item_Drop_Rate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Quest_Item_Drop_RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Dungeon_Difficulty {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_DifficultyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_Dungeon_Difficulty\' 열의 값이 DBNull입" +
                                "니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_DifficultyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Dungeon_ID {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_Dungeon_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_Damage {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_DamageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_Dungeon_Damage\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_DamageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_Rank {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_RankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_Dungeon_Rank\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_Clear_Time {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_Clear_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_Dungeon_Clear_Time\' 열의 값이 DBNull입" +
                                "니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_Clear_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_Dungeon_clear_count {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_clear_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_Dungeon_clear_count\' 열의 값이 DBNull" +
                                "입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_clear_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_Talk_NPC_ID {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission_History.Clear_Condition_Talk_NPC_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_Talk_NPC_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_Talk_NPC_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clear_Condition_PVP_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission_History.Clear_Condition_PVP_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_PVP_TYPE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_PVP_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_PVP_PLAY {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.Clear_Condition_PVP_PLAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_PVP_PLAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_PVP_PLAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_PVP_WIN {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.Clear_Condition_PVP_WINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_PVP_WIN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_PVP_WINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_PVP_KILL {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.Clear_Condition_PVP_KILLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_PVP_KILL\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_PVP_KILLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_QUEST {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.Clear_Condition_QUESTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_QUEST\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_QUESTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_COLLECT_TITLE {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.Clear_Condition_COLLECT_TITLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_COLLECT_TITLE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_COLLECT_TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Clear_Condition_USE_ITEM {
                get {
                    try {
                        return ((int)(this[this.tableSubTitleMission_History.Clear_Condition_USE_ITEMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Clear_Condition_USE_ITEM\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.Clear_Condition_USE_ITEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AutomaticDescription {
                get {
                    try {
                        return ((bool)(this[this.tableSubTitleMission_History.AutomaticDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'AutomaticDescription\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.AutomaticDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission_History.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'Description\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission_History.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'UserID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserIP {
                get {
                    try {
                        return ((string)(this[this.tableSubTitleMission_History.UserIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubTitleMission_History\' 테이블의 \'UserIP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubTitleMission_History.UserIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    return ((global::System.DateTime)(this[this.tableSubTitleMission_History.RegdateColumn]));
                }
                set {
                    this[this.tableSubTitleMission_History.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Type_IdxNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Type_IdxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Type_IdxNull() {
                this[this.tableSubTitleMission_History.Clear_Type_IdxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Type_Null() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Type_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Type_Null() {
                this[this.tableSubTitleMission_History.Clear_Type_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNPC_IDNull() {
                return this.IsNull(this.tableSubTitleMission_History.NPC_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNPC_IDNull() {
                this[this.tableSubTitleMission_History.NPC_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Kill_NPC_IDNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_Kill_NPC_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Kill_NPC_IDNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_Kill_NPC_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Kill_NPC_QuantityNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_Kill_NPC_QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Kill_NPC_QuantityNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_Kill_NPC_QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Collection_Item_IDNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_Collection_Item_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Collection_Item_IDNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_Collection_Item_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableSubTitleMission_History.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableSubTitleMission_History.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Collection_Item_QuantityNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_Collection_Item_QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Collection_Item_QuantityNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_Collection_Item_QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuest_Item_Drop_RateNull() {
                return this.IsNull(this.tableSubTitleMission_History.Quest_Item_Drop_RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuest_Item_Drop_RateNull() {
                this[this.tableSubTitleMission_History.Quest_Item_Drop_RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_DifficultyNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_Dungeon_DifficultyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_DifficultyNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_DifficultyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_IDNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_Dungeon_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_IDNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_DamageNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_Dungeon_DamageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_DamageNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_DamageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_RankNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_Dungeon_RankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_RankNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_RankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_Clear_TimeNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_Dungeon_Clear_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_Clear_TimeNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_Clear_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Dungeon_clear_countNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_Dungeon_clear_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Dungeon_clear_countNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_Dungeon_clear_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_Talk_NPC_IDNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_Talk_NPC_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_Talk_NPC_IDNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_Talk_NPC_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_TYPENull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_PVP_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_TYPENull() {
                this[this.tableSubTitleMission_History.Clear_Condition_PVP_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_PLAYNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_PVP_PLAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_PLAYNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_PVP_PLAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_WINNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_PVP_WINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_WINNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_PVP_WINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_PVP_KILLNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_PVP_KILLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_PVP_KILLNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_PVP_KILLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_QUESTNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_QUESTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_QUESTNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_QUESTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_COLLECT_TITLENull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_COLLECT_TITLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_COLLECT_TITLENull() {
                this[this.tableSubTitleMission_History.Clear_Condition_COLLECT_TITLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClear_Condition_USE_ITEMNull() {
                return this.IsNull(this.tableSubTitleMission_History.Clear_Condition_USE_ITEMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClear_Condition_USE_ITEMNull() {
                this[this.tableSubTitleMission_History.Clear_Condition_USE_ITEMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAutomaticDescriptionNull() {
                return this.IsNull(this.tableSubTitleMission_History.AutomaticDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAutomaticDescriptionNull() {
                this[this.tableSubTitleMission_History.AutomaticDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableSubTitleMission_History.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableSubTitleMission_History.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableSubTitleMission_History.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableSubTitleMission_History.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIPNull() {
                return this.IsNull(this.tableSubTitleMission_History.UserIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIPNull() {
                this[this.tableSubTitleMission_History.UserIPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StringTableRow : global::System.Data.DataRow {
            
            private StringTableDataTable tableStringTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StringTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStringTable = ((StringTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ID {
                get {
                    return ((short)(this[this.tableStringTable.IDColumn]));
                }
                set {
                    this[this.tableStringTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENum {
                get {
                    try {
                        return ((string)(this[this.tableStringTable.ENumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'StringTable\' 테이블의 \'ENum\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableStringTable.ENumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableStringTable.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'StringTable\' 테이블의 \'Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableStringTable.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String {
                get {
                    try {
                        return ((string)(this[this.tableStringTable.StringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'StringTable\' 테이블의 \'String\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableStringTable.StringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStringTable.RegdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'StringTable\' 테이블의 \'Regdate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableStringTable.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENumNull() {
                return this.IsNull(this.tableStringTable.ENumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENumNull() {
                this[this.tableStringTable.ENumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableStringTable.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableStringTable.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStringNull() {
                return this.IsNull(this.tableStringTable.StringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStringNull() {
                this[this.tableStringTable.StringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegdateNull() {
                return this.IsNull(this.tableStringTable.RegdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegdateNull() {
                this[this.tableStringTable.RegdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StringTable_HistoryRow : global::System.Data.DataRow {
            
            private StringTable_HistoryDataTable tableStringTable_History;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StringTable_HistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStringTable_History = ((StringTable_HistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ID {
                get {
                    return ((short)(this[this.tableStringTable_History.IDColumn]));
                }
                set {
                    this[this.tableStringTable_History.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENum {
                get {
                    try {
                        return ((string)(this[this.tableStringTable_History.ENumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'StringTable_History\' 테이블의 \'ENum\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableStringTable_History.ENumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableStringTable_History.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'StringTable_History\' 테이블의 \'Type\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableStringTable_History.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String {
                get {
                    try {
                        return ((string)(this[this.tableStringTable_History.StringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'StringTable_History\' 테이블의 \'String\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableStringTable_History.StringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    return ((string)(this[this.tableStringTable_History.UserIDColumn]));
                }
                set {
                    this[this.tableStringTable_History.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserIP {
                get {
                    return ((string)(this[this.tableStringTable_History.UserIPColumn]));
                }
                set {
                    this[this.tableStringTable_History.UserIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    return ((global::System.DateTime)(this[this.tableStringTable_History.RegdateColumn]));
                }
                set {
                    this[this.tableStringTable_History.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENumNull() {
                return this.IsNull(this.tableStringTable_History.ENumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENumNull() {
                this[this.tableStringTable_History.ENumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableStringTable_History.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableStringTable_History.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStringNull() {
                return this.IsNull(this.tableStringTable_History.StringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStringNull() {
                this[this.tableStringTable_History.StringColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NetErrorTableRow : global::System.Data.DataRow {
            
            private NetErrorTableDataTable tableNetErrorTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NetErrorTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNetErrorTable = ((NetErrorTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableNetErrorTable.IDColumn]));
                }
                set {
                    this[this.tableNetErrorTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Enum {
                get {
                    try {
                        return ((string)(this[this.tableNetErrorTable.EnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'NetErrorTable\' 테이블의 \'Enum\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableNetErrorTable.EnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String {
                get {
                    try {
                        return ((string)(this[this.tableNetErrorTable.StringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'NetErrorTable\' 테이블의 \'String\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableNetErrorTable.StringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PreProcessor {
                get {
                    try {
                        return ((string)(this[this.tableNetErrorTable.PreProcessorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'NetErrorTable\' 테이블의 \'PreProcessor\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableNetErrorTable.PreProcessorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNetErrorTable.RegdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'NetErrorTable\' 테이블의 \'Regdate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableNetErrorTable.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnumNull() {
                return this.IsNull(this.tableNetErrorTable.EnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnumNull() {
                this[this.tableNetErrorTable.EnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStringNull() {
                return this.IsNull(this.tableNetErrorTable.StringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStringNull() {
                this[this.tableNetErrorTable.StringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreProcessorNull() {
                return this.IsNull(this.tableNetErrorTable.PreProcessorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreProcessorNull() {
                this[this.tableNetErrorTable.PreProcessorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegdateNull() {
                return this.IsNull(this.tableNetErrorTable.RegdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegdateNull() {
                this[this.tableNetErrorTable.RegdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NetErrorTable_HistoryRow : global::System.Data.DataRow {
            
            private NetErrorTable_HistoryDataTable tableNetErrorTable_History;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NetErrorTable_HistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNetErrorTable_History = ((NetErrorTable_HistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableNetErrorTable_History.IDColumn]));
                }
                set {
                    this[this.tableNetErrorTable_History.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Enum {
                get {
                    try {
                        return ((string)(this[this.tableNetErrorTable_History.EnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'NetErrorTable_History\' 테이블의 \'Enum\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableNetErrorTable_History.EnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String {
                get {
                    try {
                        return ((string)(this[this.tableNetErrorTable_History.StringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'NetErrorTable_History\' 테이블의 \'String\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableNetErrorTable_History.StringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PreProcessor {
                get {
                    try {
                        return ((string)(this[this.tableNetErrorTable_History.PreProcessorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'NetErrorTable_History\' 테이블의 \'PreProcessor\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableNetErrorTable_History.PreProcessorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableNetErrorTable_History.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'NetErrorTable_History\' 테이블의 \'UserID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableNetErrorTable_History.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserIP {
                get {
                    try {
                        return ((string)(this[this.tableNetErrorTable_History.UserIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'NetErrorTable_History\' 테이블의 \'UserIP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableNetErrorTable_History.UserIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNetErrorTable_History.RegdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'NetErrorTable_History\' 테이블의 \'Regdate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableNetErrorTable_History.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnumNull() {
                return this.IsNull(this.tableNetErrorTable_History.EnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnumNull() {
                this[this.tableNetErrorTable_History.EnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStringNull() {
                return this.IsNull(this.tableNetErrorTable_History.StringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStringNull() {
                this[this.tableNetErrorTable_History.StringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreProcessorNull() {
                return this.IsNull(this.tableNetErrorTable_History.PreProcessorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreProcessorNull() {
                this[this.tableNetErrorTable_History.PreProcessorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableNetErrorTable_History.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableNetErrorTable_History.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIPNull() {
                return this.IsNull(this.tableNetErrorTable_History.UserIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIPNull() {
                this[this.tableNetErrorTable_History.UserIPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegdateNull() {
                return this.IsNull(this.tableNetErrorTable_History.RegdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegdateNull() {
                this[this.tableNetErrorTable_History.RegdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TextureStringManagerRow : global::System.Data.DataRow {
            
            private TextureStringManagerDataTable tableTextureStringManager;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TextureStringManagerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTextureStringManager = ((TextureStringManagerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TextureIDX {
                get {
                    return ((int)(this[this.tableTextureStringManager.TextureIDXColumn]));
                }
                set {
                    this[this.tableTextureStringManager.TextureIDXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilePath {
                get {
                    try {
                        return ((string)(this[this.tableTextureStringManager.FilePathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TextureStringManager\' 테이블의 \'FilePath\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTextureStringManager.FilePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String {
                get {
                    try {
                        return ((string)(this[this.tableTextureStringManager.StringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TextureStringManager\' 테이블의 \'String\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTextureStringManager.StringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChange {
                get {
                    try {
                        return ((bool)(this[this.tableTextureStringManager.IsChangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TextureStringManager\' 테이블의 \'IsChange\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTextureStringManager.IsChangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTextureStringManager.RegdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TextureStringManager\' 테이블의 \'Regdate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTextureStringManager.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFilePathNull() {
                return this.IsNull(this.tableTextureStringManager.FilePathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFilePathNull() {
                this[this.tableTextureStringManager.FilePathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStringNull() {
                return this.IsNull(this.tableTextureStringManager.StringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStringNull() {
                this[this.tableTextureStringManager.StringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsChangeNull() {
                return this.IsNull(this.tableTextureStringManager.IsChangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsChangeNull() {
                this[this.tableTextureStringManager.IsChangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegdateNull() {
                return this.IsNull(this.tableTextureStringManager.RegdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegdateNull() {
                this[this.tableTextureStringManager.RegdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TextureStringManager_HistoryRow : global::System.Data.DataRow {
            
            private TextureStringManager_HistoryDataTable tableTextureStringManager_History;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TextureStringManager_HistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTextureStringManager_History = ((TextureStringManager_HistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TextureIDX {
                get {
                    return ((int)(this[this.tableTextureStringManager_History.TextureIDXColumn]));
                }
                set {
                    this[this.tableTextureStringManager_History.TextureIDXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilePath {
                get {
                    try {
                        return ((string)(this[this.tableTextureStringManager_History.FilePathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TextureStringManager_History\' 테이블의 \'FilePath\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTextureStringManager_History.FilePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String {
                get {
                    try {
                        return ((string)(this[this.tableTextureStringManager_History.StringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TextureStringManager_History\' 테이블의 \'String\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTextureStringManager_History.StringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChange {
                get {
                    try {
                        return ((bool)(this[this.tableTextureStringManager_History.IsChangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TextureStringManager_History\' 테이블의 \'IsChange\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTextureStringManager_History.IsChangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableTextureStringManager_History.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TextureStringManager_History\' 테이블의 \'UserID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTextureStringManager_History.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserIP {
                get {
                    try {
                        return ((string)(this[this.tableTextureStringManager_History.UserIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TextureStringManager_History\' 테이블의 \'UserIP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTextureStringManager_History.UserIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTextureStringManager_History.RegdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TextureStringManager_History\' 테이블의 \'Regdate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTextureStringManager_History.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFilePathNull() {
                return this.IsNull(this.tableTextureStringManager_History.FilePathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFilePathNull() {
                this[this.tableTextureStringManager_History.FilePathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStringNull() {
                return this.IsNull(this.tableTextureStringManager_History.StringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStringNull() {
                this[this.tableTextureStringManager_History.StringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsChangeNull() {
                return this.IsNull(this.tableTextureStringManager_History.IsChangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsChangeNull() {
                this[this.tableTextureStringManager_History.IsChangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableTextureStringManager_History.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableTextureStringManager_History.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIPNull() {
                return this.IsNull(this.tableTextureStringManager_History.UserIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIPNull() {
                this[this.tableTextureStringManager_History.UserIPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegdateNull() {
                return this.IsNull(this.tableTextureStringManager_History.RegdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegdateNull() {
                this[this.tableTextureStringManager_History.RegdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SkillEnumRow : global::System.Data.DataRow {
            
            private SkillEnumDataTable tableSkillEnum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SkillEnumRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSkillEnum = ((SkillEnumDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableSkillEnum.IndexKeyColumn]));
                }
                set {
                    this[this.tableSkillEnum.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_Num {
                get {
                    try {
                        return ((int)(this[this.tableSkillEnum.ID_NumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillEnum\' 테이블의 \'ID Num\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillEnum.ID_NumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID_Name {
                get {
                    try {
                        return ((string)(this[this.tableSkillEnum.ID_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillEnum\' 테이블의 \'ID Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillEnum.ID_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableSkillEnum.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillEnum\' 테이블의 \'Description\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillEnum.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSkillEnum.RegdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillEnum\' 테이블의 \'Regdate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillEnum.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_NumNull() {
                return this.IsNull(this.tableSkillEnum.ID_NumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_NumNull() {
                this[this.tableSkillEnum.ID_NumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_NameNull() {
                return this.IsNull(this.tableSkillEnum.ID_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_NameNull() {
                this[this.tableSkillEnum.ID_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableSkillEnum.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableSkillEnum.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegdateNull() {
                return this.IsNull(this.tableSkillEnum.RegdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegdateNull() {
                this[this.tableSkillEnum.RegdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SkillTableRow : global::System.Data.DataRow {
            
            private SkillTableDataTable tableSkillTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SkillTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSkillTable = ((SkillTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndexKey {
                get {
                    return ((int)(this[this.tableSkillTable.IndexKeyColumn]));
                }
                set {
                    this[this.tableSkillTable.IndexKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableSkillTable.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID_ENUM {
                get {
                    try {
                        return ((string)(this[this.tableSkillTable.ID_ENUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'ID_ENUM\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.ID_ENUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TYPE {
                get {
                    try {
                        return ((int)(this[this.tableSkillTable.TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'TYPE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE_ENUM {
                get {
                    try {
                        return ((string)(this[this.tableSkillTable.TYPE_ENUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'TYPE_ENUM\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.TYPE_ENUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableSkillTable.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESC {
                get {
                    try {
                        return ((string)(this[this.tableSkillTable.DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'DESC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SKILL_LEVEL {
                get {
                    try {
                        return ((int)(this[this.tableSkillTable.SKILL_LEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'SKILL_LEVEL\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.SKILL_LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double POWER_RATE {
                get {
                    try {
                        return ((double)(this[this.tableSkillTable.POWER_RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'POWER_RATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.POWER_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COOL_TIME {
                get {
                    try {
                        return ((int)(this[this.tableSkillTable.COOL_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'COOL_TIME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.COOL_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MP_CONSUMPTION {
                get {
                    try {
                        return ((int)(this[this.tableSkillTable.MP_CONSUMPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'MP_CONSUMPTION\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.MP_CONSUMPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int STAT_BASE_HP {
                get {
                    try {
                        return ((int)(this[this.tableSkillTable.STAT_BASE_HPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'STAT_BASE_HP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.STAT_BASE_HPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int STAT_ATK_PHYSIC {
                get {
                    try {
                        return ((int)(this[this.tableSkillTable.STAT_ATK_PHYSICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'STAT_ATK_PHYSIC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.STAT_ATK_PHYSICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int STAT_ATK_MAGIC {
                get {
                    try {
                        return ((int)(this[this.tableSkillTable.STAT_ATK_MAGICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'STAT_ATK_MAGIC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.STAT_ATK_MAGICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int STAT_DEF_PHYSIC {
                get {
                    try {
                        return ((int)(this[this.tableSkillTable.STAT_DEF_PHYSICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'STAT_DEF_PHYSIC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.STAT_DEF_PHYSICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int STAT_DEF_MAGIC {
                get {
                    try {
                        return ((int)(this[this.tableSkillTable.STAT_DEF_MAGICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'STAT_DEF_MAGIC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.STAT_DEF_MAGICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ICON_TEXTURE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableSkillTable.ICON_TEXTURE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'ICON_TEXTURE_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.ICON_TEXTURE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ICON_TEXTURE_PIECE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableSkillTable.ICON_TEXTURE_PIECE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'ICON_TEXTURE_PIECE_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.ICON_TEXTURE_PIECE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BORN_SEALED {
                get {
                    try {
                        return ((bool)(this[this.tableSkillTable.BORN_SEALEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'BORN_SEALED\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.BORN_SEALEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SHOW_LEVEL {
                get {
                    try {
                        return ((bool)(this[this.tableSkillTable.SHOW_LEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'SHOW_LEVEL\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.SHOW_LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ACTIVE_SKILL_USE_CONDITION {
                get {
                    try {
                        return ((int)(this[this.tableSkillTable.ACTIVE_SKILL_USE_CONDITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'ACTIVE_SKILL_USE_CONDITION\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.ACTIVE_SKILL_USE_CONDITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACTIVE_SKILL_USE_CONDITION_ENUM {
                get {
                    try {
                        return ((string)(this[this.tableSkillTable.ACTIVE_SKILL_USE_CONDITION_ENUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'ACTIVE_SKILL_USE_CONDITION_ENUM\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.ACTIVE_SKILL_USE_CONDITION_ENUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableSkillTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'Description\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IN_HOUSE_TEST_ONLY {
                get {
                    try {
                        return ((bool)(this[this.tableSkillTable.IN_HOUSE_TEST_ONLYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'IN_HOUSE_TEST_ONLY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.IN_HOUSE_TEST_ONLYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MISC_0 {
                get {
                    try {
                        return ((string)(this[this.tableSkillTable.MISC_0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'MISC_0\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.MISC_0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MISC_1 {
                get {
                    try {
                        return ((double)(this[this.tableSkillTable.MISC_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'MISC_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.MISC_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MISC_2 {
                get {
                    try {
                        return ((string)(this[this.tableSkillTable.MISC_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'MISC_2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.MISC_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MISC_3 {
                get {
                    try {
                        return ((double)(this[this.tableSkillTable.MISC_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'MISC_3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.MISC_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MISC_4 {
                get {
                    try {
                        return ((string)(this[this.tableSkillTable.MISC_4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'MISC_4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.MISC_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MISC_5 {
                get {
                    try {
                        return ((double)(this[this.tableSkillTable.MISC_5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'MISC_5\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.MISC_5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MISC_6 {
                get {
                    try {
                        return ((string)(this[this.tableSkillTable.MISC_6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'MISC_6\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.MISC_6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MISC_7 {
                get {
                    try {
                        return ((double)(this[this.tableSkillTable.MISC_7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'MISC_7\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.MISC_7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSkillTable.RegdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SkillTable\' 테이블의 \'Regdate\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSkillTable.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableSkillTable.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableSkillTable.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_ENUMNull() {
                return this.IsNull(this.tableSkillTable.ID_ENUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_ENUMNull() {
                this[this.tableSkillTable.ID_ENUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPENull() {
                return this.IsNull(this.tableSkillTable.TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPENull() {
                this[this.tableSkillTable.TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPE_ENUMNull() {
                return this.IsNull(this.tableSkillTable.TYPE_ENUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPE_ENUMNull() {
                this[this.tableSkillTable.TYPE_ENUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableSkillTable.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableSkillTable.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCNull() {
                return this.IsNull(this.tableSkillTable.DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCNull() {
                this[this.tableSkillTable.DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSKILL_LEVELNull() {
                return this.IsNull(this.tableSkillTable.SKILL_LEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSKILL_LEVELNull() {
                this[this.tableSkillTable.SKILL_LEVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOWER_RATENull() {
                return this.IsNull(this.tableSkillTable.POWER_RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOWER_RATENull() {
                this[this.tableSkillTable.POWER_RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOOL_TIMENull() {
                return this.IsNull(this.tableSkillTable.COOL_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOOL_TIMENull() {
                this[this.tableSkillTable.COOL_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_CONSUMPTIONNull() {
                return this.IsNull(this.tableSkillTable.MP_CONSUMPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_CONSUMPTIONNull() {
                this[this.tableSkillTable.MP_CONSUMPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTAT_BASE_HPNull() {
                return this.IsNull(this.tableSkillTable.STAT_BASE_HPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTAT_BASE_HPNull() {
                this[this.tableSkillTable.STAT_BASE_HPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTAT_ATK_PHYSICNull() {
                return this.IsNull(this.tableSkillTable.STAT_ATK_PHYSICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTAT_ATK_PHYSICNull() {
                this[this.tableSkillTable.STAT_ATK_PHYSICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTAT_ATK_MAGICNull() {
                return this.IsNull(this.tableSkillTable.STAT_ATK_MAGICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTAT_ATK_MAGICNull() {
                this[this.tableSkillTable.STAT_ATK_MAGICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTAT_DEF_PHYSICNull() {
                return this.IsNull(this.tableSkillTable.STAT_DEF_PHYSICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTAT_DEF_PHYSICNull() {
                this[this.tableSkillTable.STAT_DEF_PHYSICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTAT_DEF_MAGICNull() {
                return this.IsNull(this.tableSkillTable.STAT_DEF_MAGICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTAT_DEF_MAGICNull() {
                this[this.tableSkillTable.STAT_DEF_MAGICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsICON_TEXTURE_NAMENull() {
                return this.IsNull(this.tableSkillTable.ICON_TEXTURE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetICON_TEXTURE_NAMENull() {
                this[this.tableSkillTable.ICON_TEXTURE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsICON_TEXTURE_PIECE_NAMENull() {
                return this.IsNull(this.tableSkillTable.ICON_TEXTURE_PIECE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetICON_TEXTURE_PIECE_NAMENull() {
                this[this.tableSkillTable.ICON_TEXTURE_PIECE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBORN_SEALEDNull() {
                return this.IsNull(this.tableSkillTable.BORN_SEALEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBORN_SEALEDNull() {
                this[this.tableSkillTable.BORN_SEALEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHOW_LEVELNull() {
                return this.IsNull(this.tableSkillTable.SHOW_LEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHOW_LEVELNull() {
                this[this.tableSkillTable.SHOW_LEVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACTIVE_SKILL_USE_CONDITIONNull() {
                return this.IsNull(this.tableSkillTable.ACTIVE_SKILL_USE_CONDITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACTIVE_SKILL_USE_CONDITIONNull() {
                this[this.tableSkillTable.ACTIVE_SKILL_USE_CONDITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACTIVE_SKILL_USE_CONDITION_ENUMNull() {
                return this.IsNull(this.tableSkillTable.ACTIVE_SKILL_USE_CONDITION_ENUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACTIVE_SKILL_USE_CONDITION_ENUMNull() {
                this[this.tableSkillTable.ACTIVE_SKILL_USE_CONDITION_ENUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableSkillTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableSkillTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIN_HOUSE_TEST_ONLYNull() {
                return this.IsNull(this.tableSkillTable.IN_HOUSE_TEST_ONLYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIN_HOUSE_TEST_ONLYNull() {
                this[this.tableSkillTable.IN_HOUSE_TEST_ONLYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMISC_0Null() {
                return this.IsNull(this.tableSkillTable.MISC_0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMISC_0Null() {
                this[this.tableSkillTable.MISC_0Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMISC_1Null() {
                return this.IsNull(this.tableSkillTable.MISC_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMISC_1Null() {
                this[this.tableSkillTable.MISC_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMISC_2Null() {
                return this.IsNull(this.tableSkillTable.MISC_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMISC_2Null() {
                this[this.tableSkillTable.MISC_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMISC_3Null() {
                return this.IsNull(this.tableSkillTable.MISC_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMISC_3Null() {
                this[this.tableSkillTable.MISC_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMISC_4Null() {
                return this.IsNull(this.tableSkillTable.MISC_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMISC_4Null() {
                this[this.tableSkillTable.MISC_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMISC_5Null() {
                return this.IsNull(this.tableSkillTable.MISC_5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMISC_5Null() {
                this[this.tableSkillTable.MISC_5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMISC_6Null() {
                return this.IsNull(this.tableSkillTable.MISC_6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMISC_6Null() {
                this[this.tableSkillTable.MISC_6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMISC_7Null() {
                return this.IsNull(this.tableSkillTable.MISC_7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMISC_7Null() {
                this[this.tableSkillTable.MISC_7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegdateNull() {
                return this.IsNull(this.tableSkillTable.RegdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegdateNull() {
                this[this.tableSkillTable.RegdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ItemRowChangeEvent : global::System.EventArgs {
            
            private ItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemRowChangeEvent(ItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Item_HistoryRowChangeEvent : global::System.EventArgs {
            
            private Item_HistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Item_HistoryRowChangeEvent(Item_HistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Item_HistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SetItemRowChangeEvent : global::System.EventArgs {
            
            private SetItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SetItemRowChangeEvent(SetItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SetItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SetItem_HistoryRowChangeEvent : global::System.EventArgs {
            
            private SetItem_HistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SetItem_HistoryRowChangeEvent(SetItem_HistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SetItem_HistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class QuestTableRowChangeEvent : global::System.EventArgs {
            
            private QuestTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuestTableRowChangeEvent(QuestTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuestTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class QuestTable_HistoryRowChangeEvent : global::System.EventArgs {
            
            private QuestTable_HistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuestTable_HistoryRowChangeEvent(QuestTable_HistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuestTable_HistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SubQuestTableRowChangeEvent : global::System.EventArgs {
            
            private SubQuestTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubQuestTableRowChangeEvent(SubQuestTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubQuestTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SubQuestTable_HistoryRowChangeEvent : global::System.EventArgs {
            
            private SubQuestTable_HistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubQuestTable_HistoryRowChangeEvent(SubQuestTable_HistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubQuestTable_HistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TitleTableRowChangeEvent : global::System.EventArgs {
            
            private TitleTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleTableRowChangeEvent(TitleTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TitleTable_HistoryRowChangeEvent : global::System.EventArgs {
            
            private TitleTable_HistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleTable_HistoryRowChangeEvent(TitleTable_HistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleTable_HistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TitleMissionRowChangeEvent : global::System.EventArgs {
            
            private TitleMissionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleMissionRowChangeEvent(TitleMissionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleMissionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TitleMission_HistoryRowChangeEvent : global::System.EventArgs {
            
            private TitleMission_HistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleMission_HistoryRowChangeEvent(TitleMission_HistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TitleMission_HistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SubTitleMissionRowChangeEvent : global::System.EventArgs {
            
            private SubTitleMissionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubTitleMissionRowChangeEvent(SubTitleMissionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubTitleMissionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SubTitleMission_HistoryRowChangeEvent : global::System.EventArgs {
            
            private SubTitleMission_HistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubTitleMission_HistoryRowChangeEvent(SubTitleMission_HistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubTitleMission_HistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StringTableRowChangeEvent : global::System.EventArgs {
            
            private StringTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StringTableRowChangeEvent(StringTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StringTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StringTable_HistoryRowChangeEvent : global::System.EventArgs {
            
            private StringTable_HistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StringTable_HistoryRowChangeEvent(StringTable_HistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StringTable_HistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NetErrorTableRowChangeEvent : global::System.EventArgs {
            
            private NetErrorTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NetErrorTableRowChangeEvent(NetErrorTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NetErrorTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NetErrorTable_HistoryRowChangeEvent : global::System.EventArgs {
            
            private NetErrorTable_HistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NetErrorTable_HistoryRowChangeEvent(NetErrorTable_HistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NetErrorTable_HistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TextureStringManagerRowChangeEvent : global::System.EventArgs {
            
            private TextureStringManagerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TextureStringManagerRowChangeEvent(TextureStringManagerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TextureStringManagerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TextureStringManager_HistoryRowChangeEvent : global::System.EventArgs {
            
            private TextureStringManager_HistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TextureStringManager_HistoryRowChangeEvent(TextureStringManager_HistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TextureStringManager_HistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SkillEnumRowChangeEvent : global::System.EventArgs {
            
            private SkillEnumRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SkillEnumRowChangeEvent(SkillEnumRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SkillEnumRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SkillTableRowChangeEvent : global::System.EventArgs {
            
            private SkillTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SkillTableRowChangeEvent(SkillTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SkillTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace TransDBManagerForWeb.ScriptData_JPDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ItemTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ItemTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Item";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Description In Shop", "Description In Shop");
            tableMapping.ColumnMappings.Add("Model Name", "Model Name");
            tableMapping.ColumnMappings.Add("Texture Change XET Name", "Texture Change XET Name");
            tableMapping.ColumnMappings.Add("ELSWORD_MODEL_NAME", "ELSWORD_MODEL_NAME");
            tableMapping.ColumnMappings.Add("ELSWORD_XET_NAME", "ELSWORD_XET_NAME");
            tableMapping.ColumnMappings.Add("AISHA_MODEL_NAME", "AISHA_MODEL_NAME");
            tableMapping.ColumnMappings.Add("AISHA_XET_NAME", "AISHA_XET_NAME");
            tableMapping.ColumnMappings.Add("RENA_MODEL_NAME", "RENA_MODEL_NAME");
            tableMapping.ColumnMappings.Add("RENA_XET_NAME", "RENA_XET_NAME");
            tableMapping.ColumnMappings.Add("RAVEN_MODEL_NAME", "RAVEN_MODEL_NAME");
            tableMapping.ColumnMappings.Add("RAVEN_XET_NAME", "RAVEN_XET_NAME");
            tableMapping.ColumnMappings.Add("EVE_MODEL_NAME", "EVE_MODEL_NAME");
            tableMapping.ColumnMappings.Add("EVE_XET_NAME", "EVE_XET_NAME");
            tableMapping.ColumnMappings.Add("Anim XET Name", "Anim XET Name");
            tableMapping.ColumnMappings.Add("Anim Name", "Anim Name");
            tableMapping.ColumnMappings.Add("Shop Image", "Shop Image");
            tableMapping.ColumnMappings.Add("Drop Viewer", "Drop Viewer");
            tableMapping.ColumnMappings.Add("Item Type", "Item Type");
            tableMapping.ColumnMappings.Add("Item Type_", "Item Type_");
            tableMapping.ColumnMappings.Add("ITEMTYPE_C", "ITEMTYPE_C");
            tableMapping.ColumnMappings.Add("Fashion", "Fashion");
            tableMapping.ColumnMappings.Add("Vested", "Vested");
            tableMapping.ColumnMappings.Add("Can Enchant", "Can Enchant");
            tableMapping.ColumnMappings.Add("Use Type", "Use Type");
            tableMapping.ColumnMappings.Add("Use Type_", "Use Type_");
            tableMapping.ColumnMappings.Add("USETYPE_C", "USETYPE_C");
            tableMapping.ColumnMappings.Add("Attach FrameName", "Attach FrameName");
            tableMapping.ColumnMappings.Add("FO_Elsword_X", "FO_Elsword_X");
            tableMapping.ColumnMappings.Add("FO_Elsword_Y", "FO_Elsword_Y");
            tableMapping.ColumnMappings.Add("FO_Elsword_Z", "FO_Elsword_Z");
            tableMapping.ColumnMappings.Add("FO_Lena_X", "FO_Lena_X");
            tableMapping.ColumnMappings.Add("FO_Lena_Y", "FO_Lena_Y");
            tableMapping.ColumnMappings.Add("FO_Lena_Z", "FO_Lena_Z");
            tableMapping.ColumnMappings.Add("FO_Aisha_X", "FO_Aisha_X");
            tableMapping.ColumnMappings.Add("FO_Aisha_Y", "FO_Aisha_Y");
            tableMapping.ColumnMappings.Add("FO_Aisha_Z", "FO_Aisha_Z");
            tableMapping.ColumnMappings.Add("FO_Raven_X", "FO_Raven_X");
            tableMapping.ColumnMappings.Add("FO_Raven_Y", "FO_Raven_Y");
            tableMapping.ColumnMappings.Add("FO_Raven_Z", "FO_Raven_Z");
            tableMapping.ColumnMappings.Add("FO_Eve_X", "FO_Eve_X");
            tableMapping.ColumnMappings.Add("FO_Eve_Y", "FO_Eve_Y");
            tableMapping.ColumnMappings.Add("FO_Eve_Z", "FO_Eve_Z");
            tableMapping.ColumnMappings.Add("Can HyperMode", "Can HyperMode");
            tableMapping.ColumnMappings.Add("Period Type", "Period Type");
            tableMapping.ColumnMappings.Add("Period Type_", "Period Type_");
            tableMapping.ColumnMappings.Add("PERIODTYPE_C", "PERIODTYPE_C");
            tableMapping.ColumnMappings.Add("Endurance", "Endurance");
            tableMapping.ColumnMappings.Add("EnduranceDamageMin", "EnduranceDamageMin");
            tableMapping.ColumnMappings.Add("EnduranceDamageMax", "EnduranceDamageMax");
            tableMapping.ColumnMappings.Add("Repair ED", "Repair ED");
            tableMapping.ColumnMappings.Add("Repair VP", "Repair VP");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Price Type", "Price Type");
            tableMapping.ColumnMappings.Add("Price Type_", "Price Type_");
            tableMapping.ColumnMappings.Add("PRICETYPE_C", "PRICETYPE_C");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("Price PvP Point", "Price PvP Point");
            tableMapping.ColumnMappings.Add("Use Condition", "Use Condition");
            tableMapping.ColumnMappings.Add("Use Condition_", "Use Condition_");
            tableMapping.ColumnMappings.Add("USECONDITION_C", "USECONDITION_C");
            tableMapping.ColumnMappings.Add("Unit Type", "Unit Type");
            tableMapping.ColumnMappings.Add("Unit Type_", "Unit Type_");
            tableMapping.ColumnMappings.Add("UNITTYPE_C", "UNITTYPE_C");
            tableMapping.ColumnMappings.Add("Unit Class", "Unit Class");
            tableMapping.ColumnMappings.Add("Unit Class_", "Unit Class_");
            tableMapping.ColumnMappings.Add("UNITCLASS_C", "UNITCLASS_C");
            tableMapping.ColumnMappings.Add("Use Level", "Use Level");
            tableMapping.ColumnMappings.Add("Eqip Position", "Eqip Position");
            tableMapping.ColumnMappings.Add("Eqip Position_", "Eqip Position_");
            tableMapping.ColumnMappings.Add("EQIPPOSITION_C", "EQIPPOSITION_C");
            tableMapping.ColumnMappings.Add("Item Grade", "Item Grade");
            tableMapping.ColumnMappings.Add("Item Grade_", "Item Grade_");
            tableMapping.ColumnMappings.Add("ITEMGRADE_C", "ITEMGRADE_C");
            tableMapping.ColumnMappings.Add("BASE_HP", "BASE_HP");
            tableMapping.ColumnMappings.Add("ATK_PHYSIC", "ATK_PHYSIC");
            tableMapping.ColumnMappings.Add("ATK_MAGIC", "ATK_MAGIC");
            tableMapping.ColumnMappings.Add("DEF_PHYSIC", "DEF_PHYSIC");
            tableMapping.ColumnMappings.Add("DEF_MAGIC", "DEF_MAGIC");
            tableMapping.ColumnMappings.Add("SA_NUM", "SA_NUM");
            tableMapping.ColumnMappings.Add("SA_01", "SA_01");
            tableMapping.ColumnMappings.Add("SA_02", "SA_02");
            tableMapping.ColumnMappings.Add("SA_03", "SA_03");
            tableMapping.ColumnMappings.Add("SA_04", "SA_04");
            tableMapping.ColumnMappings.Add("SA_05", "SA_05");
            tableMapping.ColumnMappings.Add("SA_06", "SA_06");
            tableMapping.ColumnMappings.Add("SA_07", "SA_07");
            tableMapping.ColumnMappings.Add("SA_08", "SA_08");
            tableMapping.ColumnMappings.Add("SA_09", "SA_09");
            tableMapping.ColumnMappings.Add("SA_10", "SA_10");
            tableMapping.ColumnMappings.Add("SO_01", "SO_01");
            tableMapping.ColumnMappings.Add("SO_02", "SO_02");
            tableMapping.ColumnMappings.Add("SO_03", "SO_03");
            tableMapping.ColumnMappings.Add("SO_04", "SO_04");
            tableMapping.ColumnMappings.Add("SO_05", "SO_05");
            tableMapping.ColumnMappings.Add("SO_06", "SO_06");
            tableMapping.ColumnMappings.Add("SO_07", "SO_07");
            tableMapping.ColumnMappings.Add("SO_08", "SO_08");
            tableMapping.ColumnMappings.Add("SO_09", "SO_09");
            tableMapping.ColumnMappings.Add("COOL_TIME", "COOL_TIME");
            tableMapping.ColumnMappings.Add("SET_ID", "SET_ID");
            tableMapping.ColumnMappings.Add("Can Use Inventory", "Can Use Inventory");
            tableMapping.ColumnMappings.Add("NoEquip", "NoEquip");
            tableMapping.ColumnMappings.Add("SLASH_TRACE_COLOR", "SLASH_TRACE_COLOR");
            tableMapping.ColumnMappings.Add("SLASH_TRACE_TIP_COLOR", "SLASH_TRACE_TIP_COLOR");
            tableMapping.ColumnMappings.Add("HYPER_SLASH_TRACE_COLOR", "HYPER_SLASH_TRACE_COLOR");
            tableMapping.ColumnMappings.Add("HYPER_SLASH_TRACE_TIP_COLOR", "HYPER_SLASH_TRACE_TIP_COLOR");
            tableMapping.ColumnMappings.Add("ELSWORD_ITEM_SCALE_ROTATE", "ELSWORD_ITEM_SCALE_ROTATE");
            tableMapping.ColumnMappings.Add("AISHA_ITEM_SCALE_ROTATE", "AISHA_ITEM_SCALE_ROTATE");
            tableMapping.ColumnMappings.Add("RENA_ITEM_SCALE_ROTATE", "RENA_ITEM_SCALE_ROTATE");
            tableMapping.ColumnMappings.Add("RAVEN_ITEM_SCALE_ROTATE", "RAVEN_ITEM_SCALE_ROTATE");
            tableMapping.ColumnMappings.Add("EVE_ITEM_SCALE_ROTATE", "EVE_ITEM_SCALE_ROTATE");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_NAME1", "ATTACHED_MESH_NAME1");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_BONE_NAME1", "ATTACHED_MESH_BONE_NAME1");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_NAME2", "ATTACHED_MESH_NAME2");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_BONE_NAME2", "ATTACHED_MESH_BONE_NAME2");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_NAME3", "ATTACHED_MESH_NAME3");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_BONE_NAME3", "ATTACHED_MESH_BONE_NAME3");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_NAME4", "ATTACHED_MESH_NAME4");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_BONE_NAME4", "ATTACHED_MESH_BONE_NAME4");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_NAME5", "ATTACHED_MESH_NAME5");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_BONE_NAME5", "ATTACHED_MESH_BONE_NAME5");
            tableMapping.ColumnMappings.Add("Model Name1", "Model Name1");
            tableMapping.ColumnMappings.Add("Attach FrameName1", "Attach FrameName1");
            tableMapping.ColumnMappings.Add("ATTACHED_PARTICLE_NAME1", "ATTACHED_PARTICLE_NAME1");
            tableMapping.ColumnMappings.Add("ATTACHED_PARTICLE_BONE_NAME1", "ATTACHED_PARTICLE_BONE_NAME1");
            tableMapping.ColumnMappings.Add("ATTACHED_PARTICLE_NAME2", "ATTACHED_PARTICLE_NAME2");
            tableMapping.ColumnMappings.Add("ATTACHED_PARTICLE_BONE_NAME2", "ATTACHED_PARTICLE_BONE_NAME2");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Item] WHERE (([IndexKey] = @Original_IndexKey) AND ([ID] = @Or" +
                "iginal_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Nam" +
                "e)) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] =" +
                " @Original_Description)) AND ((@IsNull_Description_In_Shop = 1 AND [Description " +
                "In Shop] IS NULL) OR ([Description In Shop] = @Original_Description_In_Shop)) AN" +
                "D ((@IsNull_Model_Name = 1 AND [Model Name] IS NULL) OR ([Model Name] = @Origina" +
                "l_Model_Name)) AND ((@IsNull_Texture_Change_XET_Name = 1 AND [Texture Change XET" +
                " Name] IS NULL) OR ([Texture Change XET Name] = @Original_Texture_Change_XET_Nam" +
                "e)) AND ((@IsNull_ELSWORD_MODEL_NAME = 1 AND [ELSWORD_MODEL_NAME] IS NULL) OR ([" +
                "ELSWORD_MODEL_NAME] = @Original_ELSWORD_MODEL_NAME)) AND ((@IsNull_ELSWORD_XET_N" +
                "AME = 1 AND [ELSWORD_XET_NAME] IS NULL) OR ([ELSWORD_XET_NAME] = @Original_ELSWO" +
                "RD_XET_NAME)) AND ((@IsNull_AISHA_MODEL_NAME = 1 AND [AISHA_MODEL_NAME] IS NULL)" +
                " OR ([AISHA_MODEL_NAME] = @Original_AISHA_MODEL_NAME)) AND ((@IsNull_AISHA_XET_N" +
                "AME = 1 AND [AISHA_XET_NAME] IS NULL) OR ([AISHA_XET_NAME] = @Original_AISHA_XET" +
                "_NAME)) AND ((@IsNull_RENA_MODEL_NAME = 1 AND [RENA_MODEL_NAME] IS NULL) OR ([RE" +
                "NA_MODEL_NAME] = @Original_RENA_MODEL_NAME)) AND ((@IsNull_RENA_XET_NAME = 1 AND" +
                " [RENA_XET_NAME] IS NULL) OR ([RENA_XET_NAME] = @Original_RENA_XET_NAME)) AND ((" +
                "@IsNull_RAVEN_MODEL_NAME = 1 AND [RAVEN_MODEL_NAME] IS NULL) OR ([RAVEN_MODEL_NA" +
                "ME] = @Original_RAVEN_MODEL_NAME)) AND ((@IsNull_RAVEN_XET_NAME = 1 AND [RAVEN_X" +
                "ET_NAME] IS NULL) OR ([RAVEN_XET_NAME] = @Original_RAVEN_XET_NAME)) AND ((@IsNul" +
                "l_EVE_MODEL_NAME = 1 AND [EVE_MODEL_NAME] IS NULL) OR ([EVE_MODEL_NAME] = @Origi" +
                "nal_EVE_MODEL_NAME)) AND ((@IsNull_EVE_XET_NAME = 1 AND [EVE_XET_NAME] IS NULL) " +
                "OR ([EVE_XET_NAME] = @Original_EVE_XET_NAME)) AND ((@IsNull_Anim_XET_Name = 1 AN" +
                "D [Anim XET Name] IS NULL) OR ([Anim XET Name] = @Original_Anim_XET_Name)) AND (" +
                "(@IsNull_Anim_Name = 1 AND [Anim Name] IS NULL) OR ([Anim Name] = @Original_Anim" +
                "_Name)) AND ((@IsNull_Shop_Image = 1 AND [Shop Image] IS NULL) OR ([Shop Image] " +
                "= @Original_Shop_Image)) AND ((@IsNull_Drop_Viewer = 1 AND [Drop Viewer] IS NULL" +
                ") OR ([Drop Viewer] = @Original_Drop_Viewer)) AND ((@IsNull_Item_Type = 1 AND [I" +
                "tem Type] IS NULL) OR ([Item Type] = @Original_Item_Type)) AND ((@IsNull_Item_Ty" +
                "pe_ = 1 AND [Item Type_] IS NULL) OR ([Item Type_] = @Original_Item_Type_)) AND " +
                "((@IsNull_ITEMTYPE_C = 1 AND [ITEMTYPE_C] IS NULL) OR ([ITEMTYPE_C] = @Original_" +
                "ITEMTYPE_C)) AND ((@IsNull_Fashion = 1 AND [Fashion] IS NULL) OR ([Fashion] = @O" +
                "riginal_Fashion)) AND ((@IsNull_Vested = 1 AND [Vested] IS NULL) OR ([Vested] = " +
                "@Original_Vested)) AND ((@IsNull_Can_Enchant = 1 AND [Can Enchant] IS NULL) OR (" +
                "[Can Enchant] = @Original_Can_Enchant)) AND ((@IsNull_Use_Type = 1 AND [Use Type" +
                "] IS NULL) OR ([Use Type] = @Original_Use_Type)) AND ((@IsNull_Use_Type_ = 1 AND" +
                " [Use Type_] IS NULL) OR ([Use Type_] = @Original_Use_Type_)) AND ((@IsNull_USET" +
                "YPE_C = 1 AND [USETYPE_C] IS NULL) OR ([USETYPE_C] = @Original_USETYPE_C)) AND (" +
                "(@IsNull_Attach_FrameName = 1 AND [Attach FrameName] IS NULL) OR ([Attach FrameN" +
                "ame] = @Original_Attach_FrameName)) AND ((@IsNull_FO_Elsword_X = 1 AND [FO_Elswo" +
                "rd_X] IS NULL) OR ([FO_Elsword_X] = @Original_FO_Elsword_X)) AND ((@IsNull_FO_El" +
                "sword_Y = 1 AND [FO_Elsword_Y] IS NULL) OR ([FO_Elsword_Y] = @Original_FO_Elswor" +
                "d_Y)) AND ((@IsNull_FO_Elsword_Z = 1 AND [FO_Elsword_Z] IS NULL) OR ([FO_Elsword" +
                "_Z] = @Original_FO_Elsword_Z)) AND ((@IsNull_FO_Lena_X = 1 AND [FO_Lena_X] IS NU" +
                "LL) OR ([FO_Lena_X] = @Original_FO_Lena_X)) AND ((@IsNull_FO_Lena_Y = 1 AND [FO_" +
                "Lena_Y] IS NULL) OR ([FO_Lena_Y] = @Original_FO_Lena_Y)) AND ((@IsNull_FO_Lena_Z" +
                " = 1 AND [FO_Lena_Z] IS NULL) OR ([FO_Lena_Z] = @Original_FO_Lena_Z)) AND ((@IsN" +
                "ull_FO_Aisha_X = 1 AND [FO_Aisha_X] IS NULL) OR ([FO_Aisha_X] = @Original_FO_Ais" +
                "ha_X)) AND ((@IsNull_FO_Aisha_Y = 1 AND [FO_Aisha_Y] IS NULL) OR ([FO_Aisha_Y] =" +
                " @Original_FO_Aisha_Y)) AND ((@IsNull_FO_Aisha_Z = 1 AND [FO_Aisha_Z] IS NULL) O" +
                "R ([FO_Aisha_Z] = @Original_FO_Aisha_Z)) AND ((@IsNull_FO_Raven_X = 1 AND [FO_Ra" +
                "ven_X] IS NULL) OR ([FO_Raven_X] = @Original_FO_Raven_X)) AND ((@IsNull_FO_Raven" +
                "_Y = 1 AND [FO_Raven_Y] IS NULL) OR ([FO_Raven_Y] = @Original_FO_Raven_Y)) AND (" +
                "(@IsNull_FO_Raven_Z = 1 AND [FO_Raven_Z] IS NULL) OR ([FO_Raven_Z] = @Original_F" +
                "O_Raven_Z)) AND ((@IsNull_FO_Eve_X = 1 AND [FO_Eve_X] IS NULL) OR ([FO_Eve_X] = " +
                "@Original_FO_Eve_X)) AND ((@IsNull_FO_Eve_Y = 1 AND [FO_Eve_Y] IS NULL) OR ([FO_" +
                "Eve_Y] = @Original_FO_Eve_Y)) AND ((@IsNull_FO_Eve_Z = 1 AND [FO_Eve_Z] IS NULL)" +
                " OR ([FO_Eve_Z] = @Original_FO_Eve_Z)) AND ((@IsNull_Can_HyperMode = 1 AND [Can " +
                "HyperMode] IS NULL) OR ([Can HyperMode] = @Original_Can_HyperMode)) AND ((@IsNul" +
                "l_Period_Type = 1 AND [Period Type] IS NULL) OR ([Period Type] = @Original_Perio" +
                "d_Type)) AND ((@IsNull_Period_Type_ = 1 AND [Period Type_] IS NULL) OR ([Period " +
                "Type_] = @Original_Period_Type_)) AND ((@IsNull_PERIODTYPE_C = 1 AND [PERIODTYPE" +
                "_C] IS NULL) OR ([PERIODTYPE_C] = @Original_PERIODTYPE_C)) AND ((@IsNull_Enduran" +
                "ce = 1 AND [Endurance] IS NULL) OR ([Endurance] = @Original_Endurance)) AND ((@I" +
                "sNull_EnduranceDamageMin = 1 AND [EnduranceDamageMin] IS NULL) OR ([EnduranceDam" +
                "ageMin] = @Original_EnduranceDamageMin)) AND ((@IsNull_EnduranceDamageMax = 1 AN" +
                "D [EnduranceDamageMax] IS NULL) OR ([EnduranceDamageMax] = @Original_EnduranceDa" +
                "mageMax)) AND ((@IsNull_Repair_ED = 1 AND [Repair ED] IS NULL) OR ([Repair ED] =" +
                " @Original_Repair_ED)) AND ((@IsNull_Repair_VP = 1 AND [Repair VP] IS NULL) OR (" +
                "[Repair VP] = @Original_Repair_VP)) AND ((@IsNull_Quantity = 1 AND [Quantity] IS" +
                " NULL) OR ([Quantity] = @Original_Quantity)) AND ((@IsNull_Price_Type = 1 AND [P" +
                "rice Type] IS NULL) OR ([Price Type] = @Original_Price_Type)) AND ((@IsNull_Pric" +
                "e_Type_ = 1 AND [Price Type_] IS NULL) OR ([Price Type_] = @Original_Price_Type_" +
                ")) AND ((@IsNull_PRICETYPE_C = 1 AND [PRICETYPE_C] IS NULL) OR ([PRICETYPE_C] = " +
                "@Original_PRICETYPE_C)) AND ((@IsNull_Price = 1 AND [Price] IS NULL) OR ([Price]" +
                " = @Original_Price)) AND ((@IsNull_Price_PvP_Point = 1 AND [Price PvP Point] IS " +
                "NULL) OR ([Price PvP Point] = @Original_Price_PvP_Point)) AND ((@IsNull_Use_Cond" +
                "ition = 1 AND [Use Condition] IS NULL) OR ([Use Condition] = @Original_Use_Condi" +
                "tion)) AND ((@IsNull_Use_Condition_ = 1 AND [Use Condition_] IS NULL) OR ([Use C" +
                "ondition_] = @Original_Use_Condition_)) AND ((@IsNull_USECONDITION_C = 1 AND [US" +
                "ECONDITION_C] IS NULL) OR ([USECONDITION_C] = @Original_USECONDITION_C)) AND ((@" +
                "IsNull_Unit_Type = 1 AND [Unit Type] IS NULL) OR ([Unit Type] = @Original_Unit_T" +
                "ype)) AND ((@IsNull_Unit_Type_ = 1 AND [Unit Type_] IS NULL) OR ([Unit Type_] = " +
                "@Original_Unit_Type_)) AND ((@IsNull_UNITTYPE_C = 1 AND [UNITTYPE_C] IS NULL) OR" +
                " ([UNITTYPE_C] = @Original_UNITTYPE_C)) AND ((@IsNull_Unit_Class = 1 AND [Unit C" +
                "lass] IS NULL) OR ([Unit Class] = @Original_Unit_Class)) AND ((@IsNull_Unit_Clas" +
                "s_ = 1 AND [Unit Class_] IS NULL) OR ([Unit Class_] = @Original_Unit_Class_)) AN" +
                "D ((@IsNull_UNITCLASS_C = 1 AND [UNITCLASS_C] IS NULL) OR ([UNITCLASS_C] = @Orig" +
                "inal_UNITCLASS_C)) AND ((@IsNull_Use_Level = 1 AND [Use Level] IS NULL) OR ([Use" +
                " Level] = @Original_Use_Level)) AND ((@IsNull_Eqip_Position = 1 AND [Eqip Positi" +
                "on] IS NULL) OR ([Eqip Position] = @Original_Eqip_Position)) AND ((@IsNull_Eqip_" +
                "Position_ = 1 AND [Eqip Position_] IS NULL) OR ([Eqip Position_] = @Original_Eqi" +
                "p_Position_)) AND ((@IsNull_EQIPPOSITION_C = 1 AND [EQIPPOSITION_C] IS NULL) OR " +
                "([EQIPPOSITION_C] = @Original_EQIPPOSITION_C)) AND ((@IsNull_Item_Grade = 1 AND " +
                "[Item Grade] IS NULL) OR ([Item Grade] = @Original_Item_Grade)) AND ((@IsNull_It" +
                "em_Grade_ = 1 AND [Item Grade_] IS NULL) OR ([Item Grade_] = @Original_Item_Grad" +
                "e_)) AND ((@IsNull_ITEMGRADE_C = 1 AND [ITEMGRADE_C] IS NULL) OR ([ITEMGRADE_C] " +
                "= @Original_ITEMGRADE_C)) AND ((@IsNull_BASE_HP = 1 AND [BASE_HP] IS NULL) OR ([" +
                "BASE_HP] = @Original_BASE_HP)) AND ((@IsNull_ATK_PHYSIC = 1 AND [ATK_PHYSIC] IS " +
                "NULL) OR ([ATK_PHYSIC] = @Original_ATK_PHYSIC)) AND ((@IsNull_ATK_MAGIC = 1 AND " +
                "[ATK_MAGIC] IS NULL) OR ([ATK_MAGIC] = @Original_ATK_MAGIC)) AND ((@IsNull_DEF_P" +
                "HYSIC = 1 AND [DEF_PHYSIC] IS NULL) OR ([DEF_PHYSIC] = @Original_DEF_PHYSIC)) AN" +
                "D ((@IsNull_DEF_MAGIC = 1 AND [DEF_MAGIC] IS NULL) OR ([DEF_MAGIC] = @Original_D" +
                "EF_MAGIC)) AND ((@IsNull_SA_NUM = 1 AND [SA_NUM] IS NULL) OR ([SA_NUM] = @Origin" +
                "al_SA_NUM)) AND ((@IsNull_SA_01 = 1 AND [SA_01] IS NULL) OR ([SA_01] = @Original" +
                "_SA_01)) AND ((@IsNull_SA_02 = 1 AND [SA_02] IS NULL) OR ([SA_02] = @Original_SA" +
                "_02)) AND ((@IsNull_SA_03 = 1 AND [SA_03] IS NULL) OR ([SA_03] = @Original_SA_03" +
                ")) AND ((@IsNull_SA_04 = 1 AND [SA_04] IS NULL) OR ([SA_04] = @Original_SA_04)) " +
                "AND ((@IsNull_SA_05 = 1 AND [SA_05] IS NULL) OR ([SA_05] = @Original_SA_05)) AND" +
                " ((@IsNull_SA_06 = 1 AND [SA_06] IS NULL) OR ([SA_06] = @Original_SA_06)) AND ((" +
                "@IsNull_SA_07 = 1 AND [SA_07] IS NULL) OR ([SA_07] = @Original_SA_07)) AND ((@Is" +
                "Null_SA_08 = 1 AND [SA_08] IS NULL) OR ([SA_08] = @Original_SA_08)) AND ((@IsNul" +
                "l_SA_09 = 1 AND [SA_09] IS NULL) OR ([SA_09] = @Original_SA_09)) AND ((@IsNull_S" +
                "A_10 = 1 AND [SA_10] IS NULL) OR ([SA_10] = @Original_SA_10)) AND ((@IsNull_SO_0" +
                "1 = 1 AND [SO_01] IS NULL) OR ([SO_01] = @Original_SO_01)) AND ((@IsNull_SO_02 =" +
                " 1 AND [SO_02] IS NULL) OR ([SO_02] = @Original_SO_02)) AND ((@IsNull_SO_03 = 1 " +
                "AND [SO_03] IS NULL) OR ([SO_03] = @Original_SO_03)) AND ((@IsNull_SO_04 = 1 AND" +
                " [SO_04] IS NULL) OR ([SO_04] = @Original_SO_04)) AND ((@IsNull_SO_05 = 1 AND [S" +
                "O_05] IS NULL) OR ([SO_05] = @Original_SO_05)) AND ((@IsNull_SO_06 = 1 AND [SO_0" +
                "6] IS NULL) OR ([SO_06] = @Original_SO_06)) AND ((@IsNull_SO_07 = 1 AND [SO_07] " +
                "IS NULL) OR ([SO_07] = @Original_SO_07)) AND ((@IsNull_SO_08 = 1 AND [SO_08] IS " +
                "NULL) OR ([SO_08] = @Original_SO_08)) AND ((@IsNull_SO_09 = 1 AND [SO_09] IS NUL" +
                "L) OR ([SO_09] = @Original_SO_09)) AND ((@IsNull_COOL_TIME = 1 AND [COOL_TIME] I" +
                "S NULL) OR ([COOL_TIME] = @Original_COOL_TIME)) AND ((@IsNull_SET_ID = 1 AND [SE" +
                "T_ID] IS NULL) OR ([SET_ID] = @Original_SET_ID)) AND ((@IsNull_Can_Use_Inventory" +
                " = 1 AND [Can Use Inventory] IS NULL) OR ([Can Use Inventory] = @Original_Can_Us" +
                "e_Inventory)) AND ((@IsNull_NoEquip = 1 AND [NoEquip] IS NULL) OR ([NoEquip] = @" +
                "Original_NoEquip)) AND ((@IsNull_SLASH_TRACE_COLOR = 1 AND [SLASH_TRACE_COLOR] I" +
                "S NULL) OR ([SLASH_TRACE_COLOR] = @Original_SLASH_TRACE_COLOR)) AND ((@IsNull_SL" +
                "ASH_TRACE_TIP_COLOR = 1 AND [SLASH_TRACE_TIP_COLOR] IS NULL) OR ([SLASH_TRACE_TI" +
                "P_COLOR] = @Original_SLASH_TRACE_TIP_COLOR)) AND ((@IsNull_HYPER_SLASH_TRACE_COL" +
                "OR = 1 AND [HYPER_SLASH_TRACE_COLOR] IS NULL) OR ([HYPER_SLASH_TRACE_COLOR] = @O" +
                "riginal_HYPER_SLASH_TRACE_COLOR)) AND ((@IsNull_HYPER_SLASH_TRACE_TIP_COLOR = 1 " +
                "AND [HYPER_SLASH_TRACE_TIP_COLOR] IS NULL) OR ([HYPER_SLASH_TRACE_TIP_COLOR] = @" +
                "Original_HYPER_SLASH_TRACE_TIP_COLOR)) AND ((@IsNull_ELSWORD_ITEM_SCALE_ROTATE =" +
                " 1 AND [ELSWORD_ITEM_SCALE_ROTATE] IS NULL) OR ([ELSWORD_ITEM_SCALE_ROTATE] = @O" +
                "riginal_ELSWORD_ITEM_SCALE_ROTATE)) AND ((@IsNull_AISHA_ITEM_SCALE_ROTATE = 1 AN" +
                "D [AISHA_ITEM_SCALE_ROTATE] IS NULL) OR ([AISHA_ITEM_SCALE_ROTATE] = @Original_A" +
                "ISHA_ITEM_SCALE_ROTATE)) AND ((@IsNull_RENA_ITEM_SCALE_ROTATE = 1 AND [RENA_ITEM" +
                "_SCALE_ROTATE] IS NULL) OR ([RENA_ITEM_SCALE_ROTATE] = @Original_RENA_ITEM_SCALE" +
                "_ROTATE)) AND ((@IsNull_RAVEN_ITEM_SCALE_ROTATE = 1 AND [RAVEN_ITEM_SCALE_ROTATE" +
                "] IS NULL) OR ([RAVEN_ITEM_SCALE_ROTATE] = @Original_RAVEN_ITEM_SCALE_ROTATE)) A" +
                "ND ((@IsNull_EVE_ITEM_SCALE_ROTATE = 1 AND [EVE_ITEM_SCALE_ROTATE] IS NULL) OR (" +
                "[EVE_ITEM_SCALE_ROTATE] = @Original_EVE_ITEM_SCALE_ROTATE)) AND ((@IsNull_ATTACH" +
                "ED_MESH_NAME1 = 1 AND [ATTACHED_MESH_NAME1] IS NULL) OR ([ATTACHED_MESH_NAME1] =" +
                " @Original_ATTACHED_MESH_NAME1)) AND ((@IsNull_ATTACHED_MESH_BONE_NAME1 = 1 AND " +
                "[ATTACHED_MESH_BONE_NAME1] IS NULL) OR ([ATTACHED_MESH_BONE_NAME1] = @Original_A" +
                "TTACHED_MESH_BONE_NAME1)) AND ((@IsNull_ATTACHED_MESH_NAME2 = 1 AND [ATTACHED_ME" +
                "SH_NAME2] IS NULL) OR ([ATTACHED_MESH_NAME2] = @Original_ATTACHED_MESH_NAME2)) A" +
                "ND ((@IsNull_ATTACHED_MESH_BONE_NAME2 = 1 AND [ATTACHED_MESH_BONE_NAME2] IS NULL" +
                ") OR ([ATTACHED_MESH_BONE_NAME2] = @Original_ATTACHED_MESH_BONE_NAME2)) AND ((@I" +
                "sNull_ATTACHED_MESH_NAME3 = 1 AND [ATTACHED_MESH_NAME3] IS NULL) OR ([ATTACHED_M" +
                "ESH_NAME3] = @Original_ATTACHED_MESH_NAME3)) AND ((@IsNull_ATTACHED_MESH_BONE_NA" +
                "ME3 = 1 AND [ATTACHED_MESH_BONE_NAME3] IS NULL) OR ([ATTACHED_MESH_BONE_NAME3] =" +
                " @Original_ATTACHED_MESH_BONE_NAME3)) AND ((@IsNull_ATTACHED_MESH_NAME4 = 1 AND " +
                "[ATTACHED_MESH_NAME4] IS NULL) OR ([ATTACHED_MESH_NAME4] = @Original_ATTACHED_ME" +
                "SH_NAME4)) AND ((@IsNull_ATTACHED_MESH_BONE_NAME4 = 1 AND [ATTACHED_MESH_BONE_NA" +
                "ME4] IS NULL) OR ([ATTACHED_MESH_BONE_NAME4] = @Original_ATTACHED_MESH_BONE_NAME" +
                "4)) AND ((@IsNull_ATTACHED_MESH_NAME5 = 1 AND [ATTACHED_MESH_NAME5] IS NULL) OR " +
                "([ATTACHED_MESH_NAME5] = @Original_ATTACHED_MESH_NAME5)) AND ((@IsNull_ATTACHED_" +
                "MESH_BONE_NAME5 = 1 AND [ATTACHED_MESH_BONE_NAME5] IS NULL) OR ([ATTACHED_MESH_B" +
                "ONE_NAME5] = @Original_ATTACHED_MESH_BONE_NAME5)) AND ((@IsNull_Model_Name1 = 1 " +
                "AND [Model Name1] IS NULL) OR ([Model Name1] = @Original_Model_Name1)) AND ((@Is" +
                "Null_Attach_FrameName1 = 1 AND [Attach FrameName1] IS NULL) OR ([Attach FrameNam" +
                "e1] = @Original_Attach_FrameName1)) AND ((@IsNull_ATTACHED_PARTICLE_NAME1 = 1 AN" +
                "D [ATTACHED_PARTICLE_NAME1] IS NULL) OR ([ATTACHED_PARTICLE_NAME1] = @Original_A" +
                "TTACHED_PARTICLE_NAME1)) AND ((@IsNull_ATTACHED_PARTICLE_BONE_NAME1 = 1 AND [ATT" +
                "ACHED_PARTICLE_BONE_NAME1] IS NULL) OR ([ATTACHED_PARTICLE_BONE_NAME1] = @Origin" +
                "al_ATTACHED_PARTICLE_BONE_NAME1)) AND ((@IsNull_ATTACHED_PARTICLE_NAME2 = 1 AND " +
                "[ATTACHED_PARTICLE_NAME2] IS NULL) OR ([ATTACHED_PARTICLE_NAME2] = @Original_ATT" +
                "ACHED_PARTICLE_NAME2)) AND ((@IsNull_ATTACHED_PARTICLE_BONE_NAME2 = 1 AND [ATTAC" +
                "HED_PARTICLE_BONE_NAME2] IS NULL) OR ([ATTACHED_PARTICLE_BONE_NAME2] = @Original" +
                "_ATTACHED_PARTICLE_BONE_NAME2)) AND ([Regdate] = @Original_Regdate))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description_In_Shop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description In Shop", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description_In_Shop", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description In Shop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Model_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Model_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Texture_Change_XET_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Texture Change XET Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Texture_Change_XET_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Texture Change XET Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELSWORD_MODEL_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_MODEL_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELSWORD_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_MODEL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELSWORD_XET_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_XET_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELSWORD_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_XET_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AISHA_MODEL_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_MODEL_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AISHA_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_MODEL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AISHA_XET_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_XET_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AISHA_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_XET_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RENA_MODEL_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_MODEL_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RENA_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_MODEL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RENA_XET_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_XET_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RENA_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_XET_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RAVEN_MODEL_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_MODEL_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RAVEN_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_MODEL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RAVEN_XET_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_XET_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RAVEN_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_XET_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EVE_MODEL_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_MODEL_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EVE_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_MODEL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EVE_XET_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_XET_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EVE_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_XET_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Anim_XET_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anim XET Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Anim_XET_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anim XET Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Anim_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anim Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Anim_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anim Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Shop_Image", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shop Image", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shop_Image", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shop Image", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Drop_Viewer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drop Viewer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drop_Viewer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drop Viewer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Item_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Item_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ITEMTYPE_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMTYPE_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ITEMTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMTYPE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fashion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fashion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fashion", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fashion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Vested", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vested", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vested", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vested", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Can_Enchant", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can Enchant", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Can_Enchant", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can Enchant", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Type", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USETYPE_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USETYPE_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USETYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USETYPE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Attach_FrameName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach FrameName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Attach_FrameName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach FrameName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Elsword_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_X", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Elsword_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_X", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Elsword_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_Y", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Elsword_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_Y", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Elsword_Z", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_Z", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Elsword_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_Z", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Lena_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_X", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Lena_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_X", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Lena_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_Y", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Lena_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_Y", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Lena_Z", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_Z", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Lena_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_Z", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Aisha_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_X", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Aisha_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_X", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Aisha_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_Y", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Aisha_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_Y", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Aisha_Z", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_Z", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Aisha_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_Z", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Raven_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_X", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Raven_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_X", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Raven_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_Y", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Raven_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_Y", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Raven_Z", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_Z", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Raven_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_Z", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Eve_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_X", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Eve_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_X", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Eve_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_Y", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Eve_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_Y", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Eve_Z", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_Z", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Eve_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_Z", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Can_HyperMode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can HyperMode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Can_HyperMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can HyperMode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Period_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Period_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Period_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Period_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PERIODTYPE_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERIODTYPE_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERIODTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERIODTYPE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Endurance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Endurance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Endurance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Endurance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnduranceDamageMin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnduranceDamageMin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnduranceDamageMin", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnduranceDamageMin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnduranceDamageMax", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnduranceDamageMax", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnduranceDamageMax", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnduranceDamageMax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Repair_ED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair ED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Repair_ED", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair ED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Repair_VP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair VP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Repair_VP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair VP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Price_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Price_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PRICETYPE_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICETYPE_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRICETYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICETYPE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Price", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Price_PvP_Point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price PvP Point", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price_PvP_Point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price PvP Point", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Condition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Condition", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Condition", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Condition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Condition_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Condition_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Condition_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Condition_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USECONDITION_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USECONDITION_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USECONDITION_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USECONDITION_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unit_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UNITTYPE_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNITTYPE_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UNITTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNITTYPE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit_Class", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unit_Class_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Class_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Class_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UNITCLASS_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNITCLASS_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UNITCLASS_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNITCLASS_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Level", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Level", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Level", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Eqip_Position", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eqip Position", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Eqip_Position", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eqip Position", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Eqip_Position_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eqip Position_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Eqip_Position_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eqip Position_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EQIPPOSITION_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EQIPPOSITION_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EQIPPOSITION_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EQIPPOSITION_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Item_Grade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Grade", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_Grade", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Grade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Item_Grade_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Grade_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_Grade_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Grade_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ITEMGRADE_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMGRADE_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ITEMGRADE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMGRADE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BASE_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASE_HP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BASE_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASE_HP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATK_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATK_PHYSIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATK_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATK_PHYSIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATK_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATK_MAGIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATK_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATK_MAGIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEF_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_PHYSIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEF_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_PHYSIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEF_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_MAGIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEF_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_MAGIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_NUM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_01", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_01", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_02", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_02", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_03", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_03", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_04", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_04", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_05", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_05", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_06", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_06", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_07", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_07", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_08", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_08", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_09", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_09", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_01", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_01", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_02", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_02", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_03", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_03", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_04", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_04", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_05", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_05", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_06", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_06", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_07", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_07", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_08", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_08", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_09", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_09", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COOL_TIME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOL_TIME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COOL_TIME", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOL_TIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SET_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SET_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SET_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SET_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Can_Use_Inventory", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can Use Inventory", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Can_Use_Inventory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can Use Inventory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoEquip", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoEquip", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoEquip", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoEquip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SLASH_TRACE_COLOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLASH_TRACE_COLOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SLASH_TRACE_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLASH_TRACE_COLOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SLASH_TRACE_TIP_COLOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLASH_TRACE_TIP_COLOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SLASH_TRACE_TIP_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLASH_TRACE_TIP_COLOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HYPER_SLASH_TRACE_COLOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HYPER_SLASH_TRACE_COLOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HYPER_SLASH_TRACE_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HYPER_SLASH_TRACE_COLOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HYPER_SLASH_TRACE_TIP_COLOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HYPER_SLASH_TRACE_TIP_COLOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HYPER_SLASH_TRACE_TIP_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HYPER_SLASH_TRACE_TIP_COLOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELSWORD_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELSWORD_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AISHA_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AISHA_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RENA_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RENA_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RAVEN_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RAVEN_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EVE_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EVE_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_NAME1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_BONE_NAME1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_BONE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_NAME2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_BONE_NAME2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_BONE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_NAME3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_NAME3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_BONE_NAME3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_BONE_NAME3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_NAME4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_NAME4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_BONE_NAME4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_BONE_NAME4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_NAME5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_NAME5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_BONE_NAME5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_BONE_NAME5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Model_Name1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model Name1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Model_Name1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model Name1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Attach_FrameName1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach FrameName1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Attach_FrameName1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach FrameName1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_PARTICLE_NAME1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_NAME1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_PARTICLE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_NAME1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_PARTICLE_BONE_NAME1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_BONE_NAME1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_PARTICLE_BONE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_BONE_NAME1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_PARTICLE_NAME2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_NAME2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_PARTICLE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_NAME2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_PARTICLE_BONE_NAME2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_BONE_NAME2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_PARTICLE_BONE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_BONE_NAME2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Item] ([IndexKey], [ID], [Name], [Description], [Description I" +
                "n Shop], [Model Name], [Texture Change XET Name], [ELSWORD_MODEL_NAME], [ELSWORD" +
                "_XET_NAME], [AISHA_MODEL_NAME], [AISHA_XET_NAME], [RENA_MODEL_NAME], [RENA_XET_N" +
                "AME], [RAVEN_MODEL_NAME], [RAVEN_XET_NAME], [EVE_MODEL_NAME], [EVE_XET_NAME], [A" +
                "nim XET Name], [Anim Name], [Shop Image], [Drop Viewer], [Item Type], [Item Type" +
                "_], [ITEMTYPE_C], [Fashion], [Vested], [Can Enchant], [Use Type], [Use Type_], [" +
                "USETYPE_C], [Attach FrameName], [FO_Elsword_X], [FO_Elsword_Y], [FO_Elsword_Z], " +
                "[FO_Lena_X], [FO_Lena_Y], [FO_Lena_Z], [FO_Aisha_X], [FO_Aisha_Y], [FO_Aisha_Z]," +
                " [FO_Raven_X], [FO_Raven_Y], [FO_Raven_Z], [FO_Eve_X], [FO_Eve_Y], [FO_Eve_Z], [" +
                "Can HyperMode], [Period Type], [Period Type_], [PERIODTYPE_C], [Endurance], [End" +
                "uranceDamageMin], [EnduranceDamageMax], [Repair ED], [Repair VP], [Quantity], [P" +
                "rice Type], [Price Type_], [PRICETYPE_C], [Price], [Price PvP Point], [Use Condi" +
                "tion], [Use Condition_], [USECONDITION_C], [Unit Type], [Unit Type_], [UNITTYPE_" +
                "C], [Unit Class], [Unit Class_], [UNITCLASS_C], [Use Level], [Eqip Position], [E" +
                "qip Position_], [EQIPPOSITION_C], [Item Grade], [Item Grade_], [ITEMGRADE_C], [B" +
                "ASE_HP], [ATK_PHYSIC], [ATK_MAGIC], [DEF_PHYSIC], [DEF_MAGIC], [SA_NUM], [SA_01]" +
                ", [SA_02], [SA_03], [SA_04], [SA_05], [SA_06], [SA_07], [SA_08], [SA_09], [SA_10" +
                "], [SO_01], [SO_02], [SO_03], [SO_04], [SO_05], [SO_06], [SO_07], [SO_08], [SO_0" +
                "9], [COOL_TIME], [SET_ID], [Can Use Inventory], [NoEquip], [SLASH_TRACE_COLOR], " +
                "[SLASH_TRACE_TIP_COLOR], [HYPER_SLASH_TRACE_COLOR], [HYPER_SLASH_TRACE_TIP_COLOR" +
                "], [ELSWORD_ITEM_SCALE_ROTATE], [AISHA_ITEM_SCALE_ROTATE], [RENA_ITEM_SCALE_ROTA" +
                "TE], [RAVEN_ITEM_SCALE_ROTATE], [EVE_ITEM_SCALE_ROTATE], [ATTACHED_MESH_NAME1], " +
                "[ATTACHED_MESH_BONE_NAME1], [ATTACHED_MESH_NAME2], [ATTACHED_MESH_BONE_NAME2], [" +
                "ATTACHED_MESH_NAME3], [ATTACHED_MESH_BONE_NAME3], [ATTACHED_MESH_NAME4], [ATTACH" +
                "ED_MESH_BONE_NAME4], [ATTACHED_MESH_NAME5], [ATTACHED_MESH_BONE_NAME5], [Model N" +
                "ame1], [Attach FrameName1], [ATTACHED_PARTICLE_NAME1], [ATTACHED_PARTICLE_BONE_N" +
                "AME1], [ATTACHED_PARTICLE_NAME2], [ATTACHED_PARTICLE_BONE_NAME2], [Regdate]) VAL" +
                "UES (@IndexKey, @ID, @Name, @Description, @Description_In_Shop, @Model_Name, @Te" +
                "xture_Change_XET_Name, @ELSWORD_MODEL_NAME, @ELSWORD_XET_NAME, @AISHA_MODEL_NAME" +
                ", @AISHA_XET_NAME, @RENA_MODEL_NAME, @RENA_XET_NAME, @RAVEN_MODEL_NAME, @RAVEN_X" +
                "ET_NAME, @EVE_MODEL_NAME, @EVE_XET_NAME, @Anim_XET_Name, @Anim_Name, @Shop_Image" +
                ", @Drop_Viewer, @Item_Type, @Item_Type_, @ITEMTYPE_C, @Fashion, @Vested, @Can_En" +
                "chant, @Use_Type, @Use_Type_, @USETYPE_C, @Attach_FrameName, @FO_Elsword_X, @FO_" +
                "Elsword_Y, @FO_Elsword_Z, @FO_Lena_X, @FO_Lena_Y, @FO_Lena_Z, @FO_Aisha_X, @FO_A" +
                "isha_Y, @FO_Aisha_Z, @FO_Raven_X, @FO_Raven_Y, @FO_Raven_Z, @FO_Eve_X, @FO_Eve_Y" +
                ", @FO_Eve_Z, @Can_HyperMode, @Period_Type, @Period_Type_, @PERIODTYPE_C, @Endura" +
                "nce, @EnduranceDamageMin, @EnduranceDamageMax, @Repair_ED, @Repair_VP, @Quantity" +
                ", @Price_Type, @Price_Type_, @PRICETYPE_C, @Price, @Price_PvP_Point, @Use_Condit" +
                "ion, @Use_Condition_, @USECONDITION_C, @Unit_Type, @Unit_Type_, @UNITTYPE_C, @Un" +
                "it_Class, @Unit_Class_, @UNITCLASS_C, @Use_Level, @Eqip_Position, @Eqip_Position" +
                "_, @EQIPPOSITION_C, @Item_Grade, @Item_Grade_, @ITEMGRADE_C, @BASE_HP, @ATK_PHYS" +
                "IC, @ATK_MAGIC, @DEF_PHYSIC, @DEF_MAGIC, @SA_NUM, @SA_01, @SA_02, @SA_03, @SA_04" +
                ", @SA_05, @SA_06, @SA_07, @SA_08, @SA_09, @SA_10, @SO_01, @SO_02, @SO_03, @SO_04" +
                ", @SO_05, @SO_06, @SO_07, @SO_08, @SO_09, @COOL_TIME, @SET_ID, @Can_Use_Inventor" +
                "y, @NoEquip, @SLASH_TRACE_COLOR, @SLASH_TRACE_TIP_COLOR, @HYPER_SLASH_TRACE_COLO" +
                "R, @HYPER_SLASH_TRACE_TIP_COLOR, @ELSWORD_ITEM_SCALE_ROTATE, @AISHA_ITEM_SCALE_R" +
                "OTATE, @RENA_ITEM_SCALE_ROTATE, @RAVEN_ITEM_SCALE_ROTATE, @EVE_ITEM_SCALE_ROTATE" +
                ", @ATTACHED_MESH_NAME1, @ATTACHED_MESH_BONE_NAME1, @ATTACHED_MESH_NAME2, @ATTACH" +
                "ED_MESH_BONE_NAME2, @ATTACHED_MESH_NAME3, @ATTACHED_MESH_BONE_NAME3, @ATTACHED_M" +
                "ESH_NAME4, @ATTACHED_MESH_BONE_NAME4, @ATTACHED_MESH_NAME5, @ATTACHED_MESH_BONE_" +
                "NAME5, @Model_Name1, @Attach_FrameName1, @ATTACHED_PARTICLE_NAME1, @ATTACHED_PAR" +
                "TICLE_BONE_NAME1, @ATTACHED_PARTICLE_NAME2, @ATTACHED_PARTICLE_BONE_NAME2, @Regd" +
                "ate);\r\nSELECT IndexKey, ID, Name, Description, [Description In Shop], [Model Nam" +
                "e], [Texture Change XET Name], ELSWORD_MODEL_NAME, ELSWORD_XET_NAME, AISHA_MODEL" +
                "_NAME, AISHA_XET_NAME, RENA_MODEL_NAME, RENA_XET_NAME, RAVEN_MODEL_NAME, RAVEN_X" +
                "ET_NAME, EVE_MODEL_NAME, EVE_XET_NAME, [Anim XET Name], [Anim Name], [Shop Image" +
                "], [Drop Viewer], [Item Type], [Item Type_], ITEMTYPE_C, Fashion, Vested, [Can E" +
                "nchant], [Use Type], [Use Type_], USETYPE_C, [Attach FrameName], FO_Elsword_X, F" +
                "O_Elsword_Y, FO_Elsword_Z, FO_Lena_X, FO_Lena_Y, FO_Lena_Z, FO_Aisha_X, FO_Aisha" +
                "_Y, FO_Aisha_Z, FO_Raven_X, FO_Raven_Y, FO_Raven_Z, FO_Eve_X, FO_Eve_Y, FO_Eve_Z" +
                ", [Can HyperMode], [Period Type], [Period Type_], PERIODTYPE_C, Endurance, Endur" +
                "anceDamageMin, EnduranceDamageMax, [Repair ED], [Repair VP], Quantity, [Price Ty" +
                "pe], [Price Type_], PRICETYPE_C, Price, [Price PvP Point], [Use Condition], [Use" +
                " Condition_], USECONDITION_C, [Unit Type], [Unit Type_], UNITTYPE_C, [Unit Class" +
                "], [Unit Class_], UNITCLASS_C, [Use Level], [Eqip Position], [Eqip Position_], E" +
                "QIPPOSITION_C, [Item Grade], [Item Grade_], ITEMGRADE_C, BASE_HP, ATK_PHYSIC, AT" +
                "K_MAGIC, DEF_PHYSIC, DEF_MAGIC, SA_NUM, SA_01, SA_02, SA_03, SA_04, SA_05, SA_06" +
                ", SA_07, SA_08, SA_09, SA_10, SO_01, SO_02, SO_03, SO_04, SO_05, SO_06, SO_07, S" +
                "O_08, SO_09, COOL_TIME, SET_ID, [Can Use Inventory], NoEquip, SLASH_TRACE_COLOR," +
                " SLASH_TRACE_TIP_COLOR, HYPER_SLASH_TRACE_COLOR, HYPER_SLASH_TRACE_TIP_COLOR, EL" +
                "SWORD_ITEM_SCALE_ROTATE, AISHA_ITEM_SCALE_ROTATE, RENA_ITEM_SCALE_ROTATE, RAVEN_" +
                "ITEM_SCALE_ROTATE, EVE_ITEM_SCALE_ROTATE, ATTACHED_MESH_NAME1, ATTACHED_MESH_BON" +
                "E_NAME1, ATTACHED_MESH_NAME2, ATTACHED_MESH_BONE_NAME2, ATTACHED_MESH_NAME3, ATT" +
                "ACHED_MESH_BONE_NAME3, ATTACHED_MESH_NAME4, ATTACHED_MESH_BONE_NAME4, ATTACHED_M" +
                "ESH_NAME5, ATTACHED_MESH_BONE_NAME5, [Model Name1], [Attach FrameName1], ATTACHE" +
                "D_PARTICLE_NAME1, ATTACHED_PARTICLE_BONE_NAME1, ATTACHED_PARTICLE_NAME2, ATTACHE" +
                "D_PARTICLE_BONE_NAME2, Regdate FROM Item WHERE (IndexKey = @IndexKey)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description_In_Shop", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description In Shop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Texture_Change_XET_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Texture Change XET Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELSWORD_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELSWORD_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AISHA_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AISHA_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RENA_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RENA_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAVEN_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAVEN_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EVE_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EVE_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Anim_XET_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anim XET Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Anim_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anim Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shop_Image", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shop Image", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drop_Viewer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drop Viewer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITEMTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMTYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fashion", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fashion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vested", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vested", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Can_Enchant", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can Enchant", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Type", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USETYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USETYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attach_FrameName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach FrameName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Elsword_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Elsword_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Elsword_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Lena_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Lena_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Lena_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Aisha_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Aisha_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Aisha_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Raven_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Raven_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Raven_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Eve_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Eve_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Eve_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Can_HyperMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can HyperMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERIODTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERIODTYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Endurance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Endurance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnduranceDamageMin", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnduranceDamageMin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnduranceDamageMax", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnduranceDamageMax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Repair_ED", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair ED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Repair_VP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair VP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRICETYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICETYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price_PvP_Point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price PvP Point", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Condition", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Condition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Condition_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Condition_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USECONDITION_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USECONDITION_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UNITTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNITTYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Class", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Class_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UNITCLASS_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNITCLASS_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Level", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Eqip_Position", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eqip Position", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Eqip_Position_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eqip Position_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EQIPPOSITION_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EQIPPOSITION_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Grade", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Grade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Grade_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Grade_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITEMGRADE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMGRADE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BASE_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASE_HP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATK_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATK_PHYSIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATK_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATK_MAGIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEF_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_PHYSIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEF_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_MAGIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_01", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_03", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_04", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_05", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_06", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_07", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_08", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_09", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_01", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_03", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_04", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_05", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_06", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_07", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_08", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_09", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COOL_TIME", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOL_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SET_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SET_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Can_Use_Inventory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can Use Inventory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoEquip", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoEquip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SLASH_TRACE_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLASH_TRACE_COLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SLASH_TRACE_TIP_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLASH_TRACE_TIP_COLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HYPER_SLASH_TRACE_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HYPER_SLASH_TRACE_COLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HYPER_SLASH_TRACE_TIP_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HYPER_SLASH_TRACE_TIP_COLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELSWORD_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AISHA_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RENA_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAVEN_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EVE_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_Name1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model Name1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attach_FrameName1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach FrameName1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_PARTICLE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_NAME1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_PARTICLE_BONE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_BONE_NAME1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_PARTICLE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_NAME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_PARTICLE_BONE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_BONE_NAME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Item] SET [IndexKey] = @IndexKey, [ID] = @ID, [Name] = @Name, [Desc" +
                "ription] = @Description, [Description In Shop] = @Description_In_Shop, [Model Na" +
                "me] = @Model_Name, [Texture Change XET Name] = @Texture_Change_XET_Name, [ELSWOR" +
                "D_MODEL_NAME] = @ELSWORD_MODEL_NAME, [ELSWORD_XET_NAME] = @ELSWORD_XET_NAME, [AI" +
                "SHA_MODEL_NAME] = @AISHA_MODEL_NAME, [AISHA_XET_NAME] = @AISHA_XET_NAME, [RENA_M" +
                "ODEL_NAME] = @RENA_MODEL_NAME, [RENA_XET_NAME] = @RENA_XET_NAME, [RAVEN_MODEL_NA" +
                "ME] = @RAVEN_MODEL_NAME, [RAVEN_XET_NAME] = @RAVEN_XET_NAME, [EVE_MODEL_NAME] = " +
                "@EVE_MODEL_NAME, [EVE_XET_NAME] = @EVE_XET_NAME, [Anim XET Name] = @Anim_XET_Nam" +
                "e, [Anim Name] = @Anim_Name, [Shop Image] = @Shop_Image, [Drop Viewer] = @Drop_V" +
                "iewer, [Item Type] = @Item_Type, [Item Type_] = @Item_Type_, [ITEMTYPE_C] = @ITE" +
                "MTYPE_C, [Fashion] = @Fashion, [Vested] = @Vested, [Can Enchant] = @Can_Enchant," +
                " [Use Type] = @Use_Type, [Use Type_] = @Use_Type_, [USETYPE_C] = @USETYPE_C, [At" +
                "tach FrameName] = @Attach_FrameName, [FO_Elsword_X] = @FO_Elsword_X, [FO_Elsword" +
                "_Y] = @FO_Elsword_Y, [FO_Elsword_Z] = @FO_Elsword_Z, [FO_Lena_X] = @FO_Lena_X, [" +
                "FO_Lena_Y] = @FO_Lena_Y, [FO_Lena_Z] = @FO_Lena_Z, [FO_Aisha_X] = @FO_Aisha_X, [" +
                "FO_Aisha_Y] = @FO_Aisha_Y, [FO_Aisha_Z] = @FO_Aisha_Z, [FO_Raven_X] = @FO_Raven_" +
                "X, [FO_Raven_Y] = @FO_Raven_Y, [FO_Raven_Z] = @FO_Raven_Z, [FO_Eve_X] = @FO_Eve_" +
                "X, [FO_Eve_Y] = @FO_Eve_Y, [FO_Eve_Z] = @FO_Eve_Z, [Can HyperMode] = @Can_HyperM" +
                "ode, [Period Type] = @Period_Type, [Period Type_] = @Period_Type_, [PERIODTYPE_C" +
                "] = @PERIODTYPE_C, [Endurance] = @Endurance, [EnduranceDamageMin] = @EnduranceDa" +
                "mageMin, [EnduranceDamageMax] = @EnduranceDamageMax, [Repair ED] = @Repair_ED, [" +
                "Repair VP] = @Repair_VP, [Quantity] = @Quantity, [Price Type] = @Price_Type, [Pr" +
                "ice Type_] = @Price_Type_, [PRICETYPE_C] = @PRICETYPE_C, [Price] = @Price, [Pric" +
                "e PvP Point] = @Price_PvP_Point, [Use Condition] = @Use_Condition, [Use Conditio" +
                "n_] = @Use_Condition_, [USECONDITION_C] = @USECONDITION_C, [Unit Type] = @Unit_T" +
                "ype, [Unit Type_] = @Unit_Type_, [UNITTYPE_C] = @UNITTYPE_C, [Unit Class] = @Uni" +
                "t_Class, [Unit Class_] = @Unit_Class_, [UNITCLASS_C] = @UNITCLASS_C, [Use Level]" +
                " = @Use_Level, [Eqip Position] = @Eqip_Position, [Eqip Position_] = @Eqip_Positi" +
                "on_, [EQIPPOSITION_C] = @EQIPPOSITION_C, [Item Grade] = @Item_Grade, [Item Grade" +
                "_] = @Item_Grade_, [ITEMGRADE_C] = @ITEMGRADE_C, [BASE_HP] = @BASE_HP, [ATK_PHYS" +
                "IC] = @ATK_PHYSIC, [ATK_MAGIC] = @ATK_MAGIC, [DEF_PHYSIC] = @DEF_PHYSIC, [DEF_MA" +
                "GIC] = @DEF_MAGIC, [SA_NUM] = @SA_NUM, [SA_01] = @SA_01, [SA_02] = @SA_02, [SA_0" +
                "3] = @SA_03, [SA_04] = @SA_04, [SA_05] = @SA_05, [SA_06] = @SA_06, [SA_07] = @SA" +
                "_07, [SA_08] = @SA_08, [SA_09] = @SA_09, [SA_10] = @SA_10, [SO_01] = @SO_01, [SO" +
                "_02] = @SO_02, [SO_03] = @SO_03, [SO_04] = @SO_04, [SO_05] = @SO_05, [SO_06] = @" +
                "SO_06, [SO_07] = @SO_07, [SO_08] = @SO_08, [SO_09] = @SO_09, [COOL_TIME] = @COOL" +
                "_TIME, [SET_ID] = @SET_ID, [Can Use Inventory] = @Can_Use_Inventory, [NoEquip] =" +
                " @NoEquip, [SLASH_TRACE_COLOR] = @SLASH_TRACE_COLOR, [SLASH_TRACE_TIP_COLOR] = @" +
                "SLASH_TRACE_TIP_COLOR, [HYPER_SLASH_TRACE_COLOR] = @HYPER_SLASH_TRACE_COLOR, [HY" +
                "PER_SLASH_TRACE_TIP_COLOR] = @HYPER_SLASH_TRACE_TIP_COLOR, [ELSWORD_ITEM_SCALE_R" +
                "OTATE] = @ELSWORD_ITEM_SCALE_ROTATE, [AISHA_ITEM_SCALE_ROTATE] = @AISHA_ITEM_SCA" +
                "LE_ROTATE, [RENA_ITEM_SCALE_ROTATE] = @RENA_ITEM_SCALE_ROTATE, [RAVEN_ITEM_SCALE" +
                "_ROTATE] = @RAVEN_ITEM_SCALE_ROTATE, [EVE_ITEM_SCALE_ROTATE] = @EVE_ITEM_SCALE_R" +
                "OTATE, [ATTACHED_MESH_NAME1] = @ATTACHED_MESH_NAME1, [ATTACHED_MESH_BONE_NAME1] " +
                "= @ATTACHED_MESH_BONE_NAME1, [ATTACHED_MESH_NAME2] = @ATTACHED_MESH_NAME2, [ATTA" +
                "CHED_MESH_BONE_NAME2] = @ATTACHED_MESH_BONE_NAME2, [ATTACHED_MESH_NAME3] = @ATTA" +
                "CHED_MESH_NAME3, [ATTACHED_MESH_BONE_NAME3] = @ATTACHED_MESH_BONE_NAME3, [ATTACH" +
                "ED_MESH_NAME4] = @ATTACHED_MESH_NAME4, [ATTACHED_MESH_BONE_NAME4] = @ATTACHED_ME" +
                "SH_BONE_NAME4, [ATTACHED_MESH_NAME5] = @ATTACHED_MESH_NAME5, [ATTACHED_MESH_BONE" +
                "_NAME5] = @ATTACHED_MESH_BONE_NAME5, [Model Name1] = @Model_Name1, [Attach Frame" +
                "Name1] = @Attach_FrameName1, [ATTACHED_PARTICLE_NAME1] = @ATTACHED_PARTICLE_NAME" +
                "1, [ATTACHED_PARTICLE_BONE_NAME1] = @ATTACHED_PARTICLE_BONE_NAME1, [ATTACHED_PAR" +
                "TICLE_NAME2] = @ATTACHED_PARTICLE_NAME2, [ATTACHED_PARTICLE_BONE_NAME2] = @ATTAC" +
                "HED_PARTICLE_BONE_NAME2, [Regdate] = @Regdate WHERE (([IndexKey] = @Original_Ind" +
                "exKey) AND ([ID] = @Original_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR (" +
                "[Name] = @Original_Name)) AND ((@IsNull_Description = 1 AND [Description] IS NUL" +
                "L) OR ([Description] = @Original_Description)) AND ((@IsNull_Description_In_Shop" +
                " = 1 AND [Description In Shop] IS NULL) OR ([Description In Shop] = @Original_De" +
                "scription_In_Shop)) AND ((@IsNull_Model_Name = 1 AND [Model Name] IS NULL) OR ([" +
                "Model Name] = @Original_Model_Name)) AND ((@IsNull_Texture_Change_XET_Name = 1 A" +
                "ND [Texture Change XET Name] IS NULL) OR ([Texture Change XET Name] = @Original_" +
                "Texture_Change_XET_Name)) AND ((@IsNull_ELSWORD_MODEL_NAME = 1 AND [ELSWORD_MODE" +
                "L_NAME] IS NULL) OR ([ELSWORD_MODEL_NAME] = @Original_ELSWORD_MODEL_NAME)) AND (" +
                "(@IsNull_ELSWORD_XET_NAME = 1 AND [ELSWORD_XET_NAME] IS NULL) OR ([ELSWORD_XET_N" +
                "AME] = @Original_ELSWORD_XET_NAME)) AND ((@IsNull_AISHA_MODEL_NAME = 1 AND [AISH" +
                "A_MODEL_NAME] IS NULL) OR ([AISHA_MODEL_NAME] = @Original_AISHA_MODEL_NAME)) AND" +
                " ((@IsNull_AISHA_XET_NAME = 1 AND [AISHA_XET_NAME] IS NULL) OR ([AISHA_XET_NAME]" +
                " = @Original_AISHA_XET_NAME)) AND ((@IsNull_RENA_MODEL_NAME = 1 AND [RENA_MODEL_" +
                "NAME] IS NULL) OR ([RENA_MODEL_NAME] = @Original_RENA_MODEL_NAME)) AND ((@IsNull" +
                "_RENA_XET_NAME = 1 AND [RENA_XET_NAME] IS NULL) OR ([RENA_XET_NAME] = @Original_" +
                "RENA_XET_NAME)) AND ((@IsNull_RAVEN_MODEL_NAME = 1 AND [RAVEN_MODEL_NAME] IS NUL" +
                "L) OR ([RAVEN_MODEL_NAME] = @Original_RAVEN_MODEL_NAME)) AND ((@IsNull_RAVEN_XET" +
                "_NAME = 1 AND [RAVEN_XET_NAME] IS NULL) OR ([RAVEN_XET_NAME] = @Original_RAVEN_X" +
                "ET_NAME)) AND ((@IsNull_EVE_MODEL_NAME = 1 AND [EVE_MODEL_NAME] IS NULL) OR ([EV" +
                "E_MODEL_NAME] = @Original_EVE_MODEL_NAME)) AND ((@IsNull_EVE_XET_NAME = 1 AND [E" +
                "VE_XET_NAME] IS NULL) OR ([EVE_XET_NAME] = @Original_EVE_XET_NAME)) AND ((@IsNul" +
                "l_Anim_XET_Name = 1 AND [Anim XET Name] IS NULL) OR ([Anim XET Name] = @Original" +
                "_Anim_XET_Name)) AND ((@IsNull_Anim_Name = 1 AND [Anim Name] IS NULL) OR ([Anim " +
                "Name] = @Original_Anim_Name)) AND ((@IsNull_Shop_Image = 1 AND [Shop Image] IS N" +
                "ULL) OR ([Shop Image] = @Original_Shop_Image)) AND ((@IsNull_Drop_Viewer = 1 AND" +
                " [Drop Viewer] IS NULL) OR ([Drop Viewer] = @Original_Drop_Viewer)) AND ((@IsNul" +
                "l_Item_Type = 1 AND [Item Type] IS NULL) OR ([Item Type] = @Original_Item_Type))" +
                " AND ((@IsNull_Item_Type_ = 1 AND [Item Type_] IS NULL) OR ([Item Type_] = @Orig" +
                "inal_Item_Type_)) AND ((@IsNull_ITEMTYPE_C = 1 AND [ITEMTYPE_C] IS NULL) OR ([IT" +
                "EMTYPE_C] = @Original_ITEMTYPE_C)) AND ((@IsNull_Fashion = 1 AND [Fashion] IS NU" +
                "LL) OR ([Fashion] = @Original_Fashion)) AND ((@IsNull_Vested = 1 AND [Vested] IS" +
                " NULL) OR ([Vested] = @Original_Vested)) AND ((@IsNull_Can_Enchant = 1 AND [Can " +
                "Enchant] IS NULL) OR ([Can Enchant] = @Original_Can_Enchant)) AND ((@IsNull_Use_" +
                "Type = 1 AND [Use Type] IS NULL) OR ([Use Type] = @Original_Use_Type)) AND ((@Is" +
                "Null_Use_Type_ = 1 AND [Use Type_] IS NULL) OR ([Use Type_] = @Original_Use_Type" +
                "_)) AND ((@IsNull_USETYPE_C = 1 AND [USETYPE_C] IS NULL) OR ([USETYPE_C] = @Orig" +
                "inal_USETYPE_C)) AND ((@IsNull_Attach_FrameName = 1 AND [Attach FrameName] IS NU" +
                "LL) OR ([Attach FrameName] = @Original_Attach_FrameName)) AND ((@IsNull_FO_Elswo" +
                "rd_X = 1 AND [FO_Elsword_X] IS NULL) OR ([FO_Elsword_X] = @Original_FO_Elsword_X" +
                ")) AND ((@IsNull_FO_Elsword_Y = 1 AND [FO_Elsword_Y] IS NULL) OR ([FO_Elsword_Y]" +
                " = @Original_FO_Elsword_Y)) AND ((@IsNull_FO_Elsword_Z = 1 AND [FO_Elsword_Z] IS" +
                " NULL) OR ([FO_Elsword_Z] = @Original_FO_Elsword_Z)) AND ((@IsNull_FO_Lena_X = 1" +
                " AND [FO_Lena_X] IS NULL) OR ([FO_Lena_X] = @Original_FO_Lena_X)) AND ((@IsNull_" +
                "FO_Lena_Y = 1 AND [FO_Lena_Y] IS NULL) OR ([FO_Lena_Y] = @Original_FO_Lena_Y)) A" +
                "ND ((@IsNull_FO_Lena_Z = 1 AND [FO_Lena_Z] IS NULL) OR ([FO_Lena_Z] = @Original_" +
                "FO_Lena_Z)) AND ((@IsNull_FO_Aisha_X = 1 AND [FO_Aisha_X] IS NULL) OR ([FO_Aisha" +
                "_X] = @Original_FO_Aisha_X)) AND ((@IsNull_FO_Aisha_Y = 1 AND [FO_Aisha_Y] IS NU" +
                "LL) OR ([FO_Aisha_Y] = @Original_FO_Aisha_Y)) AND ((@IsNull_FO_Aisha_Z = 1 AND [" +
                "FO_Aisha_Z] IS NULL) OR ([FO_Aisha_Z] = @Original_FO_Aisha_Z)) AND ((@IsNull_FO_" +
                "Raven_X = 1 AND [FO_Raven_X] IS NULL) OR ([FO_Raven_X] = @Original_FO_Raven_X)) " +
                "AND ((@IsNull_FO_Raven_Y = 1 AND [FO_Raven_Y] IS NULL) OR ([FO_Raven_Y] = @Origi" +
                "nal_FO_Raven_Y)) AND ((@IsNull_FO_Raven_Z = 1 AND [FO_Raven_Z] IS NULL) OR ([FO_" +
                "Raven_Z] = @Original_FO_Raven_Z)) AND ((@IsNull_FO_Eve_X = 1 AND [FO_Eve_X] IS N" +
                "ULL) OR ([FO_Eve_X] = @Original_FO_Eve_X)) AND ((@IsNull_FO_Eve_Y = 1 AND [FO_Ev" +
                "e_Y] IS NULL) OR ([FO_Eve_Y] = @Original_FO_Eve_Y)) AND ((@IsNull_FO_Eve_Z = 1 A" +
                "ND [FO_Eve_Z] IS NULL) OR ([FO_Eve_Z] = @Original_FO_Eve_Z)) AND ((@IsNull_Can_H" +
                "yperMode = 1 AND [Can HyperMode] IS NULL) OR ([Can HyperMode] = @Original_Can_Hy" +
                "perMode)) AND ((@IsNull_Period_Type = 1 AND [Period Type] IS NULL) OR ([Period T" +
                "ype] = @Original_Period_Type)) AND ((@IsNull_Period_Type_ = 1 AND [Period Type_]" +
                " IS NULL) OR ([Period Type_] = @Original_Period_Type_)) AND ((@IsNull_PERIODTYPE" +
                "_C = 1 AND [PERIODTYPE_C] IS NULL) OR ([PERIODTYPE_C] = @Original_PERIODTYPE_C))" +
                " AND ((@IsNull_Endurance = 1 AND [Endurance] IS NULL) OR ([Endurance] = @Origina" +
                "l_Endurance)) AND ((@IsNull_EnduranceDamageMin = 1 AND [EnduranceDamageMin] IS N" +
                "ULL) OR ([EnduranceDamageMin] = @Original_EnduranceDamageMin)) AND ((@IsNull_End" +
                "uranceDamageMax = 1 AND [EnduranceDamageMax] IS NULL) OR ([EnduranceDamageMax] =" +
                " @Original_EnduranceDamageMax)) AND ((@IsNull_Repair_ED = 1 AND [Repair ED] IS N" +
                "ULL) OR ([Repair ED] = @Original_Repair_ED)) AND ((@IsNull_Repair_VP = 1 AND [Re" +
                "pair VP] IS NULL) OR ([Repair VP] = @Original_Repair_VP)) AND ((@IsNull_Quantity" +
                " = 1 AND [Quantity] IS NULL) OR ([Quantity] = @Original_Quantity)) AND ((@IsNull" +
                "_Price_Type = 1 AND [Price Type] IS NULL) OR ([Price Type] = @Original_Price_Typ" +
                "e)) AND ((@IsNull_Price_Type_ = 1 AND [Price Type_] IS NULL) OR ([Price Type_] =" +
                " @Original_Price_Type_)) AND ((@IsNull_PRICETYPE_C = 1 AND [PRICETYPE_C] IS NULL" +
                ") OR ([PRICETYPE_C] = @Original_PRICETYPE_C)) AND ((@IsNull_Price = 1 AND [Price" +
                "] IS NULL) OR ([Price] = @Original_Price)) AND ((@IsNull_Price_PvP_Point = 1 AND" +
                " [Price PvP Point] IS NULL) OR ([Price PvP Point] = @Original_Price_PvP_Point)) " +
                "AND ((@IsNull_Use_Condition = 1 AND [Use Condition] IS NULL) OR ([Use Condition]" +
                " = @Original_Use_Condition)) AND ((@IsNull_Use_Condition_ = 1 AND [Use Condition" +
                "_] IS NULL) OR ([Use Condition_] = @Original_Use_Condition_)) AND ((@IsNull_USEC" +
                "ONDITION_C = 1 AND [USECONDITION_C] IS NULL) OR ([USECONDITION_C] = @Original_US" +
                "ECONDITION_C)) AND ((@IsNull_Unit_Type = 1 AND [Unit Type] IS NULL) OR ([Unit Ty" +
                "pe] = @Original_Unit_Type)) AND ((@IsNull_Unit_Type_ = 1 AND [Unit Type_] IS NUL" +
                "L) OR ([Unit Type_] = @Original_Unit_Type_)) AND ((@IsNull_UNITTYPE_C = 1 AND [U" +
                "NITTYPE_C] IS NULL) OR ([UNITTYPE_C] = @Original_UNITTYPE_C)) AND ((@IsNull_Unit" +
                "_Class = 1 AND [Unit Class] IS NULL) OR ([Unit Class] = @Original_Unit_Class)) A" +
                "ND ((@IsNull_Unit_Class_ = 1 AND [Unit Class_] IS NULL) OR ([Unit Class_] = @Ori" +
                "ginal_Unit_Class_)) AND ((@IsNull_UNITCLASS_C = 1 AND [UNITCLASS_C] IS NULL) OR " +
                "([UNITCLASS_C] = @Original_UNITCLASS_C)) AND ((@IsNull_Use_Level = 1 AND [Use Le" +
                "vel] IS NULL) OR ([Use Level] = @Original_Use_Level)) AND ((@IsNull_Eqip_Positio" +
                "n = 1 AND [Eqip Position] IS NULL) OR ([Eqip Position] = @Original_Eqip_Position" +
                ")) AND ((@IsNull_Eqip_Position_ = 1 AND [Eqip Position_] IS NULL) OR ([Eqip Posi" +
                "tion_] = @Original_Eqip_Position_)) AND ((@IsNull_EQIPPOSITION_C = 1 AND [EQIPPO" +
                "SITION_C] IS NULL) OR ([EQIPPOSITION_C] = @Original_EQIPPOSITION_C)) AND ((@IsNu" +
                "ll_Item_Grade = 1 AND [Item Grade] IS NULL) OR ([Item Grade] = @Original_Item_Gr" +
                "ade)) AND ((@IsNull_Item_Grade_ = 1 AND [Item Grade_] IS NULL) OR ([Item Grade_]" +
                " = @Original_Item_Grade_)) AND ((@IsNull_ITEMGRADE_C = 1 AND [ITEMGRADE_C] IS NU" +
                "LL) OR ([ITEMGRADE_C] = @Original_ITEMGRADE_C)) AND ((@IsNull_BASE_HP = 1 AND [B" +
                "ASE_HP] IS NULL) OR ([BASE_HP] = @Original_BASE_HP)) AND ((@IsNull_ATK_PHYSIC = " +
                "1 AND [ATK_PHYSIC] IS NULL) OR ([ATK_PHYSIC] = @Original_ATK_PHYSIC)) AND ((@IsN" +
                "ull_ATK_MAGIC = 1 AND [ATK_MAGIC] IS NULL) OR ([ATK_MAGIC] = @Original_ATK_MAGIC" +
                ")) AND ((@IsNull_DEF_PHYSIC = 1 AND [DEF_PHYSIC] IS NULL) OR ([DEF_PHYSIC] = @Or" +
                "iginal_DEF_PHYSIC)) AND ((@IsNull_DEF_MAGIC = 1 AND [DEF_MAGIC] IS NULL) OR ([DE" +
                "F_MAGIC] = @Original_DEF_MAGIC)) AND ((@IsNull_SA_NUM = 1 AND [SA_NUM] IS NULL) " +
                "OR ([SA_NUM] = @Original_SA_NUM)) AND ((@IsNull_SA_01 = 1 AND [SA_01] IS NULL) O" +
                "R ([SA_01] = @Original_SA_01)) AND ((@IsNull_SA_02 = 1 AND [SA_02] IS NULL) OR (" +
                "[SA_02] = @Original_SA_02)) AND ((@IsNull_SA_03 = 1 AND [SA_03] IS NULL) OR ([SA" +
                "_03] = @Original_SA_03)) AND ((@IsNull_SA_04 = 1 AND [SA_04] IS NULL) OR ([SA_04" +
                "] = @Original_SA_04)) AND ((@IsNull_SA_05 = 1 AND [SA_05] IS NULL) OR ([SA_05] =" +
                " @Original_SA_05)) AND ((@IsNull_SA_06 = 1 AND [SA_06] IS NULL) OR ([SA_06] = @O" +
                "riginal_SA_06)) AND ((@IsNull_SA_07 = 1 AND [SA_07] IS NULL) OR ([SA_07] = @Orig" +
                "inal_SA_07)) AND ((@IsNull_SA_08 = 1 AND [SA_08] IS NULL) OR ([SA_08] = @Origina" +
                "l_SA_08)) AND ((@IsNull_SA_09 = 1 AND [SA_09] IS NULL) OR ([SA_09] = @Original_S" +
                "A_09)) AND ((@IsNull_SA_10 = 1 AND [SA_10] IS NULL) OR ([SA_10] = @Original_SA_1" +
                "0)) AND ((@IsNull_SO_01 = 1 AND [SO_01] IS NULL) OR ([SO_01] = @Original_SO_01))" +
                " AND ((@IsNull_SO_02 = 1 AND [SO_02] IS NULL) OR ([SO_02] = @Original_SO_02)) AN" +
                "D ((@IsNull_SO_03 = 1 AND [SO_03] IS NULL) OR ([SO_03] = @Original_SO_03)) AND (" +
                "(@IsNull_SO_04 = 1 AND [SO_04] IS NULL) OR ([SO_04] = @Original_SO_04)) AND ((@I" +
                "sNull_SO_05 = 1 AND [SO_05] IS NULL) OR ([SO_05] = @Original_SO_05)) AND ((@IsNu" +
                "ll_SO_06 = 1 AND [SO_06] IS NULL) OR ([SO_06] = @Original_SO_06)) AND ((@IsNull_" +
                "SO_07 = 1 AND [SO_07] IS NULL) OR ([SO_07] = @Original_SO_07)) AND ((@IsNull_SO_" +
                "08 = 1 AND [SO_08] IS NULL) OR ([SO_08] = @Original_SO_08)) AND ((@IsNull_SO_09 " +
                "= 1 AND [SO_09] IS NULL) OR ([SO_09] = @Original_SO_09)) AND ((@IsNull_COOL_TIME" +
                " = 1 AND [COOL_TIME] IS NULL) OR ([COOL_TIME] = @Original_COOL_TIME)) AND ((@IsN" +
                "ull_SET_ID = 1 AND [SET_ID] IS NULL) OR ([SET_ID] = @Original_SET_ID)) AND ((@Is" +
                "Null_Can_Use_Inventory = 1 AND [Can Use Inventory] IS NULL) OR ([Can Use Invento" +
                "ry] = @Original_Can_Use_Inventory)) AND ((@IsNull_NoEquip = 1 AND [NoEquip] IS N" +
                "ULL) OR ([NoEquip] = @Original_NoEquip)) AND ((@IsNull_SLASH_TRACE_COLOR = 1 AND" +
                " [SLASH_TRACE_COLOR] IS NULL) OR ([SLASH_TRACE_COLOR] = @Original_SLASH_TRACE_CO" +
                "LOR)) AND ((@IsNull_SLASH_TRACE_TIP_COLOR = 1 AND [SLASH_TRACE_TIP_COLOR] IS NUL" +
                "L) OR ([SLASH_TRACE_TIP_COLOR] = @Original_SLASH_TRACE_TIP_COLOR)) AND ((@IsNull" +
                "_HYPER_SLASH_TRACE_COLOR = 1 AND [HYPER_SLASH_TRACE_COLOR] IS NULL) OR ([HYPER_S" +
                "LASH_TRACE_COLOR] = @Original_HYPER_SLASH_TRACE_COLOR)) AND ((@IsNull_HYPER_SLAS" +
                "H_TRACE_TIP_COLOR = 1 AND [HYPER_SLASH_TRACE_TIP_COLOR] IS NULL) OR ([HYPER_SLAS" +
                "H_TRACE_TIP_COLOR] = @Original_HYPER_SLASH_TRACE_TIP_COLOR)) AND ((@IsNull_ELSWO" +
                "RD_ITEM_SCALE_ROTATE = 1 AND [ELSWORD_ITEM_SCALE_ROTATE] IS NULL) OR ([ELSWORD_I" +
                "TEM_SCALE_ROTATE] = @Original_ELSWORD_ITEM_SCALE_ROTATE)) AND ((@IsNull_AISHA_IT" +
                "EM_SCALE_ROTATE = 1 AND [AISHA_ITEM_SCALE_ROTATE] IS NULL) OR ([AISHA_ITEM_SCALE" +
                "_ROTATE] = @Original_AISHA_ITEM_SCALE_ROTATE)) AND ((@IsNull_RENA_ITEM_SCALE_ROT" +
                "ATE = 1 AND [RENA_ITEM_SCALE_ROTATE] IS NULL) OR ([RENA_ITEM_SCALE_ROTATE] = @Or" +
                "iginal_RENA_ITEM_SCALE_ROTATE)) AND ((@IsNull_RAVEN_ITEM_SCALE_ROTATE = 1 AND [R" +
                "AVEN_ITEM_SCALE_ROTATE] IS NULL) OR ([RAVEN_ITEM_SCALE_ROTATE] = @Original_RAVEN" +
                "_ITEM_SCALE_ROTATE)) AND ((@IsNull_EVE_ITEM_SCALE_ROTATE = 1 AND [EVE_ITEM_SCALE" +
                "_ROTATE] IS NULL) OR ([EVE_ITEM_SCALE_ROTATE] = @Original_EVE_ITEM_SCALE_ROTATE)" +
                ") AND ((@IsNull_ATTACHED_MESH_NAME1 = 1 AND [ATTACHED_MESH_NAME1] IS NULL) OR ([" +
                "ATTACHED_MESH_NAME1] = @Original_ATTACHED_MESH_NAME1)) AND ((@IsNull_ATTACHED_ME" +
                "SH_BONE_NAME1 = 1 AND [ATTACHED_MESH_BONE_NAME1] IS NULL) OR ([ATTACHED_MESH_BON" +
                "E_NAME1] = @Original_ATTACHED_MESH_BONE_NAME1)) AND ((@IsNull_ATTACHED_MESH_NAME" +
                "2 = 1 AND [ATTACHED_MESH_NAME2] IS NULL) OR ([ATTACHED_MESH_NAME2] = @Original_A" +
                "TTACHED_MESH_NAME2)) AND ((@IsNull_ATTACHED_MESH_BONE_NAME2 = 1 AND [ATTACHED_ME" +
                "SH_BONE_NAME2] IS NULL) OR ([ATTACHED_MESH_BONE_NAME2] = @Original_ATTACHED_MESH" +
                "_BONE_NAME2)) AND ((@IsNull_ATTACHED_MESH_NAME3 = 1 AND [ATTACHED_MESH_NAME3] IS" +
                " NULL) OR ([ATTACHED_MESH_NAME3] = @Original_ATTACHED_MESH_NAME3)) AND ((@IsNull" +
                "_ATTACHED_MESH_BONE_NAME3 = 1 AND [ATTACHED_MESH_BONE_NAME3] IS NULL) OR ([ATTAC" +
                "HED_MESH_BONE_NAME3] = @Original_ATTACHED_MESH_BONE_NAME3)) AND ((@IsNull_ATTACH" +
                "ED_MESH_NAME4 = 1 AND [ATTACHED_MESH_NAME4] IS NULL) OR ([ATTACHED_MESH_NAME4] =" +
                " @Original_ATTACHED_MESH_NAME4)) AND ((@IsNull_ATTACHED_MESH_BONE_NAME4 = 1 AND " +
                "[ATTACHED_MESH_BONE_NAME4] IS NULL) OR ([ATTACHED_MESH_BONE_NAME4] = @Original_A" +
                "TTACHED_MESH_BONE_NAME4)) AND ((@IsNull_ATTACHED_MESH_NAME5 = 1 AND [ATTACHED_ME" +
                "SH_NAME5] IS NULL) OR ([ATTACHED_MESH_NAME5] = @Original_ATTACHED_MESH_NAME5)) A" +
                "ND ((@IsNull_ATTACHED_MESH_BONE_NAME5 = 1 AND [ATTACHED_MESH_BONE_NAME5] IS NULL" +
                ") OR ([ATTACHED_MESH_BONE_NAME5] = @Original_ATTACHED_MESH_BONE_NAME5)) AND ((@I" +
                "sNull_Model_Name1 = 1 AND [Model Name1] IS NULL) OR ([Model Name1] = @Original_M" +
                "odel_Name1)) AND ((@IsNull_Attach_FrameName1 = 1 AND [Attach FrameName1] IS NULL" +
                ") OR ([Attach FrameName1] = @Original_Attach_FrameName1)) AND ((@IsNull_ATTACHED" +
                "_PARTICLE_NAME1 = 1 AND [ATTACHED_PARTICLE_NAME1] IS NULL) OR ([ATTACHED_PARTICL" +
                "E_NAME1] = @Original_ATTACHED_PARTICLE_NAME1)) AND ((@IsNull_ATTACHED_PARTICLE_B" +
                "ONE_NAME1 = 1 AND [ATTACHED_PARTICLE_BONE_NAME1] IS NULL) OR ([ATTACHED_PARTICLE" +
                "_BONE_NAME1] = @Original_ATTACHED_PARTICLE_BONE_NAME1)) AND ((@IsNull_ATTACHED_P" +
                "ARTICLE_NAME2 = 1 AND [ATTACHED_PARTICLE_NAME2] IS NULL) OR ([ATTACHED_PARTICLE_" +
                "NAME2] = @Original_ATTACHED_PARTICLE_NAME2)) AND ((@IsNull_ATTACHED_PARTICLE_BON" +
                "E_NAME2 = 1 AND [ATTACHED_PARTICLE_BONE_NAME2] IS NULL) OR ([ATTACHED_PARTICLE_B" +
                "ONE_NAME2] = @Original_ATTACHED_PARTICLE_BONE_NAME2)) AND ([Regdate] = @Original" +
                "_Regdate));\r\nSELECT IndexKey, ID, Name, Description, [Description In Shop], [Mod" +
                "el Name], [Texture Change XET Name], ELSWORD_MODEL_NAME, ELSWORD_XET_NAME, AISHA" +
                "_MODEL_NAME, AISHA_XET_NAME, RENA_MODEL_NAME, RENA_XET_NAME, RAVEN_MODEL_NAME, R" +
                "AVEN_XET_NAME, EVE_MODEL_NAME, EVE_XET_NAME, [Anim XET Name], [Anim Name], [Shop" +
                " Image], [Drop Viewer], [Item Type], [Item Type_], ITEMTYPE_C, Fashion, Vested, " +
                "[Can Enchant], [Use Type], [Use Type_], USETYPE_C, [Attach FrameName], FO_Elswor" +
                "d_X, FO_Elsword_Y, FO_Elsword_Z, FO_Lena_X, FO_Lena_Y, FO_Lena_Z, FO_Aisha_X, FO" +
                "_Aisha_Y, FO_Aisha_Z, FO_Raven_X, FO_Raven_Y, FO_Raven_Z, FO_Eve_X, FO_Eve_Y, FO" +
                "_Eve_Z, [Can HyperMode], [Period Type], [Period Type_], PERIODTYPE_C, Endurance," +
                " EnduranceDamageMin, EnduranceDamageMax, [Repair ED], [Repair VP], Quantity, [Pr" +
                "ice Type], [Price Type_], PRICETYPE_C, Price, [Price PvP Point], [Use Condition]" +
                ", [Use Condition_], USECONDITION_C, [Unit Type], [Unit Type_], UNITTYPE_C, [Unit" +
                " Class], [Unit Class_], UNITCLASS_C, [Use Level], [Eqip Position], [Eqip Positio" +
                "n_], EQIPPOSITION_C, [Item Grade], [Item Grade_], ITEMGRADE_C, BASE_HP, ATK_PHYS" +
                "IC, ATK_MAGIC, DEF_PHYSIC, DEF_MAGIC, SA_NUM, SA_01, SA_02, SA_03, SA_04, SA_05," +
                " SA_06, SA_07, SA_08, SA_09, SA_10, SO_01, SO_02, SO_03, SO_04, SO_05, SO_06, SO" +
                "_07, SO_08, SO_09, COOL_TIME, SET_ID, [Can Use Inventory], NoEquip, SLASH_TRACE_" +
                "COLOR, SLASH_TRACE_TIP_COLOR, HYPER_SLASH_TRACE_COLOR, HYPER_SLASH_TRACE_TIP_COL" +
                "OR, ELSWORD_ITEM_SCALE_ROTATE, AISHA_ITEM_SCALE_ROTATE, RENA_ITEM_SCALE_ROTATE, " +
                "RAVEN_ITEM_SCALE_ROTATE, EVE_ITEM_SCALE_ROTATE, ATTACHED_MESH_NAME1, ATTACHED_ME" +
                "SH_BONE_NAME1, ATTACHED_MESH_NAME2, ATTACHED_MESH_BONE_NAME2, ATTACHED_MESH_NAME" +
                "3, ATTACHED_MESH_BONE_NAME3, ATTACHED_MESH_NAME4, ATTACHED_MESH_BONE_NAME4, ATTA" +
                "CHED_MESH_NAME5, ATTACHED_MESH_BONE_NAME5, [Model Name1], [Attach FrameName1], A" +
                "TTACHED_PARTICLE_NAME1, ATTACHED_PARTICLE_BONE_NAME1, ATTACHED_PARTICLE_NAME2, A" +
                "TTACHED_PARTICLE_BONE_NAME2, Regdate FROM Item WHERE (IndexKey = @IndexKey)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description_In_Shop", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description In Shop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Texture_Change_XET_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Texture Change XET Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELSWORD_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELSWORD_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AISHA_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AISHA_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RENA_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RENA_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAVEN_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAVEN_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EVE_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EVE_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Anim_XET_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anim XET Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Anim_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anim Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shop_Image", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shop Image", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drop_Viewer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drop Viewer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITEMTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMTYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fashion", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fashion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vested", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vested", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Can_Enchant", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can Enchant", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Type", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USETYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USETYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attach_FrameName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach FrameName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Elsword_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Elsword_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Elsword_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Lena_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Lena_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Lena_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Aisha_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Aisha_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Aisha_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Raven_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Raven_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Raven_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Eve_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Eve_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Eve_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Can_HyperMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can HyperMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERIODTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERIODTYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Endurance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Endurance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnduranceDamageMin", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnduranceDamageMin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnduranceDamageMax", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnduranceDamageMax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Repair_ED", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair ED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Repair_VP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair VP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRICETYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICETYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price_PvP_Point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price PvP Point", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Condition", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Condition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Condition_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Condition_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USECONDITION_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USECONDITION_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UNITTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNITTYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Class", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Class_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UNITCLASS_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNITCLASS_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Level", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Eqip_Position", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eqip Position", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Eqip_Position_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eqip Position_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EQIPPOSITION_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EQIPPOSITION_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Grade", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Grade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Grade_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Grade_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITEMGRADE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMGRADE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BASE_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASE_HP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATK_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATK_PHYSIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATK_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATK_MAGIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEF_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_PHYSIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEF_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_MAGIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_01", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_03", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_04", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_05", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_06", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_07", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_08", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_09", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_01", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_03", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_04", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_05", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_06", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_07", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_08", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_09", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COOL_TIME", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOL_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SET_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SET_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Can_Use_Inventory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can Use Inventory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoEquip", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoEquip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SLASH_TRACE_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLASH_TRACE_COLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SLASH_TRACE_TIP_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLASH_TRACE_TIP_COLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HYPER_SLASH_TRACE_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HYPER_SLASH_TRACE_COLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HYPER_SLASH_TRACE_TIP_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HYPER_SLASH_TRACE_TIP_COLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELSWORD_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AISHA_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RENA_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAVEN_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EVE_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_Name1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model Name1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attach_FrameName1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach FrameName1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_PARTICLE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_NAME1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_PARTICLE_BONE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_BONE_NAME1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_PARTICLE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_NAME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_PARTICLE_BONE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_BONE_NAME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description_In_Shop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description In Shop", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description_In_Shop", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description In Shop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Model_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Model_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Texture_Change_XET_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Texture Change XET Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Texture_Change_XET_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Texture Change XET Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELSWORD_MODEL_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_MODEL_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELSWORD_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_MODEL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELSWORD_XET_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_XET_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELSWORD_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_XET_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AISHA_MODEL_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_MODEL_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AISHA_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_MODEL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AISHA_XET_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_XET_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AISHA_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_XET_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RENA_MODEL_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_MODEL_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RENA_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_MODEL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RENA_XET_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_XET_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RENA_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_XET_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RAVEN_MODEL_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_MODEL_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RAVEN_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_MODEL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RAVEN_XET_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_XET_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RAVEN_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_XET_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EVE_MODEL_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_MODEL_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EVE_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_MODEL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EVE_XET_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_XET_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EVE_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_XET_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Anim_XET_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anim XET Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Anim_XET_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anim XET Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Anim_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anim Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Anim_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anim Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Shop_Image", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shop Image", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shop_Image", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shop Image", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Drop_Viewer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drop Viewer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drop_Viewer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drop Viewer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Item_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Item_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ITEMTYPE_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMTYPE_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ITEMTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMTYPE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fashion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fashion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fashion", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fashion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Vested", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vested", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vested", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vested", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Can_Enchant", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can Enchant", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Can_Enchant", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can Enchant", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Type", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USETYPE_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USETYPE_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USETYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USETYPE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Attach_FrameName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach FrameName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Attach_FrameName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach FrameName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Elsword_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_X", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Elsword_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_X", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Elsword_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_Y", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Elsword_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_Y", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Elsword_Z", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_Z", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Elsword_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_Z", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Lena_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_X", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Lena_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_X", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Lena_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_Y", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Lena_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_Y", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Lena_Z", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_Z", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Lena_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_Z", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Aisha_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_X", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Aisha_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_X", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Aisha_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_Y", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Aisha_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_Y", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Aisha_Z", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_Z", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Aisha_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_Z", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Raven_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_X", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Raven_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_X", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Raven_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_Y", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Raven_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_Y", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Raven_Z", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_Z", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Raven_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_Z", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Eve_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_X", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Eve_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_X", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Eve_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_Y", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Eve_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_Y", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FO_Eve_Z", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_Z", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FO_Eve_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_Z", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Can_HyperMode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can HyperMode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Can_HyperMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can HyperMode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Period_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Period_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Period_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Period_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PERIODTYPE_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERIODTYPE_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERIODTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERIODTYPE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Endurance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Endurance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Endurance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Endurance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnduranceDamageMin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnduranceDamageMin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnduranceDamageMin", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnduranceDamageMin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnduranceDamageMax", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnduranceDamageMax", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnduranceDamageMax", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnduranceDamageMax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Repair_ED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair ED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Repair_ED", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair ED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Repair_VP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair VP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Repair_VP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair VP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Price_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Price_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PRICETYPE_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICETYPE_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRICETYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICETYPE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Price", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Price_PvP_Point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price PvP Point", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price_PvP_Point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price PvP Point", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Condition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Condition", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Condition", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Condition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Condition_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Condition_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Condition_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Condition_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USECONDITION_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USECONDITION_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USECONDITION_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USECONDITION_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unit_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UNITTYPE_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNITTYPE_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UNITTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNITTYPE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit_Class", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unit_Class_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Class_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Class_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UNITCLASS_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNITCLASS_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UNITCLASS_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNITCLASS_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Level", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Level", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Level", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Eqip_Position", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eqip Position", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Eqip_Position", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eqip Position", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Eqip_Position_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eqip Position_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Eqip_Position_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eqip Position_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EQIPPOSITION_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EQIPPOSITION_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EQIPPOSITION_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EQIPPOSITION_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Item_Grade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Grade", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_Grade", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Grade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Item_Grade_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Grade_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_Grade_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Grade_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ITEMGRADE_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMGRADE_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ITEMGRADE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMGRADE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BASE_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASE_HP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BASE_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASE_HP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATK_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATK_PHYSIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATK_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATK_PHYSIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATK_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATK_MAGIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATK_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATK_MAGIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEF_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_PHYSIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEF_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_PHYSIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEF_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_MAGIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEF_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_MAGIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_NUM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_01", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_01", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_02", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_02", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_03", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_03", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_04", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_04", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_05", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_05", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_06", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_06", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_07", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_07", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_08", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_08", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_09", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_09", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SA_10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_01", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_01", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_02", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_02", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_03", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_03", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_04", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_04", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_05", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_05", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_06", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_06", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_07", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_07", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_08", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_08", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_09", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_09", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COOL_TIME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOL_TIME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COOL_TIME", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOL_TIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SET_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SET_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SET_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SET_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Can_Use_Inventory", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can Use Inventory", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Can_Use_Inventory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can Use Inventory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoEquip", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoEquip", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoEquip", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoEquip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SLASH_TRACE_COLOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLASH_TRACE_COLOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SLASH_TRACE_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLASH_TRACE_COLOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SLASH_TRACE_TIP_COLOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLASH_TRACE_TIP_COLOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SLASH_TRACE_TIP_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLASH_TRACE_TIP_COLOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HYPER_SLASH_TRACE_COLOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HYPER_SLASH_TRACE_COLOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HYPER_SLASH_TRACE_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HYPER_SLASH_TRACE_COLOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HYPER_SLASH_TRACE_TIP_COLOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HYPER_SLASH_TRACE_TIP_COLOR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HYPER_SLASH_TRACE_TIP_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HYPER_SLASH_TRACE_TIP_COLOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELSWORD_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELSWORD_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AISHA_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AISHA_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RENA_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RENA_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RAVEN_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RAVEN_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EVE_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EVE_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_NAME1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_BONE_NAME1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_BONE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_NAME2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_BONE_NAME2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_BONE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_NAME3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_NAME3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_BONE_NAME3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_BONE_NAME3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_NAME4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_NAME4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_BONE_NAME4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_BONE_NAME4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_NAME5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_NAME5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_MESH_BONE_NAME5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_MESH_BONE_NAME5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Model_Name1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model Name1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Model_Name1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model Name1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Attach_FrameName1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach FrameName1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Attach_FrameName1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach FrameName1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_PARTICLE_NAME1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_NAME1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_PARTICLE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_NAME1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_PARTICLE_BONE_NAME1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_BONE_NAME1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_PARTICLE_BONE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_BONE_NAME1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_PARTICLE_NAME2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_NAME2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_PARTICLE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_NAME2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATTACHED_PARTICLE_BONE_NAME2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_BONE_NAME2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTACHED_PARTICLE_BONE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_BONE_NAME2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT IndexKey, ID, Name, Description, [Description In Shop], [Model Name], [Tex" +
                "ture Change XET Name], ELSWORD_MODEL_NAME, ELSWORD_XET_NAME, AISHA_MODEL_NAME, A" +
                "ISHA_XET_NAME, RENA_MODEL_NAME, RENA_XET_NAME, RAVEN_MODEL_NAME, RAVEN_XET_NAME," +
                " EVE_MODEL_NAME, EVE_XET_NAME, [Anim XET Name], [Anim Name], [Shop Image], [Drop" +
                " Viewer], [Item Type], [Item Type_], ITEMTYPE_C, Fashion, Vested, [Can Enchant]," +
                " [Use Type], [Use Type_], USETYPE_C, [Attach FrameName], FO_Elsword_X, FO_Elswor" +
                "d_Y, FO_Elsword_Z, FO_Lena_X, FO_Lena_Y, FO_Lena_Z, FO_Aisha_X, FO_Aisha_Y, FO_A" +
                "isha_Z, FO_Raven_X, FO_Raven_Y, FO_Raven_Z, FO_Eve_X, FO_Eve_Y, FO_Eve_Z, [Can H" +
                "yperMode], [Period Type], [Period Type_], PERIODTYPE_C, Endurance, EnduranceDama" +
                "geMin, EnduranceDamageMax, [Repair ED], [Repair VP], Quantity, [Price Type], [Pr" +
                "ice Type_], PRICETYPE_C, Price, [Price PvP Point], [Use Condition], [Use Conditi" +
                "on_], USECONDITION_C, [Unit Type], [Unit Type_], UNITTYPE_C, [Unit Class], [Unit" +
                " Class_], UNITCLASS_C, [Use Level], [Eqip Position], [Eqip Position_], EQIPPOSIT" +
                "ION_C, [Item Grade], [Item Grade_], ITEMGRADE_C, BASE_HP, ATK_PHYSIC, ATK_MAGIC," +
                " DEF_PHYSIC, DEF_MAGIC, SA_NUM, SA_01, SA_02, SA_03, SA_04, SA_05, SA_06, SA_07," +
                " SA_08, SA_09, SA_10, SO_01, SO_02, SO_03, SO_04, SO_05, SO_06, SO_07, SO_08, SO" +
                "_09, COOL_TIME, SET_ID, [Can Use Inventory], NoEquip, SLASH_TRACE_COLOR, SLASH_T" +
                "RACE_TIP_COLOR, HYPER_SLASH_TRACE_COLOR, HYPER_SLASH_TRACE_TIP_COLOR, ELSWORD_IT" +
                "EM_SCALE_ROTATE, AISHA_ITEM_SCALE_ROTATE, RENA_ITEM_SCALE_ROTATE, RAVEN_ITEM_SCA" +
                "LE_ROTATE, EVE_ITEM_SCALE_ROTATE, ATTACHED_MESH_NAME1, ATTACHED_MESH_BONE_NAME1," +
                " ATTACHED_MESH_NAME2, ATTACHED_MESH_BONE_NAME2, ATTACHED_MESH_NAME3, ATTACHED_ME" +
                "SH_BONE_NAME3, ATTACHED_MESH_NAME4, ATTACHED_MESH_BONE_NAME4, ATTACHED_MESH_NAME" +
                "5, ATTACHED_MESH_BONE_NAME5, [Model Name1], [Attach FrameName1], ATTACHED_PARTIC" +
                "LE_NAME1, ATTACHED_PARTICLE_BONE_NAME1, ATTACHED_PARTICLE_NAME2, ATTACHED_PARTIC" +
                "LE_BONE_NAME2, Regdate FROM dbo.Item";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE  Item\r\nSET         [Description]= @Description\r\nWHERE   (IndexKey = @Index" +
                "); ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE  Item\r\nSET         [Description In Shop] = @DescriptionInShop\r\nWHERE   (In" +
                "dexKey = @Index); ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DescriptionInShop", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Description In Shop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "UPDATE  Item\r\nSET         Name = @Name\r\nWHERE   (IndexKey = @Index); \r\n";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "UPDATE  Item\r\nSET         Regdate= @Regdate\r\nWHERE   (IndexKey = @Index); \r\n";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.ItemDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.ItemDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.ItemDataTable dataTable = new ScriptData_JPDataSet.ItemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.ItemDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Item");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_IndexKey, 
                    int Original_ID, 
                    string Original_Name, 
                    string Original_Description, 
                    string Original_Description_In_Shop, 
                    string Original_Model_Name, 
                    string Original_Texture_Change_XET_Name, 
                    string Original_ELSWORD_MODEL_NAME, 
                    string Original_ELSWORD_XET_NAME, 
                    string Original_AISHA_MODEL_NAME, 
                    string Original_AISHA_XET_NAME, 
                    string Original_RENA_MODEL_NAME, 
                    string Original_RENA_XET_NAME, 
                    string Original_RAVEN_MODEL_NAME, 
                    string Original_RAVEN_XET_NAME, 
                    string Original_EVE_MODEL_NAME, 
                    string Original_EVE_XET_NAME, 
                    string Original_Anim_XET_Name, 
                    string Original_Anim_Name, 
                    string Original_Shop_Image, 
                    string Original_Drop_Viewer, 
                    global::System.Nullable<byte> Original_Item_Type, 
                    string Original_Item_Type_, 
                    string Original_ITEMTYPE_C, 
                    global::System.Nullable<bool> Original_Fashion, 
                    global::System.Nullable<bool> Original_Vested, 
                    global::System.Nullable<bool> Original_Can_Enchant, 
                    global::System.Nullable<double> Original_Use_Type, 
                    string Original_Use_Type_, 
                    string Original_USETYPE_C, 
                    string Original_Attach_FrameName, 
                    global::System.Nullable<double> Original_FO_Elsword_X, 
                    global::System.Nullable<double> Original_FO_Elsword_Y, 
                    global::System.Nullable<double> Original_FO_Elsword_Z, 
                    global::System.Nullable<double> Original_FO_Lena_X, 
                    global::System.Nullable<double> Original_FO_Lena_Y, 
                    global::System.Nullable<double> Original_FO_Lena_Z, 
                    global::System.Nullable<double> Original_FO_Aisha_X, 
                    global::System.Nullable<double> Original_FO_Aisha_Y, 
                    global::System.Nullable<double> Original_FO_Aisha_Z, 
                    global::System.Nullable<double> Original_FO_Raven_X, 
                    global::System.Nullable<double> Original_FO_Raven_Y, 
                    global::System.Nullable<double> Original_FO_Raven_Z, 
                    global::System.Nullable<double> Original_FO_Eve_X, 
                    global::System.Nullable<double> Original_FO_Eve_Y, 
                    global::System.Nullable<double> Original_FO_Eve_Z, 
                    global::System.Nullable<bool> Original_Can_HyperMode, 
                    global::System.Nullable<byte> Original_Period_Type, 
                    string Original_Period_Type_, 
                    string Original_PERIODTYPE_C, 
                    global::System.Nullable<int> Original_Endurance, 
                    global::System.Nullable<byte> Original_EnduranceDamageMin, 
                    global::System.Nullable<byte> Original_EnduranceDamageMax, 
                    global::System.Nullable<double> Original_Repair_ED, 
                    global::System.Nullable<double> Original_Repair_VP, 
                    global::System.Nullable<int> Original_Quantity, 
                    global::System.Nullable<byte> Original_Price_Type, 
                    string Original_Price_Type_, 
                    string Original_PRICETYPE_C, 
                    string Original_Price, 
                    global::System.Nullable<int> Original_Price_PvP_Point, 
                    global::System.Nullable<byte> Original_Use_Condition, 
                    string Original_Use_Condition_, 
                    string Original_USECONDITION_C, 
                    global::System.Nullable<byte> Original_Unit_Type, 
                    string Original_Unit_Type_, 
                    string Original_UNITTYPE_C, 
                    global::System.Nullable<byte> Original_Unit_Class, 
                    string Original_Unit_Class_, 
                    string Original_UNITCLASS_C, 
                    global::System.Nullable<byte> Original_Use_Level, 
                    global::System.Nullable<byte> Original_Eqip_Position, 
                    string Original_Eqip_Position_, 
                    string Original_EQIPPOSITION_C, 
                    global::System.Nullable<byte> Original_Item_Grade, 
                    string Original_Item_Grade_, 
                    string Original_ITEMGRADE_C, 
                    global::System.Nullable<int> Original_BASE_HP, 
                    global::System.Nullable<int> Original_ATK_PHYSIC, 
                    global::System.Nullable<int> Original_ATK_MAGIC, 
                    global::System.Nullable<int> Original_DEF_PHYSIC, 
                    global::System.Nullable<int> Original_DEF_MAGIC, 
                    global::System.Nullable<int> Original_SA_NUM, 
                    global::System.Nullable<int> Original_SA_01, 
                    global::System.Nullable<int> Original_SA_02, 
                    global::System.Nullable<int> Original_SA_03, 
                    global::System.Nullable<int> Original_SA_04, 
                    global::System.Nullable<int> Original_SA_05, 
                    global::System.Nullable<int> Original_SA_06, 
                    global::System.Nullable<int> Original_SA_07, 
                    global::System.Nullable<int> Original_SA_08, 
                    global::System.Nullable<int> Original_SA_09, 
                    global::System.Nullable<int> Original_SA_10, 
                    global::System.Nullable<int> Original_SO_01, 
                    global::System.Nullable<int> Original_SO_02, 
                    global::System.Nullable<int> Original_SO_03, 
                    global::System.Nullable<int> Original_SO_04, 
                    global::System.Nullable<int> Original_SO_05, 
                    global::System.Nullable<int> Original_SO_06, 
                    global::System.Nullable<int> Original_SO_07, 
                    global::System.Nullable<int> Original_SO_08, 
                    global::System.Nullable<int> Original_SO_09, 
                    global::System.Nullable<byte> Original_COOL_TIME, 
                    global::System.Nullable<int> Original_SET_ID, 
                    global::System.Nullable<bool> Original_Can_Use_Inventory, 
                    global::System.Nullable<bool> Original_NoEquip, 
                    string Original_SLASH_TRACE_COLOR, 
                    string Original_SLASH_TRACE_TIP_COLOR, 
                    string Original_HYPER_SLASH_TRACE_COLOR, 
                    string Original_HYPER_SLASH_TRACE_TIP_COLOR, 
                    string Original_ELSWORD_ITEM_SCALE_ROTATE, 
                    string Original_AISHA_ITEM_SCALE_ROTATE, 
                    string Original_RENA_ITEM_SCALE_ROTATE, 
                    string Original_RAVEN_ITEM_SCALE_ROTATE, 
                    string Original_EVE_ITEM_SCALE_ROTATE, 
                    string Original_ATTACHED_MESH_NAME1, 
                    string Original_ATTACHED_MESH_BONE_NAME1, 
                    string Original_ATTACHED_MESH_NAME2, 
                    string Original_ATTACHED_MESH_BONE_NAME2, 
                    string Original_ATTACHED_MESH_NAME3, 
                    string Original_ATTACHED_MESH_BONE_NAME3, 
                    string Original_ATTACHED_MESH_NAME4, 
                    string Original_ATTACHED_MESH_BONE_NAME4, 
                    string Original_ATTACHED_MESH_NAME5, 
                    string Original_ATTACHED_MESH_BONE_NAME5, 
                    string Original_Model_Name1, 
                    string Original_Attach_FrameName1, 
                    string Original_ATTACHED_PARTICLE_NAME1, 
                    string Original_ATTACHED_PARTICLE_BONE_NAME1, 
                    string Original_ATTACHED_PARTICLE_NAME2, 
                    string Original_ATTACHED_PARTICLE_BONE_NAME2, 
                    System.DateTime Original_Regdate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IndexKey));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID));
            if ((Original_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Name));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Description));
            }
            if ((Original_Description_In_Shop == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Description_In_Shop));
            }
            if ((Original_Model_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Model_Name));
            }
            if ((Original_Texture_Change_XET_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Texture_Change_XET_Name));
            }
            if ((Original_ELSWORD_MODEL_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_ELSWORD_MODEL_NAME));
            }
            if ((Original_ELSWORD_XET_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_ELSWORD_XET_NAME));
            }
            if ((Original_AISHA_MODEL_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_AISHA_MODEL_NAME));
            }
            if ((Original_AISHA_XET_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_AISHA_XET_NAME));
            }
            if ((Original_RENA_MODEL_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_RENA_MODEL_NAME));
            }
            if ((Original_RENA_XET_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_RENA_XET_NAME));
            }
            if ((Original_RAVEN_MODEL_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_RAVEN_MODEL_NAME));
            }
            if ((Original_RAVEN_XET_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_RAVEN_XET_NAME));
            }
            if ((Original_EVE_MODEL_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_EVE_MODEL_NAME));
            }
            if ((Original_EVE_XET_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_EVE_XET_NAME));
            }
            if ((Original_Anim_XET_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_Anim_XET_Name));
            }
            if ((Original_Anim_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_Anim_Name));
            }
            if ((Original_Shop_Image == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_Shop_Image));
            }
            if ((Original_Drop_Viewer == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_Drop_Viewer));
            }
            if ((Original_Item_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((byte)(Original_Item_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_Item_Type_ == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_Item_Type_));
            }
            if ((Original_ITEMTYPE_C == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_ITEMTYPE_C));
            }
            if ((Original_Fashion.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((bool)(Original_Fashion.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_Vested.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((bool)(Original_Vested.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_Can_Enchant.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((bool)(Original_Can_Enchant.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_Use_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((double)(Original_Use_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_Use_Type_ == null)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_Use_Type_));
            }
            if ((Original_USETYPE_C == null)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((string)(Original_USETYPE_C));
            }
            if ((Original_Attach_FrameName == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_Attach_FrameName));
            }
            if ((Original_FO_Elsword_X.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((double)(Original_FO_Elsword_X.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Elsword_Y.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((double)(Original_FO_Elsword_Y.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Elsword_Z.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((double)(Original_FO_Elsword_Z.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Lena_X.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((double)(Original_FO_Lena_X.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Lena_Y.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((double)(Original_FO_Lena_Y.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Lena_Z.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((double)(Original_FO_Lena_Z.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Aisha_X.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((double)(Original_FO_Aisha_X.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Aisha_Y.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((double)(Original_FO_Aisha_Y.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Aisha_Z.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((double)(Original_FO_Aisha_Z.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Raven_X.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((double)(Original_FO_Raven_X.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Raven_Y.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((double)(Original_FO_Raven_Y.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Raven_Z.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((double)(Original_FO_Raven_Z.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Eve_X.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((double)(Original_FO_Eve_X.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Eve_Y.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((double)(Original_FO_Eve_Y.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Eve_Z.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((double)(Original_FO_Eve_Z.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_Can_HyperMode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((bool)(Original_Can_HyperMode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_Period_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((byte)(Original_Period_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_Period_Type_ == null)) {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[95].Value = ((string)(Original_Period_Type_));
            }
            if ((Original_PERIODTYPE_C == null)) {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[97].Value = ((string)(Original_PERIODTYPE_C));
            }
            if ((Original_Endurance.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[99].Value = ((int)(Original_Endurance.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_EnduranceDamageMin.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[101].Value = ((byte)(Original_EnduranceDamageMin.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_EnduranceDamageMax.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[103].Value = ((byte)(Original_EnduranceDamageMax.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_Repair_ED.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[105].Value = ((double)(Original_Repair_ED.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_Repair_VP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[107].Value = ((double)(Original_Repair_VP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_Quantity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[109].Value = ((int)(Original_Quantity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_Price_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[111].Value = ((byte)(Original_Price_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_Price_Type_ == null)) {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[113].Value = ((string)(Original_Price_Type_));
            }
            if ((Original_PRICETYPE_C == null)) {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[115].Value = ((string)(Original_PRICETYPE_C));
            }
            if ((Original_Price == null)) {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[117].Value = ((string)(Original_Price));
            }
            if ((Original_Price_PvP_Point.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[119].Value = ((int)(Original_Price_PvP_Point.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_Use_Condition.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[121].Value = ((byte)(Original_Use_Condition.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_Use_Condition_ == null)) {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[123].Value = ((string)(Original_Use_Condition_));
            }
            if ((Original_USECONDITION_C == null)) {
                this.Adapter.DeleteCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[125].Value = ((string)(Original_USECONDITION_C));
            }
            if ((Original_Unit_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[127].Value = ((byte)(Original_Unit_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((Original_Unit_Type_ == null)) {
                this.Adapter.DeleteCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[129].Value = ((string)(Original_Unit_Type_));
            }
            if ((Original_UNITTYPE_C == null)) {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[131].Value = ((string)(Original_UNITTYPE_C));
            }
            if ((Original_Unit_Class.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[133].Value = ((byte)(Original_Unit_Class.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((Original_Unit_Class_ == null)) {
                this.Adapter.DeleteCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[135].Value = ((string)(Original_Unit_Class_));
            }
            if ((Original_UNITCLASS_C == null)) {
                this.Adapter.DeleteCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[137].Value = ((string)(Original_UNITCLASS_C));
            }
            if ((Original_Use_Level.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[139].Value = ((byte)(Original_Use_Level.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((Original_Eqip_Position.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[141].Value = ((byte)(Original_Eqip_Position.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((Original_Eqip_Position_ == null)) {
                this.Adapter.DeleteCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[143].Value = ((string)(Original_Eqip_Position_));
            }
            if ((Original_EQIPPOSITION_C == null)) {
                this.Adapter.DeleteCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[145].Value = ((string)(Original_EQIPPOSITION_C));
            }
            if ((Original_Item_Grade.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[147].Value = ((byte)(Original_Item_Grade.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((Original_Item_Grade_ == null)) {
                this.Adapter.DeleteCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[149].Value = ((string)(Original_Item_Grade_));
            }
            if ((Original_ITEMGRADE_C == null)) {
                this.Adapter.DeleteCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[151].Value = ((string)(Original_ITEMGRADE_C));
            }
            if ((Original_BASE_HP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[153].Value = ((int)(Original_BASE_HP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            if ((Original_ATK_PHYSIC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[155].Value = ((int)(Original_ATK_PHYSIC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            if ((Original_ATK_MAGIC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[157].Value = ((int)(Original_ATK_MAGIC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            if ((Original_DEF_PHYSIC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[159].Value = ((int)(Original_DEF_PHYSIC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            if ((Original_DEF_MAGIC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[161].Value = ((int)(Original_DEF_MAGIC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_NUM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[163].Value = ((int)(Original_SA_NUM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_01.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[165].Value = ((int)(Original_SA_01.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_02.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[167].Value = ((int)(Original_SA_02.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_03.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[169].Value = ((int)(Original_SA_03.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_04.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[171].Value = ((int)(Original_SA_04.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_05.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[173].Value = ((int)(Original_SA_05.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_06.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[175].Value = ((int)(Original_SA_06.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_07.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[177].Value = ((int)(Original_SA_07.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_08.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[179].Value = ((int)(Original_SA_08.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_09.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[181].Value = ((int)(Original_SA_09.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_10.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[183].Value = ((int)(Original_SA_10.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_01.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[185].Value = ((int)(Original_SO_01.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_02.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[187].Value = ((int)(Original_SO_02.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_03.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[189].Value = ((int)(Original_SO_03.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_04.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[191].Value = ((int)(Original_SO_04.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_05.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[193].Value = ((int)(Original_SO_05.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_06.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[195].Value = ((int)(Original_SO_06.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_07.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[197].Value = ((int)(Original_SO_07.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_08.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[198].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[199].Value = ((int)(Original_SO_08.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[198].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[199].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_09.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[200].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[201].Value = ((int)(Original_SO_09.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[200].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[201].Value = global::System.DBNull.Value;
            }
            if ((Original_COOL_TIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[202].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[203].Value = ((byte)(Original_COOL_TIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[202].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[203].Value = global::System.DBNull.Value;
            }
            if ((Original_SET_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[204].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[205].Value = ((int)(Original_SET_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[204].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[205].Value = global::System.DBNull.Value;
            }
            if ((Original_Can_Use_Inventory.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[206].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[207].Value = ((bool)(Original_Can_Use_Inventory.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[206].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[207].Value = global::System.DBNull.Value;
            }
            if ((Original_NoEquip.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[208].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[209].Value = ((bool)(Original_NoEquip.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[208].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[209].Value = global::System.DBNull.Value;
            }
            if ((Original_SLASH_TRACE_COLOR == null)) {
                this.Adapter.DeleteCommand.Parameters[210].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[211].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[210].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[211].Value = ((string)(Original_SLASH_TRACE_COLOR));
            }
            if ((Original_SLASH_TRACE_TIP_COLOR == null)) {
                this.Adapter.DeleteCommand.Parameters[212].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[213].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[212].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[213].Value = ((string)(Original_SLASH_TRACE_TIP_COLOR));
            }
            if ((Original_HYPER_SLASH_TRACE_COLOR == null)) {
                this.Adapter.DeleteCommand.Parameters[214].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[215].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[214].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[215].Value = ((string)(Original_HYPER_SLASH_TRACE_COLOR));
            }
            if ((Original_HYPER_SLASH_TRACE_TIP_COLOR == null)) {
                this.Adapter.DeleteCommand.Parameters[216].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[217].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[216].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[217].Value = ((string)(Original_HYPER_SLASH_TRACE_TIP_COLOR));
            }
            if ((Original_ELSWORD_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.DeleteCommand.Parameters[218].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[219].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[218].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[219].Value = ((string)(Original_ELSWORD_ITEM_SCALE_ROTATE));
            }
            if ((Original_AISHA_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.DeleteCommand.Parameters[220].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[221].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[220].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[221].Value = ((string)(Original_AISHA_ITEM_SCALE_ROTATE));
            }
            if ((Original_RENA_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.DeleteCommand.Parameters[222].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[223].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[222].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[223].Value = ((string)(Original_RENA_ITEM_SCALE_ROTATE));
            }
            if ((Original_RAVEN_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.DeleteCommand.Parameters[224].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[225].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[224].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[225].Value = ((string)(Original_RAVEN_ITEM_SCALE_ROTATE));
            }
            if ((Original_EVE_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.DeleteCommand.Parameters[226].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[227].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[226].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[227].Value = ((string)(Original_EVE_ITEM_SCALE_ROTATE));
            }
            if ((Original_ATTACHED_MESH_NAME1 == null)) {
                this.Adapter.DeleteCommand.Parameters[228].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[229].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[228].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[229].Value = ((string)(Original_ATTACHED_MESH_NAME1));
            }
            if ((Original_ATTACHED_MESH_BONE_NAME1 == null)) {
                this.Adapter.DeleteCommand.Parameters[230].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[231].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[230].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[231].Value = ((string)(Original_ATTACHED_MESH_BONE_NAME1));
            }
            if ((Original_ATTACHED_MESH_NAME2 == null)) {
                this.Adapter.DeleteCommand.Parameters[232].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[233].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[232].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[233].Value = ((string)(Original_ATTACHED_MESH_NAME2));
            }
            if ((Original_ATTACHED_MESH_BONE_NAME2 == null)) {
                this.Adapter.DeleteCommand.Parameters[234].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[235].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[234].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[235].Value = ((string)(Original_ATTACHED_MESH_BONE_NAME2));
            }
            if ((Original_ATTACHED_MESH_NAME3 == null)) {
                this.Adapter.DeleteCommand.Parameters[236].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[237].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[236].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[237].Value = ((string)(Original_ATTACHED_MESH_NAME3));
            }
            if ((Original_ATTACHED_MESH_BONE_NAME3 == null)) {
                this.Adapter.DeleteCommand.Parameters[238].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[239].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[238].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[239].Value = ((string)(Original_ATTACHED_MESH_BONE_NAME3));
            }
            if ((Original_ATTACHED_MESH_NAME4 == null)) {
                this.Adapter.DeleteCommand.Parameters[240].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[241].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[240].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[241].Value = ((string)(Original_ATTACHED_MESH_NAME4));
            }
            if ((Original_ATTACHED_MESH_BONE_NAME4 == null)) {
                this.Adapter.DeleteCommand.Parameters[242].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[243].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[242].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[243].Value = ((string)(Original_ATTACHED_MESH_BONE_NAME4));
            }
            if ((Original_ATTACHED_MESH_NAME5 == null)) {
                this.Adapter.DeleteCommand.Parameters[244].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[245].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[244].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[245].Value = ((string)(Original_ATTACHED_MESH_NAME5));
            }
            if ((Original_ATTACHED_MESH_BONE_NAME5 == null)) {
                this.Adapter.DeleteCommand.Parameters[246].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[247].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[246].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[247].Value = ((string)(Original_ATTACHED_MESH_BONE_NAME5));
            }
            if ((Original_Model_Name1 == null)) {
                this.Adapter.DeleteCommand.Parameters[248].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[249].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[248].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[249].Value = ((string)(Original_Model_Name1));
            }
            if ((Original_Attach_FrameName1 == null)) {
                this.Adapter.DeleteCommand.Parameters[250].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[251].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[250].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[251].Value = ((string)(Original_Attach_FrameName1));
            }
            if ((Original_ATTACHED_PARTICLE_NAME1 == null)) {
                this.Adapter.DeleteCommand.Parameters[252].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[253].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[252].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[253].Value = ((string)(Original_ATTACHED_PARTICLE_NAME1));
            }
            if ((Original_ATTACHED_PARTICLE_BONE_NAME1 == null)) {
                this.Adapter.DeleteCommand.Parameters[254].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[255].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[254].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[255].Value = ((string)(Original_ATTACHED_PARTICLE_BONE_NAME1));
            }
            if ((Original_ATTACHED_PARTICLE_NAME2 == null)) {
                this.Adapter.DeleteCommand.Parameters[256].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[257].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[256].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[257].Value = ((string)(Original_ATTACHED_PARTICLE_NAME2));
            }
            if ((Original_ATTACHED_PARTICLE_BONE_NAME2 == null)) {
                this.Adapter.DeleteCommand.Parameters[258].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[259].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[258].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[259].Value = ((string)(Original_ATTACHED_PARTICLE_BONE_NAME2));
            }
            this.Adapter.DeleteCommand.Parameters[260].Value = ((System.DateTime)(Original_Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IndexKey, 
                    int ID, 
                    string Name, 
                    string Description, 
                    string Description_In_Shop, 
                    string Model_Name, 
                    string Texture_Change_XET_Name, 
                    string ELSWORD_MODEL_NAME, 
                    string ELSWORD_XET_NAME, 
                    string AISHA_MODEL_NAME, 
                    string AISHA_XET_NAME, 
                    string RENA_MODEL_NAME, 
                    string RENA_XET_NAME, 
                    string RAVEN_MODEL_NAME, 
                    string RAVEN_XET_NAME, 
                    string EVE_MODEL_NAME, 
                    string EVE_XET_NAME, 
                    string Anim_XET_Name, 
                    string Anim_Name, 
                    string Shop_Image, 
                    string Drop_Viewer, 
                    global::System.Nullable<byte> Item_Type, 
                    string Item_Type_, 
                    string ITEMTYPE_C, 
                    global::System.Nullable<bool> Fashion, 
                    global::System.Nullable<bool> Vested, 
                    global::System.Nullable<bool> Can_Enchant, 
                    global::System.Nullable<double> Use_Type, 
                    string Use_Type_, 
                    string USETYPE_C, 
                    string Attach_FrameName, 
                    global::System.Nullable<double> FO_Elsword_X, 
                    global::System.Nullable<double> FO_Elsword_Y, 
                    global::System.Nullable<double> FO_Elsword_Z, 
                    global::System.Nullable<double> FO_Lena_X, 
                    global::System.Nullable<double> FO_Lena_Y, 
                    global::System.Nullable<double> FO_Lena_Z, 
                    global::System.Nullable<double> FO_Aisha_X, 
                    global::System.Nullable<double> FO_Aisha_Y, 
                    global::System.Nullable<double> FO_Aisha_Z, 
                    global::System.Nullable<double> FO_Raven_X, 
                    global::System.Nullable<double> FO_Raven_Y, 
                    global::System.Nullable<double> FO_Raven_Z, 
                    global::System.Nullable<double> FO_Eve_X, 
                    global::System.Nullable<double> FO_Eve_Y, 
                    global::System.Nullable<double> FO_Eve_Z, 
                    global::System.Nullable<bool> Can_HyperMode, 
                    global::System.Nullable<byte> Period_Type, 
                    string Period_Type_, 
                    string PERIODTYPE_C, 
                    global::System.Nullable<int> Endurance, 
                    global::System.Nullable<byte> EnduranceDamageMin, 
                    global::System.Nullable<byte> EnduranceDamageMax, 
                    global::System.Nullable<double> Repair_ED, 
                    global::System.Nullable<double> Repair_VP, 
                    global::System.Nullable<int> Quantity, 
                    global::System.Nullable<byte> Price_Type, 
                    string Price_Type_, 
                    string PRICETYPE_C, 
                    string Price, 
                    global::System.Nullable<int> Price_PvP_Point, 
                    global::System.Nullable<byte> Use_Condition, 
                    string Use_Condition_, 
                    string USECONDITION_C, 
                    global::System.Nullable<byte> Unit_Type, 
                    string Unit_Type_, 
                    string UNITTYPE_C, 
                    global::System.Nullable<byte> Unit_Class, 
                    string Unit_Class_, 
                    string UNITCLASS_C, 
                    global::System.Nullable<byte> Use_Level, 
                    global::System.Nullable<byte> Eqip_Position, 
                    string Eqip_Position_, 
                    string EQIPPOSITION_C, 
                    global::System.Nullable<byte> Item_Grade, 
                    string Item_Grade_, 
                    string ITEMGRADE_C, 
                    global::System.Nullable<int> BASE_HP, 
                    global::System.Nullable<int> ATK_PHYSIC, 
                    global::System.Nullable<int> ATK_MAGIC, 
                    global::System.Nullable<int> DEF_PHYSIC, 
                    global::System.Nullable<int> DEF_MAGIC, 
                    global::System.Nullable<int> SA_NUM, 
                    global::System.Nullable<int> SA_01, 
                    global::System.Nullable<int> SA_02, 
                    global::System.Nullable<int> SA_03, 
                    global::System.Nullable<int> SA_04, 
                    global::System.Nullable<int> SA_05, 
                    global::System.Nullable<int> SA_06, 
                    global::System.Nullable<int> SA_07, 
                    global::System.Nullable<int> SA_08, 
                    global::System.Nullable<int> SA_09, 
                    global::System.Nullable<int> SA_10, 
                    global::System.Nullable<int> SO_01, 
                    global::System.Nullable<int> SO_02, 
                    global::System.Nullable<int> SO_03, 
                    global::System.Nullable<int> SO_04, 
                    global::System.Nullable<int> SO_05, 
                    global::System.Nullable<int> SO_06, 
                    global::System.Nullable<int> SO_07, 
                    global::System.Nullable<int> SO_08, 
                    global::System.Nullable<int> SO_09, 
                    global::System.Nullable<byte> COOL_TIME, 
                    global::System.Nullable<int> SET_ID, 
                    global::System.Nullable<bool> Can_Use_Inventory, 
                    global::System.Nullable<bool> NoEquip, 
                    string SLASH_TRACE_COLOR, 
                    string SLASH_TRACE_TIP_COLOR, 
                    string HYPER_SLASH_TRACE_COLOR, 
                    string HYPER_SLASH_TRACE_TIP_COLOR, 
                    string ELSWORD_ITEM_SCALE_ROTATE, 
                    string AISHA_ITEM_SCALE_ROTATE, 
                    string RENA_ITEM_SCALE_ROTATE, 
                    string RAVEN_ITEM_SCALE_ROTATE, 
                    string EVE_ITEM_SCALE_ROTATE, 
                    string ATTACHED_MESH_NAME1, 
                    string ATTACHED_MESH_BONE_NAME1, 
                    string ATTACHED_MESH_NAME2, 
                    string ATTACHED_MESH_BONE_NAME2, 
                    string ATTACHED_MESH_NAME3, 
                    string ATTACHED_MESH_BONE_NAME3, 
                    string ATTACHED_MESH_NAME4, 
                    string ATTACHED_MESH_BONE_NAME4, 
                    string ATTACHED_MESH_NAME5, 
                    string ATTACHED_MESH_BONE_NAME5, 
                    string Model_Name1, 
                    string Attach_FrameName1, 
                    string ATTACHED_PARTICLE_NAME1, 
                    string ATTACHED_PARTICLE_BONE_NAME1, 
                    string ATTACHED_PARTICLE_NAME2, 
                    string ATTACHED_PARTICLE_BONE_NAME2, 
                    System.DateTime Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID));
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Name));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Description));
            }
            if ((Description_In_Shop == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Description_In_Shop));
            }
            if ((Model_Name == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Model_Name));
            }
            if ((Texture_Change_XET_Name == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Texture_Change_XET_Name));
            }
            if ((ELSWORD_MODEL_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ELSWORD_MODEL_NAME));
            }
            if ((ELSWORD_XET_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ELSWORD_XET_NAME));
            }
            if ((AISHA_MODEL_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(AISHA_MODEL_NAME));
            }
            if ((AISHA_XET_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(AISHA_XET_NAME));
            }
            if ((RENA_MODEL_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(RENA_MODEL_NAME));
            }
            if ((RENA_XET_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(RENA_XET_NAME));
            }
            if ((RAVEN_MODEL_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(RAVEN_MODEL_NAME));
            }
            if ((RAVEN_XET_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(RAVEN_XET_NAME));
            }
            if ((EVE_MODEL_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(EVE_MODEL_NAME));
            }
            if ((EVE_XET_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(EVE_XET_NAME));
            }
            if ((Anim_XET_Name == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Anim_XET_Name));
            }
            if ((Anim_Name == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Anim_Name));
            }
            if ((Shop_Image == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Shop_Image));
            }
            if ((Drop_Viewer == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Drop_Viewer));
            }
            if ((Item_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((byte)(Item_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Item_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Item_Type_));
            }
            if ((ITEMTYPE_C == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(ITEMTYPE_C));
            }
            if ((Fashion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(Fashion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Vested.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(Vested.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Can_Enchant.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(Can_Enchant.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Use_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(Use_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Use_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(Use_Type_));
            }
            if ((USETYPE_C == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(USETYPE_C));
            }
            if ((Attach_FrameName == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Attach_FrameName));
            }
            if ((FO_Elsword_X.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((double)(FO_Elsword_X.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((FO_Elsword_Y.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((double)(FO_Elsword_Y.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((FO_Elsword_Z.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((double)(FO_Elsword_Z.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((FO_Lena_X.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((double)(FO_Lena_X.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((FO_Lena_Y.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((double)(FO_Lena_Y.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((FO_Lena_Z.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((double)(FO_Lena_Z.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((FO_Aisha_X.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((double)(FO_Aisha_X.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((FO_Aisha_Y.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((double)(FO_Aisha_Y.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((FO_Aisha_Z.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((double)(FO_Aisha_Z.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((FO_Raven_X.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((double)(FO_Raven_X.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((FO_Raven_Y.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((double)(FO_Raven_Y.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((FO_Raven_Z.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((double)(FO_Raven_Z.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((FO_Eve_X.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((double)(FO_Eve_X.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((FO_Eve_Y.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((double)(FO_Eve_Y.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((FO_Eve_Z.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((double)(FO_Eve_Z.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Can_HyperMode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(Can_HyperMode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Period_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((byte)(Period_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Period_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(Period_Type_));
            }
            if ((PERIODTYPE_C == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(PERIODTYPE_C));
            }
            if ((Endurance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((int)(Endurance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((EnduranceDamageMin.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((byte)(EnduranceDamageMin.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((EnduranceDamageMax.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((byte)(EnduranceDamageMax.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Repair_ED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((double)(Repair_ED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Repair_VP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((double)(Repair_VP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((int)(Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Price_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((byte)(Price_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Price_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(Price_Type_));
            }
            if ((PRICETYPE_C == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(PRICETYPE_C));
            }
            if ((Price == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(Price));
            }
            if ((Price_PvP_Point.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((int)(Price_PvP_Point.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Use_Condition.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((byte)(Use_Condition.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Use_Condition_ == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(Use_Condition_));
            }
            if ((USECONDITION_C == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(USECONDITION_C));
            }
            if ((Unit_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((byte)(Unit_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Unit_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(Unit_Type_));
            }
            if ((UNITTYPE_C == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(UNITTYPE_C));
            }
            if ((Unit_Class.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((byte)(Unit_Class.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Unit_Class_ == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(Unit_Class_));
            }
            if ((UNITCLASS_C == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(UNITCLASS_C));
            }
            if ((Use_Level.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((byte)(Use_Level.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Eqip_Position.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((byte)(Eqip_Position.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Eqip_Position_ == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(Eqip_Position_));
            }
            if ((EQIPPOSITION_C == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(EQIPPOSITION_C));
            }
            if ((Item_Grade.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((byte)(Item_Grade.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Item_Grade_ == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(Item_Grade_));
            }
            if ((ITEMGRADE_C == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(ITEMGRADE_C));
            }
            if ((BASE_HP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((int)(BASE_HP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((ATK_PHYSIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((int)(ATK_PHYSIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((ATK_MAGIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((int)(ATK_MAGIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((DEF_PHYSIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((int)(DEF_PHYSIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((DEF_MAGIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[81].Value = ((int)(DEF_MAGIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((SA_NUM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[82].Value = ((int)(SA_NUM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((SA_01.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[83].Value = ((int)(SA_01.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((SA_02.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[84].Value = ((int)(SA_02.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((SA_03.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((int)(SA_03.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((SA_04.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[86].Value = ((int)(SA_04.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((SA_05.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[87].Value = ((int)(SA_05.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((SA_06.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[88].Value = ((int)(SA_06.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((SA_07.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[89].Value = ((int)(SA_07.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((SA_08.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[90].Value = ((int)(SA_08.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((SA_09.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[91].Value = ((int)(SA_09.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((SA_10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[92].Value = ((int)(SA_10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((SO_01.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[93].Value = ((int)(SO_01.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((SO_02.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[94].Value = ((int)(SO_02.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((SO_03.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[95].Value = ((int)(SO_03.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((SO_04.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[96].Value = ((int)(SO_04.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((SO_05.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[97].Value = ((int)(SO_05.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((SO_06.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[98].Value = ((int)(SO_06.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((SO_07.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[99].Value = ((int)(SO_07.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((SO_08.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[100].Value = ((int)(SO_08.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((SO_09.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[101].Value = ((int)(SO_09.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((COOL_TIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[102].Value = ((byte)(COOL_TIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((SET_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[103].Value = ((int)(SET_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Can_Use_Inventory.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[104].Value = ((bool)(Can_Use_Inventory.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((NoEquip.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[105].Value = ((bool)(NoEquip.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((SLASH_TRACE_COLOR == null)) {
                this.Adapter.InsertCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[106].Value = ((string)(SLASH_TRACE_COLOR));
            }
            if ((SLASH_TRACE_TIP_COLOR == null)) {
                this.Adapter.InsertCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[107].Value = ((string)(SLASH_TRACE_TIP_COLOR));
            }
            if ((HYPER_SLASH_TRACE_COLOR == null)) {
                this.Adapter.InsertCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[108].Value = ((string)(HYPER_SLASH_TRACE_COLOR));
            }
            if ((HYPER_SLASH_TRACE_TIP_COLOR == null)) {
                this.Adapter.InsertCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[109].Value = ((string)(HYPER_SLASH_TRACE_TIP_COLOR));
            }
            if ((ELSWORD_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.InsertCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[110].Value = ((string)(ELSWORD_ITEM_SCALE_ROTATE));
            }
            if ((AISHA_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.InsertCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[111].Value = ((string)(AISHA_ITEM_SCALE_ROTATE));
            }
            if ((RENA_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.InsertCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[112].Value = ((string)(RENA_ITEM_SCALE_ROTATE));
            }
            if ((RAVEN_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.InsertCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[113].Value = ((string)(RAVEN_ITEM_SCALE_ROTATE));
            }
            if ((EVE_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.InsertCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[114].Value = ((string)(EVE_ITEM_SCALE_ROTATE));
            }
            if ((ATTACHED_MESH_NAME1 == null)) {
                this.Adapter.InsertCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[115].Value = ((string)(ATTACHED_MESH_NAME1));
            }
            if ((ATTACHED_MESH_BONE_NAME1 == null)) {
                this.Adapter.InsertCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[116].Value = ((string)(ATTACHED_MESH_BONE_NAME1));
            }
            if ((ATTACHED_MESH_NAME2 == null)) {
                this.Adapter.InsertCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[117].Value = ((string)(ATTACHED_MESH_NAME2));
            }
            if ((ATTACHED_MESH_BONE_NAME2 == null)) {
                this.Adapter.InsertCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[118].Value = ((string)(ATTACHED_MESH_BONE_NAME2));
            }
            if ((ATTACHED_MESH_NAME3 == null)) {
                this.Adapter.InsertCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[119].Value = ((string)(ATTACHED_MESH_NAME3));
            }
            if ((ATTACHED_MESH_BONE_NAME3 == null)) {
                this.Adapter.InsertCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[120].Value = ((string)(ATTACHED_MESH_BONE_NAME3));
            }
            if ((ATTACHED_MESH_NAME4 == null)) {
                this.Adapter.InsertCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[121].Value = ((string)(ATTACHED_MESH_NAME4));
            }
            if ((ATTACHED_MESH_BONE_NAME4 == null)) {
                this.Adapter.InsertCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[122].Value = ((string)(ATTACHED_MESH_BONE_NAME4));
            }
            if ((ATTACHED_MESH_NAME5 == null)) {
                this.Adapter.InsertCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[123].Value = ((string)(ATTACHED_MESH_NAME5));
            }
            if ((ATTACHED_MESH_BONE_NAME5 == null)) {
                this.Adapter.InsertCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[124].Value = ((string)(ATTACHED_MESH_BONE_NAME5));
            }
            if ((Model_Name1 == null)) {
                this.Adapter.InsertCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[125].Value = ((string)(Model_Name1));
            }
            if ((Attach_FrameName1 == null)) {
                this.Adapter.InsertCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[126].Value = ((string)(Attach_FrameName1));
            }
            if ((ATTACHED_PARTICLE_NAME1 == null)) {
                this.Adapter.InsertCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[127].Value = ((string)(ATTACHED_PARTICLE_NAME1));
            }
            if ((ATTACHED_PARTICLE_BONE_NAME1 == null)) {
                this.Adapter.InsertCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[128].Value = ((string)(ATTACHED_PARTICLE_BONE_NAME1));
            }
            if ((ATTACHED_PARTICLE_NAME2 == null)) {
                this.Adapter.InsertCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[129].Value = ((string)(ATTACHED_PARTICLE_NAME2));
            }
            if ((ATTACHED_PARTICLE_BONE_NAME2 == null)) {
                this.Adapter.InsertCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[130].Value = ((string)(ATTACHED_PARTICLE_BONE_NAME2));
            }
            this.Adapter.InsertCommand.Parameters[131].Value = ((System.DateTime)(Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IndexKey, 
                    int ID, 
                    string Name, 
                    string Description, 
                    string Description_In_Shop, 
                    string Model_Name, 
                    string Texture_Change_XET_Name, 
                    string ELSWORD_MODEL_NAME, 
                    string ELSWORD_XET_NAME, 
                    string AISHA_MODEL_NAME, 
                    string AISHA_XET_NAME, 
                    string RENA_MODEL_NAME, 
                    string RENA_XET_NAME, 
                    string RAVEN_MODEL_NAME, 
                    string RAVEN_XET_NAME, 
                    string EVE_MODEL_NAME, 
                    string EVE_XET_NAME, 
                    string Anim_XET_Name, 
                    string Anim_Name, 
                    string Shop_Image, 
                    string Drop_Viewer, 
                    global::System.Nullable<byte> Item_Type, 
                    string Item_Type_, 
                    string ITEMTYPE_C, 
                    global::System.Nullable<bool> Fashion, 
                    global::System.Nullable<bool> Vested, 
                    global::System.Nullable<bool> Can_Enchant, 
                    global::System.Nullable<double> Use_Type, 
                    string Use_Type_, 
                    string USETYPE_C, 
                    string Attach_FrameName, 
                    global::System.Nullable<double> FO_Elsword_X, 
                    global::System.Nullable<double> FO_Elsword_Y, 
                    global::System.Nullable<double> FO_Elsword_Z, 
                    global::System.Nullable<double> FO_Lena_X, 
                    global::System.Nullable<double> FO_Lena_Y, 
                    global::System.Nullable<double> FO_Lena_Z, 
                    global::System.Nullable<double> FO_Aisha_X, 
                    global::System.Nullable<double> FO_Aisha_Y, 
                    global::System.Nullable<double> FO_Aisha_Z, 
                    global::System.Nullable<double> FO_Raven_X, 
                    global::System.Nullable<double> FO_Raven_Y, 
                    global::System.Nullable<double> FO_Raven_Z, 
                    global::System.Nullable<double> FO_Eve_X, 
                    global::System.Nullable<double> FO_Eve_Y, 
                    global::System.Nullable<double> FO_Eve_Z, 
                    global::System.Nullable<bool> Can_HyperMode, 
                    global::System.Nullable<byte> Period_Type, 
                    string Period_Type_, 
                    string PERIODTYPE_C, 
                    global::System.Nullable<int> Endurance, 
                    global::System.Nullable<byte> EnduranceDamageMin, 
                    global::System.Nullable<byte> EnduranceDamageMax, 
                    global::System.Nullable<double> Repair_ED, 
                    global::System.Nullable<double> Repair_VP, 
                    global::System.Nullable<int> Quantity, 
                    global::System.Nullable<byte> Price_Type, 
                    string Price_Type_, 
                    string PRICETYPE_C, 
                    string Price, 
                    global::System.Nullable<int> Price_PvP_Point, 
                    global::System.Nullable<byte> Use_Condition, 
                    string Use_Condition_, 
                    string USECONDITION_C, 
                    global::System.Nullable<byte> Unit_Type, 
                    string Unit_Type_, 
                    string UNITTYPE_C, 
                    global::System.Nullable<byte> Unit_Class, 
                    string Unit_Class_, 
                    string UNITCLASS_C, 
                    global::System.Nullable<byte> Use_Level, 
                    global::System.Nullable<byte> Eqip_Position, 
                    string Eqip_Position_, 
                    string EQIPPOSITION_C, 
                    global::System.Nullable<byte> Item_Grade, 
                    string Item_Grade_, 
                    string ITEMGRADE_C, 
                    global::System.Nullable<int> BASE_HP, 
                    global::System.Nullable<int> ATK_PHYSIC, 
                    global::System.Nullable<int> ATK_MAGIC, 
                    global::System.Nullable<int> DEF_PHYSIC, 
                    global::System.Nullable<int> DEF_MAGIC, 
                    global::System.Nullable<int> SA_NUM, 
                    global::System.Nullable<int> SA_01, 
                    global::System.Nullable<int> SA_02, 
                    global::System.Nullable<int> SA_03, 
                    global::System.Nullable<int> SA_04, 
                    global::System.Nullable<int> SA_05, 
                    global::System.Nullable<int> SA_06, 
                    global::System.Nullable<int> SA_07, 
                    global::System.Nullable<int> SA_08, 
                    global::System.Nullable<int> SA_09, 
                    global::System.Nullable<int> SA_10, 
                    global::System.Nullable<int> SO_01, 
                    global::System.Nullable<int> SO_02, 
                    global::System.Nullable<int> SO_03, 
                    global::System.Nullable<int> SO_04, 
                    global::System.Nullable<int> SO_05, 
                    global::System.Nullable<int> SO_06, 
                    global::System.Nullable<int> SO_07, 
                    global::System.Nullable<int> SO_08, 
                    global::System.Nullable<int> SO_09, 
                    global::System.Nullable<byte> COOL_TIME, 
                    global::System.Nullable<int> SET_ID, 
                    global::System.Nullable<bool> Can_Use_Inventory, 
                    global::System.Nullable<bool> NoEquip, 
                    string SLASH_TRACE_COLOR, 
                    string SLASH_TRACE_TIP_COLOR, 
                    string HYPER_SLASH_TRACE_COLOR, 
                    string HYPER_SLASH_TRACE_TIP_COLOR, 
                    string ELSWORD_ITEM_SCALE_ROTATE, 
                    string AISHA_ITEM_SCALE_ROTATE, 
                    string RENA_ITEM_SCALE_ROTATE, 
                    string RAVEN_ITEM_SCALE_ROTATE, 
                    string EVE_ITEM_SCALE_ROTATE, 
                    string ATTACHED_MESH_NAME1, 
                    string ATTACHED_MESH_BONE_NAME1, 
                    string ATTACHED_MESH_NAME2, 
                    string ATTACHED_MESH_BONE_NAME2, 
                    string ATTACHED_MESH_NAME3, 
                    string ATTACHED_MESH_BONE_NAME3, 
                    string ATTACHED_MESH_NAME4, 
                    string ATTACHED_MESH_BONE_NAME4, 
                    string ATTACHED_MESH_NAME5, 
                    string ATTACHED_MESH_BONE_NAME5, 
                    string Model_Name1, 
                    string Attach_FrameName1, 
                    string ATTACHED_PARTICLE_NAME1, 
                    string ATTACHED_PARTICLE_BONE_NAME1, 
                    string ATTACHED_PARTICLE_NAME2, 
                    string ATTACHED_PARTICLE_BONE_NAME2, 
                    System.DateTime Regdate, 
                    int Original_IndexKey, 
                    int Original_ID, 
                    string Original_Name, 
                    string Original_Description, 
                    string Original_Description_In_Shop, 
                    string Original_Model_Name, 
                    string Original_Texture_Change_XET_Name, 
                    string Original_ELSWORD_MODEL_NAME, 
                    string Original_ELSWORD_XET_NAME, 
                    string Original_AISHA_MODEL_NAME, 
                    string Original_AISHA_XET_NAME, 
                    string Original_RENA_MODEL_NAME, 
                    string Original_RENA_XET_NAME, 
                    string Original_RAVEN_MODEL_NAME, 
                    string Original_RAVEN_XET_NAME, 
                    string Original_EVE_MODEL_NAME, 
                    string Original_EVE_XET_NAME, 
                    string Original_Anim_XET_Name, 
                    string Original_Anim_Name, 
                    string Original_Shop_Image, 
                    string Original_Drop_Viewer, 
                    global::System.Nullable<byte> Original_Item_Type, 
                    string Original_Item_Type_, 
                    string Original_ITEMTYPE_C, 
                    global::System.Nullable<bool> Original_Fashion, 
                    global::System.Nullable<bool> Original_Vested, 
                    global::System.Nullable<bool> Original_Can_Enchant, 
                    global::System.Nullable<double> Original_Use_Type, 
                    string Original_Use_Type_, 
                    string Original_USETYPE_C, 
                    string Original_Attach_FrameName, 
                    global::System.Nullable<double> Original_FO_Elsword_X, 
                    global::System.Nullable<double> Original_FO_Elsword_Y, 
                    global::System.Nullable<double> Original_FO_Elsword_Z, 
                    global::System.Nullable<double> Original_FO_Lena_X, 
                    global::System.Nullable<double> Original_FO_Lena_Y, 
                    global::System.Nullable<double> Original_FO_Lena_Z, 
                    global::System.Nullable<double> Original_FO_Aisha_X, 
                    global::System.Nullable<double> Original_FO_Aisha_Y, 
                    global::System.Nullable<double> Original_FO_Aisha_Z, 
                    global::System.Nullable<double> Original_FO_Raven_X, 
                    global::System.Nullable<double> Original_FO_Raven_Y, 
                    global::System.Nullable<double> Original_FO_Raven_Z, 
                    global::System.Nullable<double> Original_FO_Eve_X, 
                    global::System.Nullable<double> Original_FO_Eve_Y, 
                    global::System.Nullable<double> Original_FO_Eve_Z, 
                    global::System.Nullable<bool> Original_Can_HyperMode, 
                    global::System.Nullable<byte> Original_Period_Type, 
                    string Original_Period_Type_, 
                    string Original_PERIODTYPE_C, 
                    global::System.Nullable<int> Original_Endurance, 
                    global::System.Nullable<byte> Original_EnduranceDamageMin, 
                    global::System.Nullable<byte> Original_EnduranceDamageMax, 
                    global::System.Nullable<double> Original_Repair_ED, 
                    global::System.Nullable<double> Original_Repair_VP, 
                    global::System.Nullable<int> Original_Quantity, 
                    global::System.Nullable<byte> Original_Price_Type, 
                    string Original_Price_Type_, 
                    string Original_PRICETYPE_C, 
                    string Original_Price, 
                    global::System.Nullable<int> Original_Price_PvP_Point, 
                    global::System.Nullable<byte> Original_Use_Condition, 
                    string Original_Use_Condition_, 
                    string Original_USECONDITION_C, 
                    global::System.Nullable<byte> Original_Unit_Type, 
                    string Original_Unit_Type_, 
                    string Original_UNITTYPE_C, 
                    global::System.Nullable<byte> Original_Unit_Class, 
                    string Original_Unit_Class_, 
                    string Original_UNITCLASS_C, 
                    global::System.Nullable<byte> Original_Use_Level, 
                    global::System.Nullable<byte> Original_Eqip_Position, 
                    string Original_Eqip_Position_, 
                    string Original_EQIPPOSITION_C, 
                    global::System.Nullable<byte> Original_Item_Grade, 
                    string Original_Item_Grade_, 
                    string Original_ITEMGRADE_C, 
                    global::System.Nullable<int> Original_BASE_HP, 
                    global::System.Nullable<int> Original_ATK_PHYSIC, 
                    global::System.Nullable<int> Original_ATK_MAGIC, 
                    global::System.Nullable<int> Original_DEF_PHYSIC, 
                    global::System.Nullable<int> Original_DEF_MAGIC, 
                    global::System.Nullable<int> Original_SA_NUM, 
                    global::System.Nullable<int> Original_SA_01, 
                    global::System.Nullable<int> Original_SA_02, 
                    global::System.Nullable<int> Original_SA_03, 
                    global::System.Nullable<int> Original_SA_04, 
                    global::System.Nullable<int> Original_SA_05, 
                    global::System.Nullable<int> Original_SA_06, 
                    global::System.Nullable<int> Original_SA_07, 
                    global::System.Nullable<int> Original_SA_08, 
                    global::System.Nullable<int> Original_SA_09, 
                    global::System.Nullable<int> Original_SA_10, 
                    global::System.Nullable<int> Original_SO_01, 
                    global::System.Nullable<int> Original_SO_02, 
                    global::System.Nullable<int> Original_SO_03, 
                    global::System.Nullable<int> Original_SO_04, 
                    global::System.Nullable<int> Original_SO_05, 
                    global::System.Nullable<int> Original_SO_06, 
                    global::System.Nullable<int> Original_SO_07, 
                    global::System.Nullable<int> Original_SO_08, 
                    global::System.Nullable<int> Original_SO_09, 
                    global::System.Nullable<byte> Original_COOL_TIME, 
                    global::System.Nullable<int> Original_SET_ID, 
                    global::System.Nullable<bool> Original_Can_Use_Inventory, 
                    global::System.Nullable<bool> Original_NoEquip, 
                    string Original_SLASH_TRACE_COLOR, 
                    string Original_SLASH_TRACE_TIP_COLOR, 
                    string Original_HYPER_SLASH_TRACE_COLOR, 
                    string Original_HYPER_SLASH_TRACE_TIP_COLOR, 
                    string Original_ELSWORD_ITEM_SCALE_ROTATE, 
                    string Original_AISHA_ITEM_SCALE_ROTATE, 
                    string Original_RENA_ITEM_SCALE_ROTATE, 
                    string Original_RAVEN_ITEM_SCALE_ROTATE, 
                    string Original_EVE_ITEM_SCALE_ROTATE, 
                    string Original_ATTACHED_MESH_NAME1, 
                    string Original_ATTACHED_MESH_BONE_NAME1, 
                    string Original_ATTACHED_MESH_NAME2, 
                    string Original_ATTACHED_MESH_BONE_NAME2, 
                    string Original_ATTACHED_MESH_NAME3, 
                    string Original_ATTACHED_MESH_BONE_NAME3, 
                    string Original_ATTACHED_MESH_NAME4, 
                    string Original_ATTACHED_MESH_BONE_NAME4, 
                    string Original_ATTACHED_MESH_NAME5, 
                    string Original_ATTACHED_MESH_BONE_NAME5, 
                    string Original_Model_Name1, 
                    string Original_Attach_FrameName1, 
                    string Original_ATTACHED_PARTICLE_NAME1, 
                    string Original_ATTACHED_PARTICLE_BONE_NAME1, 
                    string Original_ATTACHED_PARTICLE_NAME2, 
                    string Original_ATTACHED_PARTICLE_BONE_NAME2, 
                    System.DateTime Original_Regdate) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID));
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Name));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Description));
            }
            if ((Description_In_Shop == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Description_In_Shop));
            }
            if ((Model_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Model_Name));
            }
            if ((Texture_Change_XET_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Texture_Change_XET_Name));
            }
            if ((ELSWORD_MODEL_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ELSWORD_MODEL_NAME));
            }
            if ((ELSWORD_XET_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ELSWORD_XET_NAME));
            }
            if ((AISHA_MODEL_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(AISHA_MODEL_NAME));
            }
            if ((AISHA_XET_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(AISHA_XET_NAME));
            }
            if ((RENA_MODEL_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(RENA_MODEL_NAME));
            }
            if ((RENA_XET_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(RENA_XET_NAME));
            }
            if ((RAVEN_MODEL_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(RAVEN_MODEL_NAME));
            }
            if ((RAVEN_XET_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(RAVEN_XET_NAME));
            }
            if ((EVE_MODEL_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(EVE_MODEL_NAME));
            }
            if ((EVE_XET_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(EVE_XET_NAME));
            }
            if ((Anim_XET_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Anim_XET_Name));
            }
            if ((Anim_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Anim_Name));
            }
            if ((Shop_Image == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Shop_Image));
            }
            if ((Drop_Viewer == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Drop_Viewer));
            }
            if ((Item_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((byte)(Item_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Item_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Item_Type_));
            }
            if ((ITEMTYPE_C == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(ITEMTYPE_C));
            }
            if ((Fashion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(Fashion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Vested.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(Vested.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Can_Enchant.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(Can_Enchant.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Use_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Use_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Use_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Use_Type_));
            }
            if ((USETYPE_C == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(USETYPE_C));
            }
            if ((Attach_FrameName == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Attach_FrameName));
            }
            if ((FO_Elsword_X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(FO_Elsword_X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((FO_Elsword_Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(FO_Elsword_Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((FO_Elsword_Z.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(FO_Elsword_Z.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((FO_Lena_X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(FO_Lena_X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((FO_Lena_Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(FO_Lena_Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((FO_Lena_Z.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(FO_Lena_Z.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((FO_Aisha_X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(FO_Aisha_X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((FO_Aisha_Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(FO_Aisha_Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((FO_Aisha_Z.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(FO_Aisha_Z.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((FO_Raven_X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(FO_Raven_X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((FO_Raven_Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(FO_Raven_Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((FO_Raven_Z.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(FO_Raven_Z.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((FO_Eve_X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(FO_Eve_X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((FO_Eve_Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(FO_Eve_Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((FO_Eve_Z.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(FO_Eve_Z.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Can_HyperMode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(Can_HyperMode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Period_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((byte)(Period_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Period_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Period_Type_));
            }
            if ((PERIODTYPE_C == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(PERIODTYPE_C));
            }
            if ((Endurance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Endurance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((EnduranceDamageMin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((byte)(EnduranceDamageMin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((EnduranceDamageMax.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((byte)(EnduranceDamageMax.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Repair_ED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((double)(Repair_ED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Repair_VP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(Repair_VP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Price_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((byte)(Price_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Price_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Price_Type_));
            }
            if ((PRICETYPE_C == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(PRICETYPE_C));
            }
            if ((Price == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Price));
            }
            if ((Price_PvP_Point.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Price_PvP_Point.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Use_Condition.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((byte)(Use_Condition.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Use_Condition_ == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Use_Condition_));
            }
            if ((USECONDITION_C == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(USECONDITION_C));
            }
            if ((Unit_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((byte)(Unit_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Unit_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Unit_Type_));
            }
            if ((UNITTYPE_C == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(UNITTYPE_C));
            }
            if ((Unit_Class.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((byte)(Unit_Class.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Unit_Class_ == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Unit_Class_));
            }
            if ((UNITCLASS_C == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(UNITCLASS_C));
            }
            if ((Use_Level.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((byte)(Use_Level.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Eqip_Position.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((byte)(Eqip_Position.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Eqip_Position_ == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Eqip_Position_));
            }
            if ((EQIPPOSITION_C == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(EQIPPOSITION_C));
            }
            if ((Item_Grade.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((byte)(Item_Grade.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Item_Grade_ == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Item_Grade_));
            }
            if ((ITEMGRADE_C == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(ITEMGRADE_C));
            }
            if ((BASE_HP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((int)(BASE_HP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((ATK_PHYSIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(ATK_PHYSIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((ATK_MAGIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(ATK_MAGIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((DEF_PHYSIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(DEF_PHYSIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((DEF_MAGIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(DEF_MAGIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((SA_NUM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((int)(SA_NUM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((SA_01.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((int)(SA_01.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((SA_02.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((int)(SA_02.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((SA_03.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((int)(SA_03.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((SA_04.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(SA_04.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((SA_05.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((int)(SA_05.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((SA_06.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((int)(SA_06.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((SA_07.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((int)(SA_07.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((SA_08.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(SA_08.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((SA_09.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(SA_09.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((SA_10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((int)(SA_10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((SO_01.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((int)(SO_01.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((SO_02.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((int)(SO_02.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((SO_03.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((int)(SO_03.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((SO_04.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((int)(SO_04.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((SO_05.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((int)(SO_05.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((SO_06.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((int)(SO_06.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((SO_07.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((int)(SO_07.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((SO_08.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((int)(SO_08.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((SO_09.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(SO_09.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((COOL_TIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((byte)(COOL_TIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((SET_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((int)(SET_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Can_Use_Inventory.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((bool)(Can_Use_Inventory.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((NoEquip.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((bool)(NoEquip.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((SLASH_TRACE_COLOR == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(SLASH_TRACE_COLOR));
            }
            if ((SLASH_TRACE_TIP_COLOR == null)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(SLASH_TRACE_TIP_COLOR));
            }
            if ((HYPER_SLASH_TRACE_COLOR == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(HYPER_SLASH_TRACE_COLOR));
            }
            if ((HYPER_SLASH_TRACE_TIP_COLOR == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(HYPER_SLASH_TRACE_TIP_COLOR));
            }
            if ((ELSWORD_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(ELSWORD_ITEM_SCALE_ROTATE));
            }
            if ((AISHA_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((string)(AISHA_ITEM_SCALE_ROTATE));
            }
            if ((RENA_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(RENA_ITEM_SCALE_ROTATE));
            }
            if ((RAVEN_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(RAVEN_ITEM_SCALE_ROTATE));
            }
            if ((EVE_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((string)(EVE_ITEM_SCALE_ROTATE));
            }
            if ((ATTACHED_MESH_NAME1 == null)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(ATTACHED_MESH_NAME1));
            }
            if ((ATTACHED_MESH_BONE_NAME1 == null)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((string)(ATTACHED_MESH_BONE_NAME1));
            }
            if ((ATTACHED_MESH_NAME2 == null)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((string)(ATTACHED_MESH_NAME2));
            }
            if ((ATTACHED_MESH_BONE_NAME2 == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((string)(ATTACHED_MESH_BONE_NAME2));
            }
            if ((ATTACHED_MESH_NAME3 == null)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(ATTACHED_MESH_NAME3));
            }
            if ((ATTACHED_MESH_BONE_NAME3 == null)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((string)(ATTACHED_MESH_BONE_NAME3));
            }
            if ((ATTACHED_MESH_NAME4 == null)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(ATTACHED_MESH_NAME4));
            }
            if ((ATTACHED_MESH_BONE_NAME4 == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((string)(ATTACHED_MESH_BONE_NAME4));
            }
            if ((ATTACHED_MESH_NAME5 == null)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(ATTACHED_MESH_NAME5));
            }
            if ((ATTACHED_MESH_BONE_NAME5 == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(ATTACHED_MESH_BONE_NAME5));
            }
            if ((Model_Name1 == null)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Model_Name1));
            }
            if ((Attach_FrameName1 == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((string)(Attach_FrameName1));
            }
            if ((ATTACHED_PARTICLE_NAME1 == null)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(ATTACHED_PARTICLE_NAME1));
            }
            if ((ATTACHED_PARTICLE_BONE_NAME1 == null)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((string)(ATTACHED_PARTICLE_BONE_NAME1));
            }
            if ((ATTACHED_PARTICLE_NAME2 == null)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(ATTACHED_PARTICLE_NAME2));
            }
            if ((ATTACHED_PARTICLE_BONE_NAME2 == null)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((string)(ATTACHED_PARTICLE_BONE_NAME2));
            }
            this.Adapter.UpdateCommand.Parameters[131].Value = ((System.DateTime)(Regdate));
            this.Adapter.UpdateCommand.Parameters[132].Value = ((int)(Original_IndexKey));
            this.Adapter.UpdateCommand.Parameters[133].Value = ((int)(Original_ID));
            if ((Original_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(Original_Name));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((string)(Original_Description));
            }
            if ((Original_Description_In_Shop == null)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((string)(Original_Description_In_Shop));
            }
            if ((Original_Model_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((string)(Original_Model_Name));
            }
            if ((Original_Texture_Change_XET_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((string)(Original_Texture_Change_XET_Name));
            }
            if ((Original_ELSWORD_MODEL_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((string)(Original_ELSWORD_MODEL_NAME));
            }
            if ((Original_ELSWORD_XET_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((string)(Original_ELSWORD_XET_NAME));
            }
            if ((Original_AISHA_MODEL_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((string)(Original_AISHA_MODEL_NAME));
            }
            if ((Original_AISHA_XET_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((string)(Original_AISHA_XET_NAME));
            }
            if ((Original_RENA_MODEL_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((string)(Original_RENA_MODEL_NAME));
            }
            if ((Original_RENA_XET_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((string)(Original_RENA_XET_NAME));
            }
            if ((Original_RAVEN_MODEL_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((string)(Original_RAVEN_MODEL_NAME));
            }
            if ((Original_RAVEN_XET_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((string)(Original_RAVEN_XET_NAME));
            }
            if ((Original_EVE_MODEL_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((string)(Original_EVE_MODEL_NAME));
            }
            if ((Original_EVE_XET_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((string)(Original_EVE_XET_NAME));
            }
            if ((Original_Anim_XET_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((string)(Original_Anim_XET_Name));
            }
            if ((Original_Anim_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((string)(Original_Anim_Name));
            }
            if ((Original_Shop_Image == null)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((string)(Original_Shop_Image));
            }
            if ((Original_Drop_Viewer == null)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((string)(Original_Drop_Viewer));
            }
            if ((Original_Item_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((byte)(Original_Item_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            if ((Original_Item_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((string)(Original_Item_Type_));
            }
            if ((Original_ITEMTYPE_C == null)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((string)(Original_ITEMTYPE_C));
            }
            if ((Original_Fashion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((bool)(Original_Fashion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            if ((Original_Vested.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((bool)(Original_Vested.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((Original_Can_Enchant.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((bool)(Original_Can_Enchant.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            if ((Original_Use_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((double)(Original_Use_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            if ((Original_Use_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((string)(Original_Use_Type_));
            }
            if ((Original_USETYPE_C == null)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((string)(Original_USETYPE_C));
            }
            if ((Original_Attach_FrameName == null)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((string)(Original_Attach_FrameName));
            }
            if ((Original_FO_Elsword_X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((double)(Original_FO_Elsword_X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Elsword_Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((double)(Original_FO_Elsword_Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Elsword_Z.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((double)(Original_FO_Elsword_Z.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Lena_X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[199].Value = ((double)(Original_FO_Lena_X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[199].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Lena_Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[201].Value = ((double)(Original_FO_Lena_Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[201].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Lena_Z.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[203].Value = ((double)(Original_FO_Lena_Z.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[203].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Aisha_X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[205].Value = ((double)(Original_FO_Aisha_X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[205].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Aisha_Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[207].Value = ((double)(Original_FO_Aisha_Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[207].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Aisha_Z.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[209].Value = ((double)(Original_FO_Aisha_Z.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[209].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Raven_X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[211].Value = ((double)(Original_FO_Raven_X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[211].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Raven_Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[213].Value = ((double)(Original_FO_Raven_Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[213].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Raven_Z.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[215].Value = ((double)(Original_FO_Raven_Z.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[215].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Eve_X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[217].Value = ((double)(Original_FO_Eve_X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[217].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Eve_Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[219].Value = ((double)(Original_FO_Eve_Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[219].Value = global::System.DBNull.Value;
            }
            if ((Original_FO_Eve_Z.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[221].Value = ((double)(Original_FO_Eve_Z.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[221].Value = global::System.DBNull.Value;
            }
            if ((Original_Can_HyperMode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[223].Value = ((bool)(Original_Can_HyperMode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[223].Value = global::System.DBNull.Value;
            }
            if ((Original_Period_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[225].Value = ((byte)(Original_Period_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[225].Value = global::System.DBNull.Value;
            }
            if ((Original_Period_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[227].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[227].Value = ((string)(Original_Period_Type_));
            }
            if ((Original_PERIODTYPE_C == null)) {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[229].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[229].Value = ((string)(Original_PERIODTYPE_C));
            }
            if ((Original_Endurance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[231].Value = ((int)(Original_Endurance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[231].Value = global::System.DBNull.Value;
            }
            if ((Original_EnduranceDamageMin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[233].Value = ((byte)(Original_EnduranceDamageMin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[233].Value = global::System.DBNull.Value;
            }
            if ((Original_EnduranceDamageMax.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[235].Value = ((byte)(Original_EnduranceDamageMax.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[235].Value = global::System.DBNull.Value;
            }
            if ((Original_Repair_ED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[237].Value = ((double)(Original_Repair_ED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[237].Value = global::System.DBNull.Value;
            }
            if ((Original_Repair_VP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[239].Value = ((double)(Original_Repair_VP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[239].Value = global::System.DBNull.Value;
            }
            if ((Original_Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[241].Value = ((int)(Original_Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[241].Value = global::System.DBNull.Value;
            }
            if ((Original_Price_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[243].Value = ((byte)(Original_Price_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[243].Value = global::System.DBNull.Value;
            }
            if ((Original_Price_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[245].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[245].Value = ((string)(Original_Price_Type_));
            }
            if ((Original_PRICETYPE_C == null)) {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[247].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[247].Value = ((string)(Original_PRICETYPE_C));
            }
            if ((Original_Price == null)) {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[249].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[249].Value = ((string)(Original_Price));
            }
            if ((Original_Price_PvP_Point.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[251].Value = ((int)(Original_Price_PvP_Point.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[251].Value = global::System.DBNull.Value;
            }
            if ((Original_Use_Condition.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[253].Value = ((byte)(Original_Use_Condition.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[253].Value = global::System.DBNull.Value;
            }
            if ((Original_Use_Condition_ == null)) {
                this.Adapter.UpdateCommand.Parameters[254].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[255].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[254].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[255].Value = ((string)(Original_Use_Condition_));
            }
            if ((Original_USECONDITION_C == null)) {
                this.Adapter.UpdateCommand.Parameters[256].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[257].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[256].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[257].Value = ((string)(Original_USECONDITION_C));
            }
            if ((Original_Unit_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[258].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[259].Value = ((byte)(Original_Unit_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[258].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[259].Value = global::System.DBNull.Value;
            }
            if ((Original_Unit_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[261].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[261].Value = ((string)(Original_Unit_Type_));
            }
            if ((Original_UNITTYPE_C == null)) {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[263].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[263].Value = ((string)(Original_UNITTYPE_C));
            }
            if ((Original_Unit_Class.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[265].Value = ((byte)(Original_Unit_Class.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[265].Value = global::System.DBNull.Value;
            }
            if ((Original_Unit_Class_ == null)) {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[267].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[267].Value = ((string)(Original_Unit_Class_));
            }
            if ((Original_UNITCLASS_C == null)) {
                this.Adapter.UpdateCommand.Parameters[268].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[269].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[268].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[269].Value = ((string)(Original_UNITCLASS_C));
            }
            if ((Original_Use_Level.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[270].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[271].Value = ((byte)(Original_Use_Level.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[270].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[271].Value = global::System.DBNull.Value;
            }
            if ((Original_Eqip_Position.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[272].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[273].Value = ((byte)(Original_Eqip_Position.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[272].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[273].Value = global::System.DBNull.Value;
            }
            if ((Original_Eqip_Position_ == null)) {
                this.Adapter.UpdateCommand.Parameters[274].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[275].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[274].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[275].Value = ((string)(Original_Eqip_Position_));
            }
            if ((Original_EQIPPOSITION_C == null)) {
                this.Adapter.UpdateCommand.Parameters[276].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[277].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[276].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[277].Value = ((string)(Original_EQIPPOSITION_C));
            }
            if ((Original_Item_Grade.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[278].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[279].Value = ((byte)(Original_Item_Grade.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[278].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[279].Value = global::System.DBNull.Value;
            }
            if ((Original_Item_Grade_ == null)) {
                this.Adapter.UpdateCommand.Parameters[280].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[281].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[280].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[281].Value = ((string)(Original_Item_Grade_));
            }
            if ((Original_ITEMGRADE_C == null)) {
                this.Adapter.UpdateCommand.Parameters[282].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[283].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[282].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[283].Value = ((string)(Original_ITEMGRADE_C));
            }
            if ((Original_BASE_HP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[284].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[285].Value = ((int)(Original_BASE_HP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[284].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[285].Value = global::System.DBNull.Value;
            }
            if ((Original_ATK_PHYSIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[286].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[287].Value = ((int)(Original_ATK_PHYSIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[286].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[287].Value = global::System.DBNull.Value;
            }
            if ((Original_ATK_MAGIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[288].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[289].Value = ((int)(Original_ATK_MAGIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[288].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[289].Value = global::System.DBNull.Value;
            }
            if ((Original_DEF_PHYSIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[290].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[291].Value = ((int)(Original_DEF_PHYSIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[290].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[291].Value = global::System.DBNull.Value;
            }
            if ((Original_DEF_MAGIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[292].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[293].Value = ((int)(Original_DEF_MAGIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[292].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[293].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_NUM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[294].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[295].Value = ((int)(Original_SA_NUM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[294].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[295].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_01.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[296].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[297].Value = ((int)(Original_SA_01.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[296].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[297].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_02.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[298].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[299].Value = ((int)(Original_SA_02.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[298].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[299].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_03.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[300].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[301].Value = ((int)(Original_SA_03.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[300].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[301].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_04.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[302].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[303].Value = ((int)(Original_SA_04.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[302].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[303].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_05.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[304].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[305].Value = ((int)(Original_SA_05.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[304].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[305].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_06.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[306].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[307].Value = ((int)(Original_SA_06.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[306].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[307].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_07.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[308].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[309].Value = ((int)(Original_SA_07.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[308].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[309].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_08.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[310].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[311].Value = ((int)(Original_SA_08.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[310].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[311].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_09.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[312].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[313].Value = ((int)(Original_SA_09.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[312].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[313].Value = global::System.DBNull.Value;
            }
            if ((Original_SA_10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[314].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[315].Value = ((int)(Original_SA_10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[314].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[315].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_01.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[316].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[317].Value = ((int)(Original_SO_01.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[316].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[317].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_02.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[318].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[319].Value = ((int)(Original_SO_02.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[318].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[319].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_03.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[320].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[321].Value = ((int)(Original_SO_03.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[320].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[321].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_04.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[322].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[323].Value = ((int)(Original_SO_04.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[322].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[323].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_05.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[324].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[325].Value = ((int)(Original_SO_05.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[324].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[325].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_06.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[326].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[327].Value = ((int)(Original_SO_06.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[326].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[327].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_07.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[328].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[329].Value = ((int)(Original_SO_07.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[328].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[329].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_08.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[330].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[331].Value = ((int)(Original_SO_08.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[330].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[331].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_09.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[332].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[333].Value = ((int)(Original_SO_09.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[332].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[333].Value = global::System.DBNull.Value;
            }
            if ((Original_COOL_TIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[334].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[335].Value = ((byte)(Original_COOL_TIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[334].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[335].Value = global::System.DBNull.Value;
            }
            if ((Original_SET_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[336].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[337].Value = ((int)(Original_SET_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[336].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[337].Value = global::System.DBNull.Value;
            }
            if ((Original_Can_Use_Inventory.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[338].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[339].Value = ((bool)(Original_Can_Use_Inventory.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[338].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[339].Value = global::System.DBNull.Value;
            }
            if ((Original_NoEquip.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[340].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[341].Value = ((bool)(Original_NoEquip.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[340].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[341].Value = global::System.DBNull.Value;
            }
            if ((Original_SLASH_TRACE_COLOR == null)) {
                this.Adapter.UpdateCommand.Parameters[342].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[343].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[342].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[343].Value = ((string)(Original_SLASH_TRACE_COLOR));
            }
            if ((Original_SLASH_TRACE_TIP_COLOR == null)) {
                this.Adapter.UpdateCommand.Parameters[344].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[345].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[344].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[345].Value = ((string)(Original_SLASH_TRACE_TIP_COLOR));
            }
            if ((Original_HYPER_SLASH_TRACE_COLOR == null)) {
                this.Adapter.UpdateCommand.Parameters[346].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[347].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[346].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[347].Value = ((string)(Original_HYPER_SLASH_TRACE_COLOR));
            }
            if ((Original_HYPER_SLASH_TRACE_TIP_COLOR == null)) {
                this.Adapter.UpdateCommand.Parameters[348].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[349].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[348].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[349].Value = ((string)(Original_HYPER_SLASH_TRACE_TIP_COLOR));
            }
            if ((Original_ELSWORD_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.UpdateCommand.Parameters[350].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[351].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[350].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[351].Value = ((string)(Original_ELSWORD_ITEM_SCALE_ROTATE));
            }
            if ((Original_AISHA_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.UpdateCommand.Parameters[352].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[353].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[352].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[353].Value = ((string)(Original_AISHA_ITEM_SCALE_ROTATE));
            }
            if ((Original_RENA_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.UpdateCommand.Parameters[354].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[355].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[354].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[355].Value = ((string)(Original_RENA_ITEM_SCALE_ROTATE));
            }
            if ((Original_RAVEN_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.UpdateCommand.Parameters[356].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[357].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[356].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[357].Value = ((string)(Original_RAVEN_ITEM_SCALE_ROTATE));
            }
            if ((Original_EVE_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.UpdateCommand.Parameters[358].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[359].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[358].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[359].Value = ((string)(Original_EVE_ITEM_SCALE_ROTATE));
            }
            if ((Original_ATTACHED_MESH_NAME1 == null)) {
                this.Adapter.UpdateCommand.Parameters[360].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[361].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[360].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[361].Value = ((string)(Original_ATTACHED_MESH_NAME1));
            }
            if ((Original_ATTACHED_MESH_BONE_NAME1 == null)) {
                this.Adapter.UpdateCommand.Parameters[362].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[363].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[362].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[363].Value = ((string)(Original_ATTACHED_MESH_BONE_NAME1));
            }
            if ((Original_ATTACHED_MESH_NAME2 == null)) {
                this.Adapter.UpdateCommand.Parameters[364].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[365].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[364].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[365].Value = ((string)(Original_ATTACHED_MESH_NAME2));
            }
            if ((Original_ATTACHED_MESH_BONE_NAME2 == null)) {
                this.Adapter.UpdateCommand.Parameters[366].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[367].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[366].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[367].Value = ((string)(Original_ATTACHED_MESH_BONE_NAME2));
            }
            if ((Original_ATTACHED_MESH_NAME3 == null)) {
                this.Adapter.UpdateCommand.Parameters[368].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[369].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[368].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[369].Value = ((string)(Original_ATTACHED_MESH_NAME3));
            }
            if ((Original_ATTACHED_MESH_BONE_NAME3 == null)) {
                this.Adapter.UpdateCommand.Parameters[370].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[371].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[370].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[371].Value = ((string)(Original_ATTACHED_MESH_BONE_NAME3));
            }
            if ((Original_ATTACHED_MESH_NAME4 == null)) {
                this.Adapter.UpdateCommand.Parameters[372].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[373].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[372].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[373].Value = ((string)(Original_ATTACHED_MESH_NAME4));
            }
            if ((Original_ATTACHED_MESH_BONE_NAME4 == null)) {
                this.Adapter.UpdateCommand.Parameters[374].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[375].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[374].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[375].Value = ((string)(Original_ATTACHED_MESH_BONE_NAME4));
            }
            if ((Original_ATTACHED_MESH_NAME5 == null)) {
                this.Adapter.UpdateCommand.Parameters[376].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[377].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[376].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[377].Value = ((string)(Original_ATTACHED_MESH_NAME5));
            }
            if ((Original_ATTACHED_MESH_BONE_NAME5 == null)) {
                this.Adapter.UpdateCommand.Parameters[378].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[379].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[378].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[379].Value = ((string)(Original_ATTACHED_MESH_BONE_NAME5));
            }
            if ((Original_Model_Name1 == null)) {
                this.Adapter.UpdateCommand.Parameters[380].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[381].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[380].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[381].Value = ((string)(Original_Model_Name1));
            }
            if ((Original_Attach_FrameName1 == null)) {
                this.Adapter.UpdateCommand.Parameters[382].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[383].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[382].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[383].Value = ((string)(Original_Attach_FrameName1));
            }
            if ((Original_ATTACHED_PARTICLE_NAME1 == null)) {
                this.Adapter.UpdateCommand.Parameters[384].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[385].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[384].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[385].Value = ((string)(Original_ATTACHED_PARTICLE_NAME1));
            }
            if ((Original_ATTACHED_PARTICLE_BONE_NAME1 == null)) {
                this.Adapter.UpdateCommand.Parameters[386].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[387].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[386].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[387].Value = ((string)(Original_ATTACHED_PARTICLE_BONE_NAME1));
            }
            if ((Original_ATTACHED_PARTICLE_NAME2 == null)) {
                this.Adapter.UpdateCommand.Parameters[388].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[389].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[388].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[389].Value = ((string)(Original_ATTACHED_PARTICLE_NAME2));
            }
            if ((Original_ATTACHED_PARTICLE_BONE_NAME2 == null)) {
                this.Adapter.UpdateCommand.Parameters[390].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[391].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[390].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[391].Value = ((string)(Original_ATTACHED_PARTICLE_BONE_NAME2));
            }
            this.Adapter.UpdateCommand.Parameters[392].Value = ((System.DateTime)(Original_Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID, 
                    string Name, 
                    string Description, 
                    string Description_In_Shop, 
                    string Model_Name, 
                    string Texture_Change_XET_Name, 
                    string ELSWORD_MODEL_NAME, 
                    string ELSWORD_XET_NAME, 
                    string AISHA_MODEL_NAME, 
                    string AISHA_XET_NAME, 
                    string RENA_MODEL_NAME, 
                    string RENA_XET_NAME, 
                    string RAVEN_MODEL_NAME, 
                    string RAVEN_XET_NAME, 
                    string EVE_MODEL_NAME, 
                    string EVE_XET_NAME, 
                    string Anim_XET_Name, 
                    string Anim_Name, 
                    string Shop_Image, 
                    string Drop_Viewer, 
                    global::System.Nullable<byte> Item_Type, 
                    string Item_Type_, 
                    string ITEMTYPE_C, 
                    global::System.Nullable<bool> Fashion, 
                    global::System.Nullable<bool> Vested, 
                    global::System.Nullable<bool> Can_Enchant, 
                    global::System.Nullable<double> Use_Type, 
                    string Use_Type_, 
                    string USETYPE_C, 
                    string Attach_FrameName, 
                    global::System.Nullable<double> FO_Elsword_X, 
                    global::System.Nullable<double> FO_Elsword_Y, 
                    global::System.Nullable<double> FO_Elsword_Z, 
                    global::System.Nullable<double> FO_Lena_X, 
                    global::System.Nullable<double> FO_Lena_Y, 
                    global::System.Nullable<double> FO_Lena_Z, 
                    global::System.Nullable<double> FO_Aisha_X, 
                    global::System.Nullable<double> FO_Aisha_Y, 
                    global::System.Nullable<double> FO_Aisha_Z, 
                    global::System.Nullable<double> FO_Raven_X, 
                    global::System.Nullable<double> FO_Raven_Y, 
                    global::System.Nullable<double> FO_Raven_Z, 
                    global::System.Nullable<double> FO_Eve_X, 
                    global::System.Nullable<double> FO_Eve_Y, 
                    global::System.Nullable<double> FO_Eve_Z, 
                    global::System.Nullable<bool> Can_HyperMode, 
                    global::System.Nullable<byte> Period_Type, 
                    string Period_Type_, 
                    string PERIODTYPE_C, 
                    global::System.Nullable<int> Endurance, 
                    global::System.Nullable<byte> EnduranceDamageMin, 
                    global::System.Nullable<byte> EnduranceDamageMax, 
                    global::System.Nullable<double> Repair_ED, 
                    global::System.Nullable<double> Repair_VP, 
                    global::System.Nullable<int> Quantity, 
                    global::System.Nullable<byte> Price_Type, 
                    string Price_Type_, 
                    string PRICETYPE_C, 
                    string Price, 
                    global::System.Nullable<int> Price_PvP_Point, 
                    global::System.Nullable<byte> Use_Condition, 
                    string Use_Condition_, 
                    string USECONDITION_C, 
                    global::System.Nullable<byte> Unit_Type, 
                    string Unit_Type_, 
                    string UNITTYPE_C, 
                    global::System.Nullable<byte> Unit_Class, 
                    string Unit_Class_, 
                    string UNITCLASS_C, 
                    global::System.Nullable<byte> Use_Level, 
                    global::System.Nullable<byte> Eqip_Position, 
                    string Eqip_Position_, 
                    string EQIPPOSITION_C, 
                    global::System.Nullable<byte> Item_Grade, 
                    string Item_Grade_, 
                    string ITEMGRADE_C, 
                    global::System.Nullable<int> BASE_HP, 
                    global::System.Nullable<int> ATK_PHYSIC, 
                    global::System.Nullable<int> ATK_MAGIC, 
                    global::System.Nullable<int> DEF_PHYSIC, 
                    global::System.Nullable<int> DEF_MAGIC, 
                    global::System.Nullable<int> SA_NUM, 
                    global::System.Nullable<int> SA_01, 
                    global::System.Nullable<int> SA_02, 
                    global::System.Nullable<int> SA_03, 
                    global::System.Nullable<int> SA_04, 
                    global::System.Nullable<int> SA_05, 
                    global::System.Nullable<int> SA_06, 
                    global::System.Nullable<int> SA_07, 
                    global::System.Nullable<int> SA_08, 
                    global::System.Nullable<int> SA_09, 
                    global::System.Nullable<int> SA_10, 
                    global::System.Nullable<int> SO_01, 
                    global::System.Nullable<int> SO_02, 
                    global::System.Nullable<int> SO_03, 
                    global::System.Nullable<int> SO_04, 
                    global::System.Nullable<int> SO_05, 
                    global::System.Nullable<int> SO_06, 
                    global::System.Nullable<int> SO_07, 
                    global::System.Nullable<int> SO_08, 
                    global::System.Nullable<int> SO_09, 
                    global::System.Nullable<byte> COOL_TIME, 
                    global::System.Nullable<int> SET_ID, 
                    global::System.Nullable<bool> Can_Use_Inventory, 
                    global::System.Nullable<bool> NoEquip, 
                    string SLASH_TRACE_COLOR, 
                    string SLASH_TRACE_TIP_COLOR, 
                    string HYPER_SLASH_TRACE_COLOR, 
                    string HYPER_SLASH_TRACE_TIP_COLOR, 
                    string ELSWORD_ITEM_SCALE_ROTATE, 
                    string AISHA_ITEM_SCALE_ROTATE, 
                    string RENA_ITEM_SCALE_ROTATE, 
                    string RAVEN_ITEM_SCALE_ROTATE, 
                    string EVE_ITEM_SCALE_ROTATE, 
                    string ATTACHED_MESH_NAME1, 
                    string ATTACHED_MESH_BONE_NAME1, 
                    string ATTACHED_MESH_NAME2, 
                    string ATTACHED_MESH_BONE_NAME2, 
                    string ATTACHED_MESH_NAME3, 
                    string ATTACHED_MESH_BONE_NAME3, 
                    string ATTACHED_MESH_NAME4, 
                    string ATTACHED_MESH_BONE_NAME4, 
                    string ATTACHED_MESH_NAME5, 
                    string ATTACHED_MESH_BONE_NAME5, 
                    string Model_Name1, 
                    string Attach_FrameName1, 
                    string ATTACHED_PARTICLE_NAME1, 
                    string ATTACHED_PARTICLE_BONE_NAME1, 
                    string ATTACHED_PARTICLE_NAME2, 
                    string ATTACHED_PARTICLE_BONE_NAME2, 
                    System.DateTime Regdate, 
                    int Original_IndexKey, 
                    int Original_ID, 
                    string Original_Name, 
                    string Original_Description, 
                    string Original_Description_In_Shop, 
                    string Original_Model_Name, 
                    string Original_Texture_Change_XET_Name, 
                    string Original_ELSWORD_MODEL_NAME, 
                    string Original_ELSWORD_XET_NAME, 
                    string Original_AISHA_MODEL_NAME, 
                    string Original_AISHA_XET_NAME, 
                    string Original_RENA_MODEL_NAME, 
                    string Original_RENA_XET_NAME, 
                    string Original_RAVEN_MODEL_NAME, 
                    string Original_RAVEN_XET_NAME, 
                    string Original_EVE_MODEL_NAME, 
                    string Original_EVE_XET_NAME, 
                    string Original_Anim_XET_Name, 
                    string Original_Anim_Name, 
                    string Original_Shop_Image, 
                    string Original_Drop_Viewer, 
                    global::System.Nullable<byte> Original_Item_Type, 
                    string Original_Item_Type_, 
                    string Original_ITEMTYPE_C, 
                    global::System.Nullable<bool> Original_Fashion, 
                    global::System.Nullable<bool> Original_Vested, 
                    global::System.Nullable<bool> Original_Can_Enchant, 
                    global::System.Nullable<double> Original_Use_Type, 
                    string Original_Use_Type_, 
                    string Original_USETYPE_C, 
                    string Original_Attach_FrameName, 
                    global::System.Nullable<double> Original_FO_Elsword_X, 
                    global::System.Nullable<double> Original_FO_Elsword_Y, 
                    global::System.Nullable<double> Original_FO_Elsword_Z, 
                    global::System.Nullable<double> Original_FO_Lena_X, 
                    global::System.Nullable<double> Original_FO_Lena_Y, 
                    global::System.Nullable<double> Original_FO_Lena_Z, 
                    global::System.Nullable<double> Original_FO_Aisha_X, 
                    global::System.Nullable<double> Original_FO_Aisha_Y, 
                    global::System.Nullable<double> Original_FO_Aisha_Z, 
                    global::System.Nullable<double> Original_FO_Raven_X, 
                    global::System.Nullable<double> Original_FO_Raven_Y, 
                    global::System.Nullable<double> Original_FO_Raven_Z, 
                    global::System.Nullable<double> Original_FO_Eve_X, 
                    global::System.Nullable<double> Original_FO_Eve_Y, 
                    global::System.Nullable<double> Original_FO_Eve_Z, 
                    global::System.Nullable<bool> Original_Can_HyperMode, 
                    global::System.Nullable<byte> Original_Period_Type, 
                    string Original_Period_Type_, 
                    string Original_PERIODTYPE_C, 
                    global::System.Nullable<int> Original_Endurance, 
                    global::System.Nullable<byte> Original_EnduranceDamageMin, 
                    global::System.Nullable<byte> Original_EnduranceDamageMax, 
                    global::System.Nullable<double> Original_Repair_ED, 
                    global::System.Nullable<double> Original_Repair_VP, 
                    global::System.Nullable<int> Original_Quantity, 
                    global::System.Nullable<byte> Original_Price_Type, 
                    string Original_Price_Type_, 
                    string Original_PRICETYPE_C, 
                    string Original_Price, 
                    global::System.Nullable<int> Original_Price_PvP_Point, 
                    global::System.Nullable<byte> Original_Use_Condition, 
                    string Original_Use_Condition_, 
                    string Original_USECONDITION_C, 
                    global::System.Nullable<byte> Original_Unit_Type, 
                    string Original_Unit_Type_, 
                    string Original_UNITTYPE_C, 
                    global::System.Nullable<byte> Original_Unit_Class, 
                    string Original_Unit_Class_, 
                    string Original_UNITCLASS_C, 
                    global::System.Nullable<byte> Original_Use_Level, 
                    global::System.Nullable<byte> Original_Eqip_Position, 
                    string Original_Eqip_Position_, 
                    string Original_EQIPPOSITION_C, 
                    global::System.Nullable<byte> Original_Item_Grade, 
                    string Original_Item_Grade_, 
                    string Original_ITEMGRADE_C, 
                    global::System.Nullable<int> Original_BASE_HP, 
                    global::System.Nullable<int> Original_ATK_PHYSIC, 
                    global::System.Nullable<int> Original_ATK_MAGIC, 
                    global::System.Nullable<int> Original_DEF_PHYSIC, 
                    global::System.Nullable<int> Original_DEF_MAGIC, 
                    global::System.Nullable<int> Original_SA_NUM, 
                    global::System.Nullable<int> Original_SA_01, 
                    global::System.Nullable<int> Original_SA_02, 
                    global::System.Nullable<int> Original_SA_03, 
                    global::System.Nullable<int> Original_SA_04, 
                    global::System.Nullable<int> Original_SA_05, 
                    global::System.Nullable<int> Original_SA_06, 
                    global::System.Nullable<int> Original_SA_07, 
                    global::System.Nullable<int> Original_SA_08, 
                    global::System.Nullable<int> Original_SA_09, 
                    global::System.Nullable<int> Original_SA_10, 
                    global::System.Nullable<int> Original_SO_01, 
                    global::System.Nullable<int> Original_SO_02, 
                    global::System.Nullable<int> Original_SO_03, 
                    global::System.Nullable<int> Original_SO_04, 
                    global::System.Nullable<int> Original_SO_05, 
                    global::System.Nullable<int> Original_SO_06, 
                    global::System.Nullable<int> Original_SO_07, 
                    global::System.Nullable<int> Original_SO_08, 
                    global::System.Nullable<int> Original_SO_09, 
                    global::System.Nullable<byte> Original_COOL_TIME, 
                    global::System.Nullable<int> Original_SET_ID, 
                    global::System.Nullable<bool> Original_Can_Use_Inventory, 
                    global::System.Nullable<bool> Original_NoEquip, 
                    string Original_SLASH_TRACE_COLOR, 
                    string Original_SLASH_TRACE_TIP_COLOR, 
                    string Original_HYPER_SLASH_TRACE_COLOR, 
                    string Original_HYPER_SLASH_TRACE_TIP_COLOR, 
                    string Original_ELSWORD_ITEM_SCALE_ROTATE, 
                    string Original_AISHA_ITEM_SCALE_ROTATE, 
                    string Original_RENA_ITEM_SCALE_ROTATE, 
                    string Original_RAVEN_ITEM_SCALE_ROTATE, 
                    string Original_EVE_ITEM_SCALE_ROTATE, 
                    string Original_ATTACHED_MESH_NAME1, 
                    string Original_ATTACHED_MESH_BONE_NAME1, 
                    string Original_ATTACHED_MESH_NAME2, 
                    string Original_ATTACHED_MESH_BONE_NAME2, 
                    string Original_ATTACHED_MESH_NAME3, 
                    string Original_ATTACHED_MESH_BONE_NAME3, 
                    string Original_ATTACHED_MESH_NAME4, 
                    string Original_ATTACHED_MESH_BONE_NAME4, 
                    string Original_ATTACHED_MESH_NAME5, 
                    string Original_ATTACHED_MESH_BONE_NAME5, 
                    string Original_Model_Name1, 
                    string Original_Attach_FrameName1, 
                    string Original_ATTACHED_PARTICLE_NAME1, 
                    string Original_ATTACHED_PARTICLE_BONE_NAME1, 
                    string Original_ATTACHED_PARTICLE_NAME2, 
                    string Original_ATTACHED_PARTICLE_BONE_NAME2, 
                    System.DateTime Original_Regdate) {
            return this.Update(Original_IndexKey, ID, Name, Description, Description_In_Shop, Model_Name, Texture_Change_XET_Name, ELSWORD_MODEL_NAME, ELSWORD_XET_NAME, AISHA_MODEL_NAME, AISHA_XET_NAME, RENA_MODEL_NAME, RENA_XET_NAME, RAVEN_MODEL_NAME, RAVEN_XET_NAME, EVE_MODEL_NAME, EVE_XET_NAME, Anim_XET_Name, Anim_Name, Shop_Image, Drop_Viewer, Item_Type, Item_Type_, ITEMTYPE_C, Fashion, Vested, Can_Enchant, Use_Type, Use_Type_, USETYPE_C, Attach_FrameName, FO_Elsword_X, FO_Elsword_Y, FO_Elsword_Z, FO_Lena_X, FO_Lena_Y, FO_Lena_Z, FO_Aisha_X, FO_Aisha_Y, FO_Aisha_Z, FO_Raven_X, FO_Raven_Y, FO_Raven_Z, FO_Eve_X, FO_Eve_Y, FO_Eve_Z, Can_HyperMode, Period_Type, Period_Type_, PERIODTYPE_C, Endurance, EnduranceDamageMin, EnduranceDamageMax, Repair_ED, Repair_VP, Quantity, Price_Type, Price_Type_, PRICETYPE_C, Price, Price_PvP_Point, Use_Condition, Use_Condition_, USECONDITION_C, Unit_Type, Unit_Type_, UNITTYPE_C, Unit_Class, Unit_Class_, UNITCLASS_C, Use_Level, Eqip_Position, Eqip_Position_, EQIPPOSITION_C, Item_Grade, Item_Grade_, ITEMGRADE_C, BASE_HP, ATK_PHYSIC, ATK_MAGIC, DEF_PHYSIC, DEF_MAGIC, SA_NUM, SA_01, SA_02, SA_03, SA_04, SA_05, SA_06, SA_07, SA_08, SA_09, SA_10, SO_01, SO_02, SO_03, SO_04, SO_05, SO_06, SO_07, SO_08, SO_09, COOL_TIME, SET_ID, Can_Use_Inventory, NoEquip, SLASH_TRACE_COLOR, SLASH_TRACE_TIP_COLOR, HYPER_SLASH_TRACE_COLOR, HYPER_SLASH_TRACE_TIP_COLOR, ELSWORD_ITEM_SCALE_ROTATE, AISHA_ITEM_SCALE_ROTATE, RENA_ITEM_SCALE_ROTATE, RAVEN_ITEM_SCALE_ROTATE, EVE_ITEM_SCALE_ROTATE, ATTACHED_MESH_NAME1, ATTACHED_MESH_BONE_NAME1, ATTACHED_MESH_NAME2, ATTACHED_MESH_BONE_NAME2, ATTACHED_MESH_NAME3, ATTACHED_MESH_BONE_NAME3, ATTACHED_MESH_NAME4, ATTACHED_MESH_BONE_NAME4, ATTACHED_MESH_NAME5, ATTACHED_MESH_BONE_NAME5, Model_Name1, Attach_FrameName1, ATTACHED_PARTICLE_NAME1, ATTACHED_PARTICLE_BONE_NAME1, ATTACHED_PARTICLE_NAME2, ATTACHED_PARTICLE_BONE_NAME2, Regdate, Original_IndexKey, Original_ID, Original_Name, Original_Description, Original_Description_In_Shop, Original_Model_Name, Original_Texture_Change_XET_Name, Original_ELSWORD_MODEL_NAME, Original_ELSWORD_XET_NAME, Original_AISHA_MODEL_NAME, Original_AISHA_XET_NAME, Original_RENA_MODEL_NAME, Original_RENA_XET_NAME, Original_RAVEN_MODEL_NAME, Original_RAVEN_XET_NAME, Original_EVE_MODEL_NAME, Original_EVE_XET_NAME, Original_Anim_XET_Name, Original_Anim_Name, Original_Shop_Image, Original_Drop_Viewer, Original_Item_Type, Original_Item_Type_, Original_ITEMTYPE_C, Original_Fashion, Original_Vested, Original_Can_Enchant, Original_Use_Type, Original_Use_Type_, Original_USETYPE_C, Original_Attach_FrameName, Original_FO_Elsword_X, Original_FO_Elsword_Y, Original_FO_Elsword_Z, Original_FO_Lena_X, Original_FO_Lena_Y, Original_FO_Lena_Z, Original_FO_Aisha_X, Original_FO_Aisha_Y, Original_FO_Aisha_Z, Original_FO_Raven_X, Original_FO_Raven_Y, Original_FO_Raven_Z, Original_FO_Eve_X, Original_FO_Eve_Y, Original_FO_Eve_Z, Original_Can_HyperMode, Original_Period_Type, Original_Period_Type_, Original_PERIODTYPE_C, Original_Endurance, Original_EnduranceDamageMin, Original_EnduranceDamageMax, Original_Repair_ED, Original_Repair_VP, Original_Quantity, Original_Price_Type, Original_Price_Type_, Original_PRICETYPE_C, Original_Price, Original_Price_PvP_Point, Original_Use_Condition, Original_Use_Condition_, Original_USECONDITION_C, Original_Unit_Type, Original_Unit_Type_, Original_UNITTYPE_C, Original_Unit_Class, Original_Unit_Class_, Original_UNITCLASS_C, Original_Use_Level, Original_Eqip_Position, Original_Eqip_Position_, Original_EQIPPOSITION_C, Original_Item_Grade, Original_Item_Grade_, Original_ITEMGRADE_C, Original_BASE_HP, Original_ATK_PHYSIC, Original_ATK_MAGIC, Original_DEF_PHYSIC, Original_DEF_MAGIC, Original_SA_NUM, Original_SA_01, Original_SA_02, Original_SA_03, Original_SA_04, Original_SA_05, Original_SA_06, Original_SA_07, Original_SA_08, Original_SA_09, Original_SA_10, Original_SO_01, Original_SO_02, Original_SO_03, Original_SO_04, Original_SO_05, Original_SO_06, Original_SO_07, Original_SO_08, Original_SO_09, Original_COOL_TIME, Original_SET_ID, Original_Can_Use_Inventory, Original_NoEquip, Original_SLASH_TRACE_COLOR, Original_SLASH_TRACE_TIP_COLOR, Original_HYPER_SLASH_TRACE_COLOR, Original_HYPER_SLASH_TRACE_TIP_COLOR, Original_ELSWORD_ITEM_SCALE_ROTATE, Original_AISHA_ITEM_SCALE_ROTATE, Original_RENA_ITEM_SCALE_ROTATE, Original_RAVEN_ITEM_SCALE_ROTATE, Original_EVE_ITEM_SCALE_ROTATE, Original_ATTACHED_MESH_NAME1, Original_ATTACHED_MESH_BONE_NAME1, Original_ATTACHED_MESH_NAME2, Original_ATTACHED_MESH_BONE_NAME2, Original_ATTACHED_MESH_NAME3, Original_ATTACHED_MESH_BONE_NAME3, Original_ATTACHED_MESH_NAME4, Original_ATTACHED_MESH_BONE_NAME4, Original_ATTACHED_MESH_NAME5, Original_ATTACHED_MESH_BONE_NAME5, Original_Model_Name1, Original_Attach_FrameName1, Original_ATTACHED_PARTICLE_NAME1, Original_ATTACHED_PARTICLE_BONE_NAME1, Original_ATTACHED_PARTICLE_NAME2, Original_ATTACHED_PARTICLE_BONE_NAME2, Original_Regdate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateItem_Description(string Description, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Description == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Description));
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateItem_DescriptionInShop(string DescriptionInShop, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((DescriptionInShop == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(DescriptionInShop));
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateItem_Name(string Name, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((Name == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Name));
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateItem_Regdate(System.DateTime Regdate, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            command.Parameters[0].Value = ((System.DateTime)(Regdate));
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Item_HistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Item_HistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Item_History";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Description In Shop", "Description In Shop");
            tableMapping.ColumnMappings.Add("Model Name", "Model Name");
            tableMapping.ColumnMappings.Add("Texture Change XET Name", "Texture Change XET Name");
            tableMapping.ColumnMappings.Add("ELSWORD_MODEL_NAME", "ELSWORD_MODEL_NAME");
            tableMapping.ColumnMappings.Add("ELSWORD_XET_NAME", "ELSWORD_XET_NAME");
            tableMapping.ColumnMappings.Add("AISHA_MODEL_NAME", "AISHA_MODEL_NAME");
            tableMapping.ColumnMappings.Add("AISHA_XET_NAME", "AISHA_XET_NAME");
            tableMapping.ColumnMappings.Add("RENA_MODEL_NAME", "RENA_MODEL_NAME");
            tableMapping.ColumnMappings.Add("RENA_XET_NAME", "RENA_XET_NAME");
            tableMapping.ColumnMappings.Add("RAVEN_MODEL_NAME", "RAVEN_MODEL_NAME");
            tableMapping.ColumnMappings.Add("RAVEN_XET_NAME", "RAVEN_XET_NAME");
            tableMapping.ColumnMappings.Add("EVE_MODEL_NAME", "EVE_MODEL_NAME");
            tableMapping.ColumnMappings.Add("EVE_XET_NAME", "EVE_XET_NAME");
            tableMapping.ColumnMappings.Add("Anim XET Name", "Anim XET Name");
            tableMapping.ColumnMappings.Add("Anim Name", "Anim Name");
            tableMapping.ColumnMappings.Add("Shop Image", "Shop Image");
            tableMapping.ColumnMappings.Add("Drop Viewer", "Drop Viewer");
            tableMapping.ColumnMappings.Add("Item Type", "Item Type");
            tableMapping.ColumnMappings.Add("Item Type_", "Item Type_");
            tableMapping.ColumnMappings.Add("ITEMTYPE_C", "ITEMTYPE_C");
            tableMapping.ColumnMappings.Add("Fashion", "Fashion");
            tableMapping.ColumnMappings.Add("Vested", "Vested");
            tableMapping.ColumnMappings.Add("Can Enchant", "Can Enchant");
            tableMapping.ColumnMappings.Add("Use Type", "Use Type");
            tableMapping.ColumnMappings.Add("Use Type_", "Use Type_");
            tableMapping.ColumnMappings.Add("USETYPE_C", "USETYPE_C");
            tableMapping.ColumnMappings.Add("Attach FrameName", "Attach FrameName");
            tableMapping.ColumnMappings.Add("FO_Elsword_X", "FO_Elsword_X");
            tableMapping.ColumnMappings.Add("FO_Elsword_Y", "FO_Elsword_Y");
            tableMapping.ColumnMappings.Add("FO_Elsword_Z", "FO_Elsword_Z");
            tableMapping.ColumnMappings.Add("FO_Lena_X", "FO_Lena_X");
            tableMapping.ColumnMappings.Add("FO_Lena_Y", "FO_Lena_Y");
            tableMapping.ColumnMappings.Add("FO_Lena_Z", "FO_Lena_Z");
            tableMapping.ColumnMappings.Add("FO_Aisha_X", "FO_Aisha_X");
            tableMapping.ColumnMappings.Add("FO_Aisha_Y", "FO_Aisha_Y");
            tableMapping.ColumnMappings.Add("FO_Aisha_Z", "FO_Aisha_Z");
            tableMapping.ColumnMappings.Add("FO_Raven_X", "FO_Raven_X");
            tableMapping.ColumnMappings.Add("FO_Raven_Y", "FO_Raven_Y");
            tableMapping.ColumnMappings.Add("FO_Raven_Z", "FO_Raven_Z");
            tableMapping.ColumnMappings.Add("FO_Eve_X", "FO_Eve_X");
            tableMapping.ColumnMappings.Add("FO_Eve_Y", "FO_Eve_Y");
            tableMapping.ColumnMappings.Add("FO_Eve_Z", "FO_Eve_Z");
            tableMapping.ColumnMappings.Add("Can HyperMode", "Can HyperMode");
            tableMapping.ColumnMappings.Add("Period Type", "Period Type");
            tableMapping.ColumnMappings.Add("Period Type_", "Period Type_");
            tableMapping.ColumnMappings.Add("PERIODTYPE_C", "PERIODTYPE_C");
            tableMapping.ColumnMappings.Add("Endurance", "Endurance");
            tableMapping.ColumnMappings.Add("EnduranceDamageMin", "EnduranceDamageMin");
            tableMapping.ColumnMappings.Add("EnduranceDamageMax", "EnduranceDamageMax");
            tableMapping.ColumnMappings.Add("Repair ED", "Repair ED");
            tableMapping.ColumnMappings.Add("Repair VP", "Repair VP");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Price Type", "Price Type");
            tableMapping.ColumnMappings.Add("Price Type_", "Price Type_");
            tableMapping.ColumnMappings.Add("PRICETYPE_C", "PRICETYPE_C");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("Price PvP Point", "Price PvP Point");
            tableMapping.ColumnMappings.Add("Use Condition", "Use Condition");
            tableMapping.ColumnMappings.Add("Use Condition_", "Use Condition_");
            tableMapping.ColumnMappings.Add("USECONDITION_C", "USECONDITION_C");
            tableMapping.ColumnMappings.Add("Unit Type", "Unit Type");
            tableMapping.ColumnMappings.Add("Unit Type_", "Unit Type_");
            tableMapping.ColumnMappings.Add("UNITTYPE_C", "UNITTYPE_C");
            tableMapping.ColumnMappings.Add("Unit Class", "Unit Class");
            tableMapping.ColumnMappings.Add("Unit Class_", "Unit Class_");
            tableMapping.ColumnMappings.Add("UNITCLASS_C", "UNITCLASS_C");
            tableMapping.ColumnMappings.Add("Use Level", "Use Level");
            tableMapping.ColumnMappings.Add("Eqip Position", "Eqip Position");
            tableMapping.ColumnMappings.Add("Eqip Position_", "Eqip Position_");
            tableMapping.ColumnMappings.Add("EQIPPOSITION_C", "EQIPPOSITION_C");
            tableMapping.ColumnMappings.Add("Item Grade", "Item Grade");
            tableMapping.ColumnMappings.Add("Item Grade_", "Item Grade_");
            tableMapping.ColumnMappings.Add("ITEMGRADE_C", "ITEMGRADE_C");
            tableMapping.ColumnMappings.Add("BASE_HP", "BASE_HP");
            tableMapping.ColumnMappings.Add("ATK_PHYSIC", "ATK_PHYSIC");
            tableMapping.ColumnMappings.Add("ATK_MAGIC", "ATK_MAGIC");
            tableMapping.ColumnMappings.Add("DEF_PHYSIC", "DEF_PHYSIC");
            tableMapping.ColumnMappings.Add("DEF_MAGIC", "DEF_MAGIC");
            tableMapping.ColumnMappings.Add("SA_NUM", "SA_NUM");
            tableMapping.ColumnMappings.Add("SA_01", "SA_01");
            tableMapping.ColumnMappings.Add("SA_02", "SA_02");
            tableMapping.ColumnMappings.Add("SA_03", "SA_03");
            tableMapping.ColumnMappings.Add("SA_04", "SA_04");
            tableMapping.ColumnMappings.Add("SA_05", "SA_05");
            tableMapping.ColumnMappings.Add("SA_06", "SA_06");
            tableMapping.ColumnMappings.Add("SA_07", "SA_07");
            tableMapping.ColumnMappings.Add("SA_08", "SA_08");
            tableMapping.ColumnMappings.Add("SA_09", "SA_09");
            tableMapping.ColumnMappings.Add("SA_10", "SA_10");
            tableMapping.ColumnMappings.Add("SO_01", "SO_01");
            tableMapping.ColumnMappings.Add("SO_02", "SO_02");
            tableMapping.ColumnMappings.Add("SO_03", "SO_03");
            tableMapping.ColumnMappings.Add("SO_04", "SO_04");
            tableMapping.ColumnMappings.Add("SO_05", "SO_05");
            tableMapping.ColumnMappings.Add("SO_06", "SO_06");
            tableMapping.ColumnMappings.Add("SO_07", "SO_07");
            tableMapping.ColumnMappings.Add("SO_08", "SO_08");
            tableMapping.ColumnMappings.Add("SO_09", "SO_09");
            tableMapping.ColumnMappings.Add("COOL_TIME", "COOL_TIME");
            tableMapping.ColumnMappings.Add("SET_ID", "SET_ID");
            tableMapping.ColumnMappings.Add("Can Use Inventory", "Can Use Inventory");
            tableMapping.ColumnMappings.Add("NoEquip", "NoEquip");
            tableMapping.ColumnMappings.Add("SLASH_TRACE_COLOR", "SLASH_TRACE_COLOR");
            tableMapping.ColumnMappings.Add("SLASH_TRACE_TIP_COLOR", "SLASH_TRACE_TIP_COLOR");
            tableMapping.ColumnMappings.Add("HYPER_SLASH_TRACE_COLOR", "HYPER_SLASH_TRACE_COLOR");
            tableMapping.ColumnMappings.Add("HYPER_SLASH_TRACE_TIP_COLOR", "HYPER_SLASH_TRACE_TIP_COLOR");
            tableMapping.ColumnMappings.Add("ELSWORD_ITEM_SCALE_ROTATE", "ELSWORD_ITEM_SCALE_ROTATE");
            tableMapping.ColumnMappings.Add("AISHA_ITEM_SCALE_ROTATE", "AISHA_ITEM_SCALE_ROTATE");
            tableMapping.ColumnMappings.Add("RENA_ITEM_SCALE_ROTATE", "RENA_ITEM_SCALE_ROTATE");
            tableMapping.ColumnMappings.Add("RAVEN_ITEM_SCALE_ROTATE", "RAVEN_ITEM_SCALE_ROTATE");
            tableMapping.ColumnMappings.Add("EVE_ITEM_SCALE_ROTATE", "EVE_ITEM_SCALE_ROTATE");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_NAME1", "ATTACHED_MESH_NAME1");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_BONE_NAME1", "ATTACHED_MESH_BONE_NAME1");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_NAME2", "ATTACHED_MESH_NAME2");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_BONE_NAME2", "ATTACHED_MESH_BONE_NAME2");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_NAME3", "ATTACHED_MESH_NAME3");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_BONE_NAME3", "ATTACHED_MESH_BONE_NAME3");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_NAME4", "ATTACHED_MESH_NAME4");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_BONE_NAME4", "ATTACHED_MESH_BONE_NAME4");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_NAME5", "ATTACHED_MESH_NAME5");
            tableMapping.ColumnMappings.Add("ATTACHED_MESH_BONE_NAME5", "ATTACHED_MESH_BONE_NAME5");
            tableMapping.ColumnMappings.Add("Model Name1", "Model Name1");
            tableMapping.ColumnMappings.Add("Attach FrameName1", "Attach FrameName1");
            tableMapping.ColumnMappings.Add("ATTACHED_PARTICLE_NAME1", "ATTACHED_PARTICLE_NAME1");
            tableMapping.ColumnMappings.Add("ATTACHED_PARTICLE_BONE_NAME1", "ATTACHED_PARTICLE_BONE_NAME1");
            tableMapping.ColumnMappings.Add("ATTACHED_PARTICLE_NAME2", "ATTACHED_PARTICLE_NAME2");
            tableMapping.ColumnMappings.Add("ATTACHED_PARTICLE_BONE_NAME2", "ATTACHED_PARTICLE_BONE_NAME2");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserIP", "UserIP");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Item_History] ([IndexKey], [ID], [Name], [Description], [Descr" +
                "iption In Shop], [Model Name], [Texture Change XET Name], [ELSWORD_MODEL_NAME], " +
                "[ELSWORD_XET_NAME], [AISHA_MODEL_NAME], [AISHA_XET_NAME], [RENA_MODEL_NAME], [RE" +
                "NA_XET_NAME], [RAVEN_MODEL_NAME], [RAVEN_XET_NAME], [EVE_MODEL_NAME], [EVE_XET_N" +
                "AME], [Anim XET Name], [Anim Name], [Shop Image], [Drop Viewer], [Item Type], [I" +
                "tem Type_], [ITEMTYPE_C], [Fashion], [Vested], [Can Enchant], [Use Type], [Use T" +
                "ype_], [USETYPE_C], [Attach FrameName], [FO_Elsword_X], [FO_Elsword_Y], [FO_Elsw" +
                "ord_Z], [FO_Lena_X], [FO_Lena_Y], [FO_Lena_Z], [FO_Aisha_X], [FO_Aisha_Y], [FO_A" +
                "isha_Z], [FO_Raven_X], [FO_Raven_Y], [FO_Raven_Z], [FO_Eve_X], [FO_Eve_Y], [FO_E" +
                "ve_Z], [Can HyperMode], [Period Type], [Period Type_], [PERIODTYPE_C], [Enduranc" +
                "e], [EnduranceDamageMin], [EnduranceDamageMax], [Repair ED], [Repair VP], [Quant" +
                "ity], [Price Type], [Price Type_], [PRICETYPE_C], [Price], [Price PvP Point], [U" +
                "se Condition], [Use Condition_], [USECONDITION_C], [Unit Type], [Unit Type_], [U" +
                "NITTYPE_C], [Unit Class], [Unit Class_], [UNITCLASS_C], [Use Level], [Eqip Posit" +
                "ion], [Eqip Position_], [EQIPPOSITION_C], [Item Grade], [Item Grade_], [ITEMGRAD" +
                "E_C], [BASE_HP], [ATK_PHYSIC], [ATK_MAGIC], [DEF_PHYSIC], [DEF_MAGIC], [SA_NUM]," +
                " [SA_01], [SA_02], [SA_03], [SA_04], [SA_05], [SA_06], [SA_07], [SA_08], [SA_09]" +
                ", [SA_10], [SO_01], [SO_02], [SO_03], [SO_04], [SO_05], [SO_06], [SO_07], [SO_08" +
                "], [SO_09], [COOL_TIME], [SET_ID], [Can Use Inventory], [NoEquip], [SLASH_TRACE_" +
                "COLOR], [SLASH_TRACE_TIP_COLOR], [HYPER_SLASH_TRACE_COLOR], [HYPER_SLASH_TRACE_T" +
                "IP_COLOR], [ELSWORD_ITEM_SCALE_ROTATE], [AISHA_ITEM_SCALE_ROTATE], [RENA_ITEM_SC" +
                "ALE_ROTATE], [RAVEN_ITEM_SCALE_ROTATE], [EVE_ITEM_SCALE_ROTATE], [ATTACHED_MESH_" +
                "NAME1], [ATTACHED_MESH_BONE_NAME1], [ATTACHED_MESH_NAME2], [ATTACHED_MESH_BONE_N" +
                "AME2], [ATTACHED_MESH_NAME3], [ATTACHED_MESH_BONE_NAME3], [ATTACHED_MESH_NAME4]," +
                " [ATTACHED_MESH_BONE_NAME4], [ATTACHED_MESH_NAME5], [ATTACHED_MESH_BONE_NAME5], " +
                "[Model Name1], [Attach FrameName1], [ATTACHED_PARTICLE_NAME1], [ATTACHED_PARTICL" +
                "E_BONE_NAME1], [ATTACHED_PARTICLE_NAME2], [ATTACHED_PARTICLE_BONE_NAME2], [UserI" +
                "D], [UserIP], [Regdate]) VALUES (@IndexKey, @ID, @Name, @Description, @Descripti" +
                "on_In_Shop, @Model_Name, @Texture_Change_XET_Name, @ELSWORD_MODEL_NAME, @ELSWORD" +
                "_XET_NAME, @AISHA_MODEL_NAME, @AISHA_XET_NAME, @RENA_MODEL_NAME, @RENA_XET_NAME," +
                " @RAVEN_MODEL_NAME, @RAVEN_XET_NAME, @EVE_MODEL_NAME, @EVE_XET_NAME, @Anim_XET_N" +
                "ame, @Anim_Name, @Shop_Image, @Drop_Viewer, @Item_Type, @Item_Type_, @ITEMTYPE_C" +
                ", @Fashion, @Vested, @Can_Enchant, @Use_Type, @Use_Type_, @USETYPE_C, @Attach_Fr" +
                "ameName, @FO_Elsword_X, @FO_Elsword_Y, @FO_Elsword_Z, @FO_Lena_X, @FO_Lena_Y, @F" +
                "O_Lena_Z, @FO_Aisha_X, @FO_Aisha_Y, @FO_Aisha_Z, @FO_Raven_X, @FO_Raven_Y, @FO_R" +
                "aven_Z, @FO_Eve_X, @FO_Eve_Y, @FO_Eve_Z, @Can_HyperMode, @Period_Type, @Period_T" +
                "ype_, @PERIODTYPE_C, @Endurance, @EnduranceDamageMin, @EnduranceDamageMax, @Repa" +
                "ir_ED, @Repair_VP, @Quantity, @Price_Type, @Price_Type_, @PRICETYPE_C, @Price, @" +
                "Price_PvP_Point, @Use_Condition, @Use_Condition_, @USECONDITION_C, @Unit_Type, @" +
                "Unit_Type_, @UNITTYPE_C, @Unit_Class, @Unit_Class_, @UNITCLASS_C, @Use_Level, @E" +
                "qip_Position, @Eqip_Position_, @EQIPPOSITION_C, @Item_Grade, @Item_Grade_, @ITEM" +
                "GRADE_C, @BASE_HP, @ATK_PHYSIC, @ATK_MAGIC, @DEF_PHYSIC, @DEF_MAGIC, @SA_NUM, @S" +
                "A_01, @SA_02, @SA_03, @SA_04, @SA_05, @SA_06, @SA_07, @SA_08, @SA_09, @SA_10, @S" +
                "O_01, @SO_02, @SO_03, @SO_04, @SO_05, @SO_06, @SO_07, @SO_08, @SO_09, @COOL_TIME" +
                ", @SET_ID, @Can_Use_Inventory, @NoEquip, @SLASH_TRACE_COLOR, @SLASH_TRACE_TIP_CO" +
                "LOR, @HYPER_SLASH_TRACE_COLOR, @HYPER_SLASH_TRACE_TIP_COLOR, @ELSWORD_ITEM_SCALE" +
                "_ROTATE, @AISHA_ITEM_SCALE_ROTATE, @RENA_ITEM_SCALE_ROTATE, @RAVEN_ITEM_SCALE_RO" +
                "TATE, @EVE_ITEM_SCALE_ROTATE, @ATTACHED_MESH_NAME1, @ATTACHED_MESH_BONE_NAME1, @" +
                "ATTACHED_MESH_NAME2, @ATTACHED_MESH_BONE_NAME2, @ATTACHED_MESH_NAME3, @ATTACHED_" +
                "MESH_BONE_NAME3, @ATTACHED_MESH_NAME4, @ATTACHED_MESH_BONE_NAME4, @ATTACHED_MESH" +
                "_NAME5, @ATTACHED_MESH_BONE_NAME5, @Model_Name1, @Attach_FrameName1, @ATTACHED_P" +
                "ARTICLE_NAME1, @ATTACHED_PARTICLE_BONE_NAME1, @ATTACHED_PARTICLE_NAME2, @ATTACHE" +
                "D_PARTICLE_BONE_NAME2, @UserID, @UserIP, @Regdate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description_In_Shop", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description In Shop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Texture_Change_XET_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Texture Change XET Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELSWORD_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELSWORD_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AISHA_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AISHA_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RENA_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RENA_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAVEN_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAVEN_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EVE_MODEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_MODEL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EVE_XET_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_XET_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Anim_XET_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anim XET Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Anim_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anim Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shop_Image", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shop Image", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drop_Viewer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drop Viewer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITEMTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMTYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fashion", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fashion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vested", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vested", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Can_Enchant", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can Enchant", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Type", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USETYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USETYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attach_FrameName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach FrameName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Elsword_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Elsword_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Elsword_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Elsword_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Lena_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Lena_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Lena_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Lena_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Aisha_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Aisha_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Aisha_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Aisha_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Raven_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Raven_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Raven_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Raven_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Eve_X", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Eve_Y", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FO_Eve_Z", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FO_Eve_Z", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Can_HyperMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can HyperMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERIODTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERIODTYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Endurance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Endurance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnduranceDamageMin", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnduranceDamageMin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnduranceDamageMax", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnduranceDamageMax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Repair_ED", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair ED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Repair_VP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair VP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRICETYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICETYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price_PvP_Point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price PvP Point", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Condition", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Condition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Condition_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Condition_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USECONDITION_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USECONDITION_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UNITTYPE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNITTYPE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Class", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit Class_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UNITCLASS_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNITCLASS_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Level", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use Level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Eqip_Position", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eqip Position", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Eqip_Position_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eqip Position_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EQIPPOSITION_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EQIPPOSITION_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Grade", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Grade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Grade_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item Grade_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITEMGRADE_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMGRADE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BASE_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASE_HP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATK_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATK_PHYSIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATK_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATK_MAGIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEF_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_PHYSIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEF_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_MAGIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_01", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_03", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_04", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_05", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_06", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_07", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_08", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_09", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_01", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_03", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_04", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_05", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_06", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_07", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_08", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_09", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COOL_TIME", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOL_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SET_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SET_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Can_Use_Inventory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Can Use Inventory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoEquip", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoEquip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SLASH_TRACE_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLASH_TRACE_COLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SLASH_TRACE_TIP_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLASH_TRACE_TIP_COLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HYPER_SLASH_TRACE_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HYPER_SLASH_TRACE_COLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HYPER_SLASH_TRACE_TIP_COLOR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HYPER_SLASH_TRACE_TIP_COLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELSWORD_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELSWORD_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AISHA_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AISHA_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RENA_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENA_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAVEN_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAVEN_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EVE_ITEM_SCALE_ROTATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EVE_ITEM_SCALE_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_NAME5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_NAME5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_MESH_BONE_NAME5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_MESH_BONE_NAME5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_Name1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model Name1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attach_FrameName1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach FrameName1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_PARTICLE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_NAME1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_PARTICLE_BONE_NAME1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_BONE_NAME1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_PARTICLE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_NAME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTACHED_PARTICLE_BONE_NAME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTACHED_PARTICLE_BONE_NAME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserIP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT IndexKey, ID, Name, Description, [Description In Shop], [Model Name], [Tex" +
                "ture Change XET Name], ELSWORD_MODEL_NAME, ELSWORD_XET_NAME, AISHA_MODEL_NAME, A" +
                "ISHA_XET_NAME, RENA_MODEL_NAME, RENA_XET_NAME, RAVEN_MODEL_NAME, RAVEN_XET_NAME," +
                " EVE_MODEL_NAME, EVE_XET_NAME, [Anim XET Name], [Anim Name], [Shop Image], [Drop" +
                " Viewer], [Item Type], [Item Type_], ITEMTYPE_C, Fashion, Vested, [Can Enchant]," +
                " [Use Type], [Use Type_], USETYPE_C, [Attach FrameName], FO_Elsword_X, FO_Elswor" +
                "d_Y, FO_Elsword_Z, FO_Lena_X, FO_Lena_Y, FO_Lena_Z, FO_Aisha_X, FO_Aisha_Y, FO_A" +
                "isha_Z, FO_Raven_X, FO_Raven_Y, FO_Raven_Z, FO_Eve_X, FO_Eve_Y, FO_Eve_Z, [Can H" +
                "yperMode], [Period Type], [Period Type_], PERIODTYPE_C, Endurance, EnduranceDama" +
                "geMin, EnduranceDamageMax, [Repair ED], [Repair VP], Quantity, [Price Type], [Pr" +
                "ice Type_], PRICETYPE_C, Price, [Price PvP Point], [Use Condition], [Use Conditi" +
                "on_], USECONDITION_C, [Unit Type], [Unit Type_], UNITTYPE_C, [Unit Class], [Unit" +
                " Class_], UNITCLASS_C, [Use Level], [Eqip Position], [Eqip Position_], EQIPPOSIT" +
                "ION_C, [Item Grade], [Item Grade_], ITEMGRADE_C, BASE_HP, ATK_PHYSIC, ATK_MAGIC," +
                " DEF_PHYSIC, DEF_MAGIC, SA_NUM, SA_01, SA_02, SA_03, SA_04, SA_05, SA_06, SA_07," +
                " SA_08, SA_09, SA_10, SO_01, SO_02, SO_03, SO_04, SO_05, SO_06, SO_07, SO_08, SO" +
                "_09, COOL_TIME, SET_ID, [Can Use Inventory], NoEquip, SLASH_TRACE_COLOR, SLASH_T" +
                "RACE_TIP_COLOR, HYPER_SLASH_TRACE_COLOR, HYPER_SLASH_TRACE_TIP_COLOR, ELSWORD_IT" +
                "EM_SCALE_ROTATE, AISHA_ITEM_SCALE_ROTATE, RENA_ITEM_SCALE_ROTATE, RAVEN_ITEM_SCA" +
                "LE_ROTATE, EVE_ITEM_SCALE_ROTATE, ATTACHED_MESH_NAME1, ATTACHED_MESH_BONE_NAME1," +
                " ATTACHED_MESH_NAME2, ATTACHED_MESH_BONE_NAME2, ATTACHED_MESH_NAME3, ATTACHED_ME" +
                "SH_BONE_NAME3, ATTACHED_MESH_NAME4, ATTACHED_MESH_BONE_NAME4, ATTACHED_MESH_NAME" +
                "5, ATTACHED_MESH_BONE_NAME5, [Model Name1], [Attach FrameName1], ATTACHED_PARTIC" +
                "LE_NAME1, ATTACHED_PARTICLE_BONE_NAME1, ATTACHED_PARTICLE_NAME2, ATTACHED_PARTIC" +
                "LE_BONE_NAME2, UserID, UserIP, Regdate FROM dbo.Item_History";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.Item_HistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.Item_HistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.Item_HistoryDataTable dataTable = new ScriptData_JPDataSet.Item_HistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.Item_HistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Item_History");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IndexKey, 
                    int ID, 
                    string Name, 
                    string Description, 
                    string Description_In_Shop, 
                    string Model_Name, 
                    string Texture_Change_XET_Name, 
                    string ELSWORD_MODEL_NAME, 
                    string ELSWORD_XET_NAME, 
                    string AISHA_MODEL_NAME, 
                    string AISHA_XET_NAME, 
                    string RENA_MODEL_NAME, 
                    string RENA_XET_NAME, 
                    string RAVEN_MODEL_NAME, 
                    string RAVEN_XET_NAME, 
                    string EVE_MODEL_NAME, 
                    string EVE_XET_NAME, 
                    string Anim_XET_Name, 
                    string Anim_Name, 
                    string Shop_Image, 
                    string Drop_Viewer, 
                    global::System.Nullable<byte> Item_Type, 
                    string Item_Type_, 
                    string ITEMTYPE_C, 
                    global::System.Nullable<bool> Fashion, 
                    global::System.Nullable<bool> Vested, 
                    global::System.Nullable<bool> Can_Enchant, 
                    global::System.Nullable<double> Use_Type, 
                    string Use_Type_, 
                    string USETYPE_C, 
                    string Attach_FrameName, 
                    global::System.Nullable<double> FO_Elsword_X, 
                    global::System.Nullable<double> FO_Elsword_Y, 
                    global::System.Nullable<double> FO_Elsword_Z, 
                    global::System.Nullable<double> FO_Lena_X, 
                    global::System.Nullable<double> FO_Lena_Y, 
                    global::System.Nullable<double> FO_Lena_Z, 
                    global::System.Nullable<double> FO_Aisha_X, 
                    global::System.Nullable<double> FO_Aisha_Y, 
                    global::System.Nullable<double> FO_Aisha_Z, 
                    global::System.Nullable<double> FO_Raven_X, 
                    global::System.Nullable<double> FO_Raven_Y, 
                    global::System.Nullable<double> FO_Raven_Z, 
                    global::System.Nullable<double> FO_Eve_X, 
                    global::System.Nullable<double> FO_Eve_Y, 
                    global::System.Nullable<double> FO_Eve_Z, 
                    global::System.Nullable<bool> Can_HyperMode, 
                    global::System.Nullable<byte> Period_Type, 
                    string Period_Type_, 
                    string PERIODTYPE_C, 
                    global::System.Nullable<int> Endurance, 
                    global::System.Nullable<byte> EnduranceDamageMin, 
                    global::System.Nullable<byte> EnduranceDamageMax, 
                    global::System.Nullable<double> Repair_ED, 
                    global::System.Nullable<double> Repair_VP, 
                    global::System.Nullable<int> Quantity, 
                    global::System.Nullable<byte> Price_Type, 
                    string Price_Type_, 
                    string PRICETYPE_C, 
                    string Price, 
                    global::System.Nullable<int> Price_PvP_Point, 
                    global::System.Nullable<byte> Use_Condition, 
                    string Use_Condition_, 
                    string USECONDITION_C, 
                    global::System.Nullable<byte> Unit_Type, 
                    string Unit_Type_, 
                    string UNITTYPE_C, 
                    global::System.Nullable<byte> Unit_Class, 
                    string Unit_Class_, 
                    string UNITCLASS_C, 
                    global::System.Nullable<byte> Use_Level, 
                    global::System.Nullable<byte> Eqip_Position, 
                    string Eqip_Position_, 
                    string EQIPPOSITION_C, 
                    global::System.Nullable<byte> Item_Grade, 
                    string Item_Grade_, 
                    string ITEMGRADE_C, 
                    global::System.Nullable<int> BASE_HP, 
                    global::System.Nullable<int> ATK_PHYSIC, 
                    global::System.Nullable<int> ATK_MAGIC, 
                    global::System.Nullable<int> DEF_PHYSIC, 
                    global::System.Nullable<int> DEF_MAGIC, 
                    global::System.Nullable<int> SA_NUM, 
                    global::System.Nullable<int> SA_01, 
                    global::System.Nullable<int> SA_02, 
                    global::System.Nullable<int> SA_03, 
                    global::System.Nullable<int> SA_04, 
                    global::System.Nullable<int> SA_05, 
                    global::System.Nullable<int> SA_06, 
                    global::System.Nullable<int> SA_07, 
                    global::System.Nullable<int> SA_08, 
                    global::System.Nullable<int> SA_09, 
                    global::System.Nullable<int> SA_10, 
                    global::System.Nullable<int> SO_01, 
                    global::System.Nullable<int> SO_02, 
                    global::System.Nullable<int> SO_03, 
                    global::System.Nullable<int> SO_04, 
                    global::System.Nullable<int> SO_05, 
                    global::System.Nullable<int> SO_06, 
                    global::System.Nullable<int> SO_07, 
                    global::System.Nullable<int> SO_08, 
                    global::System.Nullable<int> SO_09, 
                    global::System.Nullable<byte> COOL_TIME, 
                    global::System.Nullable<int> SET_ID, 
                    global::System.Nullable<bool> Can_Use_Inventory, 
                    global::System.Nullable<bool> NoEquip, 
                    string SLASH_TRACE_COLOR, 
                    string SLASH_TRACE_TIP_COLOR, 
                    string HYPER_SLASH_TRACE_COLOR, 
                    string HYPER_SLASH_TRACE_TIP_COLOR, 
                    string ELSWORD_ITEM_SCALE_ROTATE, 
                    string AISHA_ITEM_SCALE_ROTATE, 
                    string RENA_ITEM_SCALE_ROTATE, 
                    string RAVEN_ITEM_SCALE_ROTATE, 
                    string EVE_ITEM_SCALE_ROTATE, 
                    string ATTACHED_MESH_NAME1, 
                    string ATTACHED_MESH_BONE_NAME1, 
                    string ATTACHED_MESH_NAME2, 
                    string ATTACHED_MESH_BONE_NAME2, 
                    string ATTACHED_MESH_NAME3, 
                    string ATTACHED_MESH_BONE_NAME3, 
                    string ATTACHED_MESH_NAME4, 
                    string ATTACHED_MESH_BONE_NAME4, 
                    string ATTACHED_MESH_NAME5, 
                    string ATTACHED_MESH_BONE_NAME5, 
                    string Model_Name1, 
                    string Attach_FrameName1, 
                    string ATTACHED_PARTICLE_NAME1, 
                    string ATTACHED_PARTICLE_BONE_NAME1, 
                    string ATTACHED_PARTICLE_NAME2, 
                    string ATTACHED_PARTICLE_BONE_NAME2, 
                    string UserID, 
                    string UserIP, 
                    global::System.Nullable<global::System.DateTime> Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID));
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Name));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Description));
            }
            if ((Description_In_Shop == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Description_In_Shop));
            }
            if ((Model_Name == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Model_Name));
            }
            if ((Texture_Change_XET_Name == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Texture_Change_XET_Name));
            }
            if ((ELSWORD_MODEL_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ELSWORD_MODEL_NAME));
            }
            if ((ELSWORD_XET_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ELSWORD_XET_NAME));
            }
            if ((AISHA_MODEL_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(AISHA_MODEL_NAME));
            }
            if ((AISHA_XET_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(AISHA_XET_NAME));
            }
            if ((RENA_MODEL_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(RENA_MODEL_NAME));
            }
            if ((RENA_XET_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(RENA_XET_NAME));
            }
            if ((RAVEN_MODEL_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(RAVEN_MODEL_NAME));
            }
            if ((RAVEN_XET_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(RAVEN_XET_NAME));
            }
            if ((EVE_MODEL_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(EVE_MODEL_NAME));
            }
            if ((EVE_XET_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(EVE_XET_NAME));
            }
            if ((Anim_XET_Name == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Anim_XET_Name));
            }
            if ((Anim_Name == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Anim_Name));
            }
            if ((Shop_Image == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Shop_Image));
            }
            if ((Drop_Viewer == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Drop_Viewer));
            }
            if ((Item_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((byte)(Item_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Item_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Item_Type_));
            }
            if ((ITEMTYPE_C == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(ITEMTYPE_C));
            }
            if ((Fashion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(Fashion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Vested.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(Vested.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Can_Enchant.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(Can_Enchant.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Use_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(Use_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Use_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(Use_Type_));
            }
            if ((USETYPE_C == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(USETYPE_C));
            }
            if ((Attach_FrameName == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Attach_FrameName));
            }
            if ((FO_Elsword_X.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((double)(FO_Elsword_X.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((FO_Elsword_Y.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((double)(FO_Elsword_Y.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((FO_Elsword_Z.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((double)(FO_Elsword_Z.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((FO_Lena_X.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((double)(FO_Lena_X.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((FO_Lena_Y.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((double)(FO_Lena_Y.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((FO_Lena_Z.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((double)(FO_Lena_Z.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((FO_Aisha_X.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((double)(FO_Aisha_X.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((FO_Aisha_Y.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((double)(FO_Aisha_Y.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((FO_Aisha_Z.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((double)(FO_Aisha_Z.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((FO_Raven_X.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((double)(FO_Raven_X.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((FO_Raven_Y.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((double)(FO_Raven_Y.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((FO_Raven_Z.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((double)(FO_Raven_Z.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((FO_Eve_X.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((double)(FO_Eve_X.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((FO_Eve_Y.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((double)(FO_Eve_Y.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((FO_Eve_Z.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((double)(FO_Eve_Z.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Can_HyperMode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(Can_HyperMode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Period_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((byte)(Period_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Period_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(Period_Type_));
            }
            if ((PERIODTYPE_C == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(PERIODTYPE_C));
            }
            if ((Endurance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((int)(Endurance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((EnduranceDamageMin.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((byte)(EnduranceDamageMin.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((EnduranceDamageMax.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((byte)(EnduranceDamageMax.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Repair_ED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((double)(Repair_ED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Repair_VP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((double)(Repair_VP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((int)(Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Price_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((byte)(Price_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Price_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(Price_Type_));
            }
            if ((PRICETYPE_C == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(PRICETYPE_C));
            }
            if ((Price == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(Price));
            }
            if ((Price_PvP_Point.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((int)(Price_PvP_Point.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Use_Condition.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((byte)(Use_Condition.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Use_Condition_ == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(Use_Condition_));
            }
            if ((USECONDITION_C == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(USECONDITION_C));
            }
            if ((Unit_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((byte)(Unit_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Unit_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(Unit_Type_));
            }
            if ((UNITTYPE_C == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(UNITTYPE_C));
            }
            if ((Unit_Class.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((byte)(Unit_Class.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Unit_Class_ == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(Unit_Class_));
            }
            if ((UNITCLASS_C == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(UNITCLASS_C));
            }
            if ((Use_Level.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((byte)(Use_Level.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Eqip_Position.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((byte)(Eqip_Position.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Eqip_Position_ == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(Eqip_Position_));
            }
            if ((EQIPPOSITION_C == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(EQIPPOSITION_C));
            }
            if ((Item_Grade.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((byte)(Item_Grade.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Item_Grade_ == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(Item_Grade_));
            }
            if ((ITEMGRADE_C == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(ITEMGRADE_C));
            }
            if ((BASE_HP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((int)(BASE_HP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((ATK_PHYSIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((int)(ATK_PHYSIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((ATK_MAGIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((int)(ATK_MAGIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((DEF_PHYSIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((int)(DEF_PHYSIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((DEF_MAGIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[81].Value = ((int)(DEF_MAGIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((SA_NUM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[82].Value = ((int)(SA_NUM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((SA_01.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[83].Value = ((int)(SA_01.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((SA_02.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[84].Value = ((int)(SA_02.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((SA_03.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((int)(SA_03.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((SA_04.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[86].Value = ((int)(SA_04.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((SA_05.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[87].Value = ((int)(SA_05.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((SA_06.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[88].Value = ((int)(SA_06.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((SA_07.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[89].Value = ((int)(SA_07.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((SA_08.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[90].Value = ((int)(SA_08.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((SA_09.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[91].Value = ((int)(SA_09.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((SA_10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[92].Value = ((int)(SA_10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((SO_01.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[93].Value = ((int)(SO_01.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((SO_02.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[94].Value = ((int)(SO_02.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((SO_03.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[95].Value = ((int)(SO_03.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((SO_04.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[96].Value = ((int)(SO_04.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((SO_05.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[97].Value = ((int)(SO_05.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((SO_06.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[98].Value = ((int)(SO_06.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((SO_07.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[99].Value = ((int)(SO_07.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((SO_08.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[100].Value = ((int)(SO_08.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((SO_09.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[101].Value = ((int)(SO_09.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((COOL_TIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[102].Value = ((byte)(COOL_TIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((SET_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[103].Value = ((int)(SET_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Can_Use_Inventory.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[104].Value = ((bool)(Can_Use_Inventory.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((NoEquip.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[105].Value = ((bool)(NoEquip.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((SLASH_TRACE_COLOR == null)) {
                this.Adapter.InsertCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[106].Value = ((string)(SLASH_TRACE_COLOR));
            }
            if ((SLASH_TRACE_TIP_COLOR == null)) {
                this.Adapter.InsertCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[107].Value = ((string)(SLASH_TRACE_TIP_COLOR));
            }
            if ((HYPER_SLASH_TRACE_COLOR == null)) {
                this.Adapter.InsertCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[108].Value = ((string)(HYPER_SLASH_TRACE_COLOR));
            }
            if ((HYPER_SLASH_TRACE_TIP_COLOR == null)) {
                this.Adapter.InsertCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[109].Value = ((string)(HYPER_SLASH_TRACE_TIP_COLOR));
            }
            if ((ELSWORD_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.InsertCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[110].Value = ((string)(ELSWORD_ITEM_SCALE_ROTATE));
            }
            if ((AISHA_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.InsertCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[111].Value = ((string)(AISHA_ITEM_SCALE_ROTATE));
            }
            if ((RENA_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.InsertCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[112].Value = ((string)(RENA_ITEM_SCALE_ROTATE));
            }
            if ((RAVEN_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.InsertCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[113].Value = ((string)(RAVEN_ITEM_SCALE_ROTATE));
            }
            if ((EVE_ITEM_SCALE_ROTATE == null)) {
                this.Adapter.InsertCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[114].Value = ((string)(EVE_ITEM_SCALE_ROTATE));
            }
            if ((ATTACHED_MESH_NAME1 == null)) {
                this.Adapter.InsertCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[115].Value = ((string)(ATTACHED_MESH_NAME1));
            }
            if ((ATTACHED_MESH_BONE_NAME1 == null)) {
                this.Adapter.InsertCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[116].Value = ((string)(ATTACHED_MESH_BONE_NAME1));
            }
            if ((ATTACHED_MESH_NAME2 == null)) {
                this.Adapter.InsertCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[117].Value = ((string)(ATTACHED_MESH_NAME2));
            }
            if ((ATTACHED_MESH_BONE_NAME2 == null)) {
                this.Adapter.InsertCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[118].Value = ((string)(ATTACHED_MESH_BONE_NAME2));
            }
            if ((ATTACHED_MESH_NAME3 == null)) {
                this.Adapter.InsertCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[119].Value = ((string)(ATTACHED_MESH_NAME3));
            }
            if ((ATTACHED_MESH_BONE_NAME3 == null)) {
                this.Adapter.InsertCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[120].Value = ((string)(ATTACHED_MESH_BONE_NAME3));
            }
            if ((ATTACHED_MESH_NAME4 == null)) {
                this.Adapter.InsertCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[121].Value = ((string)(ATTACHED_MESH_NAME4));
            }
            if ((ATTACHED_MESH_BONE_NAME4 == null)) {
                this.Adapter.InsertCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[122].Value = ((string)(ATTACHED_MESH_BONE_NAME4));
            }
            if ((ATTACHED_MESH_NAME5 == null)) {
                this.Adapter.InsertCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[123].Value = ((string)(ATTACHED_MESH_NAME5));
            }
            if ((ATTACHED_MESH_BONE_NAME5 == null)) {
                this.Adapter.InsertCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[124].Value = ((string)(ATTACHED_MESH_BONE_NAME5));
            }
            if ((Model_Name1 == null)) {
                this.Adapter.InsertCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[125].Value = ((string)(Model_Name1));
            }
            if ((Attach_FrameName1 == null)) {
                this.Adapter.InsertCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[126].Value = ((string)(Attach_FrameName1));
            }
            if ((ATTACHED_PARTICLE_NAME1 == null)) {
                this.Adapter.InsertCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[127].Value = ((string)(ATTACHED_PARTICLE_NAME1));
            }
            if ((ATTACHED_PARTICLE_BONE_NAME1 == null)) {
                this.Adapter.InsertCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[128].Value = ((string)(ATTACHED_PARTICLE_BONE_NAME1));
            }
            if ((ATTACHED_PARTICLE_NAME2 == null)) {
                this.Adapter.InsertCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[129].Value = ((string)(ATTACHED_PARTICLE_NAME2));
            }
            if ((ATTACHED_PARTICLE_BONE_NAME2 == null)) {
                this.Adapter.InsertCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[130].Value = ((string)(ATTACHED_PARTICLE_BONE_NAME2));
            }
            if ((UserID == null)) {
                this.Adapter.InsertCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[131].Value = ((string)(UserID));
            }
            if ((UserIP == null)) {
                this.Adapter.InsertCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[132].Value = ((string)(UserIP));
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[133].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SetItemTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SetItemTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SetItem";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("SetID", "SetID");
            tableMapping.ColumnMappings.Add("SetName", "SetName");
            tableMapping.ColumnMappings.Add("SetItem_Des", "SetItem_Des");
            tableMapping.ColumnMappings.Add("NeedPartsNum", "NeedPartsNum");
            tableMapping.ColumnMappings.Add("Option1", "Option1");
            tableMapping.ColumnMappings.Add("Option2", "Option2");
            tableMapping.ColumnMappings.Add("Option3", "Option3");
            tableMapping.ColumnMappings.Add("Option4", "Option4");
            tableMapping.ColumnMappings.Add("Option5", "Option5");
            tableMapping.ColumnMappings.Add("Option6", "Option6");
            tableMapping.ColumnMappings.Add("Option7", "Option7");
            tableMapping.ColumnMappings.Add("Option8", "Option8");
            tableMapping.ColumnMappings.Add("Option9", "Option9");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SetItem] WHERE (([IndexKey] = @Original_IndexKey) AND ([SetID] = @Original_SetID) AND ((@IsNull_SetName = 1 AND [SetName] IS NULL) OR ([SetName] = @Original_SetName)) AND ((@IsNull_SetItem_Des = 1 AND [SetItem_Des] IS NULL) OR ([SetItem_Des] = @Original_SetItem_Des)) AND ((@IsNull_NeedPartsNum = 1 AND [NeedPartsNum] IS NULL) OR ([NeedPartsNum] = @Original_NeedPartsNum)) AND ((@IsNull_Option1 = 1 AND [Option1] IS NULL) OR ([Option1] = @Original_Option1)) AND ((@IsNull_Option2 = 1 AND [Option2] IS NULL) OR ([Option2] = @Original_Option2)) AND ((@IsNull_Option3 = 1 AND [Option3] IS NULL) OR ([Option3] = @Original_Option3)) AND ((@IsNull_Option4 = 1 AND [Option4] IS NULL) OR ([Option4] = @Original_Option4)) AND ((@IsNull_Option5 = 1 AND [Option5] IS NULL) OR ([Option5] = @Original_Option5)) AND ((@IsNull_Option6 = 1 AND [Option6] IS NULL) OR ([Option6] = @Original_Option6)) AND ((@IsNull_Option7 = 1 AND [Option7] IS NULL) OR ([Option7] = @Original_Option7)) AND ((@IsNull_Option8 = 1 AND [Option8] IS NULL) OR ([Option8] = @Original_Option8)) AND ((@IsNull_Option9 = 1 AND [Option9] IS NULL) OR ([Option9] = @Original_Option9)) AND ((@IsNull_Regdate = 1 AND [Regdate] IS NULL) OR ([Regdate] = @Original_Regdate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SetName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SetItem_Des", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetItem_Des", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetItem_Des", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetItem_Des", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NeedPartsNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NeedPartsNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NeedPartsNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NeedPartsNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Regdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SetItem] ([IndexKey], [SetID], [SetName], [SetItem_Des], [NeedPartsNum], [Option1], [Option2], [Option3], [Option4], [Option5], [Option6], [Option7], [Option8], [Option9], [Regdate]) VALUES (@IndexKey, @SetID, @SetName, @SetItem_Des, @NeedPartsNum, @Option1, @Option2, @Option3, @Option4, @Option5, @Option6, @Option7, @Option8, @Option9, @Regdate);
SELECT IndexKey, SetID, SetName, SetItem_Des, NeedPartsNum, Option1, Option2, Option3, Option4, Option5, Option6, Option7, Option8, Option9, Regdate FROM SetItem WHERE (IndexKey = @IndexKey)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetItem_Des", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetItem_Des", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NeedPartsNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NeedPartsNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SetItem] SET [IndexKey] = @IndexKey, [SetID] = @SetID, [SetName] = " +
                "@SetName, [SetItem_Des] = @SetItem_Des, [NeedPartsNum] = @NeedPartsNum, [Option1" +
                "] = @Option1, [Option2] = @Option2, [Option3] = @Option3, [Option4] = @Option4, " +
                "[Option5] = @Option5, [Option6] = @Option6, [Option7] = @Option7, [Option8] = @O" +
                "ption8, [Option9] = @Option9, [Regdate] = @Regdate WHERE (([IndexKey] = @Origina" +
                "l_IndexKey) AND ([SetID] = @Original_SetID) AND ((@IsNull_SetName = 1 AND [SetNa" +
                "me] IS NULL) OR ([SetName] = @Original_SetName)) AND ((@IsNull_SetItem_Des = 1 A" +
                "ND [SetItem_Des] IS NULL) OR ([SetItem_Des] = @Original_SetItem_Des)) AND ((@IsN" +
                "ull_NeedPartsNum = 1 AND [NeedPartsNum] IS NULL) OR ([NeedPartsNum] = @Original_" +
                "NeedPartsNum)) AND ((@IsNull_Option1 = 1 AND [Option1] IS NULL) OR ([Option1] = " +
                "@Original_Option1)) AND ((@IsNull_Option2 = 1 AND [Option2] IS NULL) OR ([Option" +
                "2] = @Original_Option2)) AND ((@IsNull_Option3 = 1 AND [Option3] IS NULL) OR ([O" +
                "ption3] = @Original_Option3)) AND ((@IsNull_Option4 = 1 AND [Option4] IS NULL) O" +
                "R ([Option4] = @Original_Option4)) AND ((@IsNull_Option5 = 1 AND [Option5] IS NU" +
                "LL) OR ([Option5] = @Original_Option5)) AND ((@IsNull_Option6 = 1 AND [Option6] " +
                "IS NULL) OR ([Option6] = @Original_Option6)) AND ((@IsNull_Option7 = 1 AND [Opti" +
                "on7] IS NULL) OR ([Option7] = @Original_Option7)) AND ((@IsNull_Option8 = 1 AND " +
                "[Option8] IS NULL) OR ([Option8] = @Original_Option8)) AND ((@IsNull_Option9 = 1" +
                " AND [Option9] IS NULL) OR ([Option9] = @Original_Option9)) AND ((@IsNull_Regdat" +
                "e = 1 AND [Regdate] IS NULL) OR ([Regdate] = @Original_Regdate)));\r\nSELECT Index" +
                "Key, SetID, SetName, SetItem_Des, NeedPartsNum, Option1, Option2, Option3, Optio" +
                "n4, Option5, Option6, Option7, Option8, Option9, Regdate FROM SetItem WHERE (Ind" +
                "exKey = @IndexKey)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetItem_Des", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetItem_Des", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NeedPartsNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NeedPartsNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SetName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SetItem_Des", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetItem_Des", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetItem_Des", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetItem_Des", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NeedPartsNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NeedPartsNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NeedPartsNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NeedPartsNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Option9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Option9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Regdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT IndexKey, SetID, SetName, SetItem_Des, NeedPartsNum, Option1, Option2, Opt" +
                "ion3, Option4, Option5, Option6, Option7, Option8, Option9, Regdate FROM dbo.Set" +
                "Item";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE  SetItem\r\nSET         Regdate= @Regdate\r\nWHERE   (IndexKey = @Index); ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE  SetItem\r\nSET         SetName = @SetName\r\nWHERE   (IndexKey = @Index); ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetName", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SetName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.SetItemDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.SetItemDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.SetItemDataTable dataTable = new ScriptData_JPDataSet.SetItemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.SetItemDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SetItem");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_IndexKey, int Original_SetID, string Original_SetName, string Original_SetItem_Des, global::System.Nullable<int> Original_NeedPartsNum, global::System.Nullable<int> Original_Option1, global::System.Nullable<int> Original_Option2, global::System.Nullable<int> Original_Option3, global::System.Nullable<int> Original_Option4, global::System.Nullable<int> Original_Option5, global::System.Nullable<int> Original_Option6, global::System.Nullable<int> Original_Option7, global::System.Nullable<int> Original_Option8, global::System.Nullable<int> Original_Option9, global::System.Nullable<global::System.DateTime> Original_Regdate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IndexKey));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_SetID));
            if ((Original_SetName == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_SetName));
            }
            if ((Original_SetItem_Des == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_SetItem_Des));
            }
            if ((Original_NeedPartsNum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_NeedPartsNum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Option1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Option1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Option2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_Option2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Option3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_Option3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Option4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_Option4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Option5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_Option5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Option6.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_Option6.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Option7.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_Option7.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Option8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_Option8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Option9.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(Original_Option9.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Regdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((System.DateTime)(Original_Regdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int IndexKey, int SetID, string SetName, string SetItem_Des, global::System.Nullable<int> NeedPartsNum, global::System.Nullable<int> Option1, global::System.Nullable<int> Option2, global::System.Nullable<int> Option3, global::System.Nullable<int> Option4, global::System.Nullable<int> Option5, global::System.Nullable<int> Option6, global::System.Nullable<int> Option7, global::System.Nullable<int> Option8, global::System.Nullable<int> Option9, global::System.Nullable<global::System.DateTime> Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(SetID));
            if ((SetName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SetName));
            }
            if ((SetItem_Des == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SetItem_Des));
            }
            if ((NeedPartsNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(NeedPartsNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Option1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Option1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Option2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Option2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Option3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Option3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Option4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Option4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Option5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(Option5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Option6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(Option6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Option7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(Option7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Option8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(Option8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Option9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(Option9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IndexKey, 
                    int SetID, 
                    string SetName, 
                    string SetItem_Des, 
                    global::System.Nullable<int> NeedPartsNum, 
                    global::System.Nullable<int> Option1, 
                    global::System.Nullable<int> Option2, 
                    global::System.Nullable<int> Option3, 
                    global::System.Nullable<int> Option4, 
                    global::System.Nullable<int> Option5, 
                    global::System.Nullable<int> Option6, 
                    global::System.Nullable<int> Option7, 
                    global::System.Nullable<int> Option8, 
                    global::System.Nullable<int> Option9, 
                    global::System.Nullable<global::System.DateTime> Regdate, 
                    int Original_IndexKey, 
                    int Original_SetID, 
                    string Original_SetName, 
                    string Original_SetItem_Des, 
                    global::System.Nullable<int> Original_NeedPartsNum, 
                    global::System.Nullable<int> Original_Option1, 
                    global::System.Nullable<int> Original_Option2, 
                    global::System.Nullable<int> Original_Option3, 
                    global::System.Nullable<int> Original_Option4, 
                    global::System.Nullable<int> Original_Option5, 
                    global::System.Nullable<int> Original_Option6, 
                    global::System.Nullable<int> Original_Option7, 
                    global::System.Nullable<int> Original_Option8, 
                    global::System.Nullable<int> Original_Option9, 
                    global::System.Nullable<global::System.DateTime> Original_Regdate) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(SetID));
            if ((SetName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SetName));
            }
            if ((SetItem_Des == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SetItem_Des));
            }
            if ((NeedPartsNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(NeedPartsNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Option1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Option1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Option2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Option2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Option3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Option3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Option4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Option4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Option5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Option5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Option6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Option6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Option7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Option7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Option8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Option8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Option9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Option9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_IndexKey));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_SetID));
            if ((Original_SetName == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_SetName));
            }
            if ((Original_SetItem_Des == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_SetItem_Des));
            }
            if ((Original_NeedPartsNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_NeedPartsNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Option1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_Option1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Option2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_Option2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Option3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_Option3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Option4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_Option4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Option5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_Option5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Option6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_Option6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Option7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_Option7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_Option8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_Option8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_Option9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_Option9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_Regdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(Original_Regdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int SetID, 
                    string SetName, 
                    string SetItem_Des, 
                    global::System.Nullable<int> NeedPartsNum, 
                    global::System.Nullable<int> Option1, 
                    global::System.Nullable<int> Option2, 
                    global::System.Nullable<int> Option3, 
                    global::System.Nullable<int> Option4, 
                    global::System.Nullable<int> Option5, 
                    global::System.Nullable<int> Option6, 
                    global::System.Nullable<int> Option7, 
                    global::System.Nullable<int> Option8, 
                    global::System.Nullable<int> Option9, 
                    global::System.Nullable<global::System.DateTime> Regdate, 
                    int Original_IndexKey, 
                    int Original_SetID, 
                    string Original_SetName, 
                    string Original_SetItem_Des, 
                    global::System.Nullable<int> Original_NeedPartsNum, 
                    global::System.Nullable<int> Original_Option1, 
                    global::System.Nullable<int> Original_Option2, 
                    global::System.Nullable<int> Original_Option3, 
                    global::System.Nullable<int> Original_Option4, 
                    global::System.Nullable<int> Original_Option5, 
                    global::System.Nullable<int> Original_Option6, 
                    global::System.Nullable<int> Original_Option7, 
                    global::System.Nullable<int> Original_Option8, 
                    global::System.Nullable<int> Original_Option9, 
                    global::System.Nullable<global::System.DateTime> Original_Regdate) {
            return this.Update(Original_IndexKey, SetID, SetName, SetItem_Des, NeedPartsNum, Option1, Option2, Option3, Option4, Option5, Option6, Option7, Option8, Option9, Regdate, Original_IndexKey, Original_SetID, Original_SetName, Original_SetItem_Des, Original_NeedPartsNum, Original_Option1, Original_Option2, Original_Option3, Original_Option4, Original_Option5, Original_Option6, Original_Option7, Original_Option8, Original_Option9, Original_Regdate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateSetItem_Regdate(global::System.Nullable<global::System.DateTime> Regdate, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Regdate.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateSetItem_SetName(string SetName, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((SetName == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(SetName));
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SetItem_HistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SetItem_HistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SetItem_History";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("SetId", "SetId");
            tableMapping.ColumnMappings.Add("SetName", "SetName");
            tableMapping.ColumnMappings.Add("SetItem_Des", "SetItem_Des");
            tableMapping.ColumnMappings.Add("NeedPartsNum", "NeedPartsNum");
            tableMapping.ColumnMappings.Add("Option1", "Option1");
            tableMapping.ColumnMappings.Add("Option2", "Option2");
            tableMapping.ColumnMappings.Add("Option3", "Option3");
            tableMapping.ColumnMappings.Add("Option4", "Option4");
            tableMapping.ColumnMappings.Add("Option5", "Option5");
            tableMapping.ColumnMappings.Add("Option6", "Option6");
            tableMapping.ColumnMappings.Add("Option7", "Option7");
            tableMapping.ColumnMappings.Add("Option8", "Option8");
            tableMapping.ColumnMappings.Add("Option9", "Option9");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserIP", "UserIP");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SetItem_History] ([IndexKey], [SetId], [SetName], [SetItem_Des], [NeedPartsNum], [Option1], [Option2], [Option3], [Option4], [Option5], [Option6], [Option7], [Option8], [Option9], [UserID], [UserIP], [Regdate]) VALUES (@IndexKey, @SetId, @SetName, @SetItem_Des, @NeedPartsNum, @Option1, @Option2, @Option3, @Option4, @Option5, @Option6, @Option7, @Option8, @Option9, @UserID, @UserIP, @Regdate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetItem_Des", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetItem_Des", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NeedPartsNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NeedPartsNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Option9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Option9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserIP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT IndexKey, SetId, SetName, SetItem_Des, NeedPartsNum, Option1, Option2, Opt" +
                "ion3, Option4, Option5, Option6, Option7, Option8, Option9, UserID, UserIP, Regd" +
                "ate FROM dbo.SetItem_History";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.SetItem_HistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.SetItem_HistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.SetItem_HistoryDataTable dataTable = new ScriptData_JPDataSet.SetItem_HistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.SetItem_HistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SetItem_History");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IndexKey, 
                    int SetId, 
                    string SetName, 
                    string SetItem_Des, 
                    global::System.Nullable<int> NeedPartsNum, 
                    global::System.Nullable<int> Option1, 
                    global::System.Nullable<int> Option2, 
                    global::System.Nullable<int> Option3, 
                    global::System.Nullable<int> Option4, 
                    global::System.Nullable<int> Option5, 
                    global::System.Nullable<int> Option6, 
                    global::System.Nullable<int> Option7, 
                    global::System.Nullable<int> Option8, 
                    global::System.Nullable<int> Option9, 
                    string UserID, 
                    string UserIP, 
                    global::System.Nullable<global::System.DateTime> Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(SetId));
            if ((SetName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SetName));
            }
            if ((SetItem_Des == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SetItem_Des));
            }
            if ((NeedPartsNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(NeedPartsNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Option1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Option1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Option2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Option2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Option3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Option3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Option4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Option4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Option5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(Option5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Option6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(Option6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Option7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(Option7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Option8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(Option8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Option9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(Option9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((UserID == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(UserID));
            }
            if ((UserIP == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(UserIP));
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QuestTableTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QuestTableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QuestTable";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Enable Quest", "Enable Quest");
            tableMapping.ColumnMappings.Add("Quest Type", "Quest Type");
            tableMapping.ColumnMappings.Add("Start NPC Name", "Start NPC Name");
            tableMapping.ColumnMappings.Add("End NPC Name", "End NPC Name");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("Fair Level", "Fair Level");
            tableMapping.ColumnMappings.Add("Fair Dungeon ID", "Fair Dungeon ID");
            tableMapping.ColumnMappings.Add("Quest Repeat", "Quest Repeat");
            tableMapping.ColumnMappings.Add("Condition Lv", "Condition Lv");
            tableMapping.ColumnMappings.Add("Condition Unit Type", "Condition Unit Type");
            tableMapping.ColumnMappings.Add("Condition Unit Class", "Condition Unit Class");
            tableMapping.ColumnMappings.Add("Reward Unit Class", "Reward Unit Class");
            tableMapping.ColumnMappings.Add("Change Job Type", "Change Job Type");
            tableMapping.ColumnMappings.Add("Condition Item ID", "Condition Item ID");
            tableMapping.ColumnMappings.Add("Condition Item Quantity", "Condition Item Quantity");
            tableMapping.ColumnMappings.Add("SubQuest1", "SubQuest1");
            tableMapping.ColumnMappings.Add("SubQuest2", "SubQuest2");
            tableMapping.ColumnMappings.Add("SubQuest3", "SubQuest3");
            tableMapping.ColumnMappings.Add("SubQuest4", "SubQuest4");
            tableMapping.ColumnMappings.Add("SubQUest5", "SubQUest5");
            tableMapping.ColumnMappings.Add("Reward Enable", "Reward Enable");
            tableMapping.ColumnMappings.Add("Reward EXP", "Reward EXP");
            tableMapping.ColumnMappings.Add("Reward ED", "Reward ED");
            tableMapping.ColumnMappings.Add("Reward Grade", "Reward Grade");
            tableMapping.ColumnMappings.Add("Reward Buff", "Reward Buff");
            tableMapping.ColumnMappings.Add("Reward SP", "Reward SP");
            tableMapping.ColumnMappings.Add("Reward Item1", "Reward Item1");
            tableMapping.ColumnMappings.Add("name1", "name1");
            tableMapping.ColumnMappings.Add("Period 1", "Period 1");
            tableMapping.ColumnMappings.Add("Reward ItemQuantity1", "Reward ItemQuantity1");
            tableMapping.ColumnMappings.Add("Socket Option1", "Socket Option1");
            tableMapping.ColumnMappings.Add("Reward Item2", "Reward Item2");
            tableMapping.ColumnMappings.Add("name2", "name2");
            tableMapping.ColumnMappings.Add("Period 2", "Period 2");
            tableMapping.ColumnMappings.Add("Reward ItemQuantity2", "Reward ItemQuantity2");
            tableMapping.ColumnMappings.Add("Socket Option2", "Socket Option2");
            tableMapping.ColumnMappings.Add("Reward Item3", "Reward Item3");
            tableMapping.ColumnMappings.Add("name3", "name3");
            tableMapping.ColumnMappings.Add("Period 3", "Period 3");
            tableMapping.ColumnMappings.Add("Reward ItemQuantity3", "Reward ItemQuantity3");
            tableMapping.ColumnMappings.Add("Socket Option3", "Socket Option3");
            tableMapping.ColumnMappings.Add("Select Reward Item1", "Select Reward Item1");
            tableMapping.ColumnMappings.Add("name1_1", "name1_1");
            tableMapping.ColumnMappings.Add("Select Period1", "Select Period1");
            tableMapping.ColumnMappings.Add("Select Reward ItemQuantity1", "Select Reward ItemQuantity1");
            tableMapping.ColumnMappings.Add("Select Socket Option1", "Select Socket Option1");
            tableMapping.ColumnMappings.Add("Select Reward Item2", "Select Reward Item2");
            tableMapping.ColumnMappings.Add("name2_1", "name2_1");
            tableMapping.ColumnMappings.Add("Select Period2", "Select Period2");
            tableMapping.ColumnMappings.Add("Select Reward ItemQuantity2", "Select Reward ItemQuantity2");
            tableMapping.ColumnMappings.Add("Select Socket Option2", "Select Socket Option2");
            tableMapping.ColumnMappings.Add("Select Reward Item3", "Select Reward Item3");
            tableMapping.ColumnMappings.Add("name3_1", "name3_1");
            tableMapping.ColumnMappings.Add("Select Period3", "Select Period3");
            tableMapping.ColumnMappings.Add("Select Reward ItemQuantity3", "Select Reward ItemQuantity3");
            tableMapping.ColumnMappings.Add("Select Socket Option3", "Select Socket Option3");
            tableMapping.ColumnMappings.Add("Select Reward Item4", "Select Reward Item4");
            tableMapping.ColumnMappings.Add("name4_1", "name4_1");
            tableMapping.ColumnMappings.Add("Select Period4", "Select Period4");
            tableMapping.ColumnMappings.Add("Select Reward ItemQuantity4", "Select Reward ItemQuantity4");
            tableMapping.ColumnMappings.Add("Select Socket Option4", "Select Socket Option4");
            tableMapping.ColumnMappings.Add("Select Reward Item5", "Select Reward Item5");
            tableMapping.ColumnMappings.Add("name5_1", "name5_1");
            tableMapping.ColumnMappings.Add("Select Period5", "Select Period5");
            tableMapping.ColumnMappings.Add("Select Reward ItemQuantity5", "Select Reward ItemQuantity5");
            tableMapping.ColumnMappings.Add("Select Socket Option5", "Select Socket Option5");
            tableMapping.ColumnMappings.Add("Select Reward ItemCount", "Select Reward ItemCount");
            tableMapping.ColumnMappings.Add("Main Text", "Main Text");
            tableMapping.ColumnMappings.Add("Thanks Text", "Thanks Text");
            tableMapping.ColumnMappings.Add("Diss Clear Text", "Diss Clear Text");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 1", "Condition ClearQuest ID 1");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 2", "Condition ClearQuest ID 2");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 3", "Condition ClearQuest ID 3");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 4", "Condition ClearQuest ID 4");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 5", "Condition ClearQuest ID 5");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 6", "Condition ClearQuest ID 6");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 7", "Condition ClearQuest ID 7");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 8", "Condition ClearQuest ID 8");
            tableMapping.ColumnMappings.Add("Condition DisClearQuest ID", "Condition DisClearQuest ID");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QuestTable] WHERE (([IndexKey] = @Original_IndexKey) AND ((@Is" +
                "Null_ID = 1 AND [ID] IS NULL) OR ([ID] = @Original_ID)) AND ((@IsNull_Enable_Que" +
                "st = 1 AND [Enable Quest] IS NULL) OR ([Enable Quest] = @Original_Enable_Quest))" +
                " AND ((@IsNull_Quest_Type = 1 AND [Quest Type] IS NULL) OR ([Quest Type] = @Orig" +
                "inal_Quest_Type)) AND ((@IsNull_Start_NPC_Name = 1 AND [Start NPC Name] IS NULL)" +
                " OR ([Start NPC Name] = @Original_Start_NPC_Name)) AND ((@IsNull_End_NPC_Name = " +
                "1 AND [End NPC Name] IS NULL) OR ([End NPC Name] = @Original_End_NPC_Name)) AND " +
                "((@IsNull_Title = 1 AND [Title] IS NULL) OR ([Title] = @Original_Title)) AND ((@" +
                "IsNull_Fair_Level = 1 AND [Fair Level] IS NULL) OR ([Fair Level] = @Original_Fai" +
                "r_Level)) AND ((@IsNull_Fair_Dungeon_ID = 1 AND [Fair Dungeon ID] IS NULL) OR ([" +
                "Fair Dungeon ID] = @Original_Fair_Dungeon_ID)) AND ((@IsNull_Quest_Repeat = 1 AN" +
                "D [Quest Repeat] IS NULL) OR ([Quest Repeat] = @Original_Quest_Repeat)) AND ((@I" +
                "sNull_Condition_Lv = 1 AND [Condition Lv] IS NULL) OR ([Condition Lv] = @Origina" +
                "l_Condition_Lv)) AND ((@IsNull_Condition_Unit_Type = 1 AND [Condition Unit Type]" +
                " IS NULL) OR ([Condition Unit Type] = @Original_Condition_Unit_Type)) AND ((@IsN" +
                "ull_Condition_Unit_Class = 1 AND [Condition Unit Class] IS NULL) OR ([Condition " +
                "Unit Class] = @Original_Condition_Unit_Class)) AND ((@IsNull_Reward_Unit_Class =" +
                " 1 AND [Reward Unit Class] IS NULL) OR ([Reward Unit Class] = @Original_Reward_U" +
                "nit_Class)) AND ((@IsNull_Change_Job_Type = 1 AND [Change Job Type] IS NULL) OR " +
                "([Change Job Type] = @Original_Change_Job_Type)) AND ((@IsNull_Condition_Item_ID" +
                " = 1 AND [Condition Item ID] IS NULL) OR ([Condition Item ID] = @Original_Condit" +
                "ion_Item_ID)) AND ((@IsNull_Condition_Item_Quantity = 1 AND [Condition Item Quan" +
                "tity] IS NULL) OR ([Condition Item Quantity] = @Original_Condition_Item_Quantity" +
                ")) AND ((@IsNull_SubQuest1 = 1 AND [SubQuest1] IS NULL) OR ([SubQuest1] = @Origi" +
                "nal_SubQuest1)) AND ((@IsNull_SubQuest2 = 1 AND [SubQuest2] IS NULL) OR ([SubQue" +
                "st2] = @Original_SubQuest2)) AND ((@IsNull_SubQuest3 = 1 AND [SubQuest3] IS NULL" +
                ") OR ([SubQuest3] = @Original_SubQuest3)) AND ((@IsNull_SubQuest4 = 1 AND [SubQu" +
                "est4] IS NULL) OR ([SubQuest4] = @Original_SubQuest4)) AND ((@IsNull_SubQUest5 =" +
                " 1 AND [SubQUest5] IS NULL) OR ([SubQUest5] = @Original_SubQUest5)) AND ((@IsNul" +
                "l_Reward_Enable = 1 AND [Reward Enable] IS NULL) OR ([Reward Enable] = @Original" +
                "_Reward_Enable)) AND ((@IsNull_Reward_EXP = 1 AND [Reward EXP] IS NULL) OR ([Rew" +
                "ard EXP] = @Original_Reward_EXP)) AND ((@IsNull_Reward_ED = 1 AND [Reward ED] IS" +
                " NULL) OR ([Reward ED] = @Original_Reward_ED)) AND ((@IsNull_Reward_Grade = 1 AN" +
                "D [Reward Grade] IS NULL) OR ([Reward Grade] = @Original_Reward_Grade)) AND ((@I" +
                "sNull_Reward_Buff = 1 AND [Reward Buff] IS NULL) OR ([Reward Buff] = @Original_R" +
                "eward_Buff)) AND ((@IsNull_Reward_SP = 1 AND [Reward SP] IS NULL) OR ([Reward SP" +
                "] = @Original_Reward_SP)) AND ((@IsNull_Reward_Item1 = 1 AND [Reward Item1] IS N" +
                "ULL) OR ([Reward Item1] = @Original_Reward_Item1)) AND ((@IsNull_name1 = 1 AND [" +
                "name1] IS NULL) OR ([name1] = @Original_name1)) AND ((@IsNull_Period_1 = 1 AND [" +
                "Period 1] IS NULL) OR ([Period 1] = @Original_Period_1)) AND ((@IsNull_Reward_It" +
                "emQuantity1 = 1 AND [Reward ItemQuantity1] IS NULL) OR ([Reward ItemQuantity1] =" +
                " @Original_Reward_ItemQuantity1)) AND ((@IsNull_Socket_Option1 = 1 AND [Socket O" +
                "ption1] IS NULL) OR ([Socket Option1] = @Original_Socket_Option1)) AND ((@IsNull" +
                "_Reward_Item2 = 1 AND [Reward Item2] IS NULL) OR ([Reward Item2] = @Original_Rew" +
                "ard_Item2)) AND ((@IsNull_name2 = 1 AND [name2] IS NULL) OR ([name2] = @Original" +
                "_name2)) AND ((@IsNull_Period_2 = 1 AND [Period 2] IS NULL) OR ([Period 2] = @Or" +
                "iginal_Period_2)) AND ((@IsNull_Reward_ItemQuantity2 = 1 AND [Reward ItemQuantit" +
                "y2] IS NULL) OR ([Reward ItemQuantity2] = @Original_Reward_ItemQuantity2)) AND (" +
                "(@IsNull_Socket_Option2 = 1 AND [Socket Option2] IS NULL) OR ([Socket Option2] =" +
                " @Original_Socket_Option2)) AND ((@IsNull_Reward_Item3 = 1 AND [Reward Item3] IS" +
                " NULL) OR ([Reward Item3] = @Original_Reward_Item3)) AND ((@IsNull_name3 = 1 AND" +
                " [name3] IS NULL) OR ([name3] = @Original_name3)) AND ((@IsNull_Period_3 = 1 AND" +
                " [Period 3] IS NULL) OR ([Period 3] = @Original_Period_3)) AND ((@IsNull_Reward_" +
                "ItemQuantity3 = 1 AND [Reward ItemQuantity3] IS NULL) OR ([Reward ItemQuantity3]" +
                " = @Original_Reward_ItemQuantity3)) AND ((@IsNull_Socket_Option3 = 1 AND [Socket" +
                " Option3] IS NULL) OR ([Socket Option3] = @Original_Socket_Option3)) AND ((@IsNu" +
                "ll_Select_Reward_Item1 = 1 AND [Select Reward Item1] IS NULL) OR ([Select Reward" +
                " Item1] = @Original_Select_Reward_Item1)) AND ((@IsNull_name1_1 = 1 AND [name1_1" +
                "] IS NULL) OR ([name1_1] = @Original_name1_1)) AND ((@IsNull_Select_Period1 = 1 " +
                "AND [Select Period1] IS NULL) OR ([Select Period1] = @Original_Select_Period1)) " +
                "AND ((@IsNull_Select_Reward_ItemQuantity1 = 1 AND [Select Reward ItemQuantity1] " +
                "IS NULL) OR ([Select Reward ItemQuantity1] = @Original_Select_Reward_ItemQuantit" +
                "y1)) AND ((@IsNull_Select_Socket_Option1 = 1 AND [Select Socket Option1] IS NULL" +
                ") OR ([Select Socket Option1] = @Original_Select_Socket_Option1)) AND ((@IsNull_" +
                "Select_Reward_Item2 = 1 AND [Select Reward Item2] IS NULL) OR ([Select Reward It" +
                "em2] = @Original_Select_Reward_Item2)) AND ((@IsNull_name2_1 = 1 AND [name2_1] I" +
                "S NULL) OR ([name2_1] = @Original_name2_1)) AND ((@IsNull_Select_Period2 = 1 AND" +
                " [Select Period2] IS NULL) OR ([Select Period2] = @Original_Select_Period2)) AND" +
                " ((@IsNull_Select_Reward_ItemQuantity2 = 1 AND [Select Reward ItemQuantity2] IS " +
                "NULL) OR ([Select Reward ItemQuantity2] = @Original_Select_Reward_ItemQuantity2)" +
                ") AND ((@IsNull_Select_Socket_Option2 = 1 AND [Select Socket Option2] IS NULL) O" +
                "R ([Select Socket Option2] = @Original_Select_Socket_Option2)) AND ((@IsNull_Sel" +
                "ect_Reward_Item3 = 1 AND [Select Reward Item3] IS NULL) OR ([Select Reward Item3" +
                "] = @Original_Select_Reward_Item3)) AND ((@IsNull_name3_1 = 1 AND [name3_1] IS N" +
                "ULL) OR ([name3_1] = @Original_name3_1)) AND ((@IsNull_Select_Period3 = 1 AND [S" +
                "elect Period3] IS NULL) OR ([Select Period3] = @Original_Select_Period3)) AND ((" +
                "@IsNull_Select_Reward_ItemQuantity3 = 1 AND [Select Reward ItemQuantity3] IS NUL" +
                "L) OR ([Select Reward ItemQuantity3] = @Original_Select_Reward_ItemQuantity3)) A" +
                "ND ((@IsNull_Select_Socket_Option3 = 1 AND [Select Socket Option3] IS NULL) OR (" +
                "[Select Socket Option3] = @Original_Select_Socket_Option3)) AND ((@IsNull_Select" +
                "_Reward_Item4 = 1 AND [Select Reward Item4] IS NULL) OR ([Select Reward Item4] =" +
                " @Original_Select_Reward_Item4)) AND ((@IsNull_name4_1 = 1 AND [name4_1] IS NULL" +
                ") OR ([name4_1] = @Original_name4_1)) AND ((@IsNull_Select_Period4 = 1 AND [Sele" +
                "ct Period4] IS NULL) OR ([Select Period4] = @Original_Select_Period4)) AND ((@Is" +
                "Null_Select_Reward_ItemQuantity4 = 1 AND [Select Reward ItemQuantity4] IS NULL) " +
                "OR ([Select Reward ItemQuantity4] = @Original_Select_Reward_ItemQuantity4)) AND " +
                "((@IsNull_Select_Socket_Option4 = 1 AND [Select Socket Option4] IS NULL) OR ([Se" +
                "lect Socket Option4] = @Original_Select_Socket_Option4)) AND ((@IsNull_Select_Re" +
                "ward_Item5 = 1 AND [Select Reward Item5] IS NULL) OR ([Select Reward Item5] = @O" +
                "riginal_Select_Reward_Item5)) AND ((@IsNull_name5_1 = 1 AND [name5_1] IS NULL) O" +
                "R ([name5_1] = @Original_name5_1)) AND ((@IsNull_Select_Period5 = 1 AND [Select " +
                "Period5] IS NULL) OR ([Select Period5] = @Original_Select_Period5)) AND ((@IsNul" +
                "l_Select_Reward_ItemQuantity5 = 1 AND [Select Reward ItemQuantity5] IS NULL) OR " +
                "([Select Reward ItemQuantity5] = @Original_Select_Reward_ItemQuantity5)) AND ((@" +
                "IsNull_Select_Socket_Option5 = 1 AND [Select Socket Option5] IS NULL) OR ([Selec" +
                "t Socket Option5] = @Original_Select_Socket_Option5)) AND ((@IsNull_Select_Rewar" +
                "d_ItemCount = 1 AND [Select Reward ItemCount] IS NULL) OR ([Select Reward ItemCo" +
                "unt] = @Original_Select_Reward_ItemCount)) AND ((@IsNull_Main_Text = 1 AND [Main" +
                " Text] IS NULL) OR ([Main Text] = @Original_Main_Text)) AND ((@IsNull_Thanks_Tex" +
                "t = 1 AND [Thanks Text] IS NULL) OR ([Thanks Text] = @Original_Thanks_Text)) AND" +
                " ((@IsNull_Diss_Clear_Text = 1 AND [Diss Clear Text] IS NULL) OR ([Diss Clear Te" +
                "xt] = @Original_Diss_Clear_Text)) AND ((@IsNull_Condition_ClearQuest_ID_1 = 1 AN" +
                "D [Condition ClearQuest ID 1] IS NULL) OR ([Condition ClearQuest ID 1] = @Origin" +
                "al_Condition_ClearQuest_ID_1)) AND ((@IsNull_Condition_ClearQuest_ID_2 = 1 AND [" +
                "Condition ClearQuest ID 2] IS NULL) OR ([Condition ClearQuest ID 2] = @Original_" +
                "Condition_ClearQuest_ID_2)) AND ((@IsNull_Condition_ClearQuest_ID_3 = 1 AND [Con" +
                "dition ClearQuest ID 3] IS NULL) OR ([Condition ClearQuest ID 3] = @Original_Con" +
                "dition_ClearQuest_ID_3)) AND ((@IsNull_Condition_ClearQuest_ID_4 = 1 AND [Condit" +
                "ion ClearQuest ID 4] IS NULL) OR ([Condition ClearQuest ID 4] = @Original_Condit" +
                "ion_ClearQuest_ID_4)) AND ((@IsNull_Condition_ClearQuest_ID_5 = 1 AND [Condition" +
                " ClearQuest ID 5] IS NULL) OR ([Condition ClearQuest ID 5] = @Original_Condition" +
                "_ClearQuest_ID_5)) AND ((@IsNull_Condition_ClearQuest_ID_6 = 1 AND [Condition Cl" +
                "earQuest ID 6] IS NULL) OR ([Condition ClearQuest ID 6] = @Original_Condition_Cl" +
                "earQuest_ID_6)) AND ((@IsNull_Condition_ClearQuest_ID_7 = 1 AND [Condition Clear" +
                "Quest ID 7] IS NULL) OR ([Condition ClearQuest ID 7] = @Original_Condition_Clear" +
                "Quest_ID_7)) AND ((@IsNull_Condition_ClearQuest_ID_8 = 1 AND [Condition ClearQue" +
                "st ID 8] IS NULL) OR ([Condition ClearQuest ID 8] = @Original_Condition_ClearQue" +
                "st_ID_8)) AND ((@IsNull_Condition_DisClearQuest_ID = 1 AND [Condition DisClearQu" +
                "est ID] IS NULL) OR ([Condition DisClearQuest ID] = @Original_Condition_DisClear" +
                "Quest_ID)) AND ([Regdate] = @Original_Regdate))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Enable_Quest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enable Quest", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Enable_Quest", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enable Quest", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quest_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quest_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Start_NPC_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start NPC Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Start_NPC_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start NPC Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_End_NPC_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End NPC Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_End_NPC_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End NPC Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Title", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fair_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fair Level", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fair_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fair Level", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fair_Dungeon_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fair Dungeon ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fair_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fair Dungeon ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quest_Repeat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Repeat", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quest_Repeat", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Repeat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Lv", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Lv", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Lv", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Lv", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Class", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Unit Class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Unit_Class", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Unit Class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Change_Job_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change Job Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Change_Job_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change Job Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Item ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Item ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Item Quantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Item Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubQuest1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubQuest1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubQuest2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubQuest2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubQuest3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubQuest3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubQuest4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubQuest4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubQUest5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQUest5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubQUest5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQUest5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Enable", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Enable", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Enable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Enable", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_EXP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward EXP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_EXP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward EXP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_ED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_ED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Grade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Grade", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Grade", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Grade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Buff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Buff", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Buff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Buff", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_SP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward SP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_SP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward SP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Item1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Item1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Period_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Period_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_ItemQuantity1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_ItemQuantity1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Item2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Item2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Period_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Period_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_ItemQuantity2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_ItemQuantity2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Item3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Item3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Period_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Period_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_ItemQuantity3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_ItemQuantity3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_Item1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_Item1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name1_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name1_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name1_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name1_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Period1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Period1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_ItemQuantity1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_ItemQuantity1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Socket_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Socket_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_Item2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_Item2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name2_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name2_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name2_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name2_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Period2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Period2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_ItemQuantity2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_ItemQuantity2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Socket_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Socket_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_Item3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_Item3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name3_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name3_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name3_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name3_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Period3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Period3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_ItemQuantity3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_ItemQuantity3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Socket_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Socket_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_Item4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_Item4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name4_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name4_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name4_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name4_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Period4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Period4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_ItemQuantity4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_ItemQuantity4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Socket_Option4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Socket_Option4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_Item5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_Item5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name5_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name5_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name5_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name5_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Period5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Period5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_ItemQuantity5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_ItemQuantity5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Socket_Option5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Socket_Option5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_ItemCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_ItemCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Main_Text", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Main Text", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Main_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Main Text", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Thanks_Text", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thanks Text", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Thanks_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thanks Text", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Diss_Clear_Text", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diss Clear Text", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Diss_Clear_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diss Clear Text", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_DisClearQuest_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition DisClearQuest ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_DisClearQuest_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition DisClearQuest ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[QuestTable] ([IndexKey], [ID], [Enable Quest], [Quest Type], [" +
                "Start NPC Name], [End NPC Name], [Title], [Fair Level], [Fair Dungeon ID], [Ques" +
                "t Repeat], [Condition Lv], [Condition Unit Type], [Condition Unit Class], [Rewar" +
                "d Unit Class], [Change Job Type], [Condition Item ID], [Condition Item Quantity]" +
                ", [SubQuest1], [SubQuest2], [SubQuest3], [SubQuest4], [SubQUest5], [Reward Enabl" +
                "e], [Reward EXP], [Reward ED], [Reward Grade], [Reward Buff], [Reward SP], [Rewa" +
                "rd Item1], [name1], [Period 1], [Reward ItemQuantity1], [Socket Option1], [Rewar" +
                "d Item2], [name2], [Period 2], [Reward ItemQuantity2], [Socket Option2], [Reward" +
                " Item3], [name3], [Period 3], [Reward ItemQuantity3], [Socket Option3], [Select " +
                "Reward Item1], [name1_1], [Select Period1], [Select Reward ItemQuantity1], [Sele" +
                "ct Socket Option1], [Select Reward Item2], [name2_1], [Select Period2], [Select " +
                "Reward ItemQuantity2], [Select Socket Option2], [Select Reward Item3], [name3_1]" +
                ", [Select Period3], [Select Reward ItemQuantity3], [Select Socket Option3], [Sel" +
                "ect Reward Item4], [name4_1], [Select Period4], [Select Reward ItemQuantity4], [" +
                "Select Socket Option4], [Select Reward Item5], [name5_1], [Select Period5], [Sel" +
                "ect Reward ItemQuantity5], [Select Socket Option5], [Select Reward ItemCount], [" +
                "Main Text], [Thanks Text], [Diss Clear Text], [Condition ClearQuest ID 1], [Cond" +
                "ition ClearQuest ID 2], [Condition ClearQuest ID 3], [Condition ClearQuest ID 4]" +
                ", [Condition ClearQuest ID 5], [Condition ClearQuest ID 6], [Condition ClearQues" +
                "t ID 7], [Condition ClearQuest ID 8], [Condition DisClearQuest ID], [Regdate]) V" +
                "ALUES (@IndexKey, @ID, @Enable_Quest, @Quest_Type, @Start_NPC_Name, @End_NPC_Nam" +
                "e, @Title, @Fair_Level, @Fair_Dungeon_ID, @Quest_Repeat, @Condition_Lv, @Conditi" +
                "on_Unit_Type, @Condition_Unit_Class, @Reward_Unit_Class, @Change_Job_Type, @Cond" +
                "ition_Item_ID, @Condition_Item_Quantity, @SubQuest1, @SubQuest2, @SubQuest3, @Su" +
                "bQuest4, @SubQUest5, @Reward_Enable, @Reward_EXP, @Reward_ED, @Reward_Grade, @Re" +
                "ward_Buff, @Reward_SP, @Reward_Item1, @name1, @Period_1, @Reward_ItemQuantity1, " +
                "@Socket_Option1, @Reward_Item2, @name2, @Period_2, @Reward_ItemQuantity2, @Socke" +
                "t_Option2, @Reward_Item3, @name3, @Period_3, @Reward_ItemQuantity3, @Socket_Opti" +
                "on3, @Select_Reward_Item1, @name1_1, @Select_Period1, @Select_Reward_ItemQuantit" +
                "y1, @Select_Socket_Option1, @Select_Reward_Item2, @name2_1, @Select_Period2, @Se" +
                "lect_Reward_ItemQuantity2, @Select_Socket_Option2, @Select_Reward_Item3, @name3_" +
                "1, @Select_Period3, @Select_Reward_ItemQuantity3, @Select_Socket_Option3, @Selec" +
                "t_Reward_Item4, @name4_1, @Select_Period4, @Select_Reward_ItemQuantity4, @Select" +
                "_Socket_Option4, @Select_Reward_Item5, @name5_1, @Select_Period5, @Select_Reward" +
                "_ItemQuantity5, @Select_Socket_Option5, @Select_Reward_ItemCount, @Main_Text, @T" +
                "hanks_Text, @Diss_Clear_Text, @Condition_ClearQuest_ID_1, @Condition_ClearQuest_" +
                "ID_2, @Condition_ClearQuest_ID_3, @Condition_ClearQuest_ID_4, @Condition_ClearQu" +
                "est_ID_5, @Condition_ClearQuest_ID_6, @Condition_ClearQuest_ID_7, @Condition_Cle" +
                "arQuest_ID_8, @Condition_DisClearQuest_ID, @Regdate);\r\nSELECT IndexKey, ID, [Ena" +
                "ble Quest], [Quest Type], [Start NPC Name], [End NPC Name], Title, [Fair Level]," +
                " [Fair Dungeon ID], [Quest Repeat], [Condition Lv], [Condition Unit Type], [Cond" +
                "ition Unit Class], [Reward Unit Class], [Change Job Type], [Condition Item ID], " +
                "[Condition Item Quantity], SubQuest1, SubQuest2, SubQuest3, SubQuest4, SubQUest5" +
                ", [Reward Enable], [Reward EXP], [Reward ED], [Reward Grade], [Reward Buff], [Re" +
                "ward SP], [Reward Item1], name1, [Period 1], [Reward ItemQuantity1], [Socket Opt" +
                "ion1], [Reward Item2], name2, [Period 2], [Reward ItemQuantity2], [Socket Option" +
                "2], [Reward Item3], name3, [Period 3], [Reward ItemQuantity3], [Socket Option3]," +
                " [Select Reward Item1], name1_1, [Select Period1], [Select Reward ItemQuantity1]" +
                ", [Select Socket Option1], [Select Reward Item2], name2_1, [Select Period2], [Se" +
                "lect Reward ItemQuantity2], [Select Socket Option2], [Select Reward Item3], name" +
                "3_1, [Select Period3], [Select Reward ItemQuantity3], [Select Socket Option3], [" +
                "Select Reward Item4], name4_1, [Select Period4], [Select Reward ItemQuantity4], " +
                "[Select Socket Option4], [Select Reward Item5], name5_1, [Select Period5], [Sele" +
                "ct Reward ItemQuantity5], [Select Socket Option5], [Select Reward ItemCount], [M" +
                "ain Text], [Thanks Text], [Diss Clear Text], [Condition ClearQuest ID 1], [Condi" +
                "tion ClearQuest ID 2], [Condition ClearQuest ID 3], [Condition ClearQuest ID 4]," +
                " [Condition ClearQuest ID 5], [Condition ClearQuest ID 6], [Condition ClearQuest" +
                " ID 7], [Condition ClearQuest ID 8], [Condition DisClearQuest ID], Regdate FROM " +
                "QuestTable WHERE (IndexKey = @IndexKey)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Enable_Quest", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enable Quest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quest_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Start_NPC_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start NPC Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@End_NPC_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End NPC Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fair_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fair Level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fair_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fair Dungeon ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quest_Repeat", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Repeat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Lv", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Lv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Unit_Class", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Change_Job_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change Job Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Item ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Item Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQuest1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQuest2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQuest3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQuest4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQUest5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQUest5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Enable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Enable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_EXP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_ED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Grade", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Grade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Buff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Buff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_SP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Item1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_ItemQuantity1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Item2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_ItemQuantity2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Item3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_ItemQuantity3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name1_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name1_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name2_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name2_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name3_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name3_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name4_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name4_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name5_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name5_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Main_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Main Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Thanks_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thanks Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Diss_Clear_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diss Clear Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_DisClearQuest_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition DisClearQuest ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[QuestTable] SET [IndexKey] = @IndexKey, [ID] = @ID, [Enable Quest] " +
                "= @Enable_Quest, [Quest Type] = @Quest_Type, [Start NPC Name] = @Start_NPC_Name," +
                " [End NPC Name] = @End_NPC_Name, [Title] = @Title, [Fair Level] = @Fair_Level, [" +
                "Fair Dungeon ID] = @Fair_Dungeon_ID, [Quest Repeat] = @Quest_Repeat, [Condition " +
                "Lv] = @Condition_Lv, [Condition Unit Type] = @Condition_Unit_Type, [Condition Un" +
                "it Class] = @Condition_Unit_Class, [Reward Unit Class] = @Reward_Unit_Class, [Ch" +
                "ange Job Type] = @Change_Job_Type, [Condition Item ID] = @Condition_Item_ID, [Co" +
                "ndition Item Quantity] = @Condition_Item_Quantity, [SubQuest1] = @SubQuest1, [Su" +
                "bQuest2] = @SubQuest2, [SubQuest3] = @SubQuest3, [SubQuest4] = @SubQuest4, [SubQ" +
                "Uest5] = @SubQUest5, [Reward Enable] = @Reward_Enable, [Reward EXP] = @Reward_EX" +
                "P, [Reward ED] = @Reward_ED, [Reward Grade] = @Reward_Grade, [Reward Buff] = @Re" +
                "ward_Buff, [Reward SP] = @Reward_SP, [Reward Item1] = @Reward_Item1, [name1] = @" +
                "name1, [Period 1] = @Period_1, [Reward ItemQuantity1] = @Reward_ItemQuantity1, [" +
                "Socket Option1] = @Socket_Option1, [Reward Item2] = @Reward_Item2, [name2] = @na" +
                "me2, [Period 2] = @Period_2, [Reward ItemQuantity2] = @Reward_ItemQuantity2, [So" +
                "cket Option2] = @Socket_Option2, [Reward Item3] = @Reward_Item3, [name3] = @name" +
                "3, [Period 3] = @Period_3, [Reward ItemQuantity3] = @Reward_ItemQuantity3, [Sock" +
                "et Option3] = @Socket_Option3, [Select Reward Item1] = @Select_Reward_Item1, [na" +
                "me1_1] = @name1_1, [Select Period1] = @Select_Period1, [Select Reward ItemQuanti" +
                "ty1] = @Select_Reward_ItemQuantity1, [Select Socket Option1] = @Select_Socket_Op" +
                "tion1, [Select Reward Item2] = @Select_Reward_Item2, [name2_1] = @name2_1, [Sele" +
                "ct Period2] = @Select_Period2, [Select Reward ItemQuantity2] = @Select_Reward_It" +
                "emQuantity2, [Select Socket Option2] = @Select_Socket_Option2, [Select Reward It" +
                "em3] = @Select_Reward_Item3, [name3_1] = @name3_1, [Select Period3] = @Select_Pe" +
                "riod3, [Select Reward ItemQuantity3] = @Select_Reward_ItemQuantity3, [Select Soc" +
                "ket Option3] = @Select_Socket_Option3, [Select Reward Item4] = @Select_Reward_It" +
                "em4, [name4_1] = @name4_1, [Select Period4] = @Select_Period4, [Select Reward It" +
                "emQuantity4] = @Select_Reward_ItemQuantity4, [Select Socket Option4] = @Select_S" +
                "ocket_Option4, [Select Reward Item5] = @Select_Reward_Item5, [name5_1] = @name5_" +
                "1, [Select Period5] = @Select_Period5, [Select Reward ItemQuantity5] = @Select_R" +
                "eward_ItemQuantity5, [Select Socket Option5] = @Select_Socket_Option5, [Select R" +
                "eward ItemCount] = @Select_Reward_ItemCount, [Main Text] = @Main_Text, [Thanks T" +
                "ext] = @Thanks_Text, [Diss Clear Text] = @Diss_Clear_Text, [Condition ClearQuest" +
                " ID 1] = @Condition_ClearQuest_ID_1, [Condition ClearQuest ID 2] = @Condition_Cl" +
                "earQuest_ID_2, [Condition ClearQuest ID 3] = @Condition_ClearQuest_ID_3, [Condit" +
                "ion ClearQuest ID 4] = @Condition_ClearQuest_ID_4, [Condition ClearQuest ID 5] =" +
                " @Condition_ClearQuest_ID_5, [Condition ClearQuest ID 6] = @Condition_ClearQuest" +
                "_ID_6, [Condition ClearQuest ID 7] = @Condition_ClearQuest_ID_7, [Condition Clea" +
                "rQuest ID 8] = @Condition_ClearQuest_ID_8, [Condition DisClearQuest ID] = @Condi" +
                "tion_DisClearQuest_ID, [Regdate] = @Regdate WHERE (([IndexKey] = @Original_Index" +
                "Key) AND ((@IsNull_ID = 1 AND [ID] IS NULL) OR ([ID] = @Original_ID)) AND ((@IsN" +
                "ull_Enable_Quest = 1 AND [Enable Quest] IS NULL) OR ([Enable Quest] = @Original_" +
                "Enable_Quest)) AND ((@IsNull_Quest_Type = 1 AND [Quest Type] IS NULL) OR ([Quest" +
                " Type] = @Original_Quest_Type)) AND ((@IsNull_Start_NPC_Name = 1 AND [Start NPC " +
                "Name] IS NULL) OR ([Start NPC Name] = @Original_Start_NPC_Name)) AND ((@IsNull_E" +
                "nd_NPC_Name = 1 AND [End NPC Name] IS NULL) OR ([End NPC Name] = @Original_End_N" +
                "PC_Name)) AND ((@IsNull_Title = 1 AND [Title] IS NULL) OR ([Title] = @Original_T" +
                "itle)) AND ((@IsNull_Fair_Level = 1 AND [Fair Level] IS NULL) OR ([Fair Level] =" +
                " @Original_Fair_Level)) AND ((@IsNull_Fair_Dungeon_ID = 1 AND [Fair Dungeon ID] " +
                "IS NULL) OR ([Fair Dungeon ID] = @Original_Fair_Dungeon_ID)) AND ((@IsNull_Quest" +
                "_Repeat = 1 AND [Quest Repeat] IS NULL) OR ([Quest Repeat] = @Original_Quest_Rep" +
                "eat)) AND ((@IsNull_Condition_Lv = 1 AND [Condition Lv] IS NULL) OR ([Condition " +
                "Lv] = @Original_Condition_Lv)) AND ((@IsNull_Condition_Unit_Type = 1 AND [Condit" +
                "ion Unit Type] IS NULL) OR ([Condition Unit Type] = @Original_Condition_Unit_Typ" +
                "e)) AND ((@IsNull_Condition_Unit_Class = 1 AND [Condition Unit Class] IS NULL) O" +
                "R ([Condition Unit Class] = @Original_Condition_Unit_Class)) AND ((@IsNull_Rewar" +
                "d_Unit_Class = 1 AND [Reward Unit Class] IS NULL) OR ([Reward Unit Class] = @Ori" +
                "ginal_Reward_Unit_Class)) AND ((@IsNull_Change_Job_Type = 1 AND [Change Job Type" +
                "] IS NULL) OR ([Change Job Type] = @Original_Change_Job_Type)) AND ((@IsNull_Con" +
                "dition_Item_ID = 1 AND [Condition Item ID] IS NULL) OR ([Condition Item ID] = @O" +
                "riginal_Condition_Item_ID)) AND ((@IsNull_Condition_Item_Quantity = 1 AND [Condi" +
                "tion Item Quantity] IS NULL) OR ([Condition Item Quantity] = @Original_Condition" +
                "_Item_Quantity)) AND ((@IsNull_SubQuest1 = 1 AND [SubQuest1] IS NULL) OR ([SubQu" +
                "est1] = @Original_SubQuest1)) AND ((@IsNull_SubQuest2 = 1 AND [SubQuest2] IS NUL" +
                "L) OR ([SubQuest2] = @Original_SubQuest2)) AND ((@IsNull_SubQuest3 = 1 AND [SubQ" +
                "uest3] IS NULL) OR ([SubQuest3] = @Original_SubQuest3)) AND ((@IsNull_SubQuest4 " +
                "= 1 AND [SubQuest4] IS NULL) OR ([SubQuest4] = @Original_SubQuest4)) AND ((@IsNu" +
                "ll_SubQUest5 = 1 AND [SubQUest5] IS NULL) OR ([SubQUest5] = @Original_SubQUest5)" +
                ") AND ((@IsNull_Reward_Enable = 1 AND [Reward Enable] IS NULL) OR ([Reward Enabl" +
                "e] = @Original_Reward_Enable)) AND ((@IsNull_Reward_EXP = 1 AND [Reward EXP] IS " +
                "NULL) OR ([Reward EXP] = @Original_Reward_EXP)) AND ((@IsNull_Reward_ED = 1 AND " +
                "[Reward ED] IS NULL) OR ([Reward ED] = @Original_Reward_ED)) AND ((@IsNull_Rewar" +
                "d_Grade = 1 AND [Reward Grade] IS NULL) OR ([Reward Grade] = @Original_Reward_Gr" +
                "ade)) AND ((@IsNull_Reward_Buff = 1 AND [Reward Buff] IS NULL) OR ([Reward Buff]" +
                " = @Original_Reward_Buff)) AND ((@IsNull_Reward_SP = 1 AND [Reward SP] IS NULL) " +
                "OR ([Reward SP] = @Original_Reward_SP)) AND ((@IsNull_Reward_Item1 = 1 AND [Rewa" +
                "rd Item1] IS NULL) OR ([Reward Item1] = @Original_Reward_Item1)) AND ((@IsNull_n" +
                "ame1 = 1 AND [name1] IS NULL) OR ([name1] = @Original_name1)) AND ((@IsNull_Peri" +
                "od_1 = 1 AND [Period 1] IS NULL) OR ([Period 1] = @Original_Period_1)) AND ((@Is" +
                "Null_Reward_ItemQuantity1 = 1 AND [Reward ItemQuantity1] IS NULL) OR ([Reward It" +
                "emQuantity1] = @Original_Reward_ItemQuantity1)) AND ((@IsNull_Socket_Option1 = 1" +
                " AND [Socket Option1] IS NULL) OR ([Socket Option1] = @Original_Socket_Option1))" +
                " AND ((@IsNull_Reward_Item2 = 1 AND [Reward Item2] IS NULL) OR ([Reward Item2] =" +
                " @Original_Reward_Item2)) AND ((@IsNull_name2 = 1 AND [name2] IS NULL) OR ([name" +
                "2] = @Original_name2)) AND ((@IsNull_Period_2 = 1 AND [Period 2] IS NULL) OR ([P" +
                "eriod 2] = @Original_Period_2)) AND ((@IsNull_Reward_ItemQuantity2 = 1 AND [Rewa" +
                "rd ItemQuantity2] IS NULL) OR ([Reward ItemQuantity2] = @Original_Reward_ItemQua" +
                "ntity2)) AND ((@IsNull_Socket_Option2 = 1 AND [Socket Option2] IS NULL) OR ([Soc" +
                "ket Option2] = @Original_Socket_Option2)) AND ((@IsNull_Reward_Item3 = 1 AND [Re" +
                "ward Item3] IS NULL) OR ([Reward Item3] = @Original_Reward_Item3)) AND ((@IsNull" +
                "_name3 = 1 AND [name3] IS NULL) OR ([name3] = @Original_name3)) AND ((@IsNull_Pe" +
                "riod_3 = 1 AND [Period 3] IS NULL) OR ([Period 3] = @Original_Period_3)) AND ((@" +
                "IsNull_Reward_ItemQuantity3 = 1 AND [Reward ItemQuantity3] IS NULL) OR ([Reward " +
                "ItemQuantity3] = @Original_Reward_ItemQuantity3)) AND ((@IsNull_Socket_Option3 =" +
                " 1 AND [Socket Option3] IS NULL) OR ([Socket Option3] = @Original_Socket_Option3" +
                ")) AND ((@IsNull_Select_Reward_Item1 = 1 AND [Select Reward Item1] IS NULL) OR (" +
                "[Select Reward Item1] = @Original_Select_Reward_Item1)) AND ((@IsNull_name1_1 = " +
                "1 AND [name1_1] IS NULL) OR ([name1_1] = @Original_name1_1)) AND ((@IsNull_Selec" +
                "t_Period1 = 1 AND [Select Period1] IS NULL) OR ([Select Period1] = @Original_Sel" +
                "ect_Period1)) AND ((@IsNull_Select_Reward_ItemQuantity1 = 1 AND [Select Reward I" +
                "temQuantity1] IS NULL) OR ([Select Reward ItemQuantity1] = @Original_Select_Rewa" +
                "rd_ItemQuantity1)) AND ((@IsNull_Select_Socket_Option1 = 1 AND [Select Socket Op" +
                "tion1] IS NULL) OR ([Select Socket Option1] = @Original_Select_Socket_Option1)) " +
                "AND ((@IsNull_Select_Reward_Item2 = 1 AND [Select Reward Item2] IS NULL) OR ([Se" +
                "lect Reward Item2] = @Original_Select_Reward_Item2)) AND ((@IsNull_name2_1 = 1 A" +
                "ND [name2_1] IS NULL) OR ([name2_1] = @Original_name2_1)) AND ((@IsNull_Select_P" +
                "eriod2 = 1 AND [Select Period2] IS NULL) OR ([Select Period2] = @Original_Select" +
                "_Period2)) AND ((@IsNull_Select_Reward_ItemQuantity2 = 1 AND [Select Reward Item" +
                "Quantity2] IS NULL) OR ([Select Reward ItemQuantity2] = @Original_Select_Reward_" +
                "ItemQuantity2)) AND ((@IsNull_Select_Socket_Option2 = 1 AND [Select Socket Optio" +
                "n2] IS NULL) OR ([Select Socket Option2] = @Original_Select_Socket_Option2)) AND" +
                " ((@IsNull_Select_Reward_Item3 = 1 AND [Select Reward Item3] IS NULL) OR ([Selec" +
                "t Reward Item3] = @Original_Select_Reward_Item3)) AND ((@IsNull_name3_1 = 1 AND " +
                "[name3_1] IS NULL) OR ([name3_1] = @Original_name3_1)) AND ((@IsNull_Select_Peri" +
                "od3 = 1 AND [Select Period3] IS NULL) OR ([Select Period3] = @Original_Select_Pe" +
                "riod3)) AND ((@IsNull_Select_Reward_ItemQuantity3 = 1 AND [Select Reward ItemQua" +
                "ntity3] IS NULL) OR ([Select Reward ItemQuantity3] = @Original_Select_Reward_Ite" +
                "mQuantity3)) AND ((@IsNull_Select_Socket_Option3 = 1 AND [Select Socket Option3]" +
                " IS NULL) OR ([Select Socket Option3] = @Original_Select_Socket_Option3)) AND ((" +
                "@IsNull_Select_Reward_Item4 = 1 AND [Select Reward Item4] IS NULL) OR ([Select R" +
                "eward Item4] = @Original_Select_Reward_Item4)) AND ((@IsNull_name4_1 = 1 AND [na" +
                "me4_1] IS NULL) OR ([name4_1] = @Original_name4_1)) AND ((@IsNull_Select_Period4" +
                " = 1 AND [Select Period4] IS NULL) OR ([Select Period4] = @Original_Select_Perio" +
                "d4)) AND ((@IsNull_Select_Reward_ItemQuantity4 = 1 AND [Select Reward ItemQuanti" +
                "ty4] IS NULL) OR ([Select Reward ItemQuantity4] = @Original_Select_Reward_ItemQu" +
                "antity4)) AND ((@IsNull_Select_Socket_Option4 = 1 AND [Select Socket Option4] IS" +
                " NULL) OR ([Select Socket Option4] = @Original_Select_Socket_Option4)) AND ((@Is" +
                "Null_Select_Reward_Item5 = 1 AND [Select Reward Item5] IS NULL) OR ([Select Rewa" +
                "rd Item5] = @Original_Select_Reward_Item5)) AND ((@IsNull_name5_1 = 1 AND [name5" +
                "_1] IS NULL) OR ([name5_1] = @Original_name5_1)) AND ((@IsNull_Select_Period5 = " +
                "1 AND [Select Period5] IS NULL) OR ([Select Period5] = @Original_Select_Period5)" +
                ") AND ((@IsNull_Select_Reward_ItemQuantity5 = 1 AND [Select Reward ItemQuantity5" +
                "] IS NULL) OR ([Select Reward ItemQuantity5] = @Original_Select_Reward_ItemQuant" +
                "ity5)) AND ((@IsNull_Select_Socket_Option5 = 1 AND [Select Socket Option5] IS NU" +
                "LL) OR ([Select Socket Option5] = @Original_Select_Socket_Option5)) AND ((@IsNul" +
                "l_Select_Reward_ItemCount = 1 AND [Select Reward ItemCount] IS NULL) OR ([Select" +
                " Reward ItemCount] = @Original_Select_Reward_ItemCount)) AND ((@IsNull_Main_Text" +
                " = 1 AND [Main Text] IS NULL) OR ([Main Text] = @Original_Main_Text)) AND ((@IsN" +
                "ull_Thanks_Text = 1 AND [Thanks Text] IS NULL) OR ([Thanks Text] = @Original_Tha" +
                "nks_Text)) AND ((@IsNull_Diss_Clear_Text = 1 AND [Diss Clear Text] IS NULL) OR (" +
                "[Diss Clear Text] = @Original_Diss_Clear_Text)) AND ((@IsNull_Condition_ClearQue" +
                "st_ID_1 = 1 AND [Condition ClearQuest ID 1] IS NULL) OR ([Condition ClearQuest I" +
                "D 1] = @Original_Condition_ClearQuest_ID_1)) AND ((@IsNull_Condition_ClearQuest_" +
                "ID_2 = 1 AND [Condition ClearQuest ID 2] IS NULL) OR ([Condition ClearQuest ID 2" +
                "] = @Original_Condition_ClearQuest_ID_2)) AND ((@IsNull_Condition_ClearQuest_ID_" +
                "3 = 1 AND [Condition ClearQuest ID 3] IS NULL) OR ([Condition ClearQuest ID 3] =" +
                " @Original_Condition_ClearQuest_ID_3)) AND ((@IsNull_Condition_ClearQuest_ID_4 =" +
                " 1 AND [Condition ClearQuest ID 4] IS NULL) OR ([Condition ClearQuest ID 4] = @O" +
                "riginal_Condition_ClearQuest_ID_4)) AND ((@IsNull_Condition_ClearQuest_ID_5 = 1 " +
                "AND [Condition ClearQuest ID 5] IS NULL) OR ([Condition ClearQuest ID 5] = @Orig" +
                "inal_Condition_ClearQuest_ID_5)) AND ((@IsNull_Condition_ClearQuest_ID_6 = 1 AND" +
                " [Condition ClearQuest ID 6] IS NULL) OR ([Condition ClearQuest ID 6] = @Origina" +
                "l_Condition_ClearQuest_ID_6)) AND ((@IsNull_Condition_ClearQuest_ID_7 = 1 AND [C" +
                "ondition ClearQuest ID 7] IS NULL) OR ([Condition ClearQuest ID 7] = @Original_C" +
                "ondition_ClearQuest_ID_7)) AND ((@IsNull_Condition_ClearQuest_ID_8 = 1 AND [Cond" +
                "ition ClearQuest ID 8] IS NULL) OR ([Condition ClearQuest ID 8] = @Original_Cond" +
                "ition_ClearQuest_ID_8)) AND ((@IsNull_Condition_DisClearQuest_ID = 1 AND [Condit" +
                "ion DisClearQuest ID] IS NULL) OR ([Condition DisClearQuest ID] = @Original_Cond" +
                "ition_DisClearQuest_ID)) AND ([Regdate] = @Original_Regdate));\r\nSELECT IndexKey," +
                " ID, [Enable Quest], [Quest Type], [Start NPC Name], [End NPC Name], Title, [Fai" +
                "r Level], [Fair Dungeon ID], [Quest Repeat], [Condition Lv], [Condition Unit Typ" +
                "e], [Condition Unit Class], [Reward Unit Class], [Change Job Type], [Condition I" +
                "tem ID], [Condition Item Quantity], SubQuest1, SubQuest2, SubQuest3, SubQuest4, " +
                "SubQUest5, [Reward Enable], [Reward EXP], [Reward ED], [Reward Grade], [Reward B" +
                "uff], [Reward SP], [Reward Item1], name1, [Period 1], [Reward ItemQuantity1], [S" +
                "ocket Option1], [Reward Item2], name2, [Period 2], [Reward ItemQuantity2], [Sock" +
                "et Option2], [Reward Item3], name3, [Period 3], [Reward ItemQuantity3], [Socket " +
                "Option3], [Select Reward Item1], name1_1, [Select Period1], [Select Reward ItemQ" +
                "uantity1], [Select Socket Option1], [Select Reward Item2], name2_1, [Select Peri" +
                "od2], [Select Reward ItemQuantity2], [Select Socket Option2], [Select Reward Ite" +
                "m3], name3_1, [Select Period3], [Select Reward ItemQuantity3], [Select Socket Op" +
                "tion3], [Select Reward Item4], name4_1, [Select Period4], [Select Reward ItemQua" +
                "ntity4], [Select Socket Option4], [Select Reward Item5], name5_1, [Select Period" +
                "5], [Select Reward ItemQuantity5], [Select Socket Option5], [Select Reward ItemC" +
                "ount], [Main Text], [Thanks Text], [Diss Clear Text], [Condition ClearQuest ID 1" +
                "], [Condition ClearQuest ID 2], [Condition ClearQuest ID 3], [Condition ClearQue" +
                "st ID 4], [Condition ClearQuest ID 5], [Condition ClearQuest ID 6], [Condition C" +
                "learQuest ID 7], [Condition ClearQuest ID 8], [Condition DisClearQuest ID], Regd" +
                "ate FROM QuestTable WHERE (IndexKey = @IndexKey)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Enable_Quest", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enable Quest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quest_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Start_NPC_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start NPC Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@End_NPC_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End NPC Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fair_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fair Level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fair_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fair Dungeon ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quest_Repeat", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Repeat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Lv", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Lv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Unit_Class", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Change_Job_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change Job Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Item ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Item Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQuest1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQuest2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQuest3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQuest4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQUest5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQUest5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Enable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Enable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_EXP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_ED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Grade", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Grade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Buff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Buff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_SP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Item1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_ItemQuantity1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Item2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_ItemQuantity2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Item3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_ItemQuantity3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name1_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name1_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name2_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name2_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name3_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name3_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name4_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name4_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name5_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name5_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Main_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Main Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Thanks_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thanks Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Diss_Clear_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diss Clear Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_DisClearQuest_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition DisClearQuest ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Enable_Quest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enable Quest", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Enable_Quest", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enable Quest", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quest_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quest_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Start_NPC_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start NPC Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Start_NPC_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start NPC Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_End_NPC_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End NPC Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_End_NPC_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End NPC Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Title", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fair_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fair Level", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fair_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fair Level", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fair_Dungeon_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fair Dungeon ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fair_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fair Dungeon ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quest_Repeat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Repeat", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quest_Repeat", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Repeat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Lv", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Lv", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Lv", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Lv", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Class", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Unit Class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Unit_Class", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Unit Class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Change_Job_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change Job Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Change_Job_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change Job Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Item ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Item ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Item Quantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Item Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubQuest1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubQuest1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubQuest2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubQuest2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubQuest3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubQuest3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubQuest4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubQuest4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubQUest5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQUest5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubQUest5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQUest5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Enable", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Enable", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Enable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Enable", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_EXP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward EXP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_EXP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward EXP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_ED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_ED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Grade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Grade", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Grade", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Grade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Buff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Buff", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Buff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Buff", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_SP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward SP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_SP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward SP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Item1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Item1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Period_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Period_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_ItemQuantity1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_ItemQuantity1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Item2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Item2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Period_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Period_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_ItemQuantity2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_ItemQuantity2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Item3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Item3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Period_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Period_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_ItemQuantity3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_ItemQuantity3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_Item1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_Item1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name1_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name1_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name1_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name1_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Period1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Period1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_ItemQuantity1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_ItemQuantity1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Socket_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Socket_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_Item2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_Item2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name2_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name2_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name2_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name2_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Period2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Period2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_ItemQuantity2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_ItemQuantity2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Socket_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Socket_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_Item3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_Item3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name3_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name3_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name3_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name3_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Period3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Period3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_ItemQuantity3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_ItemQuantity3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Socket_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Socket_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_Item4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_Item4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name4_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name4_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name4_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name4_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Period4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Period4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_ItemQuantity4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_ItemQuantity4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Socket_Option4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Socket_Option4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_Item5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_Item5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name5_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name5_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name5_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name5_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Period5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Period5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_ItemQuantity5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_ItemQuantity5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Socket_Option5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Socket_Option5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Select_Reward_ItemCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Select_Reward_ItemCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Main_Text", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Main Text", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Main_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Main Text", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Thanks_Text", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thanks Text", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Thanks_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thanks Text", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Diss_Clear_Text", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diss Clear Text", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Diss_Clear_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diss Clear Text", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearQuest_ID_8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearQuest_ID_8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_DisClearQuest_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition DisClearQuest ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_DisClearQuest_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition DisClearQuest ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[6];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT IndexKey, ID, [Enable Quest], [Quest Type], [Start NPC Name], [End NPC Nam" +
                "e], Title, [Fair Level], [Fair Dungeon ID], [Quest Repeat], [Condition Lv], [Con" +
                "dition Unit Type], [Condition Unit Class], [Reward Unit Class], [Change Job Type" +
                "], [Condition Item ID], [Condition Item Quantity], SubQuest1, SubQuest2, SubQues" +
                "t3, SubQuest4, SubQUest5, [Reward Enable], [Reward EXP], [Reward ED], [Reward Gr" +
                "ade], [Reward Buff], [Reward SP], [Reward Item1], name1, [Period 1], [Reward Ite" +
                "mQuantity1], [Socket Option1], [Reward Item2], name2, [Period 2], [Reward ItemQu" +
                "antity2], [Socket Option2], [Reward Item3], name3, [Period 3], [Reward ItemQuant" +
                "ity3], [Socket Option3], [Select Reward Item1], name1_1, [Select Period1], [Sele" +
                "ct Reward ItemQuantity1], [Select Socket Option1], [Select Reward Item2], name2_" +
                "1, [Select Period2], [Select Reward ItemQuantity2], [Select Socket Option2], [Se" +
                "lect Reward Item3], name3_1, [Select Period3], [Select Reward ItemQuantity3], [S" +
                "elect Socket Option3], [Select Reward Item4], name4_1, [Select Period4], [Select" +
                " Reward ItemQuantity4], [Select Socket Option4], [Select Reward Item5], name5_1," +
                " [Select Period5], [Select Reward ItemQuantity5], [Select Socket Option5], [Sele" +
                "ct Reward ItemCount], [Main Text], [Thanks Text], [Diss Clear Text], [Condition " +
                "ClearQuest ID 1], [Condition ClearQuest ID 2], [Condition ClearQuest ID 3], [Con" +
                "dition ClearQuest ID 4], [Condition ClearQuest ID 5], [Condition ClearQuest ID 6" +
                "], [Condition ClearQuest ID 7], [Condition ClearQuest ID 8], [Condition DisClear" +
                "Quest ID], Regdate FROM dbo.QuestTable";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE  QuestTable\r\nSET         [Diss Clear Text] = @Diss_Clear_Text\r\nWHERE   (In" +
                "dexKey = @Index); ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Diss_Clear_Text", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "Diss Clear Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE  QuestTable\r\nSET        [Main Text] = @Main_Text\r\nWHERE   (IndexKey = @Ind" +
                "ex); \r\n";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Main_Text", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "Main Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "UPDATE  QuestTable\r\nSET         Regdate= @Regdate\r\nWHERE   (IndexKey = @Index); ";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "UPDATE  QuestTable\r\nSET        [Thanks Text]= @Thanks_Text\r\nWHERE   (IndexKey = @" +
                "Index); ";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Thanks_Text", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "Thanks Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "UPDATE  QuestTable\r\nSET         [Title]= @Title\r\nWHERE   (IndexKey = @Index); ";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.QuestTableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.QuestTableDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.QuestTableDataTable dataTable = new ScriptData_JPDataSet.QuestTableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.QuestTableDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "QuestTable");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_IndexKey, 
                    global::System.Nullable<int> Original_ID, 
                    global::System.Nullable<bool> Original_Enable_Quest, 
                    string Original_Quest_Type, 
                    string Original_Start_NPC_Name, 
                    string Original_End_NPC_Name, 
                    string Original_Title, 
                    global::System.Nullable<int> Original_Fair_Level, 
                    string Original_Fair_Dungeon_ID, 
                    global::System.Nullable<bool> Original_Quest_Repeat, 
                    global::System.Nullable<int> Original_Condition_Lv, 
                    string Original_Condition_Unit_Type, 
                    string Original_Condition_Unit_Class, 
                    string Original_Reward_Unit_Class, 
                    string Original_Change_Job_Type, 
                    global::System.Nullable<int> Original_Condition_Item_ID, 
                    global::System.Nullable<int> Original_Condition_Item_Quantity, 
                    global::System.Nullable<int> Original_SubQuest1, 
                    global::System.Nullable<int> Original_SubQuest2, 
                    global::System.Nullable<int> Original_SubQuest3, 
                    global::System.Nullable<int> Original_SubQuest4, 
                    global::System.Nullable<int> Original_SubQUest5, 
                    global::System.Nullable<bool> Original_Reward_Enable, 
                    global::System.Nullable<int> Original_Reward_EXP, 
                    global::System.Nullable<int> Original_Reward_ED, 
                    string Original_Reward_Grade, 
                    global::System.Nullable<int> Original_Reward_Buff, 
                    global::System.Nullable<int> Original_Reward_SP, 
                    global::System.Nullable<int> Original_Reward_Item1, 
                    string Original_name1, 
                    global::System.Nullable<int> Original_Period_1, 
                    global::System.Nullable<int> Original_Reward_ItemQuantity1, 
                    global::System.Nullable<int> Original_Socket_Option1, 
                    global::System.Nullable<int> Original_Reward_Item2, 
                    string Original_name2, 
                    global::System.Nullable<int> Original_Period_2, 
                    global::System.Nullable<int> Original_Reward_ItemQuantity2, 
                    global::System.Nullable<int> Original_Socket_Option2, 
                    global::System.Nullable<int> Original_Reward_Item3, 
                    string Original_name3, 
                    global::System.Nullable<int> Original_Period_3, 
                    global::System.Nullable<int> Original_Reward_ItemQuantity3, 
                    global::System.Nullable<int> Original_Socket_Option3, 
                    global::System.Nullable<int> Original_Select_Reward_Item1, 
                    string Original_name1_1, 
                    global::System.Nullable<int> Original_Select_Period1, 
                    global::System.Nullable<int> Original_Select_Reward_ItemQuantity1, 
                    global::System.Nullable<int> Original_Select_Socket_Option1, 
                    global::System.Nullable<int> Original_Select_Reward_Item2, 
                    string Original_name2_1, 
                    global::System.Nullable<int> Original_Select_Period2, 
                    global::System.Nullable<int> Original_Select_Reward_ItemQuantity2, 
                    global::System.Nullable<int> Original_Select_Socket_Option2, 
                    global::System.Nullable<int> Original_Select_Reward_Item3, 
                    string Original_name3_1, 
                    global::System.Nullable<int> Original_Select_Period3, 
                    global::System.Nullable<int> Original_Select_Reward_ItemQuantity3, 
                    global::System.Nullable<int> Original_Select_Socket_Option3, 
                    global::System.Nullable<int> Original_Select_Reward_Item4, 
                    string Original_name4_1, 
                    global::System.Nullable<int> Original_Select_Period4, 
                    string Original_Select_Reward_ItemQuantity4, 
                    global::System.Nullable<int> Original_Select_Socket_Option4, 
                    global::System.Nullable<int> Original_Select_Reward_Item5, 
                    string Original_name5_1, 
                    global::System.Nullable<int> Original_Select_Period5, 
                    global::System.Nullable<int> Original_Select_Reward_ItemQuantity5, 
                    global::System.Nullable<int> Original_Select_Socket_Option5, 
                    global::System.Nullable<int> Original_Select_Reward_ItemCount, 
                    string Original_Main_Text, 
                    string Original_Thanks_Text, 
                    string Original_Diss_Clear_Text, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_1, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_2, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_3, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_4, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_5, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_6, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_7, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_8, 
                    global::System.Nullable<int> Original_Condition_DisClearQuest_ID, 
                    System.DateTime Original_Regdate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IndexKey));
            if ((Original_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Enable_Quest.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_Enable_Quest.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Quest_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Quest_Type));
            }
            if ((Original_Start_NPC_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Start_NPC_Name));
            }
            if ((Original_End_NPC_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_End_NPC_Name));
            }
            if ((Original_Title == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Title));
            }
            if ((Original_Fair_Level.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_Fair_Level.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Fair_Dungeon_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Fair_Dungeon_ID));
            }
            if ((Original_Quest_Repeat.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_Quest_Repeat.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Lv.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_Condition_Lv.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Unit_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Condition_Unit_Type));
            }
            if ((Original_Condition_Unit_Class == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_Condition_Unit_Class));
            }
            if ((Original_Reward_Unit_Class == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_Reward_Unit_Class));
            }
            if ((Original_Change_Job_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_Change_Job_Type));
            }
            if ((Original_Condition_Item_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_Condition_Item_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Item_Quantity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_Condition_Item_Quantity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_SubQuest1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_SubQuest1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_SubQuest2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_SubQuest2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_SubQuest3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_SubQuest3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_SubQuest4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_SubQuest4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_SubQUest5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_SubQUest5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_Enable.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((bool)(Original_Reward_Enable.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_EXP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((int)(Original_Reward_EXP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_ED.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((int)(Original_Reward_ED.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_Grade == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_Reward_Grade));
            }
            if ((Original_Reward_Buff.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((int)(Original_Reward_Buff.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_SP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((int)(Original_Reward_SP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_Item1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((int)(Original_Reward_Item1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_name1 == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_name1));
            }
            if ((Original_Period_1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((int)(Original_Period_1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_ItemQuantity1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((int)(Original_Reward_ItemQuantity1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket_Option1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((int)(Original_Socket_Option1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_Item2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((int)(Original_Reward_Item2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_name2 == null)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((string)(Original_name2));
            }
            if ((Original_Period_2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((int)(Original_Period_2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_ItemQuantity2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((int)(Original_Reward_ItemQuantity2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket_Option2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((int)(Original_Socket_Option2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_Item3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((int)(Original_Reward_Item3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_name3 == null)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((string)(Original_name3));
            }
            if ((Original_Period_3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((int)(Original_Period_3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_ItemQuantity3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((int)(Original_Reward_ItemQuantity3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket_Option3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((int)(Original_Socket_Option3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_Item1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((int)(Original_Select_Reward_Item1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_name1_1 == null)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((string)(Original_name1_1));
            }
            if ((Original_Select_Period1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((int)(Original_Select_Period1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_ItemQuantity1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((int)(Original_Select_Reward_ItemQuantity1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Socket_Option1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((int)(Original_Select_Socket_Option1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_Item2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((int)(Original_Select_Reward_Item2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_name2_1 == null)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((string)(Original_name2_1));
            }
            if ((Original_Select_Period2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((int)(Original_Select_Period2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_ItemQuantity2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((int)(Original_Select_Reward_ItemQuantity2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Socket_Option2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((int)(Original_Select_Socket_Option2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_Item3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((int)(Original_Select_Reward_Item3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((Original_name3_1 == null)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((string)(Original_name3_1));
            }
            if ((Original_Select_Period3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((int)(Original_Select_Period3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_ItemQuantity3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((int)(Original_Select_Reward_ItemQuantity3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Socket_Option3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((int)(Original_Select_Socket_Option3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_Item4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((int)(Original_Select_Reward_Item4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_name4_1 == null)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((string)(Original_name4_1));
            }
            if ((Original_Select_Period4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((int)(Original_Select_Period4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_ItemQuantity4 == null)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((string)(Original_Select_Reward_ItemQuantity4));
            }
            if ((Original_Select_Socket_Option4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((int)(Original_Select_Socket_Option4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_Item5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((int)(Original_Select_Reward_Item5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_name5_1 == null)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((string)(Original_name5_1));
            }
            if ((Original_Select_Period5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((int)(Original_Select_Period5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_ItemQuantity5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((int)(Original_Select_Reward_ItemQuantity5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Socket_Option5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((int)(Original_Select_Socket_Option5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_ItemCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((int)(Original_Select_Reward_ItemCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_Main_Text == null)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((string)(Original_Main_Text));
            }
            if ((Original_Thanks_Text == null)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((string)(Original_Thanks_Text));
            }
            if ((Original_Diss_Clear_Text == null)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((string)(Original_Diss_Clear_Text));
            }
            if ((Original_Condition_ClearQuest_ID_1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[144].Value = ((int)(Original_Condition_ClearQuest_ID_1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_ClearQuest_ID_2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((int)(Original_Condition_ClearQuest_ID_2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_ClearQuest_ID_3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((int)(Original_Condition_ClearQuest_ID_3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_ClearQuest_ID_4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((int)(Original_Condition_ClearQuest_ID_4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_ClearQuest_ID_5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((int)(Original_Condition_ClearQuest_ID_5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_ClearQuest_ID_6.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((int)(Original_Condition_ClearQuest_ID_6.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_ClearQuest_ID_7.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[156].Value = ((int)(Original_Condition_ClearQuest_ID_7.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_ClearQuest_ID_8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[158].Value = ((int)(Original_Condition_ClearQuest_ID_8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_DisClearQuest_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[160].Value = ((int)(Original_Condition_DisClearQuest_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[161].Value = ((System.DateTime)(Original_Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IndexKey, 
                    global::System.Nullable<int> ID, 
                    global::System.Nullable<bool> Enable_Quest, 
                    string Quest_Type, 
                    string Start_NPC_Name, 
                    string End_NPC_Name, 
                    string Title, 
                    global::System.Nullable<int> Fair_Level, 
                    string Fair_Dungeon_ID, 
                    global::System.Nullable<bool> Quest_Repeat, 
                    global::System.Nullable<int> Condition_Lv, 
                    string Condition_Unit_Type, 
                    string Condition_Unit_Class, 
                    string Reward_Unit_Class, 
                    string Change_Job_Type, 
                    global::System.Nullable<int> Condition_Item_ID, 
                    global::System.Nullable<int> Condition_Item_Quantity, 
                    global::System.Nullable<int> SubQuest1, 
                    global::System.Nullable<int> SubQuest2, 
                    global::System.Nullable<int> SubQuest3, 
                    global::System.Nullable<int> SubQuest4, 
                    global::System.Nullable<int> SubQUest5, 
                    global::System.Nullable<bool> Reward_Enable, 
                    global::System.Nullable<int> Reward_EXP, 
                    global::System.Nullable<int> Reward_ED, 
                    string Reward_Grade, 
                    global::System.Nullable<int> Reward_Buff, 
                    global::System.Nullable<int> Reward_SP, 
                    global::System.Nullable<int> Reward_Item1, 
                    string name1, 
                    global::System.Nullable<int> Period_1, 
                    global::System.Nullable<int> Reward_ItemQuantity1, 
                    global::System.Nullable<int> Socket_Option1, 
                    global::System.Nullable<int> Reward_Item2, 
                    string name2, 
                    global::System.Nullable<int> Period_2, 
                    global::System.Nullable<int> Reward_ItemQuantity2, 
                    global::System.Nullable<int> Socket_Option2, 
                    global::System.Nullable<int> Reward_Item3, 
                    string name3, 
                    global::System.Nullable<int> Period_3, 
                    global::System.Nullable<int> Reward_ItemQuantity3, 
                    global::System.Nullable<int> Socket_Option3, 
                    global::System.Nullable<int> Select_Reward_Item1, 
                    string name1_1, 
                    global::System.Nullable<int> Select_Period1, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity1, 
                    global::System.Nullable<int> Select_Socket_Option1, 
                    global::System.Nullable<int> Select_Reward_Item2, 
                    string name2_1, 
                    global::System.Nullable<int> Select_Period2, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity2, 
                    global::System.Nullable<int> Select_Socket_Option2, 
                    global::System.Nullable<int> Select_Reward_Item3, 
                    string name3_1, 
                    global::System.Nullable<int> Select_Period3, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity3, 
                    global::System.Nullable<int> Select_Socket_Option3, 
                    global::System.Nullable<int> Select_Reward_Item4, 
                    string name4_1, 
                    global::System.Nullable<int> Select_Period4, 
                    string Select_Reward_ItemQuantity4, 
                    global::System.Nullable<int> Select_Socket_Option4, 
                    global::System.Nullable<int> Select_Reward_Item5, 
                    string name5_1, 
                    global::System.Nullable<int> Select_Period5, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity5, 
                    global::System.Nullable<int> Select_Socket_Option5, 
                    global::System.Nullable<int> Select_Reward_ItemCount, 
                    string Main_Text, 
                    string Thanks_Text, 
                    string Diss_Clear_Text, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_1, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_2, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_3, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_4, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_5, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_6, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_7, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_8, 
                    global::System.Nullable<int> Condition_DisClearQuest_ID, 
                    System.DateTime Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            if ((ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Enable_Quest.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(Enable_Quest.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Quest_Type == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Quest_Type));
            }
            if ((Start_NPC_Name == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Start_NPC_Name));
            }
            if ((End_NPC_Name == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(End_NPC_Name));
            }
            if ((Title == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Title));
            }
            if ((Fair_Level.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Fair_Level.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Fair_Dungeon_ID == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Fair_Dungeon_ID));
            }
            if ((Quest_Repeat.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(Quest_Repeat.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Condition_Lv.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(Condition_Lv.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Type == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Condition_Unit_Type));
            }
            if ((Condition_Unit_Class == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Condition_Unit_Class));
            }
            if ((Reward_Unit_Class == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Reward_Unit_Class));
            }
            if ((Change_Job_Type == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Change_Job_Type));
            }
            if ((Condition_Item_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Condition_Item_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Condition_Item_Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(Condition_Item_Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((SubQuest1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(SubQuest1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((SubQuest2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(SubQuest2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((SubQuest3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(SubQuest3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((SubQuest4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(SubQuest4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((SubQUest5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(SubQUest5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Reward_Enable.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(Reward_Enable.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Reward_EXP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(Reward_EXP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Reward_ED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(Reward_ED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Reward_Grade == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Reward_Grade));
            }
            if ((Reward_Buff.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(Reward_Buff.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Reward_SP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(Reward_SP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Reward_Item1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(Reward_Item1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((name1 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(name1));
            }
            if ((Period_1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((int)(Period_1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Reward_ItemQuantity1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(Reward_ItemQuantity1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Socket_Option1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((int)(Socket_Option1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Reward_Item2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((int)(Reward_Item2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((name2 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(name2));
            }
            if ((Period_2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(Period_2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Reward_ItemQuantity2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(Reward_ItemQuantity2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Socket_Option2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(Socket_Option2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Reward_Item3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((int)(Reward_Item3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((name3 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(name3));
            }
            if ((Period_3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((int)(Period_3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Reward_ItemQuantity3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((int)(Reward_ItemQuantity3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Socket_Option3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((int)(Socket_Option3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((int)(Select_Reward_Item1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((name1_1 == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(name1_1));
            }
            if ((Select_Period1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((int)(Select_Period1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((int)(Select_Reward_ItemQuantity1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Select_Socket_Option1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((int)(Select_Socket_Option1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((int)(Select_Reward_Item2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((name2_1 == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(name2_1));
            }
            if ((Select_Period2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((int)(Select_Period2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((int)(Select_Reward_ItemQuantity2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Select_Socket_Option2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((int)(Select_Socket_Option2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((int)(Select_Reward_Item3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((name3_1 == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(name3_1));
            }
            if ((Select_Period3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((int)(Select_Period3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((int)(Select_Reward_ItemQuantity3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Select_Socket_Option3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((int)(Select_Socket_Option3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((int)(Select_Reward_Item4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((name4_1 == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(name4_1));
            }
            if ((Select_Period4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((int)(Select_Period4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity4 == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(Select_Reward_ItemQuantity4));
            }
            if ((Select_Socket_Option4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((int)(Select_Socket_Option4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((int)(Select_Reward_Item5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((name5_1 == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(name5_1));
            }
            if ((Select_Period5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((int)(Select_Period5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((int)(Select_Reward_ItemQuantity5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Select_Socket_Option5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((int)(Select_Socket_Option5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((int)(Select_Reward_ItemCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Main_Text == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(Main_Text));
            }
            if ((Thanks_Text == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(Thanks_Text));
            }
            if ((Diss_Clear_Text == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(Diss_Clear_Text));
            }
            if ((Condition_ClearQuest_ID_1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((int)(Condition_ClearQuest_ID_1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((int)(Condition_ClearQuest_ID_2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((int)(Condition_ClearQuest_ID_3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((int)(Condition_ClearQuest_ID_4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((int)(Condition_ClearQuest_ID_5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((int)(Condition_ClearQuest_ID_6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((int)(Condition_ClearQuest_ID_7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((int)(Condition_ClearQuest_ID_8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Condition_DisClearQuest_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((int)(Condition_DisClearQuest_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[81].Value = ((System.DateTime)(Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IndexKey, 
                    global::System.Nullable<int> ID, 
                    global::System.Nullable<bool> Enable_Quest, 
                    string Quest_Type, 
                    string Start_NPC_Name, 
                    string End_NPC_Name, 
                    string Title, 
                    global::System.Nullable<int> Fair_Level, 
                    string Fair_Dungeon_ID, 
                    global::System.Nullable<bool> Quest_Repeat, 
                    global::System.Nullable<int> Condition_Lv, 
                    string Condition_Unit_Type, 
                    string Condition_Unit_Class, 
                    string Reward_Unit_Class, 
                    string Change_Job_Type, 
                    global::System.Nullable<int> Condition_Item_ID, 
                    global::System.Nullable<int> Condition_Item_Quantity, 
                    global::System.Nullable<int> SubQuest1, 
                    global::System.Nullable<int> SubQuest2, 
                    global::System.Nullable<int> SubQuest3, 
                    global::System.Nullable<int> SubQuest4, 
                    global::System.Nullable<int> SubQUest5, 
                    global::System.Nullable<bool> Reward_Enable, 
                    global::System.Nullable<int> Reward_EXP, 
                    global::System.Nullable<int> Reward_ED, 
                    string Reward_Grade, 
                    global::System.Nullable<int> Reward_Buff, 
                    global::System.Nullable<int> Reward_SP, 
                    global::System.Nullable<int> Reward_Item1, 
                    string name1, 
                    global::System.Nullable<int> Period_1, 
                    global::System.Nullable<int> Reward_ItemQuantity1, 
                    global::System.Nullable<int> Socket_Option1, 
                    global::System.Nullable<int> Reward_Item2, 
                    string name2, 
                    global::System.Nullable<int> Period_2, 
                    global::System.Nullable<int> Reward_ItemQuantity2, 
                    global::System.Nullable<int> Socket_Option2, 
                    global::System.Nullable<int> Reward_Item3, 
                    string name3, 
                    global::System.Nullable<int> Period_3, 
                    global::System.Nullable<int> Reward_ItemQuantity3, 
                    global::System.Nullable<int> Socket_Option3, 
                    global::System.Nullable<int> Select_Reward_Item1, 
                    string name1_1, 
                    global::System.Nullable<int> Select_Period1, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity1, 
                    global::System.Nullable<int> Select_Socket_Option1, 
                    global::System.Nullable<int> Select_Reward_Item2, 
                    string name2_1, 
                    global::System.Nullable<int> Select_Period2, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity2, 
                    global::System.Nullable<int> Select_Socket_Option2, 
                    global::System.Nullable<int> Select_Reward_Item3, 
                    string name3_1, 
                    global::System.Nullable<int> Select_Period3, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity3, 
                    global::System.Nullable<int> Select_Socket_Option3, 
                    global::System.Nullable<int> Select_Reward_Item4, 
                    string name4_1, 
                    global::System.Nullable<int> Select_Period4, 
                    string Select_Reward_ItemQuantity4, 
                    global::System.Nullable<int> Select_Socket_Option4, 
                    global::System.Nullable<int> Select_Reward_Item5, 
                    string name5_1, 
                    global::System.Nullable<int> Select_Period5, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity5, 
                    global::System.Nullable<int> Select_Socket_Option5, 
                    global::System.Nullable<int> Select_Reward_ItemCount, 
                    string Main_Text, 
                    string Thanks_Text, 
                    string Diss_Clear_Text, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_1, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_2, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_3, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_4, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_5, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_6, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_7, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_8, 
                    global::System.Nullable<int> Condition_DisClearQuest_ID, 
                    System.DateTime Regdate, 
                    int Original_IndexKey, 
                    global::System.Nullable<int> Original_ID, 
                    global::System.Nullable<bool> Original_Enable_Quest, 
                    string Original_Quest_Type, 
                    string Original_Start_NPC_Name, 
                    string Original_End_NPC_Name, 
                    string Original_Title, 
                    global::System.Nullable<int> Original_Fair_Level, 
                    string Original_Fair_Dungeon_ID, 
                    global::System.Nullable<bool> Original_Quest_Repeat, 
                    global::System.Nullable<int> Original_Condition_Lv, 
                    string Original_Condition_Unit_Type, 
                    string Original_Condition_Unit_Class, 
                    string Original_Reward_Unit_Class, 
                    string Original_Change_Job_Type, 
                    global::System.Nullable<int> Original_Condition_Item_ID, 
                    global::System.Nullable<int> Original_Condition_Item_Quantity, 
                    global::System.Nullable<int> Original_SubQuest1, 
                    global::System.Nullable<int> Original_SubQuest2, 
                    global::System.Nullable<int> Original_SubQuest3, 
                    global::System.Nullable<int> Original_SubQuest4, 
                    global::System.Nullable<int> Original_SubQUest5, 
                    global::System.Nullable<bool> Original_Reward_Enable, 
                    global::System.Nullable<int> Original_Reward_EXP, 
                    global::System.Nullable<int> Original_Reward_ED, 
                    string Original_Reward_Grade, 
                    global::System.Nullable<int> Original_Reward_Buff, 
                    global::System.Nullable<int> Original_Reward_SP, 
                    global::System.Nullable<int> Original_Reward_Item1, 
                    string Original_name1, 
                    global::System.Nullable<int> Original_Period_1, 
                    global::System.Nullable<int> Original_Reward_ItemQuantity1, 
                    global::System.Nullable<int> Original_Socket_Option1, 
                    global::System.Nullable<int> Original_Reward_Item2, 
                    string Original_name2, 
                    global::System.Nullable<int> Original_Period_2, 
                    global::System.Nullable<int> Original_Reward_ItemQuantity2, 
                    global::System.Nullable<int> Original_Socket_Option2, 
                    global::System.Nullable<int> Original_Reward_Item3, 
                    string Original_name3, 
                    global::System.Nullable<int> Original_Period_3, 
                    global::System.Nullable<int> Original_Reward_ItemQuantity3, 
                    global::System.Nullable<int> Original_Socket_Option3, 
                    global::System.Nullable<int> Original_Select_Reward_Item1, 
                    string Original_name1_1, 
                    global::System.Nullable<int> Original_Select_Period1, 
                    global::System.Nullable<int> Original_Select_Reward_ItemQuantity1, 
                    global::System.Nullable<int> Original_Select_Socket_Option1, 
                    global::System.Nullable<int> Original_Select_Reward_Item2, 
                    string Original_name2_1, 
                    global::System.Nullable<int> Original_Select_Period2, 
                    global::System.Nullable<int> Original_Select_Reward_ItemQuantity2, 
                    global::System.Nullable<int> Original_Select_Socket_Option2, 
                    global::System.Nullable<int> Original_Select_Reward_Item3, 
                    string Original_name3_1, 
                    global::System.Nullable<int> Original_Select_Period3, 
                    global::System.Nullable<int> Original_Select_Reward_ItemQuantity3, 
                    global::System.Nullable<int> Original_Select_Socket_Option3, 
                    global::System.Nullable<int> Original_Select_Reward_Item4, 
                    string Original_name4_1, 
                    global::System.Nullable<int> Original_Select_Period4, 
                    string Original_Select_Reward_ItemQuantity4, 
                    global::System.Nullable<int> Original_Select_Socket_Option4, 
                    global::System.Nullable<int> Original_Select_Reward_Item5, 
                    string Original_name5_1, 
                    global::System.Nullable<int> Original_Select_Period5, 
                    global::System.Nullable<int> Original_Select_Reward_ItemQuantity5, 
                    global::System.Nullable<int> Original_Select_Socket_Option5, 
                    global::System.Nullable<int> Original_Select_Reward_ItemCount, 
                    string Original_Main_Text, 
                    string Original_Thanks_Text, 
                    string Original_Diss_Clear_Text, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_1, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_2, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_3, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_4, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_5, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_6, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_7, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_8, 
                    global::System.Nullable<int> Original_Condition_DisClearQuest_ID, 
                    System.DateTime Original_Regdate) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IndexKey));
            if ((ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Enable_Quest.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(Enable_Quest.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Quest_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Quest_Type));
            }
            if ((Start_NPC_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Start_NPC_Name));
            }
            if ((End_NPC_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(End_NPC_Name));
            }
            if ((Title == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Title));
            }
            if ((Fair_Level.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Fair_Level.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Fair_Dungeon_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Fair_Dungeon_ID));
            }
            if ((Quest_Repeat.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(Quest_Repeat.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Condition_Lv.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Condition_Lv.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Condition_Unit_Type));
            }
            if ((Condition_Unit_Class == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Condition_Unit_Class));
            }
            if ((Reward_Unit_Class == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Reward_Unit_Class));
            }
            if ((Change_Job_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Change_Job_Type));
            }
            if ((Condition_Item_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Condition_Item_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Condition_Item_Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Condition_Item_Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((SubQuest1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(SubQuest1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((SubQuest2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(SubQuest2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((SubQuest3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(SubQuest3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((SubQuest4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(SubQuest4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((SubQUest5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(SubQUest5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Reward_Enable.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(Reward_Enable.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Reward_EXP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Reward_EXP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Reward_ED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Reward_ED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Reward_Grade == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Reward_Grade));
            }
            if ((Reward_Buff.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Reward_Buff.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Reward_SP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Reward_SP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Reward_Item1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Reward_Item1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((name1 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(name1));
            }
            if ((Period_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Period_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Reward_ItemQuantity1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Reward_ItemQuantity1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Socket_Option1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Socket_Option1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Reward_Item2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Reward_Item2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((name2 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(name2));
            }
            if ((Period_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Period_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Reward_ItemQuantity2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Reward_ItemQuantity2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Socket_Option2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Socket_Option2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Reward_Item3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Reward_Item3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((name3 == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(name3));
            }
            if ((Period_3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Period_3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Reward_ItemQuantity3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Reward_ItemQuantity3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Socket_Option3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Socket_Option3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Select_Reward_Item1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((name1_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(name1_1));
            }
            if ((Select_Period1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Select_Period1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Select_Reward_ItemQuantity1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Select_Socket_Option1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Select_Socket_Option1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(Select_Reward_Item2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((name2_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(name2_1));
            }
            if ((Select_Period2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Select_Period2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Select_Reward_ItemQuantity2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Select_Socket_Option2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(Select_Socket_Option2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Select_Reward_Item3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((name3_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(name3_1));
            }
            if ((Select_Period3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Select_Period3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(Select_Reward_ItemQuantity3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Select_Socket_Option3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Select_Socket_Option3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(Select_Reward_Item4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((name4_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(name4_1));
            }
            if ((Select_Period4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Select_Period4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity4 == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Select_Reward_ItemQuantity4));
            }
            if ((Select_Socket_Option4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(Select_Socket_Option4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(Select_Reward_Item5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((name5_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(name5_1));
            }
            if ((Select_Period5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(Select_Period5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(Select_Reward_ItemQuantity5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Select_Socket_Option5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(Select_Socket_Option5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Select_Reward_ItemCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Main_Text == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Main_Text));
            }
            if ((Thanks_Text == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Thanks_Text));
            }
            if ((Diss_Clear_Text == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Diss_Clear_Text));
            }
            if ((Condition_ClearQuest_ID_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(Condition_ClearQuest_ID_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(Condition_ClearQuest_ID_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(Condition_ClearQuest_ID_3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Condition_ClearQuest_ID_4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(Condition_ClearQuest_ID_5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((int)(Condition_ClearQuest_ID_6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(Condition_ClearQuest_ID_7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(Condition_ClearQuest_ID_8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Condition_DisClearQuest_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(Condition_DisClearQuest_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[81].Value = ((System.DateTime)(Regdate));
            this.Adapter.UpdateCommand.Parameters[82].Value = ((int)(Original_IndexKey));
            if ((Original_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((int)(Original_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_Enable_Quest.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((bool)(Original_Enable_Quest.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_Quest_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(Original_Quest_Type));
            }
            if ((Original_Start_NPC_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Original_Start_NPC_Name));
            }
            if ((Original_End_NPC_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_End_NPC_Name));
            }
            if ((Original_Title == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_Title));
            }
            if ((Original_Fair_Level.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((int)(Original_Fair_Level.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_Fair_Dungeon_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(Original_Fair_Dungeon_ID));
            }
            if ((Original_Quest_Repeat.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((bool)(Original_Quest_Repeat.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Lv.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((int)(Original_Condition_Lv.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Unit_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_Condition_Unit_Type));
            }
            if ((Original_Condition_Unit_Class == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_Condition_Unit_Class));
            }
            if ((Original_Reward_Unit_Class == null)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_Reward_Unit_Class));
            }
            if ((Original_Change_Job_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_Change_Job_Type));
            }
            if ((Original_Condition_Item_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((int)(Original_Condition_Item_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Item_Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((int)(Original_Condition_Item_Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_SubQuest1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((int)(Original_SubQuest1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_SubQuest2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((int)(Original_SubQuest2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_SubQuest3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((int)(Original_SubQuest3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_SubQuest4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((int)(Original_SubQuest4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_SubQUest5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((int)(Original_SubQUest5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_Enable.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((bool)(Original_Reward_Enable.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_EXP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((int)(Original_Reward_EXP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_ED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((int)(Original_Reward_ED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_Grade == null)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((string)(Original_Reward_Grade));
            }
            if ((Original_Reward_Buff.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((int)(Original_Reward_Buff.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_SP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((int)(Original_Reward_SP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_Item1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((int)(Original_Reward_Item1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((Original_name1 == null)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((string)(Original_name1));
            }
            if ((Original_Period_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((int)(Original_Period_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_ItemQuantity1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((int)(Original_Reward_ItemQuantity1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket_Option1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((int)(Original_Socket_Option1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_Item2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((int)(Original_Reward_Item2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_name2 == null)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[150].Value = ((string)(Original_name2));
            }
            if ((Original_Period_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((int)(Original_Period_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_ItemQuantity2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[154].Value = ((int)(Original_Reward_ItemQuantity2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket_Option2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((int)(Original_Socket_Option2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_Item3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((int)(Original_Reward_Item3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            if ((Original_name3 == null)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((string)(Original_name3));
            }
            if ((Original_Period_3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((int)(Original_Period_3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_ItemQuantity3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[164].Value = ((int)(Original_Reward_ItemQuantity3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket_Option3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[166].Value = ((int)(Original_Socket_Option3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[166].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_Item1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[168].Value = ((int)(Original_Select_Reward_Item1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[168].Value = global::System.DBNull.Value;
            }
            if ((Original_name1_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[170].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[170].Value = ((string)(Original_name1_1));
            }
            if ((Original_Select_Period1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[172].Value = ((int)(Original_Select_Period1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[172].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_ItemQuantity1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[174].Value = ((int)(Original_Select_Reward_ItemQuantity1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[174].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Socket_Option1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[176].Value = ((int)(Original_Select_Socket_Option1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[176].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_Item2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[178].Value = ((int)(Original_Select_Reward_Item2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            if ((Original_name2_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[180].Value = ((string)(Original_name2_1));
            }
            if ((Original_Select_Period2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[182].Value = ((int)(Original_Select_Period2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[182].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_ItemQuantity2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[184].Value = ((int)(Original_Select_Reward_ItemQuantity2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Socket_Option2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[186].Value = ((int)(Original_Select_Socket_Option2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[186].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_Item3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[188].Value = ((int)(Original_Select_Reward_Item3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            if ((Original_name3_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[190].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[190].Value = ((string)(Original_name3_1));
            }
            if ((Original_Select_Period3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[192].Value = ((int)(Original_Select_Period3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[192].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_ItemQuantity3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[194].Value = ((int)(Original_Select_Reward_ItemQuantity3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[194].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Socket_Option3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[196].Value = ((int)(Original_Select_Socket_Option3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[196].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_Item4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[198].Value = ((int)(Original_Select_Reward_Item4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            if ((Original_name4_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[200].Value = ((string)(Original_name4_1));
            }
            if ((Original_Select_Period4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[202].Value = ((int)(Original_Select_Period4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_ItemQuantity4 == null)) {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[204].Value = ((string)(Original_Select_Reward_ItemQuantity4));
            }
            if ((Original_Select_Socket_Option4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[206].Value = ((int)(Original_Select_Socket_Option4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_Item5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[208].Value = ((int)(Original_Select_Reward_Item5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            if ((Original_name5_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[210].Value = ((string)(Original_name5_1));
            }
            if ((Original_Select_Period5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[212].Value = ((int)(Original_Select_Period5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_ItemQuantity5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[214].Value = ((int)(Original_Select_Reward_ItemQuantity5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Socket_Option5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[216].Value = ((int)(Original_Select_Socket_Option5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            if ((Original_Select_Reward_ItemCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[218].Value = ((int)(Original_Select_Reward_ItemCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            if ((Original_Main_Text == null)) {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[220].Value = ((string)(Original_Main_Text));
            }
            if ((Original_Thanks_Text == null)) {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[222].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[222].Value = ((string)(Original_Thanks_Text));
            }
            if ((Original_Diss_Clear_Text == null)) {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[224].Value = ((string)(Original_Diss_Clear_Text));
            }
            if ((Original_Condition_ClearQuest_ID_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[226].Value = ((int)(Original_Condition_ClearQuest_ID_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[226].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_ClearQuest_ID_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[228].Value = ((int)(Original_Condition_ClearQuest_ID_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[228].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_ClearQuest_ID_3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[230].Value = ((int)(Original_Condition_ClearQuest_ID_3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[230].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_ClearQuest_ID_4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[232].Value = ((int)(Original_Condition_ClearQuest_ID_4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[232].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_ClearQuest_ID_5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[234].Value = ((int)(Original_Condition_ClearQuest_ID_5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[234].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_ClearQuest_ID_6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[236].Value = ((int)(Original_Condition_ClearQuest_ID_6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[236].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_ClearQuest_ID_7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[237].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[238].Value = ((int)(Original_Condition_ClearQuest_ID_7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[237].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[238].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_ClearQuest_ID_8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[239].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[240].Value = ((int)(Original_Condition_ClearQuest_ID_8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[239].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[240].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_DisClearQuest_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[242].Value = ((int)(Original_Condition_DisClearQuest_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[242].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[243].Value = ((System.DateTime)(Original_Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID, 
                    global::System.Nullable<bool> Enable_Quest, 
                    string Quest_Type, 
                    string Start_NPC_Name, 
                    string End_NPC_Name, 
                    string Title, 
                    global::System.Nullable<int> Fair_Level, 
                    string Fair_Dungeon_ID, 
                    global::System.Nullable<bool> Quest_Repeat, 
                    global::System.Nullable<int> Condition_Lv, 
                    string Condition_Unit_Type, 
                    string Condition_Unit_Class, 
                    string Reward_Unit_Class, 
                    string Change_Job_Type, 
                    global::System.Nullable<int> Condition_Item_ID, 
                    global::System.Nullable<int> Condition_Item_Quantity, 
                    global::System.Nullable<int> SubQuest1, 
                    global::System.Nullable<int> SubQuest2, 
                    global::System.Nullable<int> SubQuest3, 
                    global::System.Nullable<int> SubQuest4, 
                    global::System.Nullable<int> SubQUest5, 
                    global::System.Nullable<bool> Reward_Enable, 
                    global::System.Nullable<int> Reward_EXP, 
                    global::System.Nullable<int> Reward_ED, 
                    string Reward_Grade, 
                    global::System.Nullable<int> Reward_Buff, 
                    global::System.Nullable<int> Reward_SP, 
                    global::System.Nullable<int> Reward_Item1, 
                    string name1, 
                    global::System.Nullable<int> Period_1, 
                    global::System.Nullable<int> Reward_ItemQuantity1, 
                    global::System.Nullable<int> Socket_Option1, 
                    global::System.Nullable<int> Reward_Item2, 
                    string name2, 
                    global::System.Nullable<int> Period_2, 
                    global::System.Nullable<int> Reward_ItemQuantity2, 
                    global::System.Nullable<int> Socket_Option2, 
                    global::System.Nullable<int> Reward_Item3, 
                    string name3, 
                    global::System.Nullable<int> Period_3, 
                    global::System.Nullable<int> Reward_ItemQuantity3, 
                    global::System.Nullable<int> Socket_Option3, 
                    global::System.Nullable<int> Select_Reward_Item1, 
                    string name1_1, 
                    global::System.Nullable<int> Select_Period1, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity1, 
                    global::System.Nullable<int> Select_Socket_Option1, 
                    global::System.Nullable<int> Select_Reward_Item2, 
                    string name2_1, 
                    global::System.Nullable<int> Select_Period2, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity2, 
                    global::System.Nullable<int> Select_Socket_Option2, 
                    global::System.Nullable<int> Select_Reward_Item3, 
                    string name3_1, 
                    global::System.Nullable<int> Select_Period3, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity3, 
                    global::System.Nullable<int> Select_Socket_Option3, 
                    global::System.Nullable<int> Select_Reward_Item4, 
                    string name4_1, 
                    global::System.Nullable<int> Select_Period4, 
                    string Select_Reward_ItemQuantity4, 
                    global::System.Nullable<int> Select_Socket_Option4, 
                    global::System.Nullable<int> Select_Reward_Item5, 
                    string name5_1, 
                    global::System.Nullable<int> Select_Period5, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity5, 
                    global::System.Nullable<int> Select_Socket_Option5, 
                    global::System.Nullable<int> Select_Reward_ItemCount, 
                    string Main_Text, 
                    string Thanks_Text, 
                    string Diss_Clear_Text, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_1, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_2, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_3, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_4, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_5, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_6, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_7, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_8, 
                    global::System.Nullable<int> Condition_DisClearQuest_ID, 
                    System.DateTime Regdate, 
                    int Original_IndexKey, 
                    global::System.Nullable<int> Original_ID, 
                    global::System.Nullable<bool> Original_Enable_Quest, 
                    string Original_Quest_Type, 
                    string Original_Start_NPC_Name, 
                    string Original_End_NPC_Name, 
                    string Original_Title, 
                    global::System.Nullable<int> Original_Fair_Level, 
                    string Original_Fair_Dungeon_ID, 
                    global::System.Nullable<bool> Original_Quest_Repeat, 
                    global::System.Nullable<int> Original_Condition_Lv, 
                    string Original_Condition_Unit_Type, 
                    string Original_Condition_Unit_Class, 
                    string Original_Reward_Unit_Class, 
                    string Original_Change_Job_Type, 
                    global::System.Nullable<int> Original_Condition_Item_ID, 
                    global::System.Nullable<int> Original_Condition_Item_Quantity, 
                    global::System.Nullable<int> Original_SubQuest1, 
                    global::System.Nullable<int> Original_SubQuest2, 
                    global::System.Nullable<int> Original_SubQuest3, 
                    global::System.Nullable<int> Original_SubQuest4, 
                    global::System.Nullable<int> Original_SubQUest5, 
                    global::System.Nullable<bool> Original_Reward_Enable, 
                    global::System.Nullable<int> Original_Reward_EXP, 
                    global::System.Nullable<int> Original_Reward_ED, 
                    string Original_Reward_Grade, 
                    global::System.Nullable<int> Original_Reward_Buff, 
                    global::System.Nullable<int> Original_Reward_SP, 
                    global::System.Nullable<int> Original_Reward_Item1, 
                    string Original_name1, 
                    global::System.Nullable<int> Original_Period_1, 
                    global::System.Nullable<int> Original_Reward_ItemQuantity1, 
                    global::System.Nullable<int> Original_Socket_Option1, 
                    global::System.Nullable<int> Original_Reward_Item2, 
                    string Original_name2, 
                    global::System.Nullable<int> Original_Period_2, 
                    global::System.Nullable<int> Original_Reward_ItemQuantity2, 
                    global::System.Nullable<int> Original_Socket_Option2, 
                    global::System.Nullable<int> Original_Reward_Item3, 
                    string Original_name3, 
                    global::System.Nullable<int> Original_Period_3, 
                    global::System.Nullable<int> Original_Reward_ItemQuantity3, 
                    global::System.Nullable<int> Original_Socket_Option3, 
                    global::System.Nullable<int> Original_Select_Reward_Item1, 
                    string Original_name1_1, 
                    global::System.Nullable<int> Original_Select_Period1, 
                    global::System.Nullable<int> Original_Select_Reward_ItemQuantity1, 
                    global::System.Nullable<int> Original_Select_Socket_Option1, 
                    global::System.Nullable<int> Original_Select_Reward_Item2, 
                    string Original_name2_1, 
                    global::System.Nullable<int> Original_Select_Period2, 
                    global::System.Nullable<int> Original_Select_Reward_ItemQuantity2, 
                    global::System.Nullable<int> Original_Select_Socket_Option2, 
                    global::System.Nullable<int> Original_Select_Reward_Item3, 
                    string Original_name3_1, 
                    global::System.Nullable<int> Original_Select_Period3, 
                    global::System.Nullable<int> Original_Select_Reward_ItemQuantity3, 
                    global::System.Nullable<int> Original_Select_Socket_Option3, 
                    global::System.Nullable<int> Original_Select_Reward_Item4, 
                    string Original_name4_1, 
                    global::System.Nullable<int> Original_Select_Period4, 
                    string Original_Select_Reward_ItemQuantity4, 
                    global::System.Nullable<int> Original_Select_Socket_Option4, 
                    global::System.Nullable<int> Original_Select_Reward_Item5, 
                    string Original_name5_1, 
                    global::System.Nullable<int> Original_Select_Period5, 
                    global::System.Nullable<int> Original_Select_Reward_ItemQuantity5, 
                    global::System.Nullable<int> Original_Select_Socket_Option5, 
                    global::System.Nullable<int> Original_Select_Reward_ItemCount, 
                    string Original_Main_Text, 
                    string Original_Thanks_Text, 
                    string Original_Diss_Clear_Text, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_1, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_2, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_3, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_4, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_5, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_6, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_7, 
                    global::System.Nullable<int> Original_Condition_ClearQuest_ID_8, 
                    global::System.Nullable<int> Original_Condition_DisClearQuest_ID, 
                    System.DateTime Original_Regdate) {
            return this.Update(Original_IndexKey, ID, Enable_Quest, Quest_Type, Start_NPC_Name, End_NPC_Name, Title, Fair_Level, Fair_Dungeon_ID, Quest_Repeat, Condition_Lv, Condition_Unit_Type, Condition_Unit_Class, Reward_Unit_Class, Change_Job_Type, Condition_Item_ID, Condition_Item_Quantity, SubQuest1, SubQuest2, SubQuest3, SubQuest4, SubQUest5, Reward_Enable, Reward_EXP, Reward_ED, Reward_Grade, Reward_Buff, Reward_SP, Reward_Item1, name1, Period_1, Reward_ItemQuantity1, Socket_Option1, Reward_Item2, name2, Period_2, Reward_ItemQuantity2, Socket_Option2, Reward_Item3, name3, Period_3, Reward_ItemQuantity3, Socket_Option3, Select_Reward_Item1, name1_1, Select_Period1, Select_Reward_ItemQuantity1, Select_Socket_Option1, Select_Reward_Item2, name2_1, Select_Period2, Select_Reward_ItemQuantity2, Select_Socket_Option2, Select_Reward_Item3, name3_1, Select_Period3, Select_Reward_ItemQuantity3, Select_Socket_Option3, Select_Reward_Item4, name4_1, Select_Period4, Select_Reward_ItemQuantity4, Select_Socket_Option4, Select_Reward_Item5, name5_1, Select_Period5, Select_Reward_ItemQuantity5, Select_Socket_Option5, Select_Reward_ItemCount, Main_Text, Thanks_Text, Diss_Clear_Text, Condition_ClearQuest_ID_1, Condition_ClearQuest_ID_2, Condition_ClearQuest_ID_3, Condition_ClearQuest_ID_4, Condition_ClearQuest_ID_5, Condition_ClearQuest_ID_6, Condition_ClearQuest_ID_7, Condition_ClearQuest_ID_8, Condition_DisClearQuest_ID, Regdate, Original_IndexKey, Original_ID, Original_Enable_Quest, Original_Quest_Type, Original_Start_NPC_Name, Original_End_NPC_Name, Original_Title, Original_Fair_Level, Original_Fair_Dungeon_ID, Original_Quest_Repeat, Original_Condition_Lv, Original_Condition_Unit_Type, Original_Condition_Unit_Class, Original_Reward_Unit_Class, Original_Change_Job_Type, Original_Condition_Item_ID, Original_Condition_Item_Quantity, Original_SubQuest1, Original_SubQuest2, Original_SubQuest3, Original_SubQuest4, Original_SubQUest5, Original_Reward_Enable, Original_Reward_EXP, Original_Reward_ED, Original_Reward_Grade, Original_Reward_Buff, Original_Reward_SP, Original_Reward_Item1, Original_name1, Original_Period_1, Original_Reward_ItemQuantity1, Original_Socket_Option1, Original_Reward_Item2, Original_name2, Original_Period_2, Original_Reward_ItemQuantity2, Original_Socket_Option2, Original_Reward_Item3, Original_name3, Original_Period_3, Original_Reward_ItemQuantity3, Original_Socket_Option3, Original_Select_Reward_Item1, Original_name1_1, Original_Select_Period1, Original_Select_Reward_ItemQuantity1, Original_Select_Socket_Option1, Original_Select_Reward_Item2, Original_name2_1, Original_Select_Period2, Original_Select_Reward_ItemQuantity2, Original_Select_Socket_Option2, Original_Select_Reward_Item3, Original_name3_1, Original_Select_Period3, Original_Select_Reward_ItemQuantity3, Original_Select_Socket_Option3, Original_Select_Reward_Item4, Original_name4_1, Original_Select_Period4, Original_Select_Reward_ItemQuantity4, Original_Select_Socket_Option4, Original_Select_Reward_Item5, Original_name5_1, Original_Select_Period5, Original_Select_Reward_ItemQuantity5, Original_Select_Socket_Option5, Original_Select_Reward_ItemCount, Original_Main_Text, Original_Thanks_Text, Original_Diss_Clear_Text, Original_Condition_ClearQuest_ID_1, Original_Condition_ClearQuest_ID_2, Original_Condition_ClearQuest_ID_3, Original_Condition_ClearQuest_ID_4, Original_Condition_ClearQuest_ID_5, Original_Condition_ClearQuest_ID_6, Original_Condition_ClearQuest_ID_7, Original_Condition_ClearQuest_ID_8, Original_Condition_DisClearQuest_ID, Original_Regdate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuestTable_DissClearText(string Diss_Clear_Text, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Diss_Clear_Text == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Diss_Clear_Text));
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuestTable_MainText(string Main_Text, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Main_Text == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Main_Text));
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuestTable_Regdate(System.DateTime Regdate, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            command.Parameters[0].Value = ((System.DateTime)(Regdate));
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuestTable_ThanksText(string Thanks_Text, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((Thanks_Text == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Thanks_Text));
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuestTable_Title(string Title, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
            if ((Title == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Title));
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QuestTable_HistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QuestTable_HistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QuestTable_History";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Enable Quest", "Enable Quest");
            tableMapping.ColumnMappings.Add("Quest Type", "Quest Type");
            tableMapping.ColumnMappings.Add("Start NPC Name", "Start NPC Name");
            tableMapping.ColumnMappings.Add("End NPC Name", "End NPC Name");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("Fair Level", "Fair Level");
            tableMapping.ColumnMappings.Add("Fair Dungeon ID", "Fair Dungeon ID");
            tableMapping.ColumnMappings.Add("Quest Repeat", "Quest Repeat");
            tableMapping.ColumnMappings.Add("Condition Lv", "Condition Lv");
            tableMapping.ColumnMappings.Add("Condition Unit Type", "Condition Unit Type");
            tableMapping.ColumnMappings.Add("Condition Unit Class", "Condition Unit Class");
            tableMapping.ColumnMappings.Add("Reward Unit Class", "Reward Unit Class");
            tableMapping.ColumnMappings.Add("Change Job Type", "Change Job Type");
            tableMapping.ColumnMappings.Add("Condition Item ID", "Condition Item ID");
            tableMapping.ColumnMappings.Add("Condition Item Quantity", "Condition Item Quantity");
            tableMapping.ColumnMappings.Add("SubQuest1", "SubQuest1");
            tableMapping.ColumnMappings.Add("SubQuest2", "SubQuest2");
            tableMapping.ColumnMappings.Add("SubQuest3", "SubQuest3");
            tableMapping.ColumnMappings.Add("SubQuest4", "SubQuest4");
            tableMapping.ColumnMappings.Add("SubQUest5", "SubQUest5");
            tableMapping.ColumnMappings.Add("Reward Enable", "Reward Enable");
            tableMapping.ColumnMappings.Add("Reward EXP", "Reward EXP");
            tableMapping.ColumnMappings.Add("Reward ED", "Reward ED");
            tableMapping.ColumnMappings.Add("Reward Grade", "Reward Grade");
            tableMapping.ColumnMappings.Add("Reward Buff", "Reward Buff");
            tableMapping.ColumnMappings.Add("Reward SP", "Reward SP");
            tableMapping.ColumnMappings.Add("Reward Item1", "Reward Item1");
            tableMapping.ColumnMappings.Add("name1", "name1");
            tableMapping.ColumnMappings.Add("Period 1", "Period 1");
            tableMapping.ColumnMappings.Add("Reward ItemQuantity1", "Reward ItemQuantity1");
            tableMapping.ColumnMappings.Add("Socket Option1", "Socket Option1");
            tableMapping.ColumnMappings.Add("Reward Item2", "Reward Item2");
            tableMapping.ColumnMappings.Add("name2", "name2");
            tableMapping.ColumnMappings.Add("Period 2", "Period 2");
            tableMapping.ColumnMappings.Add("Reward ItemQuantity2", "Reward ItemQuantity2");
            tableMapping.ColumnMappings.Add("Socket Option2", "Socket Option2");
            tableMapping.ColumnMappings.Add("Reward Item3", "Reward Item3");
            tableMapping.ColumnMappings.Add("name3", "name3");
            tableMapping.ColumnMappings.Add("Period 3", "Period 3");
            tableMapping.ColumnMappings.Add("Reward ItemQuantity3", "Reward ItemQuantity3");
            tableMapping.ColumnMappings.Add("Socket Option3", "Socket Option3");
            tableMapping.ColumnMappings.Add("Select Reward Item1", "Select Reward Item1");
            tableMapping.ColumnMappings.Add("name1_1", "name1_1");
            tableMapping.ColumnMappings.Add("Select Period1", "Select Period1");
            tableMapping.ColumnMappings.Add("Select Reward ItemQuantity1", "Select Reward ItemQuantity1");
            tableMapping.ColumnMappings.Add("Select Socket Option1", "Select Socket Option1");
            tableMapping.ColumnMappings.Add("Select Reward Item2", "Select Reward Item2");
            tableMapping.ColumnMappings.Add("name2_1", "name2_1");
            tableMapping.ColumnMappings.Add("Select Period2", "Select Period2");
            tableMapping.ColumnMappings.Add("Select Reward ItemQuantity2", "Select Reward ItemQuantity2");
            tableMapping.ColumnMappings.Add("Select Socket Option2", "Select Socket Option2");
            tableMapping.ColumnMappings.Add("Select Reward Item3", "Select Reward Item3");
            tableMapping.ColumnMappings.Add("name3_1", "name3_1");
            tableMapping.ColumnMappings.Add("Select Period3", "Select Period3");
            tableMapping.ColumnMappings.Add("Select Reward ItemQuantity3", "Select Reward ItemQuantity3");
            tableMapping.ColumnMappings.Add("Select Socket Option3", "Select Socket Option3");
            tableMapping.ColumnMappings.Add("Select Reward Item4", "Select Reward Item4");
            tableMapping.ColumnMappings.Add("name4_1", "name4_1");
            tableMapping.ColumnMappings.Add("Select Period4", "Select Period4");
            tableMapping.ColumnMappings.Add("Select Reward ItemQuantity4", "Select Reward ItemQuantity4");
            tableMapping.ColumnMappings.Add("Select Socket Option4", "Select Socket Option4");
            tableMapping.ColumnMappings.Add("Select Reward Item5", "Select Reward Item5");
            tableMapping.ColumnMappings.Add("name5_1", "name5_1");
            tableMapping.ColumnMappings.Add("Select Period 5", "Select Period 5");
            tableMapping.ColumnMappings.Add("Select Reward ItemQuantity5", "Select Reward ItemQuantity5");
            tableMapping.ColumnMappings.Add("Select Socket Option5", "Select Socket Option5");
            tableMapping.ColumnMappings.Add("Select Reward ItemCount", "Select Reward ItemCount");
            tableMapping.ColumnMappings.Add("Main Text", "Main Text");
            tableMapping.ColumnMappings.Add("Thanks Text", "Thanks Text");
            tableMapping.ColumnMappings.Add("Diss Clear Text", "Diss Clear Text");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 1", "Condition ClearQuest ID 1");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 2", "Condition ClearQuest ID 2");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 3", "Condition ClearQuest ID 3");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 4", "Condition ClearQuest ID 4");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 5", "Condition ClearQuest ID 5");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 6", "Condition ClearQuest ID 6");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 7", "Condition ClearQuest ID 7");
            tableMapping.ColumnMappings.Add("Condition ClearQuest ID 8", "Condition ClearQuest ID 8");
            tableMapping.ColumnMappings.Add("Condition DisClearQuest ID", "Condition DisClearQuest ID");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserIP", "UserIP");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[QuestTable_History] ([IndexKey], [ID], [Enable Quest], [Quest " +
                "Type], [Start NPC Name], [End NPC Name], [Title], [Fair Level], [Fair Dungeon ID" +
                "], [Quest Repeat], [Condition Lv], [Condition Unit Type], [Condition Unit Class]" +
                ", [Reward Unit Class], [Change Job Type], [Condition Item ID], [Condition Item Q" +
                "uantity], [SubQuest1], [SubQuest2], [SubQuest3], [SubQuest4], [SubQUest5], [Rewa" +
                "rd Enable], [Reward EXP], [Reward ED], [Reward Grade], [Reward Buff], [Reward SP" +
                "], [Reward Item1], [name1], [Period 1], [Reward ItemQuantity1], [Socket Option1]" +
                ", [Reward Item2], [name2], [Period 2], [Reward ItemQuantity2], [Socket Option2]," +
                " [Reward Item3], [name3], [Period 3], [Reward ItemQuantity3], [Socket Option3], " +
                "[Select Reward Item1], [name1_1], [Select Period1], [Select Reward ItemQuantity1" +
                "], [Select Socket Option1], [Select Reward Item2], [name2_1], [Select Period2], " +
                "[Select Reward ItemQuantity2], [Select Socket Option2], [Select Reward Item3], [" +
                "name3_1], [Select Period3], [Select Reward ItemQuantity3], [Select Socket Option" +
                "3], [Select Reward Item4], [name4_1], [Select Period4], [Select Reward ItemQuant" +
                "ity4], [Select Socket Option4], [Select Reward Item5], [name5_1], [Select Period" +
                " 5], [Select Reward ItemQuantity5], [Select Socket Option5], [Select Reward Item" +
                "Count], [Main Text], [Thanks Text], [Diss Clear Text], [Condition ClearQuest ID " +
                "1], [Condition ClearQuest ID 2], [Condition ClearQuest ID 3], [Condition ClearQu" +
                "est ID 4], [Condition ClearQuest ID 5], [Condition ClearQuest ID 6], [Condition " +
                "ClearQuest ID 7], [Condition ClearQuest ID 8], [Condition DisClearQuest ID], [Us" +
                "erID], [UserIP], [Regdate]) VALUES (@IndexKey, @ID, @Enable_Quest, @Quest_Type, " +
                "@Start_NPC_Name, @End_NPC_Name, @Title, @Fair_Level, @Fair_Dungeon_ID, @Quest_Re" +
                "peat, @Condition_Lv, @Condition_Unit_Type, @Condition_Unit_Class, @Reward_Unit_C" +
                "lass, @Change_Job_Type, @Condition_Item_ID, @Condition_Item_Quantity, @SubQuest1" +
                ", @SubQuest2, @SubQuest3, @SubQuest4, @SubQUest5, @Reward_Enable, @Reward_EXP, @" +
                "Reward_ED, @Reward_Grade, @Reward_Buff, @Reward_SP, @Reward_Item1, @name1, @Peri" +
                "od_1, @Reward_ItemQuantity1, @Socket_Option1, @Reward_Item2, @name2, @Period_2, " +
                "@Reward_ItemQuantity2, @Socket_Option2, @Reward_Item3, @name3, @Period_3, @Rewar" +
                "d_ItemQuantity3, @Socket_Option3, @Select_Reward_Item1, @name1_1, @Select_Period" +
                "1, @Select_Reward_ItemQuantity1, @Select_Socket_Option1, @Select_Reward_Item2, @" +
                "name2_1, @Select_Period2, @Select_Reward_ItemQuantity2, @Select_Socket_Option2, " +
                "@Select_Reward_Item3, @name3_1, @Select_Period3, @Select_Reward_ItemQuantity3, @" +
                "Select_Socket_Option3, @Select_Reward_Item4, @name4_1, @Select_Period4, @Select_" +
                "Reward_ItemQuantity4, @Select_Socket_Option4, @Select_Reward_Item5, @name5_1, @S" +
                "elect_Period_5, @Select_Reward_ItemQuantity5, @Select_Socket_Option5, @Select_Re" +
                "ward_ItemCount, @Main_Text, @Thanks_Text, @Diss_Clear_Text, @Condition_ClearQues" +
                "t_ID_1, @Condition_ClearQuest_ID_2, @Condition_ClearQuest_ID_3, @Condition_Clear" +
                "Quest_ID_4, @Condition_ClearQuest_ID_5, @Condition_ClearQuest_ID_6, @Condition_C" +
                "learQuest_ID_7, @Condition_ClearQuest_ID_8, @Condition_DisClearQuest_ID, @UserID" +
                ", @UserIP, @Regdate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Enable_Quest", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enable Quest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quest_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Start_NPC_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start NPC Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@End_NPC_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End NPC Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fair_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fair Level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fair_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fair Dungeon ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quest_Repeat", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Repeat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Lv", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Lv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Unit_Class", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Change_Job_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change Job Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Item ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Item Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQuest1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQuest2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQuest3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQuest4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQuest4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubQUest5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubQUest5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Enable", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Enable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_EXP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_ED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Grade", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Grade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Buff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Buff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_SP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Item1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_ItemQuantity1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Item2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_ItemQuantity2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Item3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward Item3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period 3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_ItemQuantity3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward ItemQuantity3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket Option3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name1_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name1_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name2_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name2_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name3_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name3_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name4_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name4_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_Item5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward Item5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name5_1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name5_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Period_5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Period 5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemQuantity5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemQuantity5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Socket_Option5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Socket Option5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Select_Reward_ItemCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Select Reward ItemCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Main_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Main Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Thanks_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thanks Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Diss_Clear_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diss Clear Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearQuest_ID_8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition ClearQuest ID 8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_DisClearQuest_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition DisClearQuest ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserIP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT IndexKey, ID, [Enable Quest], [Quest Type], [Start NPC Name], [End NPC Nam" +
                "e], Title, [Fair Level], [Fair Dungeon ID], [Quest Repeat], [Condition Lv], [Con" +
                "dition Unit Type], [Condition Unit Class], [Reward Unit Class], [Change Job Type" +
                "], [Condition Item ID], [Condition Item Quantity], SubQuest1, SubQuest2, SubQues" +
                "t3, SubQuest4, SubQUest5, [Reward Enable], [Reward EXP], [Reward ED], [Reward Gr" +
                "ade], [Reward Buff], [Reward SP], [Reward Item1], name1, [Period 1], [Reward Ite" +
                "mQuantity1], [Socket Option1], [Reward Item2], name2, [Period 2], [Reward ItemQu" +
                "antity2], [Socket Option2], [Reward Item3], name3, [Period 3], [Reward ItemQuant" +
                "ity3], [Socket Option3], [Select Reward Item1], name1_1, [Select Period1], [Sele" +
                "ct Reward ItemQuantity1], [Select Socket Option1], [Select Reward Item2], name2_" +
                "1, [Select Period2], [Select Reward ItemQuantity2], [Select Socket Option2], [Se" +
                "lect Reward Item3], name3_1, [Select Period3], [Select Reward ItemQuantity3], [S" +
                "elect Socket Option3], [Select Reward Item4], name4_1, [Select Period4], [Select" +
                " Reward ItemQuantity4], [Select Socket Option4], [Select Reward Item5], name5_1," +
                " [Select Period 5], [Select Reward ItemQuantity5], [Select Socket Option5], [Sel" +
                "ect Reward ItemCount], [Main Text], [Thanks Text], [Diss Clear Text], [Condition" +
                " ClearQuest ID 1], [Condition ClearQuest ID 2], [Condition ClearQuest ID 3], [Co" +
                "ndition ClearQuest ID 4], [Condition ClearQuest ID 5], [Condition ClearQuest ID " +
                "6], [Condition ClearQuest ID 7], [Condition ClearQuest ID 8], [Condition DisClea" +
                "rQuest ID], UserID, UserIP, Regdate FROM dbo.QuestTable_History";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.QuestTable_HistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.QuestTable_HistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.QuestTable_HistoryDataTable dataTable = new ScriptData_JPDataSet.QuestTable_HistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.QuestTable_HistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "QuestTable_History");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IndexKey, 
                    global::System.Nullable<int> ID, 
                    global::System.Nullable<bool> Enable_Quest, 
                    string Quest_Type, 
                    string Start_NPC_Name, 
                    string End_NPC_Name, 
                    string Title, 
                    global::System.Nullable<int> Fair_Level, 
                    string Fair_Dungeon_ID, 
                    string Quest_Repeat, 
                    global::System.Nullable<int> Condition_Lv, 
                    string Condition_Unit_Type, 
                    string Condition_Unit_Class, 
                    string Reward_Unit_Class, 
                    string Change_Job_Type, 
                    global::System.Nullable<int> Condition_Item_ID, 
                    global::System.Nullable<int> Condition_Item_Quantity, 
                    global::System.Nullable<int> SubQuest1, 
                    global::System.Nullable<int> SubQuest2, 
                    global::System.Nullable<int> SubQuest3, 
                    global::System.Nullable<int> SubQuest4, 
                    global::System.Nullable<int> SubQUest5, 
                    string Reward_Enable, 
                    global::System.Nullable<int> Reward_EXP, 
                    global::System.Nullable<int> Reward_ED, 
                    string Reward_Grade, 
                    global::System.Nullable<int> Reward_Buff, 
                    global::System.Nullable<int> Reward_SP, 
                    global::System.Nullable<int> Reward_Item1, 
                    string name1, 
                    global::System.Nullable<int> Period_1, 
                    global::System.Nullable<int> Reward_ItemQuantity1, 
                    global::System.Nullable<int> Socket_Option1, 
                    global::System.Nullable<int> Reward_Item2, 
                    string name2, 
                    global::System.Nullable<int> Period_2, 
                    global::System.Nullable<int> Reward_ItemQuantity2, 
                    global::System.Nullable<int> Socket_Option2, 
                    global::System.Nullable<int> Reward_Item3, 
                    string name3, 
                    global::System.Nullable<int> Period_3, 
                    global::System.Nullable<int> Reward_ItemQuantity3, 
                    global::System.Nullable<int> Socket_Option3, 
                    global::System.Nullable<int> Select_Reward_Item1, 
                    string name1_1, 
                    global::System.Nullable<int> Select_Period1, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity1, 
                    global::System.Nullable<int> Select_Socket_Option1, 
                    global::System.Nullable<int> Select_Reward_Item2, 
                    string name2_1, 
                    global::System.Nullable<int> Select_Period2, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity2, 
                    global::System.Nullable<int> Select_Socket_Option2, 
                    global::System.Nullable<int> Select_Reward_Item3, 
                    string name3_1, 
                    global::System.Nullable<int> Select_Period3, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity3, 
                    global::System.Nullable<int> Select_Socket_Option3, 
                    global::System.Nullable<int> Select_Reward_Item4, 
                    string name4_1, 
                    global::System.Nullable<int> Select_Period4, 
                    string Select_Reward_ItemQuantity4, 
                    global::System.Nullable<int> Select_Socket_Option4, 
                    global::System.Nullable<int> Select_Reward_Item5, 
                    string name5_1, 
                    global::System.Nullable<int> Select_Period_5, 
                    global::System.Nullable<int> Select_Reward_ItemQuantity5, 
                    global::System.Nullable<int> Select_Socket_Option5, 
                    global::System.Nullable<int> Select_Reward_ItemCount, 
                    string Main_Text, 
                    string Thanks_Text, 
                    string Diss_Clear_Text, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_1, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_2, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_3, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_4, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_5, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_6, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_7, 
                    global::System.Nullable<int> Condition_ClearQuest_ID_8, 
                    global::System.Nullable<int> Condition_DisClearQuest_ID, 
                    string UserID, 
                    string UserIP, 
                    System.DateTime Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            if ((ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Enable_Quest.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(Enable_Quest.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Quest_Type == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Quest_Type));
            }
            if ((Start_NPC_Name == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Start_NPC_Name));
            }
            if ((End_NPC_Name == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(End_NPC_Name));
            }
            if ((Title == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Title));
            }
            if ((Fair_Level.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Fair_Level.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Fair_Dungeon_ID == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Fair_Dungeon_ID));
            }
            if ((Quest_Repeat == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Quest_Repeat));
            }
            if ((Condition_Lv.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(Condition_Lv.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Type == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Condition_Unit_Type));
            }
            if ((Condition_Unit_Class == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Condition_Unit_Class));
            }
            if ((Reward_Unit_Class == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Reward_Unit_Class));
            }
            if ((Change_Job_Type == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Change_Job_Type));
            }
            if ((Condition_Item_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Condition_Item_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Condition_Item_Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(Condition_Item_Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((SubQuest1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(SubQuest1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((SubQuest2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(SubQuest2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((SubQuest3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(SubQuest3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((SubQuest4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(SubQuest4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((SubQUest5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(SubQUest5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Reward_Enable == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Reward_Enable));
            }
            if ((Reward_EXP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(Reward_EXP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Reward_ED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(Reward_ED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Reward_Grade == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Reward_Grade));
            }
            if ((Reward_Buff.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(Reward_Buff.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Reward_SP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(Reward_SP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Reward_Item1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(Reward_Item1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((name1 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(name1));
            }
            if ((Period_1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((int)(Period_1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Reward_ItemQuantity1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(Reward_ItemQuantity1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Socket_Option1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((int)(Socket_Option1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Reward_Item2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((int)(Reward_Item2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((name2 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(name2));
            }
            if ((Period_2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(Period_2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Reward_ItemQuantity2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(Reward_ItemQuantity2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Socket_Option2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(Socket_Option2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Reward_Item3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((int)(Reward_Item3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((name3 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(name3));
            }
            if ((Period_3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((int)(Period_3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Reward_ItemQuantity3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((int)(Reward_ItemQuantity3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Socket_Option3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((int)(Socket_Option3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((int)(Select_Reward_Item1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((name1_1 == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(name1_1));
            }
            if ((Select_Period1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((int)(Select_Period1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((int)(Select_Reward_ItemQuantity1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Select_Socket_Option1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((int)(Select_Socket_Option1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((int)(Select_Reward_Item2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((name2_1 == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(name2_1));
            }
            if ((Select_Period2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((int)(Select_Period2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((int)(Select_Reward_ItemQuantity2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Select_Socket_Option2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((int)(Select_Socket_Option2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((int)(Select_Reward_Item3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((name3_1 == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(name3_1));
            }
            if ((Select_Period3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((int)(Select_Period3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((int)(Select_Reward_ItemQuantity3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Select_Socket_Option3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((int)(Select_Socket_Option3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((int)(Select_Reward_Item4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((name4_1 == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(name4_1));
            }
            if ((Select_Period4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((int)(Select_Period4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity4 == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(Select_Reward_ItemQuantity4));
            }
            if ((Select_Socket_Option4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((int)(Select_Socket_Option4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_Item5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((int)(Select_Reward_Item5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((name5_1 == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(name5_1));
            }
            if ((Select_Period_5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((int)(Select_Period_5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemQuantity5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((int)(Select_Reward_ItemQuantity5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Select_Socket_Option5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((int)(Select_Socket_Option5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Select_Reward_ItemCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((int)(Select_Reward_ItemCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Main_Text == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(Main_Text));
            }
            if ((Thanks_Text == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(Thanks_Text));
            }
            if ((Diss_Clear_Text == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(Diss_Clear_Text));
            }
            if ((Condition_ClearQuest_ID_1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((int)(Condition_ClearQuest_ID_1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((int)(Condition_ClearQuest_ID_2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((int)(Condition_ClearQuest_ID_3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((int)(Condition_ClearQuest_ID_4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((int)(Condition_ClearQuest_ID_5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((int)(Condition_ClearQuest_ID_6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((int)(Condition_ClearQuest_ID_7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Condition_ClearQuest_ID_8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((int)(Condition_ClearQuest_ID_8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Condition_DisClearQuest_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((int)(Condition_DisClearQuest_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((UserID == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(UserID));
            }
            if ((UserIP == null)) {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = ((string)(UserIP));
            }
            this.Adapter.InsertCommand.Parameters[83].Value = ((System.DateTime)(Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SubQuestTableTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SubQuestTableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SubQuestTable";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Clear Type", "Clear Type");
            tableMapping.ColumnMappings.Add("Clear Condition Kill NPC ID", "Clear Condition Kill NPC ID");
            tableMapping.ColumnMappings.Add("Clear Condition Kill NPC Quantity", "Clear Condition Kill NPC Quantity");
            tableMapping.ColumnMappings.Add("Clear Condition Collection Item ID", "Clear Condition Collection Item ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Clear Condition Collection Item Quantity", "Clear Condition Collection Item Quantity");
            tableMapping.ColumnMappings.Add("Quest Item Drop Rate", "Quest Item Drop Rate");
            tableMapping.ColumnMappings.Add("Clear Condition Dungeon Difficulty", "Clear Condition Dungeon Difficulty");
            tableMapping.ColumnMappings.Add("Clear Condition Upper Difficulty", "Clear Condition Upper Difficulty");
            tableMapping.ColumnMappings.Add("Clear Condition Dungeon ID", "Clear Condition Dungeon ID");
            tableMapping.ColumnMappings.Add("Clear Condition Dungeon Damage", "Clear Condition Dungeon Damage");
            tableMapping.ColumnMappings.Add("Clear Condition Dungeon Rank", "Clear Condition Dungeon Rank");
            tableMapping.ColumnMappings.Add("Clear Condition Dungeon Clear Time", "Clear Condition Dungeon Clear Time");
            tableMapping.ColumnMappings.Add("Clear Condition Dungeon clear count", "Clear Condition Dungeon clear count");
            tableMapping.ColumnMappings.Add("Clear Condition Talk NPC ID", "Clear Condition Talk NPC ID");
            tableMapping.ColumnMappings.Add("Clear Condition PVP_TYPE", "Clear Condition PVP_TYPE");
            tableMapping.ColumnMappings.Add("Clear Condition PVP_PLAY", "Clear Condition PVP_PLAY");
            tableMapping.ColumnMappings.Add("Clear Condition PVP_WIN", "Clear Condition PVP_WIN");
            tableMapping.ColumnMappings.Add("Clear Condition PVP_KILL", "Clear Condition PVP_KILL");
            tableMapping.ColumnMappings.Add("AutomaticDescription", "AutomaticDescription");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SubQuestTable] WHERE (([IndexKey] = @Original_IndexKey) AND ((" +
                "@IsNull_ID = 1 AND [ID] IS NULL) OR ([ID] = @Original_ID)) AND ((@IsNull_Clear_T" +
                "ype = 1 AND [Clear Type] IS NULL) OR ([Clear Type] = @Original_Clear_Type)) AND " +
                "((@IsNull_Clear_Condition_Kill_NPC_ID = 1 AND [Clear Condition Kill NPC ID] IS N" +
                "ULL) OR ([Clear Condition Kill NPC ID] = @Original_Clear_Condition_Kill_NPC_ID))" +
                " AND ((@IsNull_Clear_Condition_Kill_NPC_Quantity = 1 AND [Clear Condition Kill N" +
                "PC Quantity] IS NULL) OR ([Clear Condition Kill NPC Quantity] = @Original_Clear_" +
                "Condition_Kill_NPC_Quantity)) AND ((@IsNull_Clear_Condition_Collection_Item_ID =" +
                " 1 AND [Clear Condition Collection Item ID] IS NULL) OR ([Clear Condition Collec" +
                "tion Item ID] = @Original_Clear_Condition_Collection_Item_ID)) AND ((@IsNull_Nam" +
                "e = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_Clear_Cond" +
                "ition_Collection_Item_Quantity = 1 AND [Clear Condition Collection Item Quantity" +
                "] IS NULL) OR ([Clear Condition Collection Item Quantity] = @Original_Clear_Cond" +
                "ition_Collection_Item_Quantity)) AND ((@IsNull_Quest_Item_Drop_Rate = 1 AND [Que" +
                "st Item Drop Rate] IS NULL) OR ([Quest Item Drop Rate] = @Original_Quest_Item_Dr" +
                "op_Rate)) AND ((@IsNull_Clear_Condition_Dungeon_Difficulty = 1 AND [Clear Condit" +
                "ion Dungeon Difficulty] IS NULL) OR ([Clear Condition Dungeon Difficulty] = @Ori" +
                "ginal_Clear_Condition_Dungeon_Difficulty)) AND ((@IsNull_Clear_Condition_Upper_D" +
                "ifficulty = 1 AND [Clear Condition Upper Difficulty] IS NULL) OR ([Clear Conditi" +
                "on Upper Difficulty] = @Original_Clear_Condition_Upper_Difficulty)) AND ((@IsNul" +
                "l_Clear_Condition_Dungeon_ID = 1 AND [Clear Condition Dungeon ID] IS NULL) OR ([" +
                "Clear Condition Dungeon ID] = @Original_Clear_Condition_Dungeon_ID)) AND ((@IsNu" +
                "ll_Clear_Condition_Dungeon_Damage = 1 AND [Clear Condition Dungeon Damage] IS NU" +
                "LL) OR ([Clear Condition Dungeon Damage] = @Original_Clear_Condition_Dungeon_Dam" +
                "age)) AND ((@IsNull_Clear_Condition_Dungeon_Rank = 1 AND [Clear Condition Dungeo" +
                "n Rank] IS NULL) OR ([Clear Condition Dungeon Rank] = @Original_Clear_Condition_" +
                "Dungeon_Rank)) AND ((@IsNull_Clear_Condition_Dungeon_Clear_Time = 1 AND [Clear C" +
                "ondition Dungeon Clear Time] IS NULL) OR ([Clear Condition Dungeon Clear Time] =" +
                " @Original_Clear_Condition_Dungeon_Clear_Time)) AND ((@IsNull_Clear_Condition_Du" +
                "ngeon_clear_count = 1 AND [Clear Condition Dungeon clear count] IS NULL) OR ([Cl" +
                "ear Condition Dungeon clear count] = @Original_Clear_Condition_Dungeon_clear_cou" +
                "nt)) AND ((@IsNull_Clear_Condition_Talk_NPC_ID = 1 AND [Clear Condition Talk NPC" +
                " ID] IS NULL) OR ([Clear Condition Talk NPC ID] = @Original_Clear_Condition_Talk" +
                "_NPC_ID)) AND ((@IsNull_Clear_Condition_PVP_TYPE = 1 AND [Clear Condition PVP_TY" +
                "PE] IS NULL) OR ([Clear Condition PVP_TYPE] = @Original_Clear_Condition_PVP_TYPE" +
                ")) AND ((@IsNull_Clear_Condition_PVP_PLAY = 1 AND [Clear Condition PVP_PLAY] IS " +
                "NULL) OR ([Clear Condition PVP_PLAY] = @Original_Clear_Condition_PVP_PLAY)) AND " +
                "((@IsNull_Clear_Condition_PVP_WIN = 1 AND [Clear Condition PVP_WIN] IS NULL) OR " +
                "([Clear Condition PVP_WIN] = @Original_Clear_Condition_PVP_WIN)) AND ((@IsNull_C" +
                "lear_Condition_PVP_KILL = 1 AND [Clear Condition PVP_KILL] IS NULL) OR ([Clear C" +
                "ondition PVP_KILL] = @Original_Clear_Condition_PVP_KILL)) AND ((@IsNull_Automati" +
                "cDescription = 1 AND [AutomaticDescription] IS NULL) OR ([AutomaticDescription] " +
                "= @Original_AutomaticDescription)) AND ((@IsNull_Description = 1 AND [Descriptio" +
                "n] IS NULL) OR ([Description] = @Original_Description)) AND ([Regdate] = @Origin" +
                "al_Regdate))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Kill_NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Kill_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Kill_NPC_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC Quantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Kill_NPC_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Collection_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Collection Item ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Collection_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Collection Item ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Collection_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Collection Item Quantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Collection_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Collection Item Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quest_Item_Drop_Rate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Item Drop Rate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quest_Item_Drop_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Item Drop Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Difficulty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Difficulty", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Difficulty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Difficulty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Upper_Difficulty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Upper Difficulty", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Upper_Difficulty", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Upper Difficulty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Damage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Damage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Damage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Damage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Rank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Rank", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Rank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Rank", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Clear_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Clear Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Clear_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Clear Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_clear_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon clear count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_clear_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon clear count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Talk_NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Talk NPC ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Talk_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Talk NPC ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_TYPE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_PLAY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_PLAY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_PLAY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_PLAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_WIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_WIN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_WIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_WIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_KILL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_KILL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_KILL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_KILL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AutomaticDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomaticDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AutomaticDescription", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomaticDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[SubQuestTable] ([IndexKey], [ID], [Clear Type], [Clear Conditi" +
                "on Kill NPC ID], [Clear Condition Kill NPC Quantity], [Clear Condition Collectio" +
                "n Item ID], [Name], [Clear Condition Collection Item Quantity], [Quest Item Drop" +
                " Rate], [Clear Condition Dungeon Difficulty], [Clear Condition Upper Difficulty]" +
                ", [Clear Condition Dungeon ID], [Clear Condition Dungeon Damage], [Clear Conditi" +
                "on Dungeon Rank], [Clear Condition Dungeon Clear Time], [Clear Condition Dungeon" +
                " clear count], [Clear Condition Talk NPC ID], [Clear Condition PVP_TYPE], [Clear" +
                " Condition PVP_PLAY], [Clear Condition PVP_WIN], [Clear Condition PVP_KILL], [Au" +
                "tomaticDescription], [Description], [Regdate]) VALUES (@IndexKey, @ID, @Clear_Ty" +
                "pe, @Clear_Condition_Kill_NPC_ID, @Clear_Condition_Kill_NPC_Quantity, @Clear_Con" +
                "dition_Collection_Item_ID, @Name, @Clear_Condition_Collection_Item_Quantity, @Qu" +
                "est_Item_Drop_Rate, @Clear_Condition_Dungeon_Difficulty, @Clear_Condition_Upper_" +
                "Difficulty, @Clear_Condition_Dungeon_ID, @Clear_Condition_Dungeon_Damage, @Clear" +
                "_Condition_Dungeon_Rank, @Clear_Condition_Dungeon_Clear_Time, @Clear_Condition_D" +
                "ungeon_clear_count, @Clear_Condition_Talk_NPC_ID, @Clear_Condition_PVP_TYPE, @Cl" +
                "ear_Condition_PVP_PLAY, @Clear_Condition_PVP_WIN, @Clear_Condition_PVP_KILL, @Au" +
                "tomaticDescription, @Description, @Regdate);\r\nSELECT IndexKey, ID, [Clear Type]," +
                " [Clear Condition Kill NPC ID], [Clear Condition Kill NPC Quantity], [Clear Cond" +
                "ition Collection Item ID], Name, [Clear Condition Collection Item Quantity], [Qu" +
                "est Item Drop Rate], [Clear Condition Dungeon Difficulty], [Clear Condition Uppe" +
                "r Difficulty], [Clear Condition Dungeon ID], [Clear Condition Dungeon Damage], [" +
                "Clear Condition Dungeon Rank], [Clear Condition Dungeon Clear Time], [Clear Cond" +
                "ition Dungeon clear count], [Clear Condition Talk NPC ID], [Clear Condition PVP_" +
                "TYPE], [Clear Condition PVP_PLAY], [Clear Condition PVP_WIN], [Clear Condition P" +
                "VP_KILL], AutomaticDescription, Description, Regdate FROM SubQuestTable WHERE (I" +
                "ndexKey = @IndexKey)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Kill_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Kill_NPC_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Collection_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Collection Item ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Collection_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Collection Item Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quest_Item_Drop_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Item Drop Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Difficulty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Difficulty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Upper_Difficulty", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Upper Difficulty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Damage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Damage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Rank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Rank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Clear_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Clear Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_clear_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon clear count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Talk_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Talk NPC ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_PLAY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_PLAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_WIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_WIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_KILL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_KILL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutomaticDescription", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomaticDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SubQuestTable] SET [IndexKey] = @IndexKey, [ID] = @ID, [Clear Type]" +
                " = @Clear_Type, [Clear Condition Kill NPC ID] = @Clear_Condition_Kill_NPC_ID, [C" +
                "lear Condition Kill NPC Quantity] = @Clear_Condition_Kill_NPC_Quantity, [Clear C" +
                "ondition Collection Item ID] = @Clear_Condition_Collection_Item_ID, [Name] = @Na" +
                "me, [Clear Condition Collection Item Quantity] = @Clear_Condition_Collection_Ite" +
                "m_Quantity, [Quest Item Drop Rate] = @Quest_Item_Drop_Rate, [Clear Condition Dun" +
                "geon Difficulty] = @Clear_Condition_Dungeon_Difficulty, [Clear Condition Upper D" +
                "ifficulty] = @Clear_Condition_Upper_Difficulty, [Clear Condition Dungeon ID] = @" +
                "Clear_Condition_Dungeon_ID, [Clear Condition Dungeon Damage] = @Clear_Condition_" +
                "Dungeon_Damage, [Clear Condition Dungeon Rank] = @Clear_Condition_Dungeon_Rank, " +
                "[Clear Condition Dungeon Clear Time] = @Clear_Condition_Dungeon_Clear_Time, [Cle" +
                "ar Condition Dungeon clear count] = @Clear_Condition_Dungeon_clear_count, [Clear" +
                " Condition Talk NPC ID] = @Clear_Condition_Talk_NPC_ID, [Clear Condition PVP_TYP" +
                "E] = @Clear_Condition_PVP_TYPE, [Clear Condition PVP_PLAY] = @Clear_Condition_PV" +
                "P_PLAY, [Clear Condition PVP_WIN] = @Clear_Condition_PVP_WIN, [Clear Condition P" +
                "VP_KILL] = @Clear_Condition_PVP_KILL, [AutomaticDescription] = @AutomaticDescrip" +
                "tion, [Description] = @Description, [Regdate] = @Regdate WHERE (([IndexKey] = @O" +
                "riginal_IndexKey) AND ((@IsNull_ID = 1 AND [ID] IS NULL) OR ([ID] = @Original_ID" +
                ")) AND ((@IsNull_Clear_Type = 1 AND [Clear Type] IS NULL) OR ([Clear Type] = @Or" +
                "iginal_Clear_Type)) AND ((@IsNull_Clear_Condition_Kill_NPC_ID = 1 AND [Clear Con" +
                "dition Kill NPC ID] IS NULL) OR ([Clear Condition Kill NPC ID] = @Original_Clear" +
                "_Condition_Kill_NPC_ID)) AND ((@IsNull_Clear_Condition_Kill_NPC_Quantity = 1 AND" +
                " [Clear Condition Kill NPC Quantity] IS NULL) OR ([Clear Condition Kill NPC Quan" +
                "tity] = @Original_Clear_Condition_Kill_NPC_Quantity)) AND ((@IsNull_Clear_Condit" +
                "ion_Collection_Item_ID = 1 AND [Clear Condition Collection Item ID] IS NULL) OR " +
                "([Clear Condition Collection Item ID] = @Original_Clear_Condition_Collection_Ite" +
                "m_ID)) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) " +
                "AND ((@IsNull_Clear_Condition_Collection_Item_Quantity = 1 AND [Clear Condition " +
                "Collection Item Quantity] IS NULL) OR ([Clear Condition Collection Item Quantity" +
                "] = @Original_Clear_Condition_Collection_Item_Quantity)) AND ((@IsNull_Quest_Ite" +
                "m_Drop_Rate = 1 AND [Quest Item Drop Rate] IS NULL) OR ([Quest Item Drop Rate] =" +
                " @Original_Quest_Item_Drop_Rate)) AND ((@IsNull_Clear_Condition_Dungeon_Difficul" +
                "ty = 1 AND [Clear Condition Dungeon Difficulty] IS NULL) OR ([Clear Condition Du" +
                "ngeon Difficulty] = @Original_Clear_Condition_Dungeon_Difficulty)) AND ((@IsNull" +
                "_Clear_Condition_Upper_Difficulty = 1 AND [Clear Condition Upper Difficulty] IS " +
                "NULL) OR ([Clear Condition Upper Difficulty] = @Original_Clear_Condition_Upper_D" +
                "ifficulty)) AND ((@IsNull_Clear_Condition_Dungeon_ID = 1 AND [Clear Condition Du" +
                "ngeon ID] IS NULL) OR ([Clear Condition Dungeon ID] = @Original_Clear_Condition_" +
                "Dungeon_ID)) AND ((@IsNull_Clear_Condition_Dungeon_Damage = 1 AND [Clear Conditi" +
                "on Dungeon Damage] IS NULL) OR ([Clear Condition Dungeon Damage] = @Original_Cle" +
                "ar_Condition_Dungeon_Damage)) AND ((@IsNull_Clear_Condition_Dungeon_Rank = 1 AND" +
                " [Clear Condition Dungeon Rank] IS NULL) OR ([Clear Condition Dungeon Rank] = @O" +
                "riginal_Clear_Condition_Dungeon_Rank)) AND ((@IsNull_Clear_Condition_Dungeon_Cle" +
                "ar_Time = 1 AND [Clear Condition Dungeon Clear Time] IS NULL) OR ([Clear Conditi" +
                "on Dungeon Clear Time] = @Original_Clear_Condition_Dungeon_Clear_Time)) AND ((@I" +
                "sNull_Clear_Condition_Dungeon_clear_count = 1 AND [Clear Condition Dungeon clear" +
                " count] IS NULL) OR ([Clear Condition Dungeon clear count] = @Original_Clear_Con" +
                "dition_Dungeon_clear_count)) AND ((@IsNull_Clear_Condition_Talk_NPC_ID = 1 AND [" +
                "Clear Condition Talk NPC ID] IS NULL) OR ([Clear Condition Talk NPC ID] = @Origi" +
                "nal_Clear_Condition_Talk_NPC_ID)) AND ((@IsNull_Clear_Condition_PVP_TYPE = 1 AND" +
                " [Clear Condition PVP_TYPE] IS NULL) OR ([Clear Condition PVP_TYPE] = @Original_" +
                "Clear_Condition_PVP_TYPE)) AND ((@IsNull_Clear_Condition_PVP_PLAY = 1 AND [Clear" +
                " Condition PVP_PLAY] IS NULL) OR ([Clear Condition PVP_PLAY] = @Original_Clear_C" +
                "ondition_PVP_PLAY)) AND ((@IsNull_Clear_Condition_PVP_WIN = 1 AND [Clear Conditi" +
                "on PVP_WIN] IS NULL) OR ([Clear Condition PVP_WIN] = @Original_Clear_Condition_P" +
                "VP_WIN)) AND ((@IsNull_Clear_Condition_PVP_KILL = 1 AND [Clear Condition PVP_KIL" +
                "L] IS NULL) OR ([Clear Condition PVP_KILL] = @Original_Clear_Condition_PVP_KILL)" +
                ") AND ((@IsNull_AutomaticDescription = 1 AND [AutomaticDescription] IS NULL) OR " +
                "([AutomaticDescription] = @Original_AutomaticDescription)) AND ((@IsNull_Descrip" +
                "tion = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) " +
                "AND ([Regdate] = @Original_Regdate));\r\nSELECT IndexKey, ID, [Clear Type], [Clear" +
                " Condition Kill NPC ID], [Clear Condition Kill NPC Quantity], [Clear Condition C" +
                "ollection Item ID], Name, [Clear Condition Collection Item Quantity], [Quest Ite" +
                "m Drop Rate], [Clear Condition Dungeon Difficulty], [Clear Condition Upper Diffi" +
                "culty], [Clear Condition Dungeon ID], [Clear Condition Dungeon Damage], [Clear C" +
                "ondition Dungeon Rank], [Clear Condition Dungeon Clear Time], [Clear Condition D" +
                "ungeon clear count], [Clear Condition Talk NPC ID], [Clear Condition PVP_TYPE], " +
                "[Clear Condition PVP_PLAY], [Clear Condition PVP_WIN], [Clear Condition PVP_KILL" +
                "], AutomaticDescription, Description, Regdate FROM SubQuestTable WHERE (IndexKey" +
                " = @IndexKey)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Kill_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Kill_NPC_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Collection_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Collection Item ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Collection_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Collection Item Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quest_Item_Drop_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Item Drop Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Difficulty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Difficulty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Upper_Difficulty", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Upper Difficulty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Damage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Damage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Rank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Rank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Clear_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Clear Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_clear_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon clear count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Talk_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Talk NPC ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_PLAY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_PLAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_WIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_WIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_KILL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_KILL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutomaticDescription", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomaticDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Kill_NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Kill_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Kill_NPC_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC Quantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Kill_NPC_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Collection_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Collection Item ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Collection_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Collection Item ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Collection_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Collection Item Quantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Collection_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Collection Item Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quest_Item_Drop_Rate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Item Drop Rate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quest_Item_Drop_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Item Drop Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Difficulty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Difficulty", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Difficulty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Difficulty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Upper_Difficulty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Upper Difficulty", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Upper_Difficulty", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Upper Difficulty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Damage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Damage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Damage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Damage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Rank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Rank", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Rank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Rank", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Clear_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Clear Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Clear_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Clear Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_clear_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon clear count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_clear_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon clear count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Talk_NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Talk NPC ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Talk_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Talk NPC ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_TYPE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_PLAY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_PLAY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_PLAY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_PLAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_WIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_WIN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_WIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_WIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_KILL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_KILL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_KILL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_KILL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AutomaticDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomaticDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AutomaticDescription", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomaticDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT IndexKey, ID, [Clear Type], [Clear Condition Kill NPC ID], [Clear Condition Kill NPC Quantity], [Clear Condition Collection Item ID], Name, [Clear Condition Collection Item Quantity], [Quest Item Drop Rate], [Clear Condition Dungeon Difficulty], [Clear Condition Upper Difficulty], [Clear Condition Dungeon ID], [Clear Condition Dungeon Damage], [Clear Condition Dungeon Rank], [Clear Condition Dungeon Clear Time], [Clear Condition Dungeon clear count], [Clear Condition Talk NPC ID], [Clear Condition PVP_TYPE], [Clear Condition PVP_PLAY], [Clear Condition PVP_WIN], [Clear Condition PVP_KILL], AutomaticDescription, Description, Regdate FROM dbo.SubQuestTable";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE  SubQuestTable\r\nSET         Description = @Description\r\nWHERE   (IndexKey " +
                "= @Index); ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE  SubQuestTable\r\nSET         Regdate= @Regdate\r\nWHERE   (IndexKey = @Index)" +
                "; ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.SubQuestTableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.SubQuestTableDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.SubQuestTableDataTable dataTable = new ScriptData_JPDataSet.SubQuestTableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.SubQuestTableDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SubQuestTable");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_IndexKey, 
                    global::System.Nullable<int> Original_ID, 
                    string Original_Clear_Type, 
                    string Original_Clear_Condition_Kill_NPC_ID, 
                    global::System.Nullable<int> Original_Clear_Condition_Kill_NPC_Quantity, 
                    global::System.Nullable<int> Original_Clear_Condition_Collection_Item_ID, 
                    string Original_Name, 
                    global::System.Nullable<int> Original_Clear_Condition_Collection_Item_Quantity, 
                    global::System.Nullable<double> Original_Quest_Item_Drop_Rate, 
                    string Original_Clear_Condition_Dungeon_Difficulty, 
                    global::System.Nullable<bool> Original_Clear_Condition_Upper_Difficulty, 
                    string Original_Clear_Condition_Dungeon_ID, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Damage, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Rank, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Clear_Time, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_clear_count, 
                    string Original_Clear_Condition_Talk_NPC_ID, 
                    string Original_Clear_Condition_PVP_TYPE, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_PLAY, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_WIN, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_KILL, 
                    global::System.Nullable<bool> Original_AutomaticDescription, 
                    string Original_Description, 
                    System.DateTime Original_Regdate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IndexKey));
            if ((Original_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Clear_Type));
            }
            if ((Original_Clear_Condition_Kill_NPC_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Clear_Condition_Kill_NPC_ID));
            }
            if ((Original_Clear_Condition_Kill_NPC_Quantity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Clear_Condition_Kill_NPC_Quantity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Collection_Item_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_Clear_Condition_Collection_Item_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Name));
            }
            if ((Original_Clear_Condition_Collection_Item_Quantity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_Clear_Condition_Collection_Item_Quantity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Quest_Item_Drop_Rate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_Quest_Item_Drop_Rate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_Difficulty == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Clear_Condition_Dungeon_Difficulty));
            }
            if ((Original_Clear_Condition_Upper_Difficulty.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_Clear_Condition_Upper_Difficulty.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Clear_Condition_Dungeon_ID));
            }
            if ((Original_Clear_Condition_Dungeon_Damage.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_Clear_Condition_Dungeon_Damage.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_Rank.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_Clear_Condition_Dungeon_Rank.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_Clear_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_Clear_Condition_Dungeon_Clear_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_clear_count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_Clear_Condition_Dungeon_clear_count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Talk_NPC_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_Clear_Condition_Talk_NPC_ID));
            }
            if ((Original_Clear_Condition_PVP_TYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_Clear_Condition_PVP_TYPE));
            }
            if ((Original_Clear_Condition_PVP_PLAY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_Clear_Condition_PVP_PLAY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_PVP_WIN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_Clear_Condition_PVP_WIN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_PVP_KILL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_Clear_Condition_PVP_KILL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_AutomaticDescription.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((bool)(Original_AutomaticDescription.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_Description));
            }
            this.Adapter.DeleteCommand.Parameters[45].Value = ((System.DateTime)(Original_Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IndexKey, 
                    global::System.Nullable<int> ID, 
                    string Clear_Type, 
                    string Clear_Condition_Kill_NPC_ID, 
                    global::System.Nullable<int> Clear_Condition_Kill_NPC_Quantity, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_ID, 
                    string Name, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_Quantity, 
                    global::System.Nullable<double> Quest_Item_Drop_Rate, 
                    string Clear_Condition_Dungeon_Difficulty, 
                    global::System.Nullable<bool> Clear_Condition_Upper_Difficulty, 
                    string Clear_Condition_Dungeon_ID, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Damage, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Rank, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Clear_Time, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_clear_count, 
                    string Clear_Condition_Talk_NPC_ID, 
                    string Clear_Condition_PVP_TYPE, 
                    global::System.Nullable<int> Clear_Condition_PVP_PLAY, 
                    global::System.Nullable<int> Clear_Condition_PVP_WIN, 
                    global::System.Nullable<int> Clear_Condition_PVP_KILL, 
                    global::System.Nullable<bool> AutomaticDescription, 
                    string Description, 
                    System.DateTime Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            if ((ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Clear_Type == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Clear_Type));
            }
            if ((Clear_Condition_Kill_NPC_ID == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Clear_Condition_Kill_NPC_ID));
            }
            if ((Clear_Condition_Kill_NPC_Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Clear_Condition_Kill_NPC_Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Collection_Item_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Clear_Condition_Collection_Item_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Name));
            }
            if ((Clear_Condition_Collection_Item_Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Clear_Condition_Collection_Item_Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Quest_Item_Drop_Rate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Quest_Item_Drop_Rate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Difficulty == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Clear_Condition_Dungeon_Difficulty));
            }
            if ((Clear_Condition_Upper_Difficulty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(Clear_Condition_Upper_Difficulty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_ID == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Clear_Condition_Dungeon_ID));
            }
            if ((Clear_Condition_Dungeon_Damage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(Clear_Condition_Dungeon_Damage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Rank.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(Clear_Condition_Dungeon_Rank.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Clear_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(Clear_Condition_Dungeon_Clear_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_clear_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Clear_Condition_Dungeon_clear_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Talk_NPC_ID == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Clear_Condition_Talk_NPC_ID));
            }
            if ((Clear_Condition_PVP_TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Clear_Condition_PVP_TYPE));
            }
            if ((Clear_Condition_PVP_PLAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(Clear_Condition_PVP_PLAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_PVP_WIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(Clear_Condition_PVP_WIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_PVP_KILL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(Clear_Condition_PVP_KILL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((AutomaticDescription.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(AutomaticDescription.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Description));
            }
            this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IndexKey, 
                    global::System.Nullable<int> ID, 
                    string Clear_Type, 
                    string Clear_Condition_Kill_NPC_ID, 
                    global::System.Nullable<int> Clear_Condition_Kill_NPC_Quantity, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_ID, 
                    string Name, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_Quantity, 
                    global::System.Nullable<double> Quest_Item_Drop_Rate, 
                    string Clear_Condition_Dungeon_Difficulty, 
                    global::System.Nullable<bool> Clear_Condition_Upper_Difficulty, 
                    string Clear_Condition_Dungeon_ID, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Damage, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Rank, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Clear_Time, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_clear_count, 
                    string Clear_Condition_Talk_NPC_ID, 
                    string Clear_Condition_PVP_TYPE, 
                    global::System.Nullable<int> Clear_Condition_PVP_PLAY, 
                    global::System.Nullable<int> Clear_Condition_PVP_WIN, 
                    global::System.Nullable<int> Clear_Condition_PVP_KILL, 
                    global::System.Nullable<bool> AutomaticDescription, 
                    string Description, 
                    System.DateTime Regdate, 
                    int Original_IndexKey, 
                    global::System.Nullable<int> Original_ID, 
                    string Original_Clear_Type, 
                    string Original_Clear_Condition_Kill_NPC_ID, 
                    global::System.Nullable<int> Original_Clear_Condition_Kill_NPC_Quantity, 
                    global::System.Nullable<int> Original_Clear_Condition_Collection_Item_ID, 
                    string Original_Name, 
                    global::System.Nullable<int> Original_Clear_Condition_Collection_Item_Quantity, 
                    global::System.Nullable<double> Original_Quest_Item_Drop_Rate, 
                    string Original_Clear_Condition_Dungeon_Difficulty, 
                    global::System.Nullable<bool> Original_Clear_Condition_Upper_Difficulty, 
                    string Original_Clear_Condition_Dungeon_ID, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Damage, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Rank, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Clear_Time, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_clear_count, 
                    string Original_Clear_Condition_Talk_NPC_ID, 
                    string Original_Clear_Condition_PVP_TYPE, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_PLAY, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_WIN, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_KILL, 
                    global::System.Nullable<bool> Original_AutomaticDescription, 
                    string Original_Description, 
                    System.DateTime Original_Regdate) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IndexKey));
            if ((ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Clear_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Clear_Type));
            }
            if ((Clear_Condition_Kill_NPC_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Clear_Condition_Kill_NPC_ID));
            }
            if ((Clear_Condition_Kill_NPC_Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Clear_Condition_Kill_NPC_Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Collection_Item_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Clear_Condition_Collection_Item_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Name));
            }
            if ((Clear_Condition_Collection_Item_Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Clear_Condition_Collection_Item_Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Quest_Item_Drop_Rate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Quest_Item_Drop_Rate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Difficulty == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Clear_Condition_Dungeon_Difficulty));
            }
            if ((Clear_Condition_Upper_Difficulty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Clear_Condition_Upper_Difficulty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Clear_Condition_Dungeon_ID));
            }
            if ((Clear_Condition_Dungeon_Damage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Clear_Condition_Dungeon_Damage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Rank.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Clear_Condition_Dungeon_Rank.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Clear_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Clear_Condition_Dungeon_Clear_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_clear_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Clear_Condition_Dungeon_clear_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Talk_NPC_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Clear_Condition_Talk_NPC_ID));
            }
            if ((Clear_Condition_PVP_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Clear_Condition_PVP_TYPE));
            }
            if ((Clear_Condition_PVP_PLAY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Clear_Condition_PVP_PLAY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_PVP_WIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Clear_Condition_PVP_WIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_PVP_KILL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Clear_Condition_PVP_KILL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((AutomaticDescription.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(AutomaticDescription.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Regdate));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_IndexKey));
            if ((Original_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Clear_Type));
            }
            if ((Original_Clear_Condition_Kill_NPC_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Clear_Condition_Kill_NPC_ID));
            }
            if ((Original_Clear_Condition_Kill_NPC_Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_Clear_Condition_Kill_NPC_Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Collection_Item_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_Clear_Condition_Collection_Item_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Name));
            }
            if ((Original_Clear_Condition_Collection_Item_Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_Clear_Condition_Collection_Item_Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_Quest_Item_Drop_Rate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(Original_Quest_Item_Drop_Rate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_Difficulty == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_Clear_Condition_Dungeon_Difficulty));
            }
            if ((Original_Clear_Condition_Upper_Difficulty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(Original_Clear_Condition_Upper_Difficulty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_Clear_Condition_Dungeon_ID));
            }
            if ((Original_Clear_Condition_Dungeon_Damage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(Original_Clear_Condition_Dungeon_Damage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_Rank.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_Clear_Condition_Dungeon_Rank.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_Clear_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(Original_Clear_Condition_Dungeon_Clear_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_clear_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(Original_Clear_Condition_Dungeon_clear_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Talk_NPC_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_Clear_Condition_Talk_NPC_ID));
            }
            if ((Original_Clear_Condition_PVP_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_Clear_Condition_PVP_TYPE));
            }
            if ((Original_Clear_Condition_PVP_PLAY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Original_Clear_Condition_PVP_PLAY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_PVP_WIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(Original_Clear_Condition_PVP_WIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_PVP_KILL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(Original_Clear_Condition_PVP_KILL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_AutomaticDescription.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((bool)(Original_AutomaticDescription.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_Description));
            }
            this.Adapter.UpdateCommand.Parameters[69].Value = ((System.DateTime)(Original_Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID, 
                    string Clear_Type, 
                    string Clear_Condition_Kill_NPC_ID, 
                    global::System.Nullable<int> Clear_Condition_Kill_NPC_Quantity, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_ID, 
                    string Name, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_Quantity, 
                    global::System.Nullable<double> Quest_Item_Drop_Rate, 
                    string Clear_Condition_Dungeon_Difficulty, 
                    global::System.Nullable<bool> Clear_Condition_Upper_Difficulty, 
                    string Clear_Condition_Dungeon_ID, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Damage, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Rank, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Clear_Time, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_clear_count, 
                    string Clear_Condition_Talk_NPC_ID, 
                    string Clear_Condition_PVP_TYPE, 
                    global::System.Nullable<int> Clear_Condition_PVP_PLAY, 
                    global::System.Nullable<int> Clear_Condition_PVP_WIN, 
                    global::System.Nullable<int> Clear_Condition_PVP_KILL, 
                    global::System.Nullable<bool> AutomaticDescription, 
                    string Description, 
                    System.DateTime Regdate, 
                    int Original_IndexKey, 
                    global::System.Nullable<int> Original_ID, 
                    string Original_Clear_Type, 
                    string Original_Clear_Condition_Kill_NPC_ID, 
                    global::System.Nullable<int> Original_Clear_Condition_Kill_NPC_Quantity, 
                    global::System.Nullable<int> Original_Clear_Condition_Collection_Item_ID, 
                    string Original_Name, 
                    global::System.Nullable<int> Original_Clear_Condition_Collection_Item_Quantity, 
                    global::System.Nullable<double> Original_Quest_Item_Drop_Rate, 
                    string Original_Clear_Condition_Dungeon_Difficulty, 
                    global::System.Nullable<bool> Original_Clear_Condition_Upper_Difficulty, 
                    string Original_Clear_Condition_Dungeon_ID, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Damage, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Rank, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Clear_Time, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_clear_count, 
                    string Original_Clear_Condition_Talk_NPC_ID, 
                    string Original_Clear_Condition_PVP_TYPE, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_PLAY, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_WIN, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_KILL, 
                    global::System.Nullable<bool> Original_AutomaticDescription, 
                    string Original_Description, 
                    System.DateTime Original_Regdate) {
            return this.Update(Original_IndexKey, ID, Clear_Type, Clear_Condition_Kill_NPC_ID, Clear_Condition_Kill_NPC_Quantity, Clear_Condition_Collection_Item_ID, Name, Clear_Condition_Collection_Item_Quantity, Quest_Item_Drop_Rate, Clear_Condition_Dungeon_Difficulty, Clear_Condition_Upper_Difficulty, Clear_Condition_Dungeon_ID, Clear_Condition_Dungeon_Damage, Clear_Condition_Dungeon_Rank, Clear_Condition_Dungeon_Clear_Time, Clear_Condition_Dungeon_clear_count, Clear_Condition_Talk_NPC_ID, Clear_Condition_PVP_TYPE, Clear_Condition_PVP_PLAY, Clear_Condition_PVP_WIN, Clear_Condition_PVP_KILL, AutomaticDescription, Description, Regdate, Original_IndexKey, Original_ID, Original_Clear_Type, Original_Clear_Condition_Kill_NPC_ID, Original_Clear_Condition_Kill_NPC_Quantity, Original_Clear_Condition_Collection_Item_ID, Original_Name, Original_Clear_Condition_Collection_Item_Quantity, Original_Quest_Item_Drop_Rate, Original_Clear_Condition_Dungeon_Difficulty, Original_Clear_Condition_Upper_Difficulty, Original_Clear_Condition_Dungeon_ID, Original_Clear_Condition_Dungeon_Damage, Original_Clear_Condition_Dungeon_Rank, Original_Clear_Condition_Dungeon_Clear_Time, Original_Clear_Condition_Dungeon_clear_count, Original_Clear_Condition_Talk_NPC_ID, Original_Clear_Condition_PVP_TYPE, Original_Clear_Condition_PVP_PLAY, Original_Clear_Condition_PVP_WIN, Original_Clear_Condition_PVP_KILL, Original_AutomaticDescription, Original_Description, Original_Regdate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateSubQuestTable_Description(string Description, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Description == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Description));
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateSubQuestTable_Regdate(System.DateTime Regdate, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((System.DateTime)(Regdate));
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SubQuestTable_HistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SubQuestTable_HistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SubQuestTable_History";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Clear Type", "Clear Type");
            tableMapping.ColumnMappings.Add("Clear Condition Kill NPC ID", "Clear Condition Kill NPC ID");
            tableMapping.ColumnMappings.Add("Clear Condition Kill NPC Quantity", "Clear Condition Kill NPC Quantity");
            tableMapping.ColumnMappings.Add("Clear Condition Collection Item ID", "Clear Condition Collection Item ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Clear Condition Collection Item Quantity", "Clear Condition Collection Item Quantity");
            tableMapping.ColumnMappings.Add("Quest Item Drop Rate", "Quest Item Drop Rate");
            tableMapping.ColumnMappings.Add("Clear Condition Dungeon Difficulty", "Clear Condition Dungeon Difficulty");
            tableMapping.ColumnMappings.Add("Clear Condition Upper Difficulty", "Clear Condition Upper Difficulty");
            tableMapping.ColumnMappings.Add("Clear Condition Dungeon ID", "Clear Condition Dungeon ID");
            tableMapping.ColumnMappings.Add("Clear Condition Dungeon Damage", "Clear Condition Dungeon Damage");
            tableMapping.ColumnMappings.Add("Clear Condition Dungeon Rank", "Clear Condition Dungeon Rank");
            tableMapping.ColumnMappings.Add("Clear Condition Dungeon Clear Time", "Clear Condition Dungeon Clear Time");
            tableMapping.ColumnMappings.Add("Clear Condition Dungeon clear count", "Clear Condition Dungeon clear count");
            tableMapping.ColumnMappings.Add("Clear Condition Talk NPC ID", "Clear Condition Talk NPC ID");
            tableMapping.ColumnMappings.Add("Clear Condition PVP_TYPE", "Clear Condition PVP_TYPE");
            tableMapping.ColumnMappings.Add("Clear Condition PVP_PLAY", "Clear Condition PVP_PLAY");
            tableMapping.ColumnMappings.Add("Clear Condition PVP_WIN", "Clear Condition PVP_WIN");
            tableMapping.ColumnMappings.Add("Clear Condition PVP_KILL", "Clear Condition PVP_KILL");
            tableMapping.ColumnMappings.Add("AutomaticDescription", "AutomaticDescription");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserIP", "UserIP");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SubQuestTable_History] ([IndexKey], [ID], [Clear Type], [Clear Condition Kill NPC ID], [Clear Condition Kill NPC Quantity], [Clear Condition Collection Item ID], [Name], [Clear Condition Collection Item Quantity], [Quest Item Drop Rate], [Clear Condition Dungeon Difficulty], [Clear Condition Upper Difficulty], [Clear Condition Dungeon ID], [Clear Condition Dungeon Damage], [Clear Condition Dungeon Rank], [Clear Condition Dungeon Clear Time], [Clear Condition Dungeon clear count], [Clear Condition Talk NPC ID], [Clear Condition PVP_TYPE], [Clear Condition PVP_PLAY], [Clear Condition PVP_WIN], [Clear Condition PVP_KILL], [AutomaticDescription], [Description], [UserID], [UserIP], [Regdate]) VALUES (@IndexKey, @ID, @Clear_Type, @Clear_Condition_Kill_NPC_ID, @Clear_Condition_Kill_NPC_Quantity, @Clear_Condition_Collection_Item_ID, @Name, @Clear_Condition_Collection_Item_Quantity, @Quest_Item_Drop_Rate, @Clear_Condition_Dungeon_Difficulty, @Clear_Condition_Upper_Difficulty, @Clear_Condition_Dungeon_ID, @Clear_Condition_Dungeon_Damage, @Clear_Condition_Dungeon_Rank, @Clear_Condition_Dungeon_Clear_Time, @Clear_Condition_Dungeon_clear_count, @Clear_Condition_Talk_NPC_ID, @Clear_Condition_PVP_TYPE, @Clear_Condition_PVP_PLAY, @Clear_Condition_PVP_WIN, @Clear_Condition_PVP_KILL, @AutomaticDescription, @Description, @UserID, @UserIP, @Regdate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Kill_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Kill_NPC_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Collection_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Collection Item ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Collection_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Collection Item Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quest_Item_Drop_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest Item Drop Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Difficulty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Difficulty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Upper_Difficulty", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Upper Difficulty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Damage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Damage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Rank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Rank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Clear_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon Clear Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_clear_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Dungeon clear count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Talk_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Talk NPC ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_PLAY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_PLAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_WIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_WIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_KILL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition PVP_KILL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutomaticDescription", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomaticDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserIP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT IndexKey, ID, [Clear Type], [Clear Condition Kill NPC ID], [Clear Condition Kill NPC Quantity], [Clear Condition Collection Item ID], Name, [Clear Condition Collection Item Quantity], [Quest Item Drop Rate], [Clear Condition Dungeon Difficulty], [Clear Condition Upper Difficulty], [Clear Condition Dungeon ID], [Clear Condition Dungeon Damage], [Clear Condition Dungeon Rank], [Clear Condition Dungeon Clear Time], [Clear Condition Dungeon clear count], [Clear Condition Talk NPC ID], [Clear Condition PVP_TYPE], [Clear Condition PVP_PLAY], [Clear Condition PVP_WIN], [Clear Condition PVP_KILL], AutomaticDescription, Description, UserID, UserIP, Regdate FROM dbo.SubQuestTable_History";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.SubQuestTable_HistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.SubQuestTable_HistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.SubQuestTable_HistoryDataTable dataTable = new ScriptData_JPDataSet.SubQuestTable_HistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.SubQuestTable_HistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SubQuestTable_History");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IndexKey, 
                    global::System.Nullable<int> ID, 
                    string Clear_Type, 
                    string Clear_Condition_Kill_NPC_ID, 
                    global::System.Nullable<int> Clear_Condition_Kill_NPC_Quantity, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_ID, 
                    string Name, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_Quantity, 
                    global::System.Nullable<double> Quest_Item_Drop_Rate, 
                    string Clear_Condition_Dungeon_Difficulty, 
                    global::System.Nullable<bool> Clear_Condition_Upper_Difficulty, 
                    string Clear_Condition_Dungeon_ID, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Damage, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Rank, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Clear_Time, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_clear_count, 
                    string Clear_Condition_Talk_NPC_ID, 
                    string Clear_Condition_PVP_TYPE, 
                    global::System.Nullable<int> Clear_Condition_PVP_PLAY, 
                    global::System.Nullable<int> Clear_Condition_PVP_WIN, 
                    global::System.Nullable<int> Clear_Condition_PVP_KILL, 
                    global::System.Nullable<bool> AutomaticDescription, 
                    string Description, 
                    string UserID, 
                    string UserIP, 
                    System.DateTime Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            if ((ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Clear_Type == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Clear_Type));
            }
            if ((Clear_Condition_Kill_NPC_ID == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Clear_Condition_Kill_NPC_ID));
            }
            if ((Clear_Condition_Kill_NPC_Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Clear_Condition_Kill_NPC_Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Collection_Item_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Clear_Condition_Collection_Item_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Name));
            }
            if ((Clear_Condition_Collection_Item_Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Clear_Condition_Collection_Item_Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Quest_Item_Drop_Rate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Quest_Item_Drop_Rate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Difficulty == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Clear_Condition_Dungeon_Difficulty));
            }
            if ((Clear_Condition_Upper_Difficulty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(Clear_Condition_Upper_Difficulty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_ID == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Clear_Condition_Dungeon_ID));
            }
            if ((Clear_Condition_Dungeon_Damage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(Clear_Condition_Dungeon_Damage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Rank.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(Clear_Condition_Dungeon_Rank.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Clear_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(Clear_Condition_Dungeon_Clear_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_clear_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Clear_Condition_Dungeon_clear_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Talk_NPC_ID == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Clear_Condition_Talk_NPC_ID));
            }
            if ((Clear_Condition_PVP_TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Clear_Condition_PVP_TYPE));
            }
            if ((Clear_Condition_PVP_PLAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(Clear_Condition_PVP_PLAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_PVP_WIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(Clear_Condition_PVP_WIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_PVP_KILL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(Clear_Condition_PVP_KILL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((AutomaticDescription.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(AutomaticDescription.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Description));
            }
            if ((UserID == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(UserID));
            }
            if ((UserIP == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(UserIP));
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TitleTableTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TitleTableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TitleTable";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("TitleID", "TitleID");
            tableMapping.ColumnMappings.Add("Title_Name", "Title_Name");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Sort_Num", "Sort_Num");
            tableMapping.ColumnMappings.Add("Title_Type", "Title_Type");
            tableMapping.ColumnMappings.Add("Title_Type_", "Title_Type_");
            tableMapping.ColumnMappings.Add("Particle_Name", "Particle_Name");
            tableMapping.ColumnMappings.Add("Condition Unit Type", "Condition Unit Type");
            tableMapping.ColumnMappings.Add("Condition_Unit_Type_", "Condition_Unit_Type_");
            tableMapping.ColumnMappings.Add("Condition Unit Class", "Condition Unit Class");
            tableMapping.ColumnMappings.Add("Condition_Unit_Class_", "Condition_Unit_Class_");
            tableMapping.ColumnMappings.Add("Open_Level", "Open_Level");
            tableMapping.ColumnMappings.Add("Secret_Title", "Secret_Title");
            tableMapping.ColumnMappings.Add("Base_HP", "Base_HP");
            tableMapping.ColumnMappings.Add("Atk_Physic", "Atk_Physic");
            tableMapping.ColumnMappings.Add("Atk_Magic", "Atk_Magic");
            tableMapping.ColumnMappings.Add("Def_Physic", "Def_Physic");
            tableMapping.ColumnMappings.Add("Def_Magic", "Def_Magic");
            tableMapping.ColumnMappings.Add("Socket01", "Socket01");
            tableMapping.ColumnMappings.Add("Socket02", "Socket02");
            tableMapping.ColumnMappings.Add("Socket03", "Socket03");
            tableMapping.ColumnMappings.Add("Socket04", "Socket04");
            tableMapping.ColumnMappings.Add("Socket05", "Socket05");
            tableMapping.ColumnMappings.Add("Socket06", "Socket06");
            tableMapping.ColumnMappings.Add("Socket07", "Socket07");
            tableMapping.ColumnMappings.Add("Socket08", "Socket08");
            tableMapping.ColumnMappings.Add("Socket09", "Socket09");
            tableMapping.ColumnMappings.Add("Socket10", "Socket10");
            tableMapping.ColumnMappings.Add("Visible", "Visible");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TitleTable] WHERE (([IndexKey] = @Original_IndexKey) AND ([Tit" +
                "leID] = @Original_TitleID) AND ((@IsNull_Title_Name = 1 AND [Title_Name] IS NULL" +
                ") OR ([Title_Name] = @Original_Title_Name)) AND ((@IsNull_Description = 1 AND [D" +
                "escription] IS NULL) OR ([Description] = @Original_Description)) AND ((@IsNull_S" +
                "ort_Num = 1 AND [Sort_Num] IS NULL) OR ([Sort_Num] = @Original_Sort_Num)) AND ((" +
                "@IsNull_Title_Type = 1 AND [Title_Type] IS NULL) OR ([Title_Type] = @Original_Ti" +
                "tle_Type)) AND ((@IsNull_Title_Type_ = 1 AND [Title_Type_] IS NULL) OR ([Title_T" +
                "ype_] = @Original_Title_Type_)) AND ((@IsNull_Particle_Name = 1 AND [Particle_Na" +
                "me] IS NULL) OR ([Particle_Name] = @Original_Particle_Name)) AND ((@IsNull_Condi" +
                "tion_Unit_Type = 1 AND [Condition Unit Type] IS NULL) OR ([Condition Unit Type] " +
                "= @Original_Condition_Unit_Type)) AND ((@IsNull_Condition_Unit_Type_ = 1 AND [Co" +
                "ndition_Unit_Type_] IS NULL) OR ([Condition_Unit_Type_] = @Original_Condition_Un" +
                "it_Type_)) AND ((@IsNull_Condition_Unit_Class = 1 AND [Condition Unit Class] IS " +
                "NULL) OR ([Condition Unit Class] = @Original_Condition_Unit_Class)) AND ((@IsNul" +
                "l_Condition_Unit_Class_ = 1 AND [Condition_Unit_Class_] IS NULL) OR ([Condition_" +
                "Unit_Class_] = @Original_Condition_Unit_Class_)) AND ((@IsNull_Open_Level = 1 AN" +
                "D [Open_Level] IS NULL) OR ([Open_Level] = @Original_Open_Level)) AND ((@IsNull_" +
                "Secret_Title = 1 AND [Secret_Title] IS NULL) OR ([Secret_Title] = @Original_Secr" +
                "et_Title)) AND ((@IsNull_Base_HP = 1 AND [Base_HP] IS NULL) OR ([Base_HP] = @Ori" +
                "ginal_Base_HP)) AND ((@IsNull_Atk_Physic = 1 AND [Atk_Physic] IS NULL) OR ([Atk_" +
                "Physic] = @Original_Atk_Physic)) AND ((@IsNull_Atk_Magic = 1 AND [Atk_Magic] IS " +
                "NULL) OR ([Atk_Magic] = @Original_Atk_Magic)) AND ((@IsNull_Def_Physic = 1 AND [" +
                "Def_Physic] IS NULL) OR ([Def_Physic] = @Original_Def_Physic)) AND ((@IsNull_Def" +
                "_Magic = 1 AND [Def_Magic] IS NULL) OR ([Def_Magic] = @Original_Def_Magic)) AND " +
                "((@IsNull_Socket01 = 1 AND [Socket01] IS NULL) OR ([Socket01] = @Original_Socket" +
                "01)) AND ((@IsNull_Socket02 = 1 AND [Socket02] IS NULL) OR ([Socket02] = @Origin" +
                "al_Socket02)) AND ((@IsNull_Socket03 = 1 AND [Socket03] IS NULL) OR ([Socket03] " +
                "= @Original_Socket03)) AND ((@IsNull_Socket04 = 1 AND [Socket04] IS NULL) OR ([S" +
                "ocket04] = @Original_Socket04)) AND ((@IsNull_Socket05 = 1 AND [Socket05] IS NUL" +
                "L) OR ([Socket05] = @Original_Socket05)) AND ((@IsNull_Socket06 = 1 AND [Socket0" +
                "6] IS NULL) OR ([Socket06] = @Original_Socket06)) AND ((@IsNull_Socket07 = 1 AND" +
                " [Socket07] IS NULL) OR ([Socket07] = @Original_Socket07)) AND ((@IsNull_Socket0" +
                "8 = 1 AND [Socket08] IS NULL) OR ([Socket08] = @Original_Socket08)) AND ((@IsNul" +
                "l_Socket09 = 1 AND [Socket09] IS NULL) OR ([Socket09] = @Original_Socket09)) AND" +
                " ((@IsNull_Socket10 = 1 AND [Socket10] IS NULL) OR ([Socket10] = @Original_Socke" +
                "t10)) AND ((@IsNull_Visible = 1 AND [Visible] IS NULL) OR ([Visible] = @Original" +
                "_Visible)) AND ([Regdate] = @Original_Regdate))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TitleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Title_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sort_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort_Num", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sort_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort_Num", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Title_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Title_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Particle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Particle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Particle_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Particle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Class_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Class_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Class_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Open_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Open_Level", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Open_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Open_Level", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Secret_Title", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Secret_Title", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Secret_Title", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Secret_Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Base_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Base_HP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Base_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Base_HP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Atk_Physic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Atk_Physic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Atk_Physic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Atk_Physic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Atk_Magic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Atk_Magic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Atk_Magic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Atk_Magic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Def_Physic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Def_Physic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Def_Physic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Def_Physic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Def_Magic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Def_Magic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Def_Magic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Def_Magic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket01", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket01", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket02", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket02", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket03", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket03", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket04", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket04", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket05", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket05", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket06", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket06", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket07", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket07", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket08", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket08", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket09", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket09", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Visible", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Visible", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Visible", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Visible", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TitleTable] ([IndexKey], [TitleID], [Title_Name], [Description], [Sort_Num], [Title_Type], [Title_Type_], [Particle_Name], [Condition Unit Type], [Condition_Unit_Type_], [Condition Unit Class], [Condition_Unit_Class_], [Open_Level], [Secret_Title], [Base_HP], [Atk_Physic], [Atk_Magic], [Def_Physic], [Def_Magic], [Socket01], [Socket02], [Socket03], [Socket04], [Socket05], [Socket06], [Socket07], [Socket08], [Socket09], [Socket10], [Visible], [Regdate]) VALUES (@IndexKey, @TitleID, @Title_Name, @Description, @Sort_Num, @Title_Type, @Title_Type_, @Particle_Name, @Condition_Unit_Type, @Condition_Unit_Type_, @Condition_Unit_Class, @Condition_Unit_Class_, @Open_Level, @Secret_Title, @Base_HP, @Atk_Physic, @Atk_Magic, @Def_Physic, @Def_Magic, @Socket01, @Socket02, @Socket03, @Socket04, @Socket05, @Socket06, @Socket07, @Socket08, @Socket09, @Socket10, @Visible, @Regdate);
SELECT IndexKey, TitleID, Title_Name, Description, Sort_Num, Title_Type, Title_Type_, Particle_Name, [Condition Unit Type], Condition_Unit_Type_, [Condition Unit Class], Condition_Unit_Class_, Open_Level, Secret_Title, Base_HP, Atk_Physic, Atk_Magic, Def_Physic, Def_Magic, Socket01, Socket02, Socket03, Socket04, Socket05, Socket06, Socket07, Socket08, Socket09, Socket10, Visible, Regdate FROM TitleTable WHERE (IndexKey = @IndexKey)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TitleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sort_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort_Num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Particle_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Particle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Class_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Open_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Open_Level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Secret_Title", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Secret_Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Base_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Base_HP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Atk_Physic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Atk_Physic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Atk_Magic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Atk_Magic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Def_Physic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Def_Physic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Def_Magic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Def_Magic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket01", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket03", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket04", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket05", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket06", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket07", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket08", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket09", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Visible", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Visible", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TitleTable] SET [IndexKey] = @IndexKey, [TitleID] = @TitleID, [Titl" +
                "e_Name] = @Title_Name, [Description] = @Description, [Sort_Num] = @Sort_Num, [Ti" +
                "tle_Type] = @Title_Type, [Title_Type_] = @Title_Type_, [Particle_Name] = @Partic" +
                "le_Name, [Condition Unit Type] = @Condition_Unit_Type, [Condition_Unit_Type_] = " +
                "@Condition_Unit_Type_, [Condition Unit Class] = @Condition_Unit_Class, [Conditio" +
                "n_Unit_Class_] = @Condition_Unit_Class_, [Open_Level] = @Open_Level, [Secret_Tit" +
                "le] = @Secret_Title, [Base_HP] = @Base_HP, [Atk_Physic] = @Atk_Physic, [Atk_Magi" +
                "c] = @Atk_Magic, [Def_Physic] = @Def_Physic, [Def_Magic] = @Def_Magic, [Socket01" +
                "] = @Socket01, [Socket02] = @Socket02, [Socket03] = @Socket03, [Socket04] = @Soc" +
                "ket04, [Socket05] = @Socket05, [Socket06] = @Socket06, [Socket07] = @Socket07, [" +
                "Socket08] = @Socket08, [Socket09] = @Socket09, [Socket10] = @Socket10, [Visible]" +
                " = @Visible, [Regdate] = @Regdate WHERE (([IndexKey] = @Original_IndexKey) AND (" +
                "[TitleID] = @Original_TitleID) AND ((@IsNull_Title_Name = 1 AND [Title_Name] IS " +
                "NULL) OR ([Title_Name] = @Original_Title_Name)) AND ((@IsNull_Description = 1 AN" +
                "D [Description] IS NULL) OR ([Description] = @Original_Description)) AND ((@IsNu" +
                "ll_Sort_Num = 1 AND [Sort_Num] IS NULL) OR ([Sort_Num] = @Original_Sort_Num)) AN" +
                "D ((@IsNull_Title_Type = 1 AND [Title_Type] IS NULL) OR ([Title_Type] = @Origina" +
                "l_Title_Type)) AND ((@IsNull_Title_Type_ = 1 AND [Title_Type_] IS NULL) OR ([Tit" +
                "le_Type_] = @Original_Title_Type_)) AND ((@IsNull_Particle_Name = 1 AND [Particl" +
                "e_Name] IS NULL) OR ([Particle_Name] = @Original_Particle_Name)) AND ((@IsNull_C" +
                "ondition_Unit_Type = 1 AND [Condition Unit Type] IS NULL) OR ([Condition Unit Ty" +
                "pe] = @Original_Condition_Unit_Type)) AND ((@IsNull_Condition_Unit_Type_ = 1 AND" +
                " [Condition_Unit_Type_] IS NULL) OR ([Condition_Unit_Type_] = @Original_Conditio" +
                "n_Unit_Type_)) AND ((@IsNull_Condition_Unit_Class = 1 AND [Condition Unit Class]" +
                " IS NULL) OR ([Condition Unit Class] = @Original_Condition_Unit_Class)) AND ((@I" +
                "sNull_Condition_Unit_Class_ = 1 AND [Condition_Unit_Class_] IS NULL) OR ([Condit" +
                "ion_Unit_Class_] = @Original_Condition_Unit_Class_)) AND ((@IsNull_Open_Level = " +
                "1 AND [Open_Level] IS NULL) OR ([Open_Level] = @Original_Open_Level)) AND ((@IsN" +
                "ull_Secret_Title = 1 AND [Secret_Title] IS NULL) OR ([Secret_Title] = @Original_" +
                "Secret_Title)) AND ((@IsNull_Base_HP = 1 AND [Base_HP] IS NULL) OR ([Base_HP] = " +
                "@Original_Base_HP)) AND ((@IsNull_Atk_Physic = 1 AND [Atk_Physic] IS NULL) OR ([" +
                "Atk_Physic] = @Original_Atk_Physic)) AND ((@IsNull_Atk_Magic = 1 AND [Atk_Magic]" +
                " IS NULL) OR ([Atk_Magic] = @Original_Atk_Magic)) AND ((@IsNull_Def_Physic = 1 A" +
                "ND [Def_Physic] IS NULL) OR ([Def_Physic] = @Original_Def_Physic)) AND ((@IsNull" +
                "_Def_Magic = 1 AND [Def_Magic] IS NULL) OR ([Def_Magic] = @Original_Def_Magic)) " +
                "AND ((@IsNull_Socket01 = 1 AND [Socket01] IS NULL) OR ([Socket01] = @Original_So" +
                "cket01)) AND ((@IsNull_Socket02 = 1 AND [Socket02] IS NULL) OR ([Socket02] = @Or" +
                "iginal_Socket02)) AND ((@IsNull_Socket03 = 1 AND [Socket03] IS NULL) OR ([Socket" +
                "03] = @Original_Socket03)) AND ((@IsNull_Socket04 = 1 AND [Socket04] IS NULL) OR" +
                " ([Socket04] = @Original_Socket04)) AND ((@IsNull_Socket05 = 1 AND [Socket05] IS" +
                " NULL) OR ([Socket05] = @Original_Socket05)) AND ((@IsNull_Socket06 = 1 AND [Soc" +
                "ket06] IS NULL) OR ([Socket06] = @Original_Socket06)) AND ((@IsNull_Socket07 = 1" +
                " AND [Socket07] IS NULL) OR ([Socket07] = @Original_Socket07)) AND ((@IsNull_Soc" +
                "ket08 = 1 AND [Socket08] IS NULL) OR ([Socket08] = @Original_Socket08)) AND ((@I" +
                "sNull_Socket09 = 1 AND [Socket09] IS NULL) OR ([Socket09] = @Original_Socket09))" +
                " AND ((@IsNull_Socket10 = 1 AND [Socket10] IS NULL) OR ([Socket10] = @Original_S" +
                "ocket10)) AND ((@IsNull_Visible = 1 AND [Visible] IS NULL) OR ([Visible] = @Orig" +
                "inal_Visible)) AND ([Regdate] = @Original_Regdate));\r\nSELECT IndexKey, TitleID, " +
                "Title_Name, Description, Sort_Num, Title_Type, Title_Type_, Particle_Name, [Cond" +
                "ition Unit Type], Condition_Unit_Type_, [Condition Unit Class], Condition_Unit_C" +
                "lass_, Open_Level, Secret_Title, Base_HP, Atk_Physic, Atk_Magic, Def_Physic, Def" +
                "_Magic, Socket01, Socket02, Socket03, Socket04, Socket05, Socket06, Socket07, So" +
                "cket08, Socket09, Socket10, Visible, Regdate FROM TitleTable WHERE (IndexKey = @" +
                "IndexKey)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TitleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sort_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort_Num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Particle_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Particle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Class_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Open_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Open_Level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Secret_Title", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Secret_Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Base_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Base_HP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Atk_Physic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Atk_Physic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Atk_Magic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Atk_Magic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Def_Physic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Def_Physic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Def_Magic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Def_Magic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket01", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket03", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket04", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket05", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket06", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket07", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket08", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket09", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Visible", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Visible", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TitleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Title_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sort_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort_Num", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sort_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort_Num", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Title_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Title_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Particle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Particle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Particle_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Particle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Class_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Class_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Class_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Open_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Open_Level", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Open_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Open_Level", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Secret_Title", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Secret_Title", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Secret_Title", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Secret_Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Base_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Base_HP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Base_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Base_HP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Atk_Physic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Atk_Physic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Atk_Physic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Atk_Physic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Atk_Magic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Atk_Magic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Atk_Magic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Atk_Magic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Def_Physic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Def_Physic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Def_Physic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Def_Physic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Def_Magic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Def_Magic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Def_Magic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Def_Magic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket01", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket01", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket02", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket02", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket03", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket03", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket04", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket04", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket05", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket05", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket06", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket06", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket07", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket07", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket08", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket08", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket09", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket09", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Socket10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Socket10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Visible", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Visible", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Visible", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Visible", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT IndexKey, TitleID, Title_Name, Description, Sort_Num, Title_Type, Title_Type_, Particle_Name, [Condition Unit Type], Condition_Unit_Type_, [Condition Unit Class], Condition_Unit_Class_, Open_Level, Secret_Title, Base_HP, Atk_Physic, Atk_Magic, Def_Physic, Def_Magic, Socket01, Socket02, Socket03, Socket04, Socket05, Socket06, Socket07, Socket08, Socket09, Socket10, Visible, Regdate FROM dbo.TitleTable";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE  TitleTable\r\nSET         Description = @Description\r\nWHERE   (IndexKey = @" +
                "Index); \r\n";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE  TitleTable\r\nSET         Regdate= @Regdate\r\nWHERE   (IndexKey = @Index); ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "UPDATE  TitleTable\r\nSET       Title_Name = @Title_Name\r\nWHERE   (IndexKey = @Inde" +
                "x); ";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title_Name", global::System.Data.SqlDbType.NVarChar, 150, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.TitleTableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.TitleTableDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.TitleTableDataTable dataTable = new ScriptData_JPDataSet.TitleTableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.TitleTableDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TitleTable");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_IndexKey, 
                    int Original_TitleID, 
                    string Original_Title_Name, 
                    string Original_Description, 
                    global::System.Nullable<int> Original_Sort_Num, 
                    global::System.Nullable<int> Original_Title_Type, 
                    string Original_Title_Type_, 
                    string Original_Particle_Name, 
                    global::System.Nullable<int> Original_Condition_Unit_Type, 
                    string Original_Condition_Unit_Type_, 
                    global::System.Nullable<int> Original_Condition_Unit_Class, 
                    string Original_Condition_Unit_Class_, 
                    global::System.Nullable<int> Original_Open_Level, 
                    global::System.Nullable<bool> Original_Secret_Title, 
                    global::System.Nullable<int> Original_Base_HP, 
                    global::System.Nullable<int> Original_Atk_Physic, 
                    global::System.Nullable<int> Original_Atk_Magic, 
                    global::System.Nullable<int> Original_Def_Physic, 
                    global::System.Nullable<int> Original_Def_Magic, 
                    global::System.Nullable<int> Original_Socket01, 
                    global::System.Nullable<int> Original_Socket02, 
                    global::System.Nullable<int> Original_Socket03, 
                    global::System.Nullable<int> Original_Socket04, 
                    global::System.Nullable<int> Original_Socket05, 
                    global::System.Nullable<int> Original_Socket06, 
                    global::System.Nullable<int> Original_Socket07, 
                    global::System.Nullable<int> Original_Socket08, 
                    global::System.Nullable<int> Original_Socket09, 
                    global::System.Nullable<int> Original_Socket10, 
                    global::System.Nullable<bool> Original_Visible, 
                    System.DateTime Original_Regdate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IndexKey));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_TitleID));
            if ((Original_Title_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Title_Name));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Description));
            }
            if ((Original_Sort_Num.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_Sort_Num.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Title_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Title_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Title_Type_ == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Title_Type_));
            }
            if ((Original_Particle_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Particle_Name));
            }
            if ((Original_Condition_Unit_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_Condition_Unit_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Unit_Type_ == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_Condition_Unit_Type_));
            }
            if ((Original_Condition_Unit_Class.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_Condition_Unit_Class.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Unit_Class_ == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_Condition_Unit_Class_));
            }
            if ((Original_Open_Level.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_Open_Level.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Secret_Title.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_Secret_Title.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Base_HP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((int)(Original_Base_HP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Atk_Physic.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((int)(Original_Atk_Physic.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_Atk_Magic.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((int)(Original_Atk_Magic.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Def_Physic.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((int)(Original_Def_Physic.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_Def_Magic.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((int)(Original_Def_Magic.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket01.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((int)(Original_Socket01.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket02.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((int)(Original_Socket02.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket03.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((int)(Original_Socket03.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket04.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((int)(Original_Socket04.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket05.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((int)(Original_Socket05.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket06.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((int)(Original_Socket06.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket07.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((int)(Original_Socket07.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket08.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((int)(Original_Socket08.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket09.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((int)(Original_Socket09.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket10.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((int)(Original_Socket10.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_Visible.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((bool)(Original_Visible.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[58].Value = ((System.DateTime)(Original_Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IndexKey, 
                    int TitleID, 
                    string Title_Name, 
                    string Description, 
                    global::System.Nullable<int> Sort_Num, 
                    global::System.Nullable<int> Title_Type, 
                    string Title_Type_, 
                    string Particle_Name, 
                    global::System.Nullable<int> Condition_Unit_Type, 
                    string Condition_Unit_Type_, 
                    global::System.Nullable<int> Condition_Unit_Class, 
                    string Condition_Unit_Class_, 
                    global::System.Nullable<int> Open_Level, 
                    global::System.Nullable<bool> Secret_Title, 
                    global::System.Nullable<int> Base_HP, 
                    global::System.Nullable<int> Atk_Physic, 
                    global::System.Nullable<int> Atk_Magic, 
                    global::System.Nullable<int> Def_Physic, 
                    global::System.Nullable<int> Def_Magic, 
                    global::System.Nullable<int> Socket01, 
                    global::System.Nullable<int> Socket02, 
                    global::System.Nullable<int> Socket03, 
                    global::System.Nullable<int> Socket04, 
                    global::System.Nullable<int> Socket05, 
                    global::System.Nullable<int> Socket06, 
                    global::System.Nullable<int> Socket07, 
                    global::System.Nullable<int> Socket08, 
                    global::System.Nullable<int> Socket09, 
                    global::System.Nullable<int> Socket10, 
                    global::System.Nullable<bool> Visible, 
                    System.DateTime Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(TitleID));
            if ((Title_Name == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Title_Name));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Description));
            }
            if ((Sort_Num.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Sort_Num.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Title_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Title_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Title_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Title_Type_));
            }
            if ((Particle_Name == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Particle_Name));
            }
            if ((Condition_Unit_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Condition_Unit_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Condition_Unit_Type_));
            }
            if ((Condition_Unit_Class.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(Condition_Unit_Class.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Class_ == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Condition_Unit_Class_));
            }
            if ((Open_Level.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(Open_Level.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Secret_Title.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(Secret_Title.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Base_HP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(Base_HP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Atk_Physic.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Atk_Physic.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Atk_Magic.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(Atk_Magic.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Def_Physic.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(Def_Physic.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Def_Magic.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(Def_Magic.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Socket01.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(Socket01.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Socket02.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(Socket02.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Socket03.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(Socket03.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Socket04.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(Socket04.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Socket05.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(Socket05.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Socket06.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(Socket06.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Socket07.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(Socket07.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Socket08.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(Socket08.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Socket09.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(Socket09.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Socket10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(Socket10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Visible.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(Visible.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[30].Value = ((System.DateTime)(Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IndexKey, 
                    int TitleID, 
                    string Title_Name, 
                    string Description, 
                    global::System.Nullable<int> Sort_Num, 
                    global::System.Nullable<int> Title_Type, 
                    string Title_Type_, 
                    string Particle_Name, 
                    global::System.Nullable<int> Condition_Unit_Type, 
                    string Condition_Unit_Type_, 
                    global::System.Nullable<int> Condition_Unit_Class, 
                    string Condition_Unit_Class_, 
                    global::System.Nullable<int> Open_Level, 
                    global::System.Nullable<bool> Secret_Title, 
                    global::System.Nullable<int> Base_HP, 
                    global::System.Nullable<int> Atk_Physic, 
                    global::System.Nullable<int> Atk_Magic, 
                    global::System.Nullable<int> Def_Physic, 
                    global::System.Nullable<int> Def_Magic, 
                    global::System.Nullable<int> Socket01, 
                    global::System.Nullable<int> Socket02, 
                    global::System.Nullable<int> Socket03, 
                    global::System.Nullable<int> Socket04, 
                    global::System.Nullable<int> Socket05, 
                    global::System.Nullable<int> Socket06, 
                    global::System.Nullable<int> Socket07, 
                    global::System.Nullable<int> Socket08, 
                    global::System.Nullable<int> Socket09, 
                    global::System.Nullable<int> Socket10, 
                    global::System.Nullable<bool> Visible, 
                    System.DateTime Regdate, 
                    int Original_IndexKey, 
                    int Original_TitleID, 
                    string Original_Title_Name, 
                    string Original_Description, 
                    global::System.Nullable<int> Original_Sort_Num, 
                    global::System.Nullable<int> Original_Title_Type, 
                    string Original_Title_Type_, 
                    string Original_Particle_Name, 
                    global::System.Nullable<int> Original_Condition_Unit_Type, 
                    string Original_Condition_Unit_Type_, 
                    global::System.Nullable<int> Original_Condition_Unit_Class, 
                    string Original_Condition_Unit_Class_, 
                    global::System.Nullable<int> Original_Open_Level, 
                    global::System.Nullable<bool> Original_Secret_Title, 
                    global::System.Nullable<int> Original_Base_HP, 
                    global::System.Nullable<int> Original_Atk_Physic, 
                    global::System.Nullable<int> Original_Atk_Magic, 
                    global::System.Nullable<int> Original_Def_Physic, 
                    global::System.Nullable<int> Original_Def_Magic, 
                    global::System.Nullable<int> Original_Socket01, 
                    global::System.Nullable<int> Original_Socket02, 
                    global::System.Nullable<int> Original_Socket03, 
                    global::System.Nullable<int> Original_Socket04, 
                    global::System.Nullable<int> Original_Socket05, 
                    global::System.Nullable<int> Original_Socket06, 
                    global::System.Nullable<int> Original_Socket07, 
                    global::System.Nullable<int> Original_Socket08, 
                    global::System.Nullable<int> Original_Socket09, 
                    global::System.Nullable<int> Original_Socket10, 
                    global::System.Nullable<bool> Original_Visible, 
                    System.DateTime Original_Regdate) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(TitleID));
            if ((Title_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Title_Name));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Description));
            }
            if ((Sort_Num.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Sort_Num.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Title_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Title_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Title_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Title_Type_));
            }
            if ((Particle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Particle_Name));
            }
            if ((Condition_Unit_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Condition_Unit_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Condition_Unit_Type_));
            }
            if ((Condition_Unit_Class.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Condition_Unit_Class.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Class_ == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Condition_Unit_Class_));
            }
            if ((Open_Level.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Open_Level.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Secret_Title.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(Secret_Title.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Base_HP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Base_HP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Atk_Physic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Atk_Physic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Atk_Magic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Atk_Magic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Def_Physic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Def_Physic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Def_Magic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Def_Magic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Socket01.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Socket01.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Socket02.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Socket02.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Socket03.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Socket03.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Socket04.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Socket04.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Socket05.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Socket05.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Socket06.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Socket06.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Socket07.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Socket07.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Socket08.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Socket08.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Socket09.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Socket09.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Socket10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Socket10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Visible.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Visible.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Regdate));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_IndexKey));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_TitleID));
            if ((Original_Title_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Title_Name));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Description));
            }
            if ((Original_Sort_Num.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_Sort_Num.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_Title_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_Title_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_Title_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_Title_Type_));
            }
            if ((Original_Particle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_Particle_Name));
            }
            if ((Original_Condition_Unit_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_Condition_Unit_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Unit_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_Condition_Unit_Type_));
            }
            if ((Original_Condition_Unit_Class.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_Condition_Unit_Class.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Unit_Class_ == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_Condition_Unit_Class_));
            }
            if ((Original_Open_Level.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(Original_Open_Level.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_Secret_Title.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(Original_Secret_Title.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_Base_HP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(Original_Base_HP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_Atk_Physic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Original_Atk_Physic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_Atk_Magic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(Original_Atk_Magic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_Def_Physic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(Original_Def_Physic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_Def_Magic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(Original_Def_Magic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket01.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Original_Socket01.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket02.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(Original_Socket02.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket03.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(Original_Socket03.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket04.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(Original_Socket04.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket05.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(Original_Socket05.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket06.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(Original_Socket06.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket07.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(Original_Socket07.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket08.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((int)(Original_Socket08.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket09.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((int)(Original_Socket09.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_Socket10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(Original_Socket10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_Visible.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((bool)(Original_Visible.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[89].Value = ((System.DateTime)(Original_Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int TitleID, 
                    string Title_Name, 
                    string Description, 
                    global::System.Nullable<int> Sort_Num, 
                    global::System.Nullable<int> Title_Type, 
                    string Title_Type_, 
                    string Particle_Name, 
                    global::System.Nullable<int> Condition_Unit_Type, 
                    string Condition_Unit_Type_, 
                    global::System.Nullable<int> Condition_Unit_Class, 
                    string Condition_Unit_Class_, 
                    global::System.Nullable<int> Open_Level, 
                    global::System.Nullable<bool> Secret_Title, 
                    global::System.Nullable<int> Base_HP, 
                    global::System.Nullable<int> Atk_Physic, 
                    global::System.Nullable<int> Atk_Magic, 
                    global::System.Nullable<int> Def_Physic, 
                    global::System.Nullable<int> Def_Magic, 
                    global::System.Nullable<int> Socket01, 
                    global::System.Nullable<int> Socket02, 
                    global::System.Nullable<int> Socket03, 
                    global::System.Nullable<int> Socket04, 
                    global::System.Nullable<int> Socket05, 
                    global::System.Nullable<int> Socket06, 
                    global::System.Nullable<int> Socket07, 
                    global::System.Nullable<int> Socket08, 
                    global::System.Nullable<int> Socket09, 
                    global::System.Nullable<int> Socket10, 
                    global::System.Nullable<bool> Visible, 
                    System.DateTime Regdate, 
                    int Original_IndexKey, 
                    int Original_TitleID, 
                    string Original_Title_Name, 
                    string Original_Description, 
                    global::System.Nullable<int> Original_Sort_Num, 
                    global::System.Nullable<int> Original_Title_Type, 
                    string Original_Title_Type_, 
                    string Original_Particle_Name, 
                    global::System.Nullable<int> Original_Condition_Unit_Type, 
                    string Original_Condition_Unit_Type_, 
                    global::System.Nullable<int> Original_Condition_Unit_Class, 
                    string Original_Condition_Unit_Class_, 
                    global::System.Nullable<int> Original_Open_Level, 
                    global::System.Nullable<bool> Original_Secret_Title, 
                    global::System.Nullable<int> Original_Base_HP, 
                    global::System.Nullable<int> Original_Atk_Physic, 
                    global::System.Nullable<int> Original_Atk_Magic, 
                    global::System.Nullable<int> Original_Def_Physic, 
                    global::System.Nullable<int> Original_Def_Magic, 
                    global::System.Nullable<int> Original_Socket01, 
                    global::System.Nullable<int> Original_Socket02, 
                    global::System.Nullable<int> Original_Socket03, 
                    global::System.Nullable<int> Original_Socket04, 
                    global::System.Nullable<int> Original_Socket05, 
                    global::System.Nullable<int> Original_Socket06, 
                    global::System.Nullable<int> Original_Socket07, 
                    global::System.Nullable<int> Original_Socket08, 
                    global::System.Nullable<int> Original_Socket09, 
                    global::System.Nullable<int> Original_Socket10, 
                    global::System.Nullable<bool> Original_Visible, 
                    System.DateTime Original_Regdate) {
            return this.Update(Original_IndexKey, TitleID, Title_Name, Description, Sort_Num, Title_Type, Title_Type_, Particle_Name, Condition_Unit_Type, Condition_Unit_Type_, Condition_Unit_Class, Condition_Unit_Class_, Open_Level, Secret_Title, Base_HP, Atk_Physic, Atk_Magic, Def_Physic, Def_Magic, Socket01, Socket02, Socket03, Socket04, Socket05, Socket06, Socket07, Socket08, Socket09, Socket10, Visible, Regdate, Original_IndexKey, Original_TitleID, Original_Title_Name, Original_Description, Original_Sort_Num, Original_Title_Type, Original_Title_Type_, Original_Particle_Name, Original_Condition_Unit_Type, Original_Condition_Unit_Type_, Original_Condition_Unit_Class, Original_Condition_Unit_Class_, Original_Open_Level, Original_Secret_Title, Original_Base_HP, Original_Atk_Physic, Original_Atk_Magic, Original_Def_Physic, Original_Def_Magic, Original_Socket01, Original_Socket02, Original_Socket03, Original_Socket04, Original_Socket05, Original_Socket06, Original_Socket07, Original_Socket08, Original_Socket09, Original_Socket10, Original_Visible, Original_Regdate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateTitleTable_Description(string Description, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Description == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Description));
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateTitleTable_Regdate(System.DateTime Regdate, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((System.DateTime)(Regdate));
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateTitleTable_TitleName(string Title_Name, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((Title_Name == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Title_Name));
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TitleTable_HistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TitleTable_HistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TitleTable_History";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("TitleID", "TitleID");
            tableMapping.ColumnMappings.Add("Title_Name", "Title_Name");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Sort_Num", "Sort_Num");
            tableMapping.ColumnMappings.Add("Title_Type", "Title_Type");
            tableMapping.ColumnMappings.Add("Title_Type_", "Title_Type_");
            tableMapping.ColumnMappings.Add("Particle_Name", "Particle_Name");
            tableMapping.ColumnMappings.Add("Condition Unit Type", "Condition Unit Type");
            tableMapping.ColumnMappings.Add("Condition_Unit_Type_", "Condition_Unit_Type_");
            tableMapping.ColumnMappings.Add("Condition Unit Class", "Condition Unit Class");
            tableMapping.ColumnMappings.Add("Condition_Unit_Class_", "Condition_Unit_Class_");
            tableMapping.ColumnMappings.Add("Open_Level", "Open_Level");
            tableMapping.ColumnMappings.Add("Secret_Title", "Secret_Title");
            tableMapping.ColumnMappings.Add("Base_HP", "Base_HP");
            tableMapping.ColumnMappings.Add("Atk_Physic", "Atk_Physic");
            tableMapping.ColumnMappings.Add("Atk_Magic", "Atk_Magic");
            tableMapping.ColumnMappings.Add("Def_Physic", "Def_Physic");
            tableMapping.ColumnMappings.Add("Def_Magic", "Def_Magic");
            tableMapping.ColumnMappings.Add("Socket01", "Socket01");
            tableMapping.ColumnMappings.Add("Socket02", "Socket02");
            tableMapping.ColumnMappings.Add("Socket03", "Socket03");
            tableMapping.ColumnMappings.Add("Socket04", "Socket04");
            tableMapping.ColumnMappings.Add("Socket05", "Socket05");
            tableMapping.ColumnMappings.Add("Socket06", "Socket06");
            tableMapping.ColumnMappings.Add("Socket07", "Socket07");
            tableMapping.ColumnMappings.Add("Socket08", "Socket08");
            tableMapping.ColumnMappings.Add("Socket09", "Socket09");
            tableMapping.ColumnMappings.Add("Socket10", "Socket10");
            tableMapping.ColumnMappings.Add("Visible", "Visible");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserIP", "UserIP");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TitleTable_History] ([IndexKey], [TitleID], [Title_Name], [Description], [Sort_Num], [Title_Type], [Title_Type_], [Particle_Name], [Condition Unit Type], [Condition_Unit_Type_], [Condition Unit Class], [Condition_Unit_Class_], [Open_Level], [Secret_Title], [Base_HP], [Atk_Physic], [Atk_Magic], [Def_Physic], [Def_Magic], [Socket01], [Socket02], [Socket03], [Socket04], [Socket05], [Socket06], [Socket07], [Socket08], [Socket09], [Socket10], [Visible], [UserID], [UserIP], [Regdate]) VALUES (@IndexKey, @TitleID, @Title_Name, @Description, @Sort_Num, @Title_Type, @Title_Type_, @Particle_Name, @Condition_Unit_Type, @Condition_Unit_Type_, @Condition_Unit_Class, @Condition_Unit_Class_, @Open_Level, @Secret_Title, @Base_HP, @Atk_Physic, @Atk_Magic, @Def_Physic, @Def_Magic, @Socket01, @Socket02, @Socket03, @Socket04, @Socket05, @Socket06, @Socket07, @Socket08, @Socket09, @Socket10, @Visible, @UserID, @UserIP, @Regdate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TitleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TitleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sort_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sort_Num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Particle_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Particle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Class_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Open_Level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Open_Level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Secret_Title", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Secret_Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Base_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Base_HP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Atk_Physic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Atk_Physic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Atk_Magic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Atk_Magic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Def_Physic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Def_Physic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Def_Magic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Def_Magic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket01", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket01", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket02", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket03", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket03", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket04", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket04", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket05", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket05", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket06", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket06", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket07", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket07", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket08", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket08", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket09", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket09", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Socket10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Socket10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Visible", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Visible", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserIP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT IndexKey, TitleID, Title_Name, Description, Sort_Num, Title_Type, Title_Type_, Particle_Name, [Condition Unit Type], Condition_Unit_Type_, [Condition Unit Class], Condition_Unit_Class_, Open_Level, Secret_Title, Base_HP, Atk_Physic, Atk_Magic, Def_Physic, Def_Magic, Socket01, Socket02, Socket03, Socket04, Socket05, Socket06, Socket07, Socket08, Socket09, Socket10, Visible, UserID, UserIP, Regdate FROM dbo.TitleTable_History";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.TitleTable_HistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.TitleTable_HistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.TitleTable_HistoryDataTable dataTable = new ScriptData_JPDataSet.TitleTable_HistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.TitleTable_HistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TitleTable_History");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IndexKey, 
                    int TitleID, 
                    string Title_Name, 
                    string Description, 
                    global::System.Nullable<int> Sort_Num, 
                    global::System.Nullable<int> Title_Type, 
                    string Title_Type_, 
                    string Particle_Name, 
                    global::System.Nullable<int> Condition_Unit_Type, 
                    string Condition_Unit_Type_, 
                    global::System.Nullable<int> Condition_Unit_Class, 
                    string Condition_Unit_Class_, 
                    global::System.Nullable<int> Open_Level, 
                    global::System.Nullable<bool> Secret_Title, 
                    global::System.Nullable<int> Base_HP, 
                    global::System.Nullable<int> Atk_Physic, 
                    global::System.Nullable<int> Atk_Magic, 
                    global::System.Nullable<int> Def_Physic, 
                    global::System.Nullable<int> Def_Magic, 
                    global::System.Nullable<int> Socket01, 
                    global::System.Nullable<int> Socket02, 
                    global::System.Nullable<int> Socket03, 
                    global::System.Nullable<int> Socket04, 
                    global::System.Nullable<int> Socket05, 
                    global::System.Nullable<int> Socket06, 
                    global::System.Nullable<int> Socket07, 
                    global::System.Nullable<int> Socket08, 
                    global::System.Nullable<int> Socket09, 
                    global::System.Nullable<int> Socket10, 
                    global::System.Nullable<bool> Visible, 
                    string UserID, 
                    string UserIP, 
                    System.DateTime Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(TitleID));
            if ((Title_Name == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Title_Name));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Description));
            }
            if ((Sort_Num.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Sort_Num.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Title_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Title_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Title_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Title_Type_));
            }
            if ((Particle_Name == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Particle_Name));
            }
            if ((Condition_Unit_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Condition_Unit_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Condition_Unit_Type_));
            }
            if ((Condition_Unit_Class.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(Condition_Unit_Class.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Class_ == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Condition_Unit_Class_));
            }
            if ((Open_Level.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(Open_Level.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Secret_Title.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(Secret_Title.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Base_HP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(Base_HP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Atk_Physic.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Atk_Physic.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Atk_Magic.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(Atk_Magic.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Def_Physic.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(Def_Physic.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Def_Magic.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(Def_Magic.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Socket01.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(Socket01.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Socket02.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(Socket02.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Socket03.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(Socket03.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Socket04.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(Socket04.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Socket05.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(Socket05.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Socket06.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(Socket06.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Socket07.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(Socket07.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Socket08.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(Socket08.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Socket09.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(Socket09.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Socket10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(Socket10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Visible.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(Visible.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((UserID == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(UserID));
            }
            if ((UserIP == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(UserIP));
            }
            this.Adapter.InsertCommand.Parameters[32].Value = ((System.DateTime)(Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TitleMissionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TitleMissionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TitleMission";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Mission Clear Type", "Mission Clear Type");
            tableMapping.ColumnMappings.Add("Mission_Clear_Type_", "Mission_Clear_Type_");
            tableMapping.ColumnMappings.Add("Mission_Name", "Mission_Name");
            tableMapping.ColumnMappings.Add("Condition_Lv", "Condition_Lv");
            tableMapping.ColumnMappings.Add("Condition Unit Type", "Condition Unit Type");
            tableMapping.ColumnMappings.Add("Condition_Unit_Type_", "Condition_Unit_Type_");
            tableMapping.ColumnMappings.Add("Condition Unit Class", "Condition Unit Class");
            tableMapping.ColumnMappings.Add("Condition_Unit_Class_", "Condition_Unit_Class_");
            tableMapping.ColumnMappings.Add("SubMission_1", "SubMission_1");
            tableMapping.ColumnMappings.Add("SubMission_2", "SubMission_2");
            tableMapping.ColumnMappings.Add("SubMission_3", "SubMission_3");
            tableMapping.ColumnMappings.Add("SubMission_4", "SubMission_4");
            tableMapping.ColumnMappings.Add("SubMission_5", "SubMission_5");
            tableMapping.ColumnMappings.Add("Period", "Period");
            tableMapping.ColumnMappings.Add("Reward_Title_ID", "Reward_Title_ID");
            tableMapping.ColumnMappings.Add("Title Name", "Title Name");
            tableMapping.ColumnMappings.Add("Condition_ClearMission_ID", "Condition_ClearMission_ID");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TitleMission] WHERE (([IndexKey] = @Original_IndexKey) AND ([I" +
                "D] = @Original_ID) AND ((@IsNull_Mission_Clear_Type = 1 AND [Mission Clear Type]" +
                " IS NULL) OR ([Mission Clear Type] = @Original_Mission_Clear_Type)) AND ((@IsNul" +
                "l_Mission_Clear_Type_ = 1 AND [Mission_Clear_Type_] IS NULL) OR ([Mission_Clear_" +
                "Type_] = @Original_Mission_Clear_Type_)) AND ((@IsNull_Mission_Name = 1 AND [Mis" +
                "sion_Name] IS NULL) OR ([Mission_Name] = @Original_Mission_Name)) AND ((@IsNull_" +
                "Condition_Lv = 1 AND [Condition_Lv] IS NULL) OR ([Condition_Lv] = @Original_Cond" +
                "ition_Lv)) AND ((@IsNull_Condition_Unit_Type = 1 AND [Condition Unit Type] IS NU" +
                "LL) OR ([Condition Unit Type] = @Original_Condition_Unit_Type)) AND ((@IsNull_Co" +
                "ndition_Unit_Type_ = 1 AND [Condition_Unit_Type_] IS NULL) OR ([Condition_Unit_T" +
                "ype_] = @Original_Condition_Unit_Type_)) AND ((@IsNull_Condition_Unit_Class = 1 " +
                "AND [Condition Unit Class] IS NULL) OR ([Condition Unit Class] = @Original_Condi" +
                "tion_Unit_Class)) AND ((@IsNull_Condition_Unit_Class_ = 1 AND [Condition_Unit_Cl" +
                "ass_] IS NULL) OR ([Condition_Unit_Class_] = @Original_Condition_Unit_Class_)) A" +
                "ND ((@IsNull_SubMission_1 = 1 AND [SubMission_1] IS NULL) OR ([SubMission_1] = @" +
                "Original_SubMission_1)) AND ((@IsNull_SubMission_2 = 1 AND [SubMission_2] IS NUL" +
                "L) OR ([SubMission_2] = @Original_SubMission_2)) AND ((@IsNull_SubMission_3 = 1 " +
                "AND [SubMission_3] IS NULL) OR ([SubMission_3] = @Original_SubMission_3)) AND ((" +
                "@IsNull_SubMission_4 = 1 AND [SubMission_4] IS NULL) OR ([SubMission_4] = @Origi" +
                "nal_SubMission_4)) AND ((@IsNull_SubMission_5 = 1 AND [SubMission_5] IS NULL) OR" +
                " ([SubMission_5] = @Original_SubMission_5)) AND ((@IsNull_Period = 1 AND [Period" +
                "] IS NULL) OR ([Period] = @Original_Period)) AND ((@IsNull_Reward_Title_ID = 1 A" +
                "ND [Reward_Title_ID] IS NULL) OR ([Reward_Title_ID] = @Original_Reward_Title_ID)" +
                ") AND ((@IsNull_Title_Name = 1 AND [Title Name] IS NULL) OR ([Title Name] = @Ori" +
                "ginal_Title_Name)) AND ((@IsNull_Condition_ClearMission_ID = 1 AND [Condition_Cl" +
                "earMission_ID] IS NULL) OR ([Condition_ClearMission_ID] = @Original_Condition_Cl" +
                "earMission_ID)) AND ((@IsNull_Regdate = 1 AND [Regdate] IS NULL) OR ([Regdate] =" +
                " @Original_Regdate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mission_Clear_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission Clear Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mission_Clear_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission Clear Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mission_Clear_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Clear_Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mission_Clear_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Clear_Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mission_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mission_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Lv", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Lv", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Lv", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Lv", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Class_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Class_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Class_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubMission_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubMission_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubMission_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubMission_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubMission_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubMission_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubMission_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubMission_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubMission_5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubMission_5", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Period", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Period", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Title_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward_Title_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Title_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward_Title_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Title_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearMission_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_ClearMission_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearMission_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_ClearMission_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Regdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TitleMission] ([IndexKey], [ID], [Mission Clear Type], [Mission_Clear_Type_], [Mission_Name], [Condition_Lv], [Condition Unit Type], [Condition_Unit_Type_], [Condition Unit Class], [Condition_Unit_Class_], [SubMission_1], [SubMission_2], [SubMission_3], [SubMission_4], [SubMission_5], [Period], [Reward_Title_ID], [Title Name], [Condition_ClearMission_ID], [Regdate]) VALUES (@IndexKey, @ID, @Mission_Clear_Type, @Mission_Clear_Type_, @Mission_Name, @Condition_Lv, @Condition_Unit_Type, @Condition_Unit_Type_, @Condition_Unit_Class, @Condition_Unit_Class_, @SubMission_1, @SubMission_2, @SubMission_3, @SubMission_4, @SubMission_5, @Period, @Reward_Title_ID, @Title_Name, @Condition_ClearMission_ID, @Regdate);
SELECT IndexKey, ID, [Mission Clear Type], Mission_Clear_Type_, Mission_Name, Condition_Lv, [Condition Unit Type], Condition_Unit_Type_, [Condition Unit Class], Condition_Unit_Class_, SubMission_1, SubMission_2, SubMission_3, SubMission_4, SubMission_5, Period, Reward_Title_ID, [Title Name], Condition_ClearMission_ID, Regdate FROM TitleMission WHERE (IndexKey = @IndexKey)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mission_Clear_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission Clear Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mission_Clear_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Clear_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mission_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Lv", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Lv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Class_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_5", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Title_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward_Title_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearMission_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_ClearMission_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TitleMission] SET [IndexKey] = @IndexKey, [ID] = @ID, [Mission Clea" +
                "r Type] = @Mission_Clear_Type, [Mission_Clear_Type_] = @Mission_Clear_Type_, [Mi" +
                "ssion_Name] = @Mission_Name, [Condition_Lv] = @Condition_Lv, [Condition Unit Typ" +
                "e] = @Condition_Unit_Type, [Condition_Unit_Type_] = @Condition_Unit_Type_, [Cond" +
                "ition Unit Class] = @Condition_Unit_Class, [Condition_Unit_Class_] = @Condition_" +
                "Unit_Class_, [SubMission_1] = @SubMission_1, [SubMission_2] = @SubMission_2, [Su" +
                "bMission_3] = @SubMission_3, [SubMission_4] = @SubMission_4, [SubMission_5] = @S" +
                "ubMission_5, [Period] = @Period, [Reward_Title_ID] = @Reward_Title_ID, [Title Na" +
                "me] = @Title_Name, [Condition_ClearMission_ID] = @Condition_ClearMission_ID, [Re" +
                "gdate] = @Regdate WHERE (([IndexKey] = @Original_IndexKey) AND ([ID] = @Original" +
                "_ID) AND ((@IsNull_Mission_Clear_Type = 1 AND [Mission Clear Type] IS NULL) OR (" +
                "[Mission Clear Type] = @Original_Mission_Clear_Type)) AND ((@IsNull_Mission_Clea" +
                "r_Type_ = 1 AND [Mission_Clear_Type_] IS NULL) OR ([Mission_Clear_Type_] = @Orig" +
                "inal_Mission_Clear_Type_)) AND ((@IsNull_Mission_Name = 1 AND [Mission_Name] IS " +
                "NULL) OR ([Mission_Name] = @Original_Mission_Name)) AND ((@IsNull_Condition_Lv =" +
                " 1 AND [Condition_Lv] IS NULL) OR ([Condition_Lv] = @Original_Condition_Lv)) AND" +
                " ((@IsNull_Condition_Unit_Type = 1 AND [Condition Unit Type] IS NULL) OR ([Condi" +
                "tion Unit Type] = @Original_Condition_Unit_Type)) AND ((@IsNull_Condition_Unit_T" +
                "ype_ = 1 AND [Condition_Unit_Type_] IS NULL) OR ([Condition_Unit_Type_] = @Origi" +
                "nal_Condition_Unit_Type_)) AND ((@IsNull_Condition_Unit_Class = 1 AND [Condition" +
                " Unit Class] IS NULL) OR ([Condition Unit Class] = @Original_Condition_Unit_Clas" +
                "s)) AND ((@IsNull_Condition_Unit_Class_ = 1 AND [Condition_Unit_Class_] IS NULL)" +
                " OR ([Condition_Unit_Class_] = @Original_Condition_Unit_Class_)) AND ((@IsNull_S" +
                "ubMission_1 = 1 AND [SubMission_1] IS NULL) OR ([SubMission_1] = @Original_SubMi" +
                "ssion_1)) AND ((@IsNull_SubMission_2 = 1 AND [SubMission_2] IS NULL) OR ([SubMis" +
                "sion_2] = @Original_SubMission_2)) AND ((@IsNull_SubMission_3 = 1 AND [SubMissio" +
                "n_3] IS NULL) OR ([SubMission_3] = @Original_SubMission_3)) AND ((@IsNull_SubMis" +
                "sion_4 = 1 AND [SubMission_4] IS NULL) OR ([SubMission_4] = @Original_SubMission" +
                "_4)) AND ((@IsNull_SubMission_5 = 1 AND [SubMission_5] IS NULL) OR ([SubMission_" +
                "5] = @Original_SubMission_5)) AND ((@IsNull_Period = 1 AND [Period] IS NULL) OR " +
                "([Period] = @Original_Period)) AND ((@IsNull_Reward_Title_ID = 1 AND [Reward_Tit" +
                "le_ID] IS NULL) OR ([Reward_Title_ID] = @Original_Reward_Title_ID)) AND ((@IsNul" +
                "l_Title_Name = 1 AND [Title Name] IS NULL) OR ([Title Name] = @Original_Title_Na" +
                "me)) AND ((@IsNull_Condition_ClearMission_ID = 1 AND [Condition_ClearMission_ID]" +
                " IS NULL) OR ([Condition_ClearMission_ID] = @Original_Condition_ClearMission_ID)" +
                ") AND ((@IsNull_Regdate = 1 AND [Regdate] IS NULL) OR ([Regdate] = @Original_Reg" +
                "date)));\r\nSELECT IndexKey, ID, [Mission Clear Type], Mission_Clear_Type_, Missio" +
                "n_Name, Condition_Lv, [Condition Unit Type], Condition_Unit_Type_, [Condition Un" +
                "it Class], Condition_Unit_Class_, SubMission_1, SubMission_2, SubMission_3, SubM" +
                "ission_4, SubMission_5, Period, Reward_Title_ID, [Title Name], Condition_ClearMi" +
                "ssion_ID, Regdate FROM TitleMission WHERE (IndexKey = @IndexKey)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mission_Clear_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission Clear Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mission_Clear_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Clear_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mission_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Lv", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Lv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Class_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_5", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Title_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward_Title_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearMission_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_ClearMission_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mission_Clear_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission Clear Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mission_Clear_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission Clear Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mission_Clear_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Clear_Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mission_Clear_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Clear_Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mission_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mission_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Lv", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Lv", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Lv", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Lv", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_Unit_Class_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Class_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Class_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubMission_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubMission_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubMission_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubMission_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubMission_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubMission_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubMission_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubMission_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubMission_5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubMission_5", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Period", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Period", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reward_Title_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward_Title_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reward_Title_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward_Title_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Title_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Condition_ClearMission_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_ClearMission_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Condition_ClearMission_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_ClearMission_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Regdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT IndexKey, ID, [Mission Clear Type], Mission_Clear_Type_, Mission_Name, Condition_Lv, [Condition Unit Type], Condition_Unit_Type_, [Condition Unit Class], Condition_Unit_Class_, SubMission_1, SubMission_2, SubMission_3, SubMission_4, SubMission_5, Period, Reward_Title_ID, [Title Name], Condition_ClearMission_ID, Regdate FROM dbo.TitleMission";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE  TitleMission\r\nSET         Mission_Name = @Mission_Name\r\nWHERE   (IndexKey" +
                " = @Index); \r\n";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mission_Name", global::System.Data.SqlDbType.NVarChar, 150, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE  TitleMission\r\nSET         Regdate= @Regdate\r\nWHERE   (IndexKey = @Index);" +
                " ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.TitleMissionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.TitleMissionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.TitleMissionDataTable dataTable = new ScriptData_JPDataSet.TitleMissionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.TitleMissionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TitleMission");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_IndexKey, 
                    int Original_ID, 
                    global::System.Nullable<int> Original_Mission_Clear_Type, 
                    string Original_Mission_Clear_Type_, 
                    string Original_Mission_Name, 
                    global::System.Nullable<int> Original_Condition_Lv, 
                    global::System.Nullable<int> Original_Condition_Unit_Type, 
                    string Original_Condition_Unit_Type_, 
                    global::System.Nullable<int> Original_Condition_Unit_Class, 
                    string Original_Condition_Unit_Class_, 
                    global::System.Nullable<int> Original_SubMission_1, 
                    global::System.Nullable<int> Original_SubMission_2, 
                    global::System.Nullable<int> Original_SubMission_3, 
                    global::System.Nullable<int> Original_SubMission_4, 
                    string Original_SubMission_5, 
                    global::System.Nullable<int> Original_Period, 
                    global::System.Nullable<int> Original_Reward_Title_ID, 
                    string Original_Title_Name, 
                    global::System.Nullable<int> Original_Condition_ClearMission_ID, 
                    global::System.Nullable<global::System.DateTime> Original_Regdate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IndexKey));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID));
            if ((Original_Mission_Clear_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Mission_Clear_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_Mission_Clear_Type_ == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Mission_Clear_Type_));
            }
            if ((Original_Mission_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Mission_Name));
            }
            if ((Original_Condition_Lv.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Condition_Lv.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Unit_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_Condition_Unit_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Unit_Type_ == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Condition_Unit_Type_));
            }
            if ((Original_Condition_Unit_Class.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_Condition_Unit_Class.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Unit_Class_ == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_Condition_Unit_Class_));
            }
            if ((Original_SubMission_1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_SubMission_1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_SubMission_2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_SubMission_2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_SubMission_3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_SubMission_3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_SubMission_4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(Original_SubMission_4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_SubMission_5 == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_SubMission_5));
            }
            if ((Original_Period.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((int)(Original_Period.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_Title_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((int)(Original_Reward_Title_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Title_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_Title_Name));
            }
            if ((Original_Condition_ClearMission_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((int)(Original_Condition_ClearMission_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_Regdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((System.DateTime)(Original_Regdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IndexKey, 
                    int ID, 
                    global::System.Nullable<int> Mission_Clear_Type, 
                    string Mission_Clear_Type_, 
                    string Mission_Name, 
                    global::System.Nullable<int> Condition_Lv, 
                    global::System.Nullable<int> Condition_Unit_Type, 
                    string Condition_Unit_Type_, 
                    global::System.Nullable<int> Condition_Unit_Class, 
                    string Condition_Unit_Class_, 
                    global::System.Nullable<int> SubMission_1, 
                    global::System.Nullable<int> SubMission_2, 
                    global::System.Nullable<int> SubMission_3, 
                    global::System.Nullable<int> SubMission_4, 
                    string SubMission_5, 
                    global::System.Nullable<int> Period, 
                    global::System.Nullable<int> Reward_Title_ID, 
                    string Title_Name, 
                    global::System.Nullable<int> Condition_ClearMission_ID, 
                    global::System.Nullable<global::System.DateTime> Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID));
            if ((Mission_Clear_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Mission_Clear_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Mission_Clear_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Mission_Clear_Type_));
            }
            if ((Mission_Name == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Mission_Name));
            }
            if ((Condition_Lv.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Condition_Lv.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Condition_Unit_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Condition_Unit_Type_));
            }
            if ((Condition_Unit_Class.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Condition_Unit_Class.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Class_ == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Condition_Unit_Class_));
            }
            if ((SubMission_1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(SubMission_1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((SubMission_2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(SubMission_2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SubMission_3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(SubMission_3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((SubMission_4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(SubMission_4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SubMission_5 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(SubMission_5));
            }
            if ((Period.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Period.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Reward_Title_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(Reward_Title_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Title_Name == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Title_Name));
            }
            if ((Condition_ClearMission_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(Condition_ClearMission_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IndexKey, 
                    int ID, 
                    global::System.Nullable<int> Mission_Clear_Type, 
                    string Mission_Clear_Type_, 
                    string Mission_Name, 
                    global::System.Nullable<int> Condition_Lv, 
                    global::System.Nullable<int> Condition_Unit_Type, 
                    string Condition_Unit_Type_, 
                    global::System.Nullable<int> Condition_Unit_Class, 
                    string Condition_Unit_Class_, 
                    global::System.Nullable<int> SubMission_1, 
                    global::System.Nullable<int> SubMission_2, 
                    global::System.Nullable<int> SubMission_3, 
                    global::System.Nullable<int> SubMission_4, 
                    string SubMission_5, 
                    global::System.Nullable<int> Period, 
                    global::System.Nullable<int> Reward_Title_ID, 
                    string Title_Name, 
                    global::System.Nullable<int> Condition_ClearMission_ID, 
                    global::System.Nullable<global::System.DateTime> Regdate, 
                    int Original_IndexKey, 
                    int Original_ID, 
                    global::System.Nullable<int> Original_Mission_Clear_Type, 
                    string Original_Mission_Clear_Type_, 
                    string Original_Mission_Name, 
                    global::System.Nullable<int> Original_Condition_Lv, 
                    global::System.Nullable<int> Original_Condition_Unit_Type, 
                    string Original_Condition_Unit_Type_, 
                    global::System.Nullable<int> Original_Condition_Unit_Class, 
                    string Original_Condition_Unit_Class_, 
                    global::System.Nullable<int> Original_SubMission_1, 
                    global::System.Nullable<int> Original_SubMission_2, 
                    global::System.Nullable<int> Original_SubMission_3, 
                    global::System.Nullable<int> Original_SubMission_4, 
                    string Original_SubMission_5, 
                    global::System.Nullable<int> Original_Period, 
                    global::System.Nullable<int> Original_Reward_Title_ID, 
                    string Original_Title_Name, 
                    global::System.Nullable<int> Original_Condition_ClearMission_ID, 
                    global::System.Nullable<global::System.DateTime> Original_Regdate) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID));
            if ((Mission_Clear_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Mission_Clear_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Mission_Clear_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Mission_Clear_Type_));
            }
            if ((Mission_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Mission_Name));
            }
            if ((Condition_Lv.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Condition_Lv.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Condition_Unit_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Condition_Unit_Type_));
            }
            if ((Condition_Unit_Class.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Condition_Unit_Class.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Class_ == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Condition_Unit_Class_));
            }
            if ((SubMission_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(SubMission_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((SubMission_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(SubMission_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SubMission_3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(SubMission_3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((SubMission_4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(SubMission_4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SubMission_5 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(SubMission_5));
            }
            if ((Period.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Period.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Reward_Title_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Reward_Title_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Title_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Title_Name));
            }
            if ((Condition_ClearMission_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Condition_ClearMission_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_IndexKey));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_ID));
            if ((Original_Mission_Clear_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_Mission_Clear_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Mission_Clear_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Mission_Clear_Type_));
            }
            if ((Original_Mission_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Mission_Name));
            }
            if ((Original_Condition_Lv.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_Condition_Lv.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Unit_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_Condition_Unit_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Unit_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Condition_Unit_Type_));
            }
            if ((Original_Condition_Unit_Class.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_Condition_Unit_Class.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_Condition_Unit_Class_ == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_Condition_Unit_Class_));
            }
            if ((Original_SubMission_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_SubMission_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_SubMission_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_SubMission_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_SubMission_3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_SubMission_3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_SubMission_4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_SubMission_4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_SubMission_5 == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_SubMission_5));
            }
            if ((Original_Period.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_Period.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_Reward_Title_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_Reward_Title_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_Title_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_Title_Name));
            }
            if ((Original_Condition_ClearMission_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Original_Condition_ClearMission_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_Regdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(Original_Regdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID, 
                    global::System.Nullable<int> Mission_Clear_Type, 
                    string Mission_Clear_Type_, 
                    string Mission_Name, 
                    global::System.Nullable<int> Condition_Lv, 
                    global::System.Nullable<int> Condition_Unit_Type, 
                    string Condition_Unit_Type_, 
                    global::System.Nullable<int> Condition_Unit_Class, 
                    string Condition_Unit_Class_, 
                    global::System.Nullable<int> SubMission_1, 
                    global::System.Nullable<int> SubMission_2, 
                    global::System.Nullable<int> SubMission_3, 
                    global::System.Nullable<int> SubMission_4, 
                    string SubMission_5, 
                    global::System.Nullable<int> Period, 
                    global::System.Nullable<int> Reward_Title_ID, 
                    string Title_Name, 
                    global::System.Nullable<int> Condition_ClearMission_ID, 
                    global::System.Nullable<global::System.DateTime> Regdate, 
                    int Original_IndexKey, 
                    int Original_ID, 
                    global::System.Nullable<int> Original_Mission_Clear_Type, 
                    string Original_Mission_Clear_Type_, 
                    string Original_Mission_Name, 
                    global::System.Nullable<int> Original_Condition_Lv, 
                    global::System.Nullable<int> Original_Condition_Unit_Type, 
                    string Original_Condition_Unit_Type_, 
                    global::System.Nullable<int> Original_Condition_Unit_Class, 
                    string Original_Condition_Unit_Class_, 
                    global::System.Nullable<int> Original_SubMission_1, 
                    global::System.Nullable<int> Original_SubMission_2, 
                    global::System.Nullable<int> Original_SubMission_3, 
                    global::System.Nullable<int> Original_SubMission_4, 
                    string Original_SubMission_5, 
                    global::System.Nullable<int> Original_Period, 
                    global::System.Nullable<int> Original_Reward_Title_ID, 
                    string Original_Title_Name, 
                    global::System.Nullable<int> Original_Condition_ClearMission_ID, 
                    global::System.Nullable<global::System.DateTime> Original_Regdate) {
            return this.Update(Original_IndexKey, ID, Mission_Clear_Type, Mission_Clear_Type_, Mission_Name, Condition_Lv, Condition_Unit_Type, Condition_Unit_Type_, Condition_Unit_Class, Condition_Unit_Class_, SubMission_1, SubMission_2, SubMission_3, SubMission_4, SubMission_5, Period, Reward_Title_ID, Title_Name, Condition_ClearMission_ID, Regdate, Original_IndexKey, Original_ID, Original_Mission_Clear_Type, Original_Mission_Clear_Type_, Original_Mission_Name, Original_Condition_Lv, Original_Condition_Unit_Type, Original_Condition_Unit_Type_, Original_Condition_Unit_Class, Original_Condition_Unit_Class_, Original_SubMission_1, Original_SubMission_2, Original_SubMission_3, Original_SubMission_4, Original_SubMission_5, Original_Period, Original_Reward_Title_ID, Original_Title_Name, Original_Condition_ClearMission_ID, Original_Regdate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateTitleMission_MissionName(string Mission_Name, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Mission_Name == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Mission_Name));
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateTitleMission_Regdate(global::System.Nullable<global::System.DateTime> Regdate, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Regdate.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TitleMission_HistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TitleMission_HistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TitleMission_History";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Mission Clear Type", "Mission Clear Type");
            tableMapping.ColumnMappings.Add("Mission_Clear_Type_", "Mission_Clear_Type_");
            tableMapping.ColumnMappings.Add("Mission_Name", "Mission_Name");
            tableMapping.ColumnMappings.Add("Condition_Lv", "Condition_Lv");
            tableMapping.ColumnMappings.Add("Condition Unit Type", "Condition Unit Type");
            tableMapping.ColumnMappings.Add("Condition_Unit_Type_", "Condition_Unit_Type_");
            tableMapping.ColumnMappings.Add("Condition Unit Class", "Condition Unit Class");
            tableMapping.ColumnMappings.Add("Condition_Unit_Class_", "Condition_Unit_Class_");
            tableMapping.ColumnMappings.Add("SubMission_1", "SubMission_1");
            tableMapping.ColumnMappings.Add("SubMission_2", "SubMission_2");
            tableMapping.ColumnMappings.Add("SubMission_3", "SubMission_3");
            tableMapping.ColumnMappings.Add("SubMission_4", "SubMission_4");
            tableMapping.ColumnMappings.Add("SubMission_5", "SubMission_5");
            tableMapping.ColumnMappings.Add("Period", "Period");
            tableMapping.ColumnMappings.Add("Reward_Title_ID", "Reward_Title_ID");
            tableMapping.ColumnMappings.Add("Title Name", "Title Name");
            tableMapping.ColumnMappings.Add("Condition_ClearMission_ID", "Condition_ClearMission_ID");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserIP", "UserIP");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TitleMission_History] ([IndexKey], [ID], [Mission Clear Type], [Mission_Clear_Type_], [Mission_Name], [Condition_Lv], [Condition Unit Type], [Condition_Unit_Type_], [Condition Unit Class], [Condition_Unit_Class_], [SubMission_1], [SubMission_2], [SubMission_3], [SubMission_4], [SubMission_5], [Period], [Reward_Title_ID], [Title Name], [Condition_ClearMission_ID], [UserID], [UserIP], [Regdate]) VALUES (@IndexKey, @ID, @Mission_Clear_Type, @Mission_Clear_Type_, @Mission_Name, @Condition_Lv, @Condition_Unit_Type, @Condition_Unit_Type_, @Condition_Unit_Class, @Condition_Unit_Class_, @SubMission_1, @SubMission_2, @SubMission_3, @SubMission_4, @SubMission_5, @Period, @Reward_Title_ID, @Title_Name, @Condition_ClearMission_ID, @UserID, @UserIP, @Regdate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mission_Clear_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission Clear Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mission_Clear_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Clear_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mission_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mission_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Lv", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Lv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition Unit Class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_Unit_Class_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_Unit_Class_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubMission_5", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubMission_5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reward_Title_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reward_Title_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition_ClearMission_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Condition_ClearMission_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserIP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT IndexKey, ID, [Mission Clear Type], Mission_Clear_Type_, Mission_Name, Condition_Lv, [Condition Unit Type], Condition_Unit_Type_, [Condition Unit Class], Condition_Unit_Class_, SubMission_1, SubMission_2, SubMission_3, SubMission_4, SubMission_5, Period, Reward_Title_ID, [Title Name], Condition_ClearMission_ID, UserID, UserIP, Regdate FROM dbo.TitleMission_History";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.TitleMission_HistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.TitleMission_HistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.TitleMission_HistoryDataTable dataTable = new ScriptData_JPDataSet.TitleMission_HistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.TitleMission_HistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TitleMission_History");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IndexKey, 
                    int ID, 
                    global::System.Nullable<int> Mission_Clear_Type, 
                    string Mission_Clear_Type_, 
                    string Mission_Name, 
                    global::System.Nullable<int> Condition_Lv, 
                    global::System.Nullable<int> Condition_Unit_Type, 
                    string Condition_Unit_Type_, 
                    global::System.Nullable<int> Condition_Unit_Class, 
                    string Condition_Unit_Class_, 
                    global::System.Nullable<int> SubMission_1, 
                    global::System.Nullable<int> SubMission_2, 
                    global::System.Nullable<int> SubMission_3, 
                    global::System.Nullable<int> SubMission_4, 
                    string SubMission_5, 
                    global::System.Nullable<int> Period, 
                    global::System.Nullable<int> Reward_Title_ID, 
                    string Title_Name, 
                    global::System.Nullable<int> Condition_ClearMission_ID, 
                    string UserID, 
                    string UserIP, 
                    global::System.Nullable<global::System.DateTime> Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID));
            if ((Mission_Clear_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Mission_Clear_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Mission_Clear_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Mission_Clear_Type_));
            }
            if ((Mission_Name == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Mission_Name));
            }
            if ((Condition_Lv.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Condition_Lv.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Condition_Unit_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Condition_Unit_Type_));
            }
            if ((Condition_Unit_Class.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Condition_Unit_Class.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Condition_Unit_Class_ == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Condition_Unit_Class_));
            }
            if ((SubMission_1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(SubMission_1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((SubMission_2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(SubMission_2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SubMission_3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(SubMission_3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((SubMission_4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(SubMission_4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SubMission_5 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(SubMission_5));
            }
            if ((Period.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Period.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Reward_Title_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(Reward_Title_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Title_Name == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Title_Name));
            }
            if ((Condition_ClearMission_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(Condition_ClearMission_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((UserID == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(UserID));
            }
            if ((UserIP == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(UserIP));
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SubTitleMissionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SubTitleMissionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SubTitleMission";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Clear_Type_Idx", "Clear_Type_Idx");
            tableMapping.ColumnMappings.Add("Clear_Type_", "Clear_Type_");
            tableMapping.ColumnMappings.Add("NPC ID", "NPC ID");
            tableMapping.ColumnMappings.Add("Clear Condition Kill NPC ID", "Clear Condition Kill NPC ID");
            tableMapping.ColumnMappings.Add("Clear Condition Kill NPC Quantity", "Clear Condition Kill NPC Quantity");
            tableMapping.ColumnMappings.Add("Clear_Condition_Collection_Item_ID", "Clear_Condition_Collection_Item_ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Clear_Condition_Collection_Item_Quantity", "Clear_Condition_Collection_Item_Quantity");
            tableMapping.ColumnMappings.Add("Quest_Item_Drop_Rate", "Quest_Item_Drop_Rate");
            tableMapping.ColumnMappings.Add("Clear_Condition_Dungeon_Difficulty", "Clear_Condition_Dungeon_Difficulty");
            tableMapping.ColumnMappings.Add("Clear_Condition_Dungeon_ID", "Clear_Condition_Dungeon_ID");
            tableMapping.ColumnMappings.Add("Clear_Condition_Dungeon_Damage", "Clear_Condition_Dungeon_Damage");
            tableMapping.ColumnMappings.Add("Clear_Condition_Dungeon_Rank", "Clear_Condition_Dungeon_Rank");
            tableMapping.ColumnMappings.Add("Clear_Condition_Dungeon_Clear_Time", "Clear_Condition_Dungeon_Clear_Time");
            tableMapping.ColumnMappings.Add("Clear_Condition_Dungeon_clear_count", "Clear_Condition_Dungeon_clear_count");
            tableMapping.ColumnMappings.Add("Clear_Condition_Talk_NPC_ID", "Clear_Condition_Talk_NPC_ID");
            tableMapping.ColumnMappings.Add("Clear_Condition_PVP_TYPE", "Clear_Condition_PVP_TYPE");
            tableMapping.ColumnMappings.Add("Clear_Condition_PVP_PLAY", "Clear_Condition_PVP_PLAY");
            tableMapping.ColumnMappings.Add("Clear_Condition_PVP_WIN", "Clear_Condition_PVP_WIN");
            tableMapping.ColumnMappings.Add("Clear_Condition_PVP_KILL", "Clear_Condition_PVP_KILL");
            tableMapping.ColumnMappings.Add("Clear_Condition_QUEST", "Clear_Condition_QUEST");
            tableMapping.ColumnMappings.Add("Clear_Condition_COLLECT_TITLE", "Clear_Condition_COLLECT_TITLE");
            tableMapping.ColumnMappings.Add("Clear_Condition_USE_ITEM", "Clear_Condition_USE_ITEM");
            tableMapping.ColumnMappings.Add("AutomaticDescription", "AutomaticDescription");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SubTitleMission] WHERE (([IndexKey] = @Original_IndexKey) AND " +
                "([ID] = @Original_ID) AND ((@IsNull_Clear_Type_Idx = 1 AND [Clear_Type_Idx] IS N" +
                "ULL) OR ([Clear_Type_Idx] = @Original_Clear_Type_Idx)) AND ((@IsNull_Clear_Type_" +
                " = 1 AND [Clear_Type_] IS NULL) OR ([Clear_Type_] = @Original_Clear_Type_)) AND " +
                "((@IsNull_NPC_ID = 1 AND [NPC ID] IS NULL) OR ([NPC ID] = @Original_NPC_ID)) AND" +
                " ((@IsNull_Clear_Condition_Kill_NPC_ID = 1 AND [Clear Condition Kill NPC ID] IS " +
                "NULL) OR ([Clear Condition Kill NPC ID] = @Original_Clear_Condition_Kill_NPC_ID)" +
                ") AND ((@IsNull_Clear_Condition_Kill_NPC_Quantity = 1 AND [Clear Condition Kill " +
                "NPC Quantity] IS NULL) OR ([Clear Condition Kill NPC Quantity] = @Original_Clear" +
                "_Condition_Kill_NPC_Quantity)) AND ((@IsNull_Clear_Condition_Collection_Item_ID " +
                "= 1 AND [Clear_Condition_Collection_Item_ID] IS NULL) OR ([Clear_Condition_Colle" +
                "ction_Item_ID] = @Original_Clear_Condition_Collection_Item_ID)) AND ((@IsNull_Na" +
                "me = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_Clear_Con" +
                "dition_Collection_Item_Quantity = 1 AND [Clear_Condition_Collection_Item_Quantit" +
                "y] IS NULL) OR ([Clear_Condition_Collection_Item_Quantity] = @Original_Clear_Con" +
                "dition_Collection_Item_Quantity)) AND ((@IsNull_Quest_Item_Drop_Rate = 1 AND [Qu" +
                "est_Item_Drop_Rate] IS NULL) OR ([Quest_Item_Drop_Rate] = @Original_Quest_Item_D" +
                "rop_Rate)) AND ((@IsNull_Clear_Condition_Dungeon_Difficulty = 1 AND [Clear_Condi" +
                "tion_Dungeon_Difficulty] IS NULL) OR ([Clear_Condition_Dungeon_Difficulty] = @Or" +
                "iginal_Clear_Condition_Dungeon_Difficulty)) AND ((@IsNull_Clear_Condition_Dungeo" +
                "n_ID = 1 AND [Clear_Condition_Dungeon_ID] IS NULL) OR ([Clear_Condition_Dungeon_" +
                "ID] = @Original_Clear_Condition_Dungeon_ID)) AND ((@IsNull_Clear_Condition_Dunge" +
                "on_Damage = 1 AND [Clear_Condition_Dungeon_Damage] IS NULL) OR ([Clear_Condition" +
                "_Dungeon_Damage] = @Original_Clear_Condition_Dungeon_Damage)) AND ((@IsNull_Clea" +
                "r_Condition_Dungeon_Rank = 1 AND [Clear_Condition_Dungeon_Rank] IS NULL) OR ([Cl" +
                "ear_Condition_Dungeon_Rank] = @Original_Clear_Condition_Dungeon_Rank)) AND ((@Is" +
                "Null_Clear_Condition_Dungeon_Clear_Time = 1 AND [Clear_Condition_Dungeon_Clear_T" +
                "ime] IS NULL) OR ([Clear_Condition_Dungeon_Clear_Time] = @Original_Clear_Conditi" +
                "on_Dungeon_Clear_Time)) AND ((@IsNull_Clear_Condition_Dungeon_clear_count = 1 AN" +
                "D [Clear_Condition_Dungeon_clear_count] IS NULL) OR ([Clear_Condition_Dungeon_cl" +
                "ear_count] = @Original_Clear_Condition_Dungeon_clear_count)) AND ((@IsNull_Clear" +
                "_Condition_Talk_NPC_ID = 1 AND [Clear_Condition_Talk_NPC_ID] IS NULL) OR ([Clear" +
                "_Condition_Talk_NPC_ID] = @Original_Clear_Condition_Talk_NPC_ID)) AND ((@IsNull_" +
                "Clear_Condition_PVP_TYPE = 1 AND [Clear_Condition_PVP_TYPE] IS NULL) OR ([Clear_" +
                "Condition_PVP_TYPE] = @Original_Clear_Condition_PVP_TYPE)) AND ((@IsNull_Clear_C" +
                "ondition_PVP_PLAY = 1 AND [Clear_Condition_PVP_PLAY] IS NULL) OR ([Clear_Conditi" +
                "on_PVP_PLAY] = @Original_Clear_Condition_PVP_PLAY)) AND ((@IsNull_Clear_Conditio" +
                "n_PVP_WIN = 1 AND [Clear_Condition_PVP_WIN] IS NULL) OR ([Clear_Condition_PVP_WI" +
                "N] = @Original_Clear_Condition_PVP_WIN)) AND ((@IsNull_Clear_Condition_PVP_KILL " +
                "= 1 AND [Clear_Condition_PVP_KILL] IS NULL) OR ([Clear_Condition_PVP_KILL] = @Or" +
                "iginal_Clear_Condition_PVP_KILL)) AND ((@IsNull_Clear_Condition_QUEST = 1 AND [C" +
                "lear_Condition_QUEST] IS NULL) OR ([Clear_Condition_QUEST] = @Original_Clear_Con" +
                "dition_QUEST)) AND ((@IsNull_Clear_Condition_COLLECT_TITLE = 1 AND [Clear_Condit" +
                "ion_COLLECT_TITLE] IS NULL) OR ([Clear_Condition_COLLECT_TITLE] = @Original_Clea" +
                "r_Condition_COLLECT_TITLE)) AND ((@IsNull_Clear_Condition_USE_ITEM = 1 AND [Clea" +
                "r_Condition_USE_ITEM] IS NULL) OR ([Clear_Condition_USE_ITEM] = @Original_Clear_" +
                "Condition_USE_ITEM)) AND ((@IsNull_AutomaticDescription = 1 AND [AutomaticDescri" +
                "ption] IS NULL) OR ([AutomaticDescription] = @Original_AutomaticDescription)) AN" +
                "D ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Orig" +
                "inal_Description)) AND ([Regdate] = @Original_Regdate))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Type_Idx", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Type_Idx", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Type_Idx", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Type_Idx", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NPC ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NPC ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Kill_NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Kill_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Kill_NPC_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC Quantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Kill_NPC_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Collection_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Collection_Item_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Collection_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Collection_Item_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Collection_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Collection_Item_Quantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Collection_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Collection_Item_Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quest_Item_Drop_Rate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest_Item_Drop_Rate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quest_Item_Drop_Rate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest_Item_Drop_Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Difficulty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Difficulty", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Difficulty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Difficulty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Damage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Damage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Damage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Damage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Rank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Rank", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Rank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Rank", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Clear_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Clear_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Clear_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Clear_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_clear_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_clear_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_clear_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_clear_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Talk_NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Talk_NPC_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Talk_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Talk_NPC_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_TYPE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_PLAY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_PLAY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_PLAY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_PLAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_WIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_WIN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_WIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_WIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_KILL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_KILL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_KILL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_KILL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_QUEST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_QUEST", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_QUEST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_QUEST", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_COLLECT_TITLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_COLLECT_TITLE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_COLLECT_TITLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_COLLECT_TITLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_USE_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_USE_ITEM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_USE_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_USE_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AutomaticDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomaticDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AutomaticDescription", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomaticDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[SubTitleMission] ([IndexKey], [ID], [Clear_Type_Idx], [Clear_T" +
                "ype_], [NPC ID], [Clear Condition Kill NPC ID], [Clear Condition Kill NPC Quanti" +
                "ty], [Clear_Condition_Collection_Item_ID], [Name], [Clear_Condition_Collection_I" +
                "tem_Quantity], [Quest_Item_Drop_Rate], [Clear_Condition_Dungeon_Difficulty], [Cl" +
                "ear_Condition_Dungeon_ID], [Clear_Condition_Dungeon_Damage], [Clear_Condition_Du" +
                "ngeon_Rank], [Clear_Condition_Dungeon_Clear_Time], [Clear_Condition_Dungeon_clea" +
                "r_count], [Clear_Condition_Talk_NPC_ID], [Clear_Condition_PVP_TYPE], [Clear_Cond" +
                "ition_PVP_PLAY], [Clear_Condition_PVP_WIN], [Clear_Condition_PVP_KILL], [Clear_C" +
                "ondition_QUEST], [Clear_Condition_COLLECT_TITLE], [Clear_Condition_USE_ITEM], [A" +
                "utomaticDescription], [Description], [Regdate]) VALUES (@IndexKey, @ID, @Clear_T" +
                "ype_Idx, @Clear_Type_, @NPC_ID, @Clear_Condition_Kill_NPC_ID, @Clear_Condition_K" +
                "ill_NPC_Quantity, @Clear_Condition_Collection_Item_ID, @Name, @Clear_Condition_C" +
                "ollection_Item_Quantity, @Quest_Item_Drop_Rate, @Clear_Condition_Dungeon_Difficu" +
                "lty, @Clear_Condition_Dungeon_ID, @Clear_Condition_Dungeon_Damage, @Clear_Condit" +
                "ion_Dungeon_Rank, @Clear_Condition_Dungeon_Clear_Time, @Clear_Condition_Dungeon_" +
                "clear_count, @Clear_Condition_Talk_NPC_ID, @Clear_Condition_PVP_TYPE, @Clear_Con" +
                "dition_PVP_PLAY, @Clear_Condition_PVP_WIN, @Clear_Condition_PVP_KILL, @Clear_Con" +
                "dition_QUEST, @Clear_Condition_COLLECT_TITLE, @Clear_Condition_USE_ITEM, @Automa" +
                "ticDescription, @Description, @Regdate);\r\nSELECT IndexKey, ID, Clear_Type_Idx, C" +
                "lear_Type_, [NPC ID], [Clear Condition Kill NPC ID], [Clear Condition Kill NPC Q" +
                "uantity], Clear_Condition_Collection_Item_ID, Name, Clear_Condition_Collection_I" +
                "tem_Quantity, Quest_Item_Drop_Rate, Clear_Condition_Dungeon_Difficulty, Clear_Co" +
                "ndition_Dungeon_ID, Clear_Condition_Dungeon_Damage, Clear_Condition_Dungeon_Rank" +
                ", Clear_Condition_Dungeon_Clear_Time, Clear_Condition_Dungeon_clear_count, Clear" +
                "_Condition_Talk_NPC_ID, Clear_Condition_PVP_TYPE, Clear_Condition_PVP_PLAY, Clea" +
                "r_Condition_PVP_WIN, Clear_Condition_PVP_KILL, Clear_Condition_QUEST, Clear_Cond" +
                "ition_COLLECT_TITLE, Clear_Condition_USE_ITEM, AutomaticDescription, Description" +
                ", Regdate FROM SubTitleMission WHERE (IndexKey = @IndexKey)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Type_Idx", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Type_Idx", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NPC ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Kill_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Kill_NPC_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Collection_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Collection_Item_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Collection_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Collection_Item_Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quest_Item_Drop_Rate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest_Item_Drop_Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Difficulty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Difficulty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Damage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Damage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Rank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Rank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Clear_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Clear_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_clear_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_clear_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Talk_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Talk_NPC_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_PLAY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_PLAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_WIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_WIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_KILL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_KILL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_QUEST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_QUEST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_COLLECT_TITLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_COLLECT_TITLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_USE_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_USE_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutomaticDescription", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomaticDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SubTitleMission] SET [IndexKey] = @IndexKey, [ID] = @ID, [Clear_Typ" +
                "e_Idx] = @Clear_Type_Idx, [Clear_Type_] = @Clear_Type_, [NPC ID] = @NPC_ID, [Cle" +
                "ar Condition Kill NPC ID] = @Clear_Condition_Kill_NPC_ID, [Clear Condition Kill " +
                "NPC Quantity] = @Clear_Condition_Kill_NPC_Quantity, [Clear_Condition_Collection_" +
                "Item_ID] = @Clear_Condition_Collection_Item_ID, [Name] = @Name, [Clear_Condition" +
                "_Collection_Item_Quantity] = @Clear_Condition_Collection_Item_Quantity, [Quest_I" +
                "tem_Drop_Rate] = @Quest_Item_Drop_Rate, [Clear_Condition_Dungeon_Difficulty] = @" +
                "Clear_Condition_Dungeon_Difficulty, [Clear_Condition_Dungeon_ID] = @Clear_Condit" +
                "ion_Dungeon_ID, [Clear_Condition_Dungeon_Damage] = @Clear_Condition_Dungeon_Dama" +
                "ge, [Clear_Condition_Dungeon_Rank] = @Clear_Condition_Dungeon_Rank, [Clear_Condi" +
                "tion_Dungeon_Clear_Time] = @Clear_Condition_Dungeon_Clear_Time, [Clear_Condition" +
                "_Dungeon_clear_count] = @Clear_Condition_Dungeon_clear_count, [Clear_Condition_T" +
                "alk_NPC_ID] = @Clear_Condition_Talk_NPC_ID, [Clear_Condition_PVP_TYPE] = @Clear_" +
                "Condition_PVP_TYPE, [Clear_Condition_PVP_PLAY] = @Clear_Condition_PVP_PLAY, [Cle" +
                "ar_Condition_PVP_WIN] = @Clear_Condition_PVP_WIN, [Clear_Condition_PVP_KILL] = @" +
                "Clear_Condition_PVP_KILL, [Clear_Condition_QUEST] = @Clear_Condition_QUEST, [Cle" +
                "ar_Condition_COLLECT_TITLE] = @Clear_Condition_COLLECT_TITLE, [Clear_Condition_U" +
                "SE_ITEM] = @Clear_Condition_USE_ITEM, [AutomaticDescription] = @AutomaticDescrip" +
                "tion, [Description] = @Description, [Regdate] = @Regdate WHERE (([IndexKey] = @O" +
                "riginal_IndexKey) AND ([ID] = @Original_ID) AND ((@IsNull_Clear_Type_Idx = 1 AND" +
                " [Clear_Type_Idx] IS NULL) OR ([Clear_Type_Idx] = @Original_Clear_Type_Idx)) AND" +
                " ((@IsNull_Clear_Type_ = 1 AND [Clear_Type_] IS NULL) OR ([Clear_Type_] = @Origi" +
                "nal_Clear_Type_)) AND ((@IsNull_NPC_ID = 1 AND [NPC ID] IS NULL) OR ([NPC ID] = " +
                "@Original_NPC_ID)) AND ((@IsNull_Clear_Condition_Kill_NPC_ID = 1 AND [Clear Cond" +
                "ition Kill NPC ID] IS NULL) OR ([Clear Condition Kill NPC ID] = @Original_Clear_" +
                "Condition_Kill_NPC_ID)) AND ((@IsNull_Clear_Condition_Kill_NPC_Quantity = 1 AND " +
                "[Clear Condition Kill NPC Quantity] IS NULL) OR ([Clear Condition Kill NPC Quant" +
                "ity] = @Original_Clear_Condition_Kill_NPC_Quantity)) AND ((@IsNull_Clear_Conditi" +
                "on_Collection_Item_ID = 1 AND [Clear_Condition_Collection_Item_ID] IS NULL) OR (" +
                "[Clear_Condition_Collection_Item_ID] = @Original_Clear_Condition_Collection_Item" +
                "_ID)) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) A" +
                "ND ((@IsNull_Clear_Condition_Collection_Item_Quantity = 1 AND [Clear_Condition_C" +
                "ollection_Item_Quantity] IS NULL) OR ([Clear_Condition_Collection_Item_Quantity]" +
                " = @Original_Clear_Condition_Collection_Item_Quantity)) AND ((@IsNull_Quest_Item" +
                "_Drop_Rate = 1 AND [Quest_Item_Drop_Rate] IS NULL) OR ([Quest_Item_Drop_Rate] = " +
                "@Original_Quest_Item_Drop_Rate)) AND ((@IsNull_Clear_Condition_Dungeon_Difficult" +
                "y = 1 AND [Clear_Condition_Dungeon_Difficulty] IS NULL) OR ([Clear_Condition_Dun" +
                "geon_Difficulty] = @Original_Clear_Condition_Dungeon_Difficulty)) AND ((@IsNull_" +
                "Clear_Condition_Dungeon_ID = 1 AND [Clear_Condition_Dungeon_ID] IS NULL) OR ([Cl" +
                "ear_Condition_Dungeon_ID] = @Original_Clear_Condition_Dungeon_ID)) AND ((@IsNull" +
                "_Clear_Condition_Dungeon_Damage = 1 AND [Clear_Condition_Dungeon_Damage] IS NULL" +
                ") OR ([Clear_Condition_Dungeon_Damage] = @Original_Clear_Condition_Dungeon_Damag" +
                "e)) AND ((@IsNull_Clear_Condition_Dungeon_Rank = 1 AND [Clear_Condition_Dungeon_" +
                "Rank] IS NULL) OR ([Clear_Condition_Dungeon_Rank] = @Original_Clear_Condition_Du" +
                "ngeon_Rank)) AND ((@IsNull_Clear_Condition_Dungeon_Clear_Time = 1 AND [Clear_Con" +
                "dition_Dungeon_Clear_Time] IS NULL) OR ([Clear_Condition_Dungeon_Clear_Time] = @" +
                "Original_Clear_Condition_Dungeon_Clear_Time)) AND ((@IsNull_Clear_Condition_Dung" +
                "eon_clear_count = 1 AND [Clear_Condition_Dungeon_clear_count] IS NULL) OR ([Clea" +
                "r_Condition_Dungeon_clear_count] = @Original_Clear_Condition_Dungeon_clear_count" +
                ")) AND ((@IsNull_Clear_Condition_Talk_NPC_ID = 1 AND [Clear_Condition_Talk_NPC_I" +
                "D] IS NULL) OR ([Clear_Condition_Talk_NPC_ID] = @Original_Clear_Condition_Talk_N" +
                "PC_ID)) AND ((@IsNull_Clear_Condition_PVP_TYPE = 1 AND [Clear_Condition_PVP_TYPE" +
                "] IS NULL) OR ([Clear_Condition_PVP_TYPE] = @Original_Clear_Condition_PVP_TYPE))" +
                " AND ((@IsNull_Clear_Condition_PVP_PLAY = 1 AND [Clear_Condition_PVP_PLAY] IS NU" +
                "LL) OR ([Clear_Condition_PVP_PLAY] = @Original_Clear_Condition_PVP_PLAY)) AND ((" +
                "@IsNull_Clear_Condition_PVP_WIN = 1 AND [Clear_Condition_PVP_WIN] IS NULL) OR ([" +
                "Clear_Condition_PVP_WIN] = @Original_Clear_Condition_PVP_WIN)) AND ((@IsNull_Cle" +
                "ar_Condition_PVP_KILL = 1 AND [Clear_Condition_PVP_KILL] IS NULL) OR ([Clear_Con" +
                "dition_PVP_KILL] = @Original_Clear_Condition_PVP_KILL)) AND ((@IsNull_Clear_Cond" +
                "ition_QUEST = 1 AND [Clear_Condition_QUEST] IS NULL) OR ([Clear_Condition_QUEST]" +
                " = @Original_Clear_Condition_QUEST)) AND ((@IsNull_Clear_Condition_COLLECT_TITLE" +
                " = 1 AND [Clear_Condition_COLLECT_TITLE] IS NULL) OR ([Clear_Condition_COLLECT_T" +
                "ITLE] = @Original_Clear_Condition_COLLECT_TITLE)) AND ((@IsNull_Clear_Condition_" +
                "USE_ITEM = 1 AND [Clear_Condition_USE_ITEM] IS NULL) OR ([Clear_Condition_USE_IT" +
                "EM] = @Original_Clear_Condition_USE_ITEM)) AND ((@IsNull_AutomaticDescription = " +
                "1 AND [AutomaticDescription] IS NULL) OR ([AutomaticDescription] = @Original_Aut" +
                "omaticDescription)) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR " +
                "([Description] = @Original_Description)) AND ([Regdate] = @Original_Regdate));\r\n" +
                "SELECT IndexKey, ID, Clear_Type_Idx, Clear_Type_, [NPC ID], [Clear Condition Kil" +
                "l NPC ID], [Clear Condition Kill NPC Quantity], Clear_Condition_Collection_Item_" +
                "ID, Name, Clear_Condition_Collection_Item_Quantity, Quest_Item_Drop_Rate, Clear_" +
                "Condition_Dungeon_Difficulty, Clear_Condition_Dungeon_ID, Clear_Condition_Dungeo" +
                "n_Damage, Clear_Condition_Dungeon_Rank, Clear_Condition_Dungeon_Clear_Time, Clea" +
                "r_Condition_Dungeon_clear_count, Clear_Condition_Talk_NPC_ID, Clear_Condition_PV" +
                "P_TYPE, Clear_Condition_PVP_PLAY, Clear_Condition_PVP_WIN, Clear_Condition_PVP_K" +
                "ILL, Clear_Condition_QUEST, Clear_Condition_COLLECT_TITLE, Clear_Condition_USE_I" +
                "TEM, AutomaticDescription, Description, Regdate FROM SubTitleMission WHERE (Inde" +
                "xKey = @IndexKey)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Type_Idx", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Type_Idx", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NPC ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Kill_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Kill_NPC_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Collection_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Collection_Item_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Collection_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Collection_Item_Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quest_Item_Drop_Rate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest_Item_Drop_Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Difficulty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Difficulty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Damage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Damage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Rank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Rank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Clear_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Clear_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_clear_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_clear_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Talk_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Talk_NPC_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_PLAY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_PLAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_WIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_WIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_KILL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_KILL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_QUEST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_QUEST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_COLLECT_TITLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_COLLECT_TITLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_USE_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_USE_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutomaticDescription", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomaticDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Type_Idx", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Type_Idx", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Type_Idx", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Type_Idx", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Type_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Type_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Type_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NPC ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NPC ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Kill_NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Kill_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Kill_NPC_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC Quantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Kill_NPC_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Collection_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Collection_Item_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Collection_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Collection_Item_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Collection_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Collection_Item_Quantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Collection_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Collection_Item_Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quest_Item_Drop_Rate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest_Item_Drop_Rate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quest_Item_Drop_Rate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest_Item_Drop_Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Difficulty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Difficulty", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Difficulty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Difficulty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Damage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Damage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Damage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Damage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Rank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Rank", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Rank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Rank", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_Clear_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Clear_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_Clear_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Clear_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Dungeon_clear_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_clear_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Dungeon_clear_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_clear_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_Talk_NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Talk_NPC_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_Talk_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Talk_NPC_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_TYPE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_PLAY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_PLAY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_PLAY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_PLAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_WIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_WIN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_WIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_WIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_PVP_KILL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_KILL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_PVP_KILL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_KILL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_QUEST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_QUEST", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_QUEST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_QUEST", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_COLLECT_TITLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_COLLECT_TITLE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_COLLECT_TITLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_COLLECT_TITLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Condition_USE_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_USE_ITEM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Condition_USE_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_USE_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AutomaticDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomaticDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AutomaticDescription", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomaticDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT IndexKey, ID, Clear_Type_Idx, Clear_Type_, [NPC ID], [Clear Condition Kill NPC ID], [Clear Condition Kill NPC Quantity], Clear_Condition_Collection_Item_ID, Name, Clear_Condition_Collection_Item_Quantity, Quest_Item_Drop_Rate, Clear_Condition_Dungeon_Difficulty, Clear_Condition_Dungeon_ID, Clear_Condition_Dungeon_Damage, Clear_Condition_Dungeon_Rank, Clear_Condition_Dungeon_Clear_Time, Clear_Condition_Dungeon_clear_count, Clear_Condition_Talk_NPC_ID, Clear_Condition_PVP_TYPE, Clear_Condition_PVP_PLAY, Clear_Condition_PVP_WIN, Clear_Condition_PVP_KILL, Clear_Condition_QUEST, Clear_Condition_COLLECT_TITLE, Clear_Condition_USE_ITEM, AutomaticDescription, Description, Regdate FROM dbo.SubTitleMission";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE  SubTitleMission\r\nSET        Description = @Description\r\nWHERE   (IndexKey" +
                " = @Index); \r\n";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE  SubTitleMission\r\nSET         Regdate= @Regdate\r\nWHERE   (IndexKey = @Inde" +
                "x); ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.SubTitleMissionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.SubTitleMissionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.SubTitleMissionDataTable dataTable = new ScriptData_JPDataSet.SubTitleMissionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.SubTitleMissionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SubTitleMission");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_IndexKey, 
                    int Original_ID, 
                    global::System.Nullable<int> Original_Clear_Type_Idx, 
                    string Original_Clear_Type_, 
                    global::System.Nullable<int> Original_NPC_ID, 
                    string Original_Clear_Condition_Kill_NPC_ID, 
                    global::System.Nullable<int> Original_Clear_Condition_Kill_NPC_Quantity, 
                    global::System.Nullable<int> Original_Clear_Condition_Collection_Item_ID, 
                    string Original_Name, 
                    global::System.Nullable<int> Original_Clear_Condition_Collection_Item_Quantity, 
                    string Original_Quest_Item_Drop_Rate, 
                    string Original_Clear_Condition_Dungeon_Difficulty, 
                    string Original_Clear_Condition_Dungeon_ID, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Damage, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Rank, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Clear_Time, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_clear_count, 
                    string Original_Clear_Condition_Talk_NPC_ID, 
                    string Original_Clear_Condition_PVP_TYPE, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_PLAY, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_WIN, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_KILL, 
                    global::System.Nullable<int> Original_Clear_Condition_QUEST, 
                    global::System.Nullable<int> Original_Clear_Condition_COLLECT_TITLE, 
                    global::System.Nullable<int> Original_Clear_Condition_USE_ITEM, 
                    global::System.Nullable<bool> Original_AutomaticDescription, 
                    string Original_Description, 
                    System.DateTime Original_Regdate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IndexKey));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID));
            if ((Original_Clear_Type_Idx.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Clear_Type_Idx.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Type_ == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Clear_Type_));
            }
            if ((Original_NPC_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_NPC_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Kill_NPC_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Clear_Condition_Kill_NPC_ID));
            }
            if ((Original_Clear_Condition_Kill_NPC_Quantity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_Clear_Condition_Kill_NPC_Quantity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Collection_Item_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_Clear_Condition_Collection_Item_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Name));
            }
            if ((Original_Clear_Condition_Collection_Item_Quantity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_Clear_Condition_Collection_Item_Quantity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Quest_Item_Drop_Rate == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Quest_Item_Drop_Rate));
            }
            if ((Original_Clear_Condition_Dungeon_Difficulty == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_Clear_Condition_Dungeon_Difficulty));
            }
            if ((Original_Clear_Condition_Dungeon_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_Clear_Condition_Dungeon_ID));
            }
            if ((Original_Clear_Condition_Dungeon_Damage.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(Original_Clear_Condition_Dungeon_Damage.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_Rank.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((int)(Original_Clear_Condition_Dungeon_Rank.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_Clear_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((int)(Original_Clear_Condition_Dungeon_Clear_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_clear_count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((int)(Original_Clear_Condition_Dungeon_clear_count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Talk_NPC_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_Clear_Condition_Talk_NPC_ID));
            }
            if ((Original_Clear_Condition_PVP_TYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_Clear_Condition_PVP_TYPE));
            }
            if ((Original_Clear_Condition_PVP_PLAY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((int)(Original_Clear_Condition_PVP_PLAY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_PVP_WIN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((int)(Original_Clear_Condition_PVP_WIN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_PVP_KILL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((int)(Original_Clear_Condition_PVP_KILL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_QUEST.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((int)(Original_Clear_Condition_QUEST.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_COLLECT_TITLE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((int)(Original_Clear_Condition_COLLECT_TITLE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_USE_ITEM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((int)(Original_Clear_Condition_USE_ITEM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_AutomaticDescription.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((bool)(Original_AutomaticDescription.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_Description));
            }
            this.Adapter.DeleteCommand.Parameters[52].Value = ((System.DateTime)(Original_Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IndexKey, 
                    int ID, 
                    global::System.Nullable<int> Clear_Type_Idx, 
                    string Clear_Type_, 
                    global::System.Nullable<int> NPC_ID, 
                    string Clear_Condition_Kill_NPC_ID, 
                    global::System.Nullable<int> Clear_Condition_Kill_NPC_Quantity, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_ID, 
                    string Name, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_Quantity, 
                    string Quest_Item_Drop_Rate, 
                    string Clear_Condition_Dungeon_Difficulty, 
                    string Clear_Condition_Dungeon_ID, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Damage, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Rank, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Clear_Time, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_clear_count, 
                    string Clear_Condition_Talk_NPC_ID, 
                    string Clear_Condition_PVP_TYPE, 
                    global::System.Nullable<int> Clear_Condition_PVP_PLAY, 
                    global::System.Nullable<int> Clear_Condition_PVP_WIN, 
                    global::System.Nullable<int> Clear_Condition_PVP_KILL, 
                    global::System.Nullable<int> Clear_Condition_QUEST, 
                    global::System.Nullable<int> Clear_Condition_COLLECT_TITLE, 
                    global::System.Nullable<int> Clear_Condition_USE_ITEM, 
                    global::System.Nullable<bool> AutomaticDescription, 
                    string Description, 
                    System.DateTime Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID));
            if ((Clear_Type_Idx.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Clear_Type_Idx.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Clear_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Clear_Type_));
            }
            if ((NPC_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(NPC_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Kill_NPC_ID == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Clear_Condition_Kill_NPC_ID));
            }
            if ((Clear_Condition_Kill_NPC_Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Clear_Condition_Kill_NPC_Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Collection_Item_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Clear_Condition_Collection_Item_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Name));
            }
            if ((Clear_Condition_Collection_Item_Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(Clear_Condition_Collection_Item_Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Quest_Item_Drop_Rate == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Quest_Item_Drop_Rate));
            }
            if ((Clear_Condition_Dungeon_Difficulty == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Clear_Condition_Dungeon_Difficulty));
            }
            if ((Clear_Condition_Dungeon_ID == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Clear_Condition_Dungeon_ID));
            }
            if ((Clear_Condition_Dungeon_Damage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(Clear_Condition_Dungeon_Damage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Rank.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(Clear_Condition_Dungeon_Rank.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Clear_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Clear_Condition_Dungeon_Clear_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_clear_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(Clear_Condition_Dungeon_clear_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Talk_NPC_ID == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Clear_Condition_Talk_NPC_ID));
            }
            if ((Clear_Condition_PVP_TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Clear_Condition_PVP_TYPE));
            }
            if ((Clear_Condition_PVP_PLAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(Clear_Condition_PVP_PLAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_PVP_WIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(Clear_Condition_PVP_WIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_PVP_KILL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(Clear_Condition_PVP_KILL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_QUEST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(Clear_Condition_QUEST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_COLLECT_TITLE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(Clear_Condition_COLLECT_TITLE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_USE_ITEM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(Clear_Condition_USE_ITEM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((AutomaticDescription.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(AutomaticDescription.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Description));
            }
            this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IndexKey, 
                    int ID, 
                    global::System.Nullable<int> Clear_Type_Idx, 
                    string Clear_Type_, 
                    global::System.Nullable<int> NPC_ID, 
                    string Clear_Condition_Kill_NPC_ID, 
                    global::System.Nullable<int> Clear_Condition_Kill_NPC_Quantity, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_ID, 
                    string Name, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_Quantity, 
                    string Quest_Item_Drop_Rate, 
                    string Clear_Condition_Dungeon_Difficulty, 
                    string Clear_Condition_Dungeon_ID, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Damage, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Rank, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Clear_Time, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_clear_count, 
                    string Clear_Condition_Talk_NPC_ID, 
                    string Clear_Condition_PVP_TYPE, 
                    global::System.Nullable<int> Clear_Condition_PVP_PLAY, 
                    global::System.Nullable<int> Clear_Condition_PVP_WIN, 
                    global::System.Nullable<int> Clear_Condition_PVP_KILL, 
                    global::System.Nullable<int> Clear_Condition_QUEST, 
                    global::System.Nullable<int> Clear_Condition_COLLECT_TITLE, 
                    global::System.Nullable<int> Clear_Condition_USE_ITEM, 
                    global::System.Nullable<bool> AutomaticDescription, 
                    string Description, 
                    System.DateTime Regdate, 
                    int Original_IndexKey, 
                    int Original_ID, 
                    global::System.Nullable<int> Original_Clear_Type_Idx, 
                    string Original_Clear_Type_, 
                    global::System.Nullable<int> Original_NPC_ID, 
                    string Original_Clear_Condition_Kill_NPC_ID, 
                    global::System.Nullable<int> Original_Clear_Condition_Kill_NPC_Quantity, 
                    global::System.Nullable<int> Original_Clear_Condition_Collection_Item_ID, 
                    string Original_Name, 
                    global::System.Nullable<int> Original_Clear_Condition_Collection_Item_Quantity, 
                    string Original_Quest_Item_Drop_Rate, 
                    string Original_Clear_Condition_Dungeon_Difficulty, 
                    string Original_Clear_Condition_Dungeon_ID, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Damage, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Rank, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Clear_Time, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_clear_count, 
                    string Original_Clear_Condition_Talk_NPC_ID, 
                    string Original_Clear_Condition_PVP_TYPE, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_PLAY, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_WIN, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_KILL, 
                    global::System.Nullable<int> Original_Clear_Condition_QUEST, 
                    global::System.Nullable<int> Original_Clear_Condition_COLLECT_TITLE, 
                    global::System.Nullable<int> Original_Clear_Condition_USE_ITEM, 
                    global::System.Nullable<bool> Original_AutomaticDescription, 
                    string Original_Description, 
                    System.DateTime Original_Regdate) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID));
            if ((Clear_Type_Idx.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Clear_Type_Idx.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Clear_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Clear_Type_));
            }
            if ((NPC_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(NPC_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Kill_NPC_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Clear_Condition_Kill_NPC_ID));
            }
            if ((Clear_Condition_Kill_NPC_Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Clear_Condition_Kill_NPC_Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Collection_Item_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Clear_Condition_Collection_Item_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Name));
            }
            if ((Clear_Condition_Collection_Item_Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Clear_Condition_Collection_Item_Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Quest_Item_Drop_Rate == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Quest_Item_Drop_Rate));
            }
            if ((Clear_Condition_Dungeon_Difficulty == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Clear_Condition_Dungeon_Difficulty));
            }
            if ((Clear_Condition_Dungeon_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Clear_Condition_Dungeon_ID));
            }
            if ((Clear_Condition_Dungeon_Damage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Clear_Condition_Dungeon_Damage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Rank.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Clear_Condition_Dungeon_Rank.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Clear_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Clear_Condition_Dungeon_Clear_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_clear_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Clear_Condition_Dungeon_clear_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Talk_NPC_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Clear_Condition_Talk_NPC_ID));
            }
            if ((Clear_Condition_PVP_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Clear_Condition_PVP_TYPE));
            }
            if ((Clear_Condition_PVP_PLAY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Clear_Condition_PVP_PLAY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_PVP_WIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Clear_Condition_PVP_WIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_PVP_KILL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Clear_Condition_PVP_KILL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_QUEST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Clear_Condition_QUEST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_COLLECT_TITLE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Clear_Condition_COLLECT_TITLE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_USE_ITEM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Clear_Condition_USE_ITEM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((AutomaticDescription.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(AutomaticDescription.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Regdate));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_IndexKey));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_ID));
            if ((Original_Clear_Type_Idx.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_Clear_Type_Idx.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Type_ == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Clear_Type_));
            }
            if ((Original_NPC_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_NPC_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Kill_NPC_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_Clear_Condition_Kill_NPC_ID));
            }
            if ((Original_Clear_Condition_Kill_NPC_Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_Clear_Condition_Kill_NPC_Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Collection_Item_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_Clear_Condition_Collection_Item_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_Name));
            }
            if ((Original_Clear_Condition_Collection_Item_Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_Clear_Condition_Collection_Item_Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_Quest_Item_Drop_Rate == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_Quest_Item_Drop_Rate));
            }
            if ((Original_Clear_Condition_Dungeon_Difficulty == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_Clear_Condition_Dungeon_Difficulty));
            }
            if ((Original_Clear_Condition_Dungeon_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_Clear_Condition_Dungeon_ID));
            }
            if ((Original_Clear_Condition_Dungeon_Damage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_Clear_Condition_Dungeon_Damage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_Rank.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Original_Clear_Condition_Dungeon_Rank.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_Clear_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_Clear_Condition_Dungeon_Clear_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Dungeon_clear_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(Original_Clear_Condition_Dungeon_clear_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_Talk_NPC_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_Clear_Condition_Talk_NPC_ID));
            }
            if ((Original_Clear_Condition_PVP_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_Clear_Condition_PVP_TYPE));
            }
            if ((Original_Clear_Condition_PVP_PLAY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(Original_Clear_Condition_PVP_PLAY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_PVP_WIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(Original_Clear_Condition_PVP_WIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_PVP_KILL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(Original_Clear_Condition_PVP_KILL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_QUEST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(Original_Clear_Condition_QUEST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_COLLECT_TITLE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(Original_Clear_Condition_COLLECT_TITLE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Condition_USE_ITEM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_Clear_Condition_USE_ITEM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_AutomaticDescription.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((bool)(Original_AutomaticDescription.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_Description));
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((System.DateTime)(Original_Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID, 
                    global::System.Nullable<int> Clear_Type_Idx, 
                    string Clear_Type_, 
                    global::System.Nullable<int> NPC_ID, 
                    string Clear_Condition_Kill_NPC_ID, 
                    global::System.Nullable<int> Clear_Condition_Kill_NPC_Quantity, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_ID, 
                    string Name, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_Quantity, 
                    string Quest_Item_Drop_Rate, 
                    string Clear_Condition_Dungeon_Difficulty, 
                    string Clear_Condition_Dungeon_ID, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Damage, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Rank, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Clear_Time, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_clear_count, 
                    string Clear_Condition_Talk_NPC_ID, 
                    string Clear_Condition_PVP_TYPE, 
                    global::System.Nullable<int> Clear_Condition_PVP_PLAY, 
                    global::System.Nullable<int> Clear_Condition_PVP_WIN, 
                    global::System.Nullable<int> Clear_Condition_PVP_KILL, 
                    global::System.Nullable<int> Clear_Condition_QUEST, 
                    global::System.Nullable<int> Clear_Condition_COLLECT_TITLE, 
                    global::System.Nullable<int> Clear_Condition_USE_ITEM, 
                    global::System.Nullable<bool> AutomaticDescription, 
                    string Description, 
                    System.DateTime Regdate, 
                    int Original_IndexKey, 
                    int Original_ID, 
                    global::System.Nullable<int> Original_Clear_Type_Idx, 
                    string Original_Clear_Type_, 
                    global::System.Nullable<int> Original_NPC_ID, 
                    string Original_Clear_Condition_Kill_NPC_ID, 
                    global::System.Nullable<int> Original_Clear_Condition_Kill_NPC_Quantity, 
                    global::System.Nullable<int> Original_Clear_Condition_Collection_Item_ID, 
                    string Original_Name, 
                    global::System.Nullable<int> Original_Clear_Condition_Collection_Item_Quantity, 
                    string Original_Quest_Item_Drop_Rate, 
                    string Original_Clear_Condition_Dungeon_Difficulty, 
                    string Original_Clear_Condition_Dungeon_ID, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Damage, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Rank, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_Clear_Time, 
                    global::System.Nullable<int> Original_Clear_Condition_Dungeon_clear_count, 
                    string Original_Clear_Condition_Talk_NPC_ID, 
                    string Original_Clear_Condition_PVP_TYPE, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_PLAY, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_WIN, 
                    global::System.Nullable<int> Original_Clear_Condition_PVP_KILL, 
                    global::System.Nullable<int> Original_Clear_Condition_QUEST, 
                    global::System.Nullable<int> Original_Clear_Condition_COLLECT_TITLE, 
                    global::System.Nullable<int> Original_Clear_Condition_USE_ITEM, 
                    global::System.Nullable<bool> Original_AutomaticDescription, 
                    string Original_Description, 
                    System.DateTime Original_Regdate) {
            return this.Update(Original_IndexKey, ID, Clear_Type_Idx, Clear_Type_, NPC_ID, Clear_Condition_Kill_NPC_ID, Clear_Condition_Kill_NPC_Quantity, Clear_Condition_Collection_Item_ID, Name, Clear_Condition_Collection_Item_Quantity, Quest_Item_Drop_Rate, Clear_Condition_Dungeon_Difficulty, Clear_Condition_Dungeon_ID, Clear_Condition_Dungeon_Damage, Clear_Condition_Dungeon_Rank, Clear_Condition_Dungeon_Clear_Time, Clear_Condition_Dungeon_clear_count, Clear_Condition_Talk_NPC_ID, Clear_Condition_PVP_TYPE, Clear_Condition_PVP_PLAY, Clear_Condition_PVP_WIN, Clear_Condition_PVP_KILL, Clear_Condition_QUEST, Clear_Condition_COLLECT_TITLE, Clear_Condition_USE_ITEM, AutomaticDescription, Description, Regdate, Original_IndexKey, Original_ID, Original_Clear_Type_Idx, Original_Clear_Type_, Original_NPC_ID, Original_Clear_Condition_Kill_NPC_ID, Original_Clear_Condition_Kill_NPC_Quantity, Original_Clear_Condition_Collection_Item_ID, Original_Name, Original_Clear_Condition_Collection_Item_Quantity, Original_Quest_Item_Drop_Rate, Original_Clear_Condition_Dungeon_Difficulty, Original_Clear_Condition_Dungeon_ID, Original_Clear_Condition_Dungeon_Damage, Original_Clear_Condition_Dungeon_Rank, Original_Clear_Condition_Dungeon_Clear_Time, Original_Clear_Condition_Dungeon_clear_count, Original_Clear_Condition_Talk_NPC_ID, Original_Clear_Condition_PVP_TYPE, Original_Clear_Condition_PVP_PLAY, Original_Clear_Condition_PVP_WIN, Original_Clear_Condition_PVP_KILL, Original_Clear_Condition_QUEST, Original_Clear_Condition_COLLECT_TITLE, Original_Clear_Condition_USE_ITEM, Original_AutomaticDescription, Original_Description, Original_Regdate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateSubTitleMission_Description(string Description, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Description == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Description));
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateSubTitleMission_Regdate(System.DateTime Regdate, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((System.DateTime)(Regdate));
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SubTitleMission_HistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SubTitleMission_HistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SubTitleMission_History";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Clear_Type_Idx", "Clear_Type_Idx");
            tableMapping.ColumnMappings.Add("Clear_Type_", "Clear_Type_");
            tableMapping.ColumnMappings.Add("NPC ID", "NPC ID");
            tableMapping.ColumnMappings.Add("Clear Condition Kill NPC ID", "Clear Condition Kill NPC ID");
            tableMapping.ColumnMappings.Add("Clear Condition Kill NPC Quantity", "Clear Condition Kill NPC Quantity");
            tableMapping.ColumnMappings.Add("Clear_Condition_Collection_Item_ID", "Clear_Condition_Collection_Item_ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Clear_Condition_Collection_Item_Quantity", "Clear_Condition_Collection_Item_Quantity");
            tableMapping.ColumnMappings.Add("Quest_Item_Drop_Rate", "Quest_Item_Drop_Rate");
            tableMapping.ColumnMappings.Add("Clear_Condition_Dungeon_Difficulty", "Clear_Condition_Dungeon_Difficulty");
            tableMapping.ColumnMappings.Add("Clear_Condition_Dungeon_ID", "Clear_Condition_Dungeon_ID");
            tableMapping.ColumnMappings.Add("Clear_Condition_Dungeon_Damage", "Clear_Condition_Dungeon_Damage");
            tableMapping.ColumnMappings.Add("Clear_Condition_Dungeon_Rank", "Clear_Condition_Dungeon_Rank");
            tableMapping.ColumnMappings.Add("Clear_Condition_Dungeon_Clear_Time", "Clear_Condition_Dungeon_Clear_Time");
            tableMapping.ColumnMappings.Add("Clear_Condition_Dungeon_clear_count", "Clear_Condition_Dungeon_clear_count");
            tableMapping.ColumnMappings.Add("Clear_Condition_Talk_NPC_ID", "Clear_Condition_Talk_NPC_ID");
            tableMapping.ColumnMappings.Add("Clear_Condition_PVP_TYPE", "Clear_Condition_PVP_TYPE");
            tableMapping.ColumnMappings.Add("Clear_Condition_PVP_PLAY", "Clear_Condition_PVP_PLAY");
            tableMapping.ColumnMappings.Add("Clear_Condition_PVP_WIN", "Clear_Condition_PVP_WIN");
            tableMapping.ColumnMappings.Add("Clear_Condition_PVP_KILL", "Clear_Condition_PVP_KILL");
            tableMapping.ColumnMappings.Add("Clear_Condition_QUEST", "Clear_Condition_QUEST");
            tableMapping.ColumnMappings.Add("Clear_Condition_COLLECT_TITLE", "Clear_Condition_COLLECT_TITLE");
            tableMapping.ColumnMappings.Add("Clear_Condition_USE_ITEM", "Clear_Condition_USE_ITEM");
            tableMapping.ColumnMappings.Add("AutomaticDescription", "AutomaticDescription");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserIP", "UserIP");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[SubTitleMission_History] ([IndexKey], [ID], [Clear_Type_Idx], " +
                "[Clear_Type_], [NPC ID], [Clear Condition Kill NPC ID], [Clear Condition Kill NP" +
                "C Quantity], [Clear_Condition_Collection_Item_ID], [Name], [Clear_Condition_Coll" +
                "ection_Item_Quantity], [Quest_Item_Drop_Rate], [Clear_Condition_Dungeon_Difficul" +
                "ty], [Clear_Condition_Dungeon_ID], [Clear_Condition_Dungeon_Damage], [Clear_Cond" +
                "ition_Dungeon_Rank], [Clear_Condition_Dungeon_Clear_Time], [Clear_Condition_Dung" +
                "eon_clear_count], [Clear_Condition_Talk_NPC_ID], [Clear_Condition_PVP_TYPE], [Cl" +
                "ear_Condition_PVP_PLAY], [Clear_Condition_PVP_WIN], [Clear_Condition_PVP_KILL], " +
                "[Clear_Condition_QUEST], [Clear_Condition_COLLECT_TITLE], [Clear_Condition_USE_I" +
                "TEM], [AutomaticDescription], [Description], [UserID], [UserIP], [Regdate]) VALU" +
                "ES (@IndexKey, @ID, @Clear_Type_Idx, @Clear_Type_, @NPC_ID, @Clear_Condition_Kil" +
                "l_NPC_ID, @Clear_Condition_Kill_NPC_Quantity, @Clear_Condition_Collection_Item_I" +
                "D, @Name, @Clear_Condition_Collection_Item_Quantity, @Quest_Item_Drop_Rate, @Cle" +
                "ar_Condition_Dungeon_Difficulty, @Clear_Condition_Dungeon_ID, @Clear_Condition_D" +
                "ungeon_Damage, @Clear_Condition_Dungeon_Rank, @Clear_Condition_Dungeon_Clear_Tim" +
                "e, @Clear_Condition_Dungeon_clear_count, @Clear_Condition_Talk_NPC_ID, @Clear_Co" +
                "ndition_PVP_TYPE, @Clear_Condition_PVP_PLAY, @Clear_Condition_PVP_WIN, @Clear_Co" +
                "ndition_PVP_KILL, @Clear_Condition_QUEST, @Clear_Condition_COLLECT_TITLE, @Clear" +
                "_Condition_USE_ITEM, @AutomaticDescription, @Description, @UserID, @UserIP, @Reg" +
                "date)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Type_Idx", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Type_Idx", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Type_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Type_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NPC_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NPC ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Kill_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Kill_NPC_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear Condition Kill NPC Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Collection_Item_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Collection_Item_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Collection_Item_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Collection_Item_Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quest_Item_Drop_Rate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quest_Item_Drop_Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Difficulty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Difficulty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Damage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Damage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Rank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Rank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_Clear_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_Clear_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Dungeon_clear_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Dungeon_clear_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_Talk_NPC_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_Talk_NPC_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_PLAY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_PLAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_WIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_WIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_PVP_KILL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_PVP_KILL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_QUEST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_QUEST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_COLLECT_TITLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_COLLECT_TITLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Condition_USE_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Condition_USE_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutomaticDescription", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomaticDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserIP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT IndexKey, ID, Clear_Type_Idx, Clear_Type_, [NPC ID], [Clear Condition Kill NPC ID], [Clear Condition Kill NPC Quantity], Clear_Condition_Collection_Item_ID, Name, Clear_Condition_Collection_Item_Quantity, Quest_Item_Drop_Rate, Clear_Condition_Dungeon_Difficulty, Clear_Condition_Dungeon_ID, Clear_Condition_Dungeon_Damage, Clear_Condition_Dungeon_Rank, Clear_Condition_Dungeon_Clear_Time, Clear_Condition_Dungeon_clear_count, Clear_Condition_Talk_NPC_ID, Clear_Condition_PVP_TYPE, Clear_Condition_PVP_PLAY, Clear_Condition_PVP_WIN, Clear_Condition_PVP_KILL, Clear_Condition_QUEST, Clear_Condition_COLLECT_TITLE, Clear_Condition_USE_ITEM, AutomaticDescription, Description, UserID, UserIP, Regdate FROM dbo.SubTitleMission_History";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.SubTitleMission_HistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.SubTitleMission_HistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.SubTitleMission_HistoryDataTable dataTable = new ScriptData_JPDataSet.SubTitleMission_HistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.SubTitleMission_HistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SubTitleMission_History");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IndexKey, 
                    int ID, 
                    global::System.Nullable<int> Clear_Type_Idx, 
                    string Clear_Type_, 
                    global::System.Nullable<int> NPC_ID, 
                    string Clear_Condition_Kill_NPC_ID, 
                    global::System.Nullable<int> Clear_Condition_Kill_NPC_Quantity, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_ID, 
                    string Name, 
                    global::System.Nullable<int> Clear_Condition_Collection_Item_Quantity, 
                    string Quest_Item_Drop_Rate, 
                    string Clear_Condition_Dungeon_Difficulty, 
                    string Clear_Condition_Dungeon_ID, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Damage, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Rank, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_Clear_Time, 
                    global::System.Nullable<int> Clear_Condition_Dungeon_clear_count, 
                    string Clear_Condition_Talk_NPC_ID, 
                    string Clear_Condition_PVP_TYPE, 
                    global::System.Nullable<int> Clear_Condition_PVP_PLAY, 
                    global::System.Nullable<int> Clear_Condition_PVP_WIN, 
                    global::System.Nullable<int> Clear_Condition_PVP_KILL, 
                    global::System.Nullable<int> Clear_Condition_QUEST, 
                    global::System.Nullable<int> Clear_Condition_COLLECT_TITLE, 
                    global::System.Nullable<int> Clear_Condition_USE_ITEM, 
                    global::System.Nullable<bool> AutomaticDescription, 
                    string Description, 
                    string UserID, 
                    string UserIP, 
                    System.DateTime Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID));
            if ((Clear_Type_Idx.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Clear_Type_Idx.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Clear_Type_ == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Clear_Type_));
            }
            if ((NPC_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(NPC_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Kill_NPC_ID == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Clear_Condition_Kill_NPC_ID));
            }
            if ((Clear_Condition_Kill_NPC_Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Clear_Condition_Kill_NPC_Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Collection_Item_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Clear_Condition_Collection_Item_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Name));
            }
            if ((Clear_Condition_Collection_Item_Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(Clear_Condition_Collection_Item_Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Quest_Item_Drop_Rate == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Quest_Item_Drop_Rate));
            }
            if ((Clear_Condition_Dungeon_Difficulty == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Clear_Condition_Dungeon_Difficulty));
            }
            if ((Clear_Condition_Dungeon_ID == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Clear_Condition_Dungeon_ID));
            }
            if ((Clear_Condition_Dungeon_Damage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(Clear_Condition_Dungeon_Damage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Rank.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(Clear_Condition_Dungeon_Rank.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_Clear_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Clear_Condition_Dungeon_Clear_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Dungeon_clear_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(Clear_Condition_Dungeon_clear_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_Talk_NPC_ID == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Clear_Condition_Talk_NPC_ID));
            }
            if ((Clear_Condition_PVP_TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Clear_Condition_PVP_TYPE));
            }
            if ((Clear_Condition_PVP_PLAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(Clear_Condition_PVP_PLAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_PVP_WIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(Clear_Condition_PVP_WIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_PVP_KILL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(Clear_Condition_PVP_KILL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_QUEST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(Clear_Condition_QUEST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_COLLECT_TITLE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(Clear_Condition_COLLECT_TITLE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Clear_Condition_USE_ITEM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(Clear_Condition_USE_ITEM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((AutomaticDescription.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(AutomaticDescription.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Description));
            }
            if ((UserID == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(UserID));
            }
            if ((UserIP == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(UserIP));
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((System.DateTime)(Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StringTableTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StringTableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StringTable";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ENum", "ENum");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("String", "String");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[StringTable] WHERE (([ID] = @Original_ID) AND ((@IsNull_ENum = 1 AND [ENum] IS NULL) OR ([ENum] = @Original_ENum)) AND ((@IsNull_Type = 1 AND [Type] IS NULL) OR ([Type] = @Original_Type)) AND ((@IsNull_String = 1 AND [String] IS NULL) OR ([String] = @Original_String)) AND ((@IsNull_Regdate = 1 AND [Regdate] IS NULL) OR ([Regdate] = @Original_Regdate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ENum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ENum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_String", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Regdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[StringTable] ([ID], [ENum], [Type], [String], [Regdate]) VALUE" +
                "S (@ID, @ENum, @Type, @String, @Regdate);\r\nSELECT ID, ENum, Type, String, Regdat" +
                "e FROM StringTable WHERE (ID = @ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[StringTable] SET [ID] = @ID, [ENum] = @ENum, [Type] = @Type, [String] = @String, [Regdate] = @Regdate WHERE (([ID] = @Original_ID) AND ((@IsNull_ENum = 1 AND [ENum] IS NULL) OR ([ENum] = @Original_ENum)) AND ((@IsNull_Type = 1 AND [Type] IS NULL) OR ([Type] = @Original_Type)) AND ((@IsNull_String = 1 AND [String] IS NULL) OR ([String] = @Original_String)) AND ((@IsNull_Regdate = 1 AND [Regdate] IS NULL) OR ([Regdate] = @Original_Regdate)));
SELECT ID, ENum, Type, String, Regdate FROM StringTable WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ENum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ENum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_String", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Regdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, ENum, Type, String, Regdate FROM dbo.StringTable";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE  StringTable\r\nSET        String = @String\r\nWHERE   (ID = @ID); \r\n";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@String", global::System.Data.SqlDbType.NVarChar, 1000, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE  StringTable\r\nSET         Regdate= @Regdate\r\nWHERE   (ID = @ID); ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.StringTableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.StringTableDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.StringTableDataTable dataTable = new ScriptData_JPDataSet.StringTableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.StringTableDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "StringTable");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(short Original_ID, string Original_ENum, string Original_Type, string Original_String, global::System.Nullable<global::System.DateTime> Original_Regdate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_ID));
            if ((Original_ENum == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ENum));
            }
            if ((Original_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Type));
            }
            if ((Original_String == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_String));
            }
            if ((Original_Regdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_Regdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short ID, string ENum, string Type, string String, global::System.Nullable<global::System.DateTime> Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(ID));
            if ((ENum == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ENum));
            }
            if ((Type == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Type));
            }
            if ((String == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(String));
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short ID, string ENum, string Type, string String, global::System.Nullable<global::System.DateTime> Regdate, short Original_ID, string Original_ENum, string Original_Type, string Original_String, global::System.Nullable<global::System.DateTime> Original_Regdate) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(ID));
            if ((ENum == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ENum));
            }
            if ((Type == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Type));
            }
            if ((String == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(String));
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(Original_ID));
            if ((Original_ENum == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_ENum));
            }
            if ((Original_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Type));
            }
            if ((Original_String == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_String));
            }
            if ((Original_Regdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_Regdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ENum, string Type, string String, global::System.Nullable<global::System.DateTime> Regdate, short Original_ID, string Original_ENum, string Original_Type, string Original_String, global::System.Nullable<global::System.DateTime> Original_Regdate) {
            return this.Update(Original_ID, ENum, Type, String, Regdate, Original_ID, Original_ENum, Original_Type, Original_String, Original_Regdate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateStringTable(string String, short ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((String == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(String));
            }
            command.Parameters[1].Value = ((short)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateStringTable_Regdate(global::System.Nullable<global::System.DateTime> Regdate, short ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Regdate.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((short)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StringTable_HistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StringTable_HistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StringTable_History";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ENum", "ENum");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("String", "String");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserIP", "UserIP");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[StringTable_History] ([ID], [ENum], [Type], [String], [UserID]" +
                ", [UserIP], [Regdate]) VALUES (@ID, @ENum, @Type, @String, @UserID, @UserIP, @Re" +
                "gdate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserIP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, ENum, Type, String, UserID, UserIP, Regdate FROM dbo.StringTable_Histo" +
                "ry";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.StringTable_HistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.StringTable_HistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.StringTable_HistoryDataTable dataTable = new ScriptData_JPDataSet.StringTable_HistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.StringTable_HistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "StringTable_History");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short ID, string ENum, string Type, string String, string UserID, string UserIP, System.DateTime Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(ID));
            if ((ENum == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ENum));
            }
            if ((Type == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Type));
            }
            if ((String == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(String));
            }
            if ((UserID == null)) {
                throw new global::System.ArgumentNullException("UserID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(UserID));
            }
            if ((UserIP == null)) {
                throw new global::System.ArgumentNullException("UserIP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(UserIP));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Regdate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NetErrorTableTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NetErrorTableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NetErrorTable";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Enum", "Enum");
            tableMapping.ColumnMappings.Add("String", "String");
            tableMapping.ColumnMappings.Add("PreProcessor", "PreProcessor");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[NetErrorTable] WHERE (([ID] = @Original_ID) AND ((@IsNull_Enum = 1 AND [Enum] IS NULL) OR ([Enum] = @Original_Enum)) AND ((@IsNull_String = 1 AND [String] IS NULL) OR ([String] = @Original_String)) AND ((@IsNull_PreProcessor = 1 AND [PreProcessor] IS NULL) OR ([PreProcessor] = @Original_PreProcessor)) AND ((@IsNull_Regdate = 1 AND [Regdate] IS NULL) OR ([Regdate] = @Original_Regdate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Enum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Enum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_String", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PreProcessor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreProcessor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PreProcessor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreProcessor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Regdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[NetErrorTable] ([Enum], [String], [PreProcessor], [Regdate]) V" +
                "ALUES (@Enum, @String, @PreProcessor, @Regdate);\r\nSELECT ID, Enum, String, PrePr" +
                "ocessor, Regdate FROM NetErrorTable WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Enum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PreProcessor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreProcessor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[NetErrorTable] SET [Enum] = @Enum, [String] = @String, [PreProcessor] = @PreProcessor, [Regdate] = @Regdate WHERE (([ID] = @Original_ID) AND ((@IsNull_Enum = 1 AND [Enum] IS NULL) OR ([Enum] = @Original_Enum)) AND ((@IsNull_String = 1 AND [String] IS NULL) OR ([String] = @Original_String)) AND ((@IsNull_PreProcessor = 1 AND [PreProcessor] IS NULL) OR ([PreProcessor] = @Original_PreProcessor)) AND ((@IsNull_Regdate = 1 AND [Regdate] IS NULL) OR ([Regdate] = @Original_Regdate)));
SELECT ID, Enum, String, PreProcessor, Regdate FROM NetErrorTable WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Enum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PreProcessor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreProcessor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Enum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Enum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_String", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PreProcessor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreProcessor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PreProcessor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreProcessor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Regdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Enum, String, PreProcessor, Regdate FROM dbo.NetErrorTable";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE  NetErrorTable\r\nSET        String = @String\r\nWHERE   (ID = @ID); ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@String", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE  NetErrorTable\r\nSET         Regdate= @Regdate\r\nWHERE   (ID = @ID); ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.NetErrorTableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.NetErrorTableDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.NetErrorTableDataTable dataTable = new ScriptData_JPDataSet.NetErrorTableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.NetErrorTableDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "NetErrorTable");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Enum, string Original_String, string Original_PreProcessor, global::System.Nullable<global::System.DateTime> Original_Regdate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Enum == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Enum));
            }
            if ((Original_String == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_String));
            }
            if ((Original_PreProcessor == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PreProcessor));
            }
            if ((Original_Regdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_Regdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Enum, string String, string PreProcessor, global::System.Nullable<global::System.DateTime> Regdate) {
            if ((Enum == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Enum));
            }
            if ((String == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(String));
            }
            if ((PreProcessor == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PreProcessor));
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Enum, string String, string PreProcessor, global::System.Nullable<global::System.DateTime> Regdate, int Original_ID, string Original_Enum, string Original_String, string Original_PreProcessor, global::System.Nullable<global::System.DateTime> Original_Regdate, int ID) {
            if ((Enum == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Enum));
            }
            if ((String == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(String));
            }
            if ((PreProcessor == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PreProcessor));
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID));
            if ((Original_Enum == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Enum));
            }
            if ((Original_String == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_String));
            }
            if ((Original_PreProcessor == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_PreProcessor));
            }
            if ((Original_Regdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_Regdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Enum, string String, string PreProcessor, global::System.Nullable<global::System.DateTime> Regdate, int Original_ID, string Original_Enum, string Original_String, string Original_PreProcessor, global::System.Nullable<global::System.DateTime> Original_Regdate) {
            return this.Update(Enum, String, PreProcessor, Regdate, Original_ID, Original_Enum, Original_String, Original_PreProcessor, Original_Regdate, Original_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateNetErrorTable(string String, int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((String == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(String));
            }
            command.Parameters[1].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateNetErrorTable_Regdate(global::System.Nullable<global::System.DateTime> Regdate, int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Regdate.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NetErrorTable_HistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NetErrorTable_HistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NetErrorTable_History";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Enum", "Enum");
            tableMapping.ColumnMappings.Add("String", "String");
            tableMapping.ColumnMappings.Add("PreProcessor", "PreProcessor");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserIP", "UserIP");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[NetErrorTable_History] ([ID], [Enum], [String], [PreProcessor]" +
                ", [UserID], [UserIP], [Regdate]) VALUES (@ID, @Enum, @String, @PreProcessor, @Us" +
                "erID, @UserIP, @Regdate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Enum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PreProcessor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreProcessor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserIP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Enum, String, PreProcessor, UserID, UserIP, Regdate FROM dbo.NetErrorT" +
                "able_History";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.NetErrorTable_HistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.NetErrorTable_HistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.NetErrorTable_HistoryDataTable dataTable = new ScriptData_JPDataSet.NetErrorTable_HistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.NetErrorTable_HistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "NetErrorTable_History");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID, string Enum, string String, string PreProcessor, string UserID, string UserIP, global::System.Nullable<global::System.DateTime> Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
            if ((Enum == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Enum));
            }
            if ((String == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(String));
            }
            if ((PreProcessor == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PreProcessor));
            }
            if ((UserID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(UserID));
            }
            if ((UserIP == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(UserIP));
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TextureStringManagerTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TextureStringManagerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TextureStringManager";
            tableMapping.ColumnMappings.Add("TextureIDX", "TextureIDX");
            tableMapping.ColumnMappings.Add("FilePath", "FilePath");
            tableMapping.ColumnMappings.Add("String", "String");
            tableMapping.ColumnMappings.Add("IsChange", "IsChange");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TextureStringManager] WHERE (([TextureIDX] = @Original_TextureIDX) AND ((@IsNull_FilePath = 1 AND [FilePath] IS NULL) OR ([FilePath] = @Original_FilePath)) AND ((@IsNull_String = 1 AND [String] IS NULL) OR ([String] = @Original_String)) AND ((@IsNull_IsChange = 1 AND [IsChange] IS NULL) OR ([IsChange] = @Original_IsChange)) AND ((@IsNull_Regdate = 1 AND [Regdate] IS NULL) OR ([Regdate] = @Original_Regdate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TextureIDX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TextureIDX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FilePath", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilePath", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FilePath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilePath", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_String", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsChange", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsChange", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsChange", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsChange", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Regdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TextureStringManager] ([FilePath], [String], [IsChange], [Regdate]) VALUES (@FilePath, @String, @IsChange, @Regdate);
SELECT TextureIDX, FilePath, String, IsChange, Regdate FROM TextureStringManager WHERE (TextureIDX = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FilePath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilePath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsChange", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsChange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TextureStringManager] SET [FilePath] = @FilePath, [String] = @String, [IsChange] = @IsChange, [Regdate] = @Regdate WHERE (([TextureIDX] = @Original_TextureIDX) AND ((@IsNull_FilePath = 1 AND [FilePath] IS NULL) OR ([FilePath] = @Original_FilePath)) AND ((@IsNull_String = 1 AND [String] IS NULL) OR ([String] = @Original_String)) AND ((@IsNull_IsChange = 1 AND [IsChange] IS NULL) OR ([IsChange] = @Original_IsChange)) AND ((@IsNull_Regdate = 1 AND [Regdate] IS NULL) OR ([Regdate] = @Original_Regdate)));
SELECT TextureIDX, FilePath, String, IsChange, Regdate FROM TextureStringManager WHERE (TextureIDX = @TextureIDX)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FilePath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilePath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsChange", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsChange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TextureIDX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TextureIDX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FilePath", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilePath", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FilePath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilePath", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_String", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsChange", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsChange", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsChange", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsChange", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Regdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TextureIDX", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TextureIDX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TextureIDX, FilePath, String, IsChange, Regdate FROM dbo.TextureStringMana" +
                "ger";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE  TextureStringManager\r\nSET         String = @String, IsChange = 0\r\nWHERE  " +
                " (TextureIDX = @TextureIDX);  ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@String", global::System.Data.SqlDbType.NVarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TextureIDX", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TextureIDX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE  TextureStringManager\r\nSET         Regdate= @Regdate\r\nWHERE   (TextureIDX " +
                "= @TextureIDX); ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TextureIDX", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TextureIDX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.TextureStringManagerDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.TextureStringManagerDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.TextureStringManagerDataTable dataTable = new ScriptData_JPDataSet.TextureStringManagerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.TextureStringManagerDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TextureStringManager");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_TextureIDX, string Original_FilePath, string Original_String, global::System.Nullable<bool> Original_IsChange, global::System.Nullable<global::System.DateTime> Original_Regdate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_TextureIDX));
            if ((Original_FilePath == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_FilePath));
            }
            if ((Original_String == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_String));
            }
            if ((Original_IsChange.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_IsChange.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Regdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_Regdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string FilePath, string String, global::System.Nullable<bool> IsChange, global::System.Nullable<global::System.DateTime> Regdate) {
            if ((FilePath == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FilePath));
            }
            if ((String == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(String));
            }
            if ((IsChange.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(IsChange.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string FilePath, string String, global::System.Nullable<bool> IsChange, global::System.Nullable<global::System.DateTime> Regdate, int Original_TextureIDX, string Original_FilePath, string Original_String, global::System.Nullable<bool> Original_IsChange, global::System.Nullable<global::System.DateTime> Original_Regdate, int TextureIDX) {
            if ((FilePath == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FilePath));
            }
            if ((String == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(String));
            }
            if ((IsChange.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(IsChange.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_TextureIDX));
            if ((Original_FilePath == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_FilePath));
            }
            if ((Original_String == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_String));
            }
            if ((Original_IsChange.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_IsChange.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Regdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_Regdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(TextureIDX));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string FilePath, string String, global::System.Nullable<bool> IsChange, global::System.Nullable<global::System.DateTime> Regdate, int Original_TextureIDX, string Original_FilePath, string Original_String, global::System.Nullable<bool> Original_IsChange, global::System.Nullable<global::System.DateTime> Original_Regdate) {
            return this.Update(FilePath, String, IsChange, Regdate, Original_TextureIDX, Original_FilePath, Original_String, Original_IsChange, Original_Regdate, Original_TextureIDX);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateTextureStringManager(string String, int TextureIDX) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((String == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(String));
            }
            command.Parameters[1].Value = ((int)(TextureIDX));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateTextureStringManager_Regdate(global::System.Nullable<global::System.DateTime> Regdate, int TextureIDX) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Regdate.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(TextureIDX));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TextureStringManager_HistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TextureStringManager_HistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TextureStringManager_History";
            tableMapping.ColumnMappings.Add("TextureIDX", "TextureIDX");
            tableMapping.ColumnMappings.Add("FilePath", "FilePath");
            tableMapping.ColumnMappings.Add("String", "String");
            tableMapping.ColumnMappings.Add("IsChange", "IsChange");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserIP", "UserIP");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TextureStringManager_History] ([TextureIDX], [FilePath], [Stri" +
                "ng], [IsChange], [UserID], [UserIP], [Regdate]) VALUES (@TextureIDX, @FilePath, " +
                "@String, @IsChange, @UserID, @UserIP, @Regdate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TextureIDX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TextureIDX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FilePath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilePath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@String", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "String", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsChange", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsChange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserIP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TextureIDX, FilePath, String, IsChange, UserID, UserIP, Regdate FROM dbo.T" +
                "extureStringManager_History";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.TextureStringManager_HistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.TextureStringManager_HistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.TextureStringManager_HistoryDataTable dataTable = new ScriptData_JPDataSet.TextureStringManager_HistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.TextureStringManager_HistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TextureStringManager_History");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int TextureIDX, string FilePath, string String, global::System.Nullable<bool> IsChange, string UserID, string UserIP, global::System.Nullable<global::System.DateTime> Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(TextureIDX));
            if ((FilePath == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FilePath));
            }
            if ((String == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(String));
            }
            if ((IsChange.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(IsChange.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((UserID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(UserID));
            }
            if ((UserIP == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(UserIP));
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SkillEnumTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SkillEnumTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SkillEnum";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("ID Num", "ID Num");
            tableMapping.ColumnMappings.Add("ID Name", "ID Name");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SkillEnum] WHERE (([IndexKey] = @Original_IndexKey) AND ((@IsNull_ID_Num = 1 AND [ID Num] IS NULL) OR ([ID Num] = @Original_ID_Num)) AND ((@IsNull_ID_Name = 1 AND [ID Name] IS NULL) OR ([ID Name] = @Original_ID_Name)) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) AND ((@IsNull_Regdate = 1 AND [Regdate] IS NULL) OR ([Regdate] = @Original_Regdate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID Num", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID Num", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Regdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SkillEnum] ([IndexKey], [ID Num], [ID Name], [Description], [Regdate]) VALUES (@IndexKey, @ID_Num, @ID_Name, @Description, @Regdate);
SELECT IndexKey, [ID Num], [ID Name], Description, Regdate FROM SkillEnum WHERE (IndexKey = @IndexKey)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID Num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SkillEnum] SET [IndexKey] = @IndexKey, [ID Num] = @ID_Num, [ID Name] = @ID_Name, [Description] = @Description, [Regdate] = @Regdate WHERE (([IndexKey] = @Original_IndexKey) AND ((@IsNull_ID_Num = 1 AND [ID Num] IS NULL) OR ([ID Num] = @Original_ID_Num)) AND ((@IsNull_ID_Name = 1 AND [ID Name] IS NULL) OR ([ID Name] = @Original_ID_Name)) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) AND ((@IsNull_Regdate = 1 AND [Regdate] IS NULL) OR ([Regdate] = @Original_Regdate)));
SELECT IndexKey, [ID Num], [ID Name], Description, Regdate FROM SkillEnum WHERE (IndexKey = @IndexKey)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID Num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID Num", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID Num", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Regdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT IndexKey, [ID Num], [ID Name], Description, Regdate FROM dbo.SkillEnum";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE  SkillEnum\r\nSET        Description= @Description\r\nWHERE   (IndexKey = @Ind" +
                "exKey); ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 150, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE  SkillEnum\r\nSET         Regdate= @Regdate\r\nWHERE   (IndexKey = @Index); ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.SkillEnumDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.SkillEnumDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.SkillEnumDataTable dataTable = new ScriptData_JPDataSet.SkillEnumDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.SkillEnumDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SkillEnum");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_IndexKey, global::System.Nullable<int> Original_ID_Num, string Original_ID_Name, string Original_Description, global::System.Nullable<global::System.DateTime> Original_Regdate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IndexKey));
            if ((Original_ID_Num.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Num.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ID_Name));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Description));
            }
            if ((Original_Regdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_Regdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int IndexKey, global::System.Nullable<int> ID_Num, string ID_Name, string Description, global::System.Nullable<global::System.DateTime> Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            if ((ID_Num.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Num.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ID_Name == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ID_Name));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Description));
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int IndexKey, global::System.Nullable<int> ID_Num, string ID_Name, string Description, global::System.Nullable<global::System.DateTime> Regdate, int Original_IndexKey, global::System.Nullable<int> Original_ID_Num, string Original_ID_Name, string Original_Description, global::System.Nullable<global::System.DateTime> Original_Regdate) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IndexKey));
            if ((ID_Num.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Num.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ID_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ID_Name));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Description));
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_IndexKey));
            if ((Original_ID_Num.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_Num.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_ID_Name));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Description));
            }
            if ((Original_Regdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_Regdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> ID_Num, string ID_Name, string Description, global::System.Nullable<global::System.DateTime> Regdate, int Original_IndexKey, global::System.Nullable<int> Original_ID_Num, string Original_ID_Name, string Original_Description, global::System.Nullable<global::System.DateTime> Original_Regdate) {
            return this.Update(Original_IndexKey, ID_Num, ID_Name, Description, Regdate, Original_IndexKey, Original_ID_Num, Original_ID_Name, Original_Description, Original_Regdate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateSkillEnum_Description(string Description, int IndexKey) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Description == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Description));
            }
            command.Parameters[1].Value = ((int)(IndexKey));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateSkillEnum_Regdate(global::System.Nullable<global::System.DateTime> Regdate, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Regdate.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SkillTableTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SkillTableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SkillTable";
            tableMapping.ColumnMappings.Add("IndexKey", "IndexKey");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ID_ENUM", "ID_ENUM");
            tableMapping.ColumnMappings.Add("TYPE", "TYPE");
            tableMapping.ColumnMappings.Add("TYPE_ENUM", "TYPE_ENUM");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("DESC", "DESC");
            tableMapping.ColumnMappings.Add("SKILL_LEVEL", "SKILL_LEVEL");
            tableMapping.ColumnMappings.Add("POWER_RATE", "POWER_RATE");
            tableMapping.ColumnMappings.Add("COOL_TIME", "COOL_TIME");
            tableMapping.ColumnMappings.Add("MP_CONSUMPTION", "MP_CONSUMPTION");
            tableMapping.ColumnMappings.Add("STAT_BASE_HP", "STAT_BASE_HP");
            tableMapping.ColumnMappings.Add("STAT_ATK_PHYSIC", "STAT_ATK_PHYSIC");
            tableMapping.ColumnMappings.Add("STAT_ATK_MAGIC", "STAT_ATK_MAGIC");
            tableMapping.ColumnMappings.Add("STAT_DEF_PHYSIC", "STAT_DEF_PHYSIC");
            tableMapping.ColumnMappings.Add("STAT_DEF_MAGIC", "STAT_DEF_MAGIC");
            tableMapping.ColumnMappings.Add("ICON_TEXTURE_NAME", "ICON_TEXTURE_NAME");
            tableMapping.ColumnMappings.Add("ICON_TEXTURE_PIECE_NAME", "ICON_TEXTURE_PIECE_NAME");
            tableMapping.ColumnMappings.Add("BORN_SEALED", "BORN_SEALED");
            tableMapping.ColumnMappings.Add("SHOW_LEVEL", "SHOW_LEVEL");
            tableMapping.ColumnMappings.Add("ACTIVE_SKILL_USE_CONDITION", "ACTIVE_SKILL_USE_CONDITION");
            tableMapping.ColumnMappings.Add("ACTIVE_SKILL_USE_CONDITION_ENUM", "ACTIVE_SKILL_USE_CONDITION_ENUM");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("IN_HOUSE_TEST_ONLY", "IN_HOUSE_TEST_ONLY");
            tableMapping.ColumnMappings.Add("MISC_0", "MISC_0");
            tableMapping.ColumnMappings.Add("MISC_1", "MISC_1");
            tableMapping.ColumnMappings.Add("MISC_2", "MISC_2");
            tableMapping.ColumnMappings.Add("MISC_3", "MISC_3");
            tableMapping.ColumnMappings.Add("MISC_4", "MISC_4");
            tableMapping.ColumnMappings.Add("MISC_5", "MISC_5");
            tableMapping.ColumnMappings.Add("MISC_6", "MISC_6");
            tableMapping.ColumnMappings.Add("MISC_7", "MISC_7");
            tableMapping.ColumnMappings.Add("Regdate", "Regdate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SkillTable] WHERE (([IndexKey] = @Original_IndexKey) AND ((@Is" +
                "Null_ID = 1 AND [ID] IS NULL) OR ([ID] = @Original_ID)) AND ((@IsNull_ID_ENUM = " +
                "1 AND [ID_ENUM] IS NULL) OR ([ID_ENUM] = @Original_ID_ENUM)) AND ((@IsNull_TYPE " +
                "= 1 AND [TYPE] IS NULL) OR ([TYPE] = @Original_TYPE)) AND ((@IsNull_TYPE_ENUM = " +
                "1 AND [TYPE_ENUM] IS NULL) OR ([TYPE_ENUM] = @Original_TYPE_ENUM)) AND ((@IsNull" +
                "_NAME = 1 AND [NAME] IS NULL) OR ([NAME] = @Original_NAME)) AND ((@IsNull_DESC =" +
                " 1 AND [DESC] IS NULL) OR ([DESC] = @Original_DESC)) AND ((@IsNull_SKILL_LEVEL =" +
                " 1 AND [SKILL_LEVEL] IS NULL) OR ([SKILL_LEVEL] = @Original_SKILL_LEVEL)) AND ((" +
                "@IsNull_POWER_RATE = 1 AND [POWER_RATE] IS NULL) OR ([POWER_RATE] = @Original_PO" +
                "WER_RATE)) AND ((@IsNull_COOL_TIME = 1 AND [COOL_TIME] IS NULL) OR ([COOL_TIME] " +
                "= @Original_COOL_TIME)) AND ((@IsNull_MP_CONSUMPTION = 1 AND [MP_CONSUMPTION] IS" +
                " NULL) OR ([MP_CONSUMPTION] = @Original_MP_CONSUMPTION)) AND ((@IsNull_STAT_BASE" +
                "_HP = 1 AND [STAT_BASE_HP] IS NULL) OR ([STAT_BASE_HP] = @Original_STAT_BASE_HP)" +
                ") AND ((@IsNull_STAT_ATK_PHYSIC = 1 AND [STAT_ATK_PHYSIC] IS NULL) OR ([STAT_ATK" +
                "_PHYSIC] = @Original_STAT_ATK_PHYSIC)) AND ((@IsNull_STAT_ATK_MAGIC = 1 AND [STA" +
                "T_ATK_MAGIC] IS NULL) OR ([STAT_ATK_MAGIC] = @Original_STAT_ATK_MAGIC)) AND ((@I" +
                "sNull_STAT_DEF_PHYSIC = 1 AND [STAT_DEF_PHYSIC] IS NULL) OR ([STAT_DEF_PHYSIC] =" +
                " @Original_STAT_DEF_PHYSIC)) AND ((@IsNull_STAT_DEF_MAGIC = 1 AND [STAT_DEF_MAGI" +
                "C] IS NULL) OR ([STAT_DEF_MAGIC] = @Original_STAT_DEF_MAGIC)) AND ((@IsNull_ICON" +
                "_TEXTURE_NAME = 1 AND [ICON_TEXTURE_NAME] IS NULL) OR ([ICON_TEXTURE_NAME] = @Or" +
                "iginal_ICON_TEXTURE_NAME)) AND ((@IsNull_ICON_TEXTURE_PIECE_NAME = 1 AND [ICON_T" +
                "EXTURE_PIECE_NAME] IS NULL) OR ([ICON_TEXTURE_PIECE_NAME] = @Original_ICON_TEXTU" +
                "RE_PIECE_NAME)) AND ((@IsNull_BORN_SEALED = 1 AND [BORN_SEALED] IS NULL) OR ([BO" +
                "RN_SEALED] = @Original_BORN_SEALED)) AND ((@IsNull_SHOW_LEVEL = 1 AND [SHOW_LEVE" +
                "L] IS NULL) OR ([SHOW_LEVEL] = @Original_SHOW_LEVEL)) AND ((@IsNull_ACTIVE_SKILL" +
                "_USE_CONDITION = 1 AND [ACTIVE_SKILL_USE_CONDITION] IS NULL) OR ([ACTIVE_SKILL_U" +
                "SE_CONDITION] = @Original_ACTIVE_SKILL_USE_CONDITION)) AND ((@IsNull_ACTIVE_SKIL" +
                "L_USE_CONDITION_ENUM = 1 AND [ACTIVE_SKILL_USE_CONDITION_ENUM] IS NULL) OR ([ACT" +
                "IVE_SKILL_USE_CONDITION_ENUM] = @Original_ACTIVE_SKILL_USE_CONDITION_ENUM)) AND " +
                "((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Origin" +
                "al_Description)) AND ((@IsNull_IN_HOUSE_TEST_ONLY = 1 AND [IN_HOUSE_TEST_ONLY] I" +
                "S NULL) OR ([IN_HOUSE_TEST_ONLY] = @Original_IN_HOUSE_TEST_ONLY)) AND ((@IsNull_" +
                "MISC_0 = 1 AND [MISC_0] IS NULL) OR ([MISC_0] = @Original_MISC_0)) AND ((@IsNull" +
                "_MISC_1 = 1 AND [MISC_1] IS NULL) OR ([MISC_1] = @Original_MISC_1)) AND ((@IsNul" +
                "l_MISC_2 = 1 AND [MISC_2] IS NULL) OR ([MISC_2] = @Original_MISC_2)) AND ((@IsNu" +
                "ll_MISC_3 = 1 AND [MISC_3] IS NULL) OR ([MISC_3] = @Original_MISC_3)) AND ((@IsN" +
                "ull_MISC_4 = 1 AND [MISC_4] IS NULL) OR ([MISC_4] = @Original_MISC_4)) AND ((@Is" +
                "Null_MISC_5 = 1 AND [MISC_5] IS NULL) OR ([MISC_5] = @Original_MISC_5)) AND ((@I" +
                "sNull_MISC_6 = 1 AND [MISC_6] IS NULL) OR ([MISC_6] = @Original_MISC_6)) AND ((@" +
                "IsNull_MISC_7 = 1 AND [MISC_7] IS NULL) OR ([MISC_7] = @Original_MISC_7)) AND ((" +
                "@IsNull_Regdate = 1 AND [Regdate] IS NULL) OR ([Regdate] = @Original_Regdate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_ENUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ENUM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ENUM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ENUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TYPE_ENUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_ENUM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE_ENUM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_ENUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DESC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SKILL_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SKILL_LEVEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SKILL_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SKILL_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POWER_RATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POWER_RATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POWER_RATE", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POWER_RATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COOL_TIME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOL_TIME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COOL_TIME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOL_TIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_CONSUMPTION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CONSUMPTION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CONSUMPTION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CONSUMPTION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STAT_BASE_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_BASE_HP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STAT_BASE_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_BASE_HP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STAT_ATK_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_ATK_PHYSIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STAT_ATK_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_ATK_PHYSIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STAT_ATK_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_ATK_MAGIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STAT_ATK_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_ATK_MAGIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STAT_DEF_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_DEF_PHYSIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STAT_DEF_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_DEF_PHYSIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STAT_DEF_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_DEF_MAGIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STAT_DEF_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_DEF_MAGIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICON_TEXTURE_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICON_TEXTURE_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICON_TEXTURE_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICON_TEXTURE_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICON_TEXTURE_PIECE_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICON_TEXTURE_PIECE_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICON_TEXTURE_PIECE_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICON_TEXTURE_PIECE_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BORN_SEALED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BORN_SEALED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BORN_SEALED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BORN_SEALED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SHOW_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHOW_LEVEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SHOW_LEVEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHOW_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACTIVE_SKILL_USE_CONDITION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_SKILL_USE_CONDITION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACTIVE_SKILL_USE_CONDITION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_SKILL_USE_CONDITION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACTIVE_SKILL_USE_CONDITION_ENUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_SKILL_USE_CONDITION_ENUM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACTIVE_SKILL_USE_CONDITION_ENUM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_SKILL_USE_CONDITION_ENUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IN_HOUSE_TEST_ONLY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_HOUSE_TEST_ONLY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IN_HOUSE_TEST_ONLY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_HOUSE_TEST_ONLY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_0", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_0", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_0", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_0", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_3", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Regdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SkillTable] ([IndexKey], [ID], [ID_ENUM], [TYPE], [TYPE_ENUM], [NAME], [DESC], [SKILL_LEVEL], [POWER_RATE], [COOL_TIME], [MP_CONSUMPTION], [STAT_BASE_HP], [STAT_ATK_PHYSIC], [STAT_ATK_MAGIC], [STAT_DEF_PHYSIC], [STAT_DEF_MAGIC], [ICON_TEXTURE_NAME], [ICON_TEXTURE_PIECE_NAME], [BORN_SEALED], [SHOW_LEVEL], [ACTIVE_SKILL_USE_CONDITION], [ACTIVE_SKILL_USE_CONDITION_ENUM], [Description], [IN_HOUSE_TEST_ONLY], [MISC_0], [MISC_1], [MISC_2], [MISC_3], [MISC_4], [MISC_5], [MISC_6], [MISC_7], [Regdate]) VALUES (@IndexKey, @ID, @ID_ENUM, @TYPE, @TYPE_ENUM, @NAME, @DESC, @SKILL_LEVEL, @POWER_RATE, @COOL_TIME, @MP_CONSUMPTION, @STAT_BASE_HP, @STAT_ATK_PHYSIC, @STAT_ATK_MAGIC, @STAT_DEF_PHYSIC, @STAT_DEF_MAGIC, @ICON_TEXTURE_NAME, @ICON_TEXTURE_PIECE_NAME, @BORN_SEALED, @SHOW_LEVEL, @ACTIVE_SKILL_USE_CONDITION, @ACTIVE_SKILL_USE_CONDITION_ENUM, @Description, @IN_HOUSE_TEST_ONLY, @MISC_0, @MISC_1, @MISC_2, @MISC_3, @MISC_4, @MISC_5, @MISC_6, @MISC_7, @Regdate);
SELECT IndexKey, ID, ID_ENUM, TYPE, TYPE_ENUM, NAME, [DESC], SKILL_LEVEL, POWER_RATE, COOL_TIME, MP_CONSUMPTION, STAT_BASE_HP, STAT_ATK_PHYSIC, STAT_ATK_MAGIC, STAT_DEF_PHYSIC, STAT_DEF_MAGIC, ICON_TEXTURE_NAME, ICON_TEXTURE_PIECE_NAME, BORN_SEALED, SHOW_LEVEL, ACTIVE_SKILL_USE_CONDITION, ACTIVE_SKILL_USE_CONDITION_ENUM, Description, IN_HOUSE_TEST_ONLY, MISC_0, MISC_1, MISC_2, MISC_3, MISC_4, MISC_5, MISC_6, MISC_7, Regdate FROM SkillTable WHERE (IndexKey = @IndexKey)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ENUM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ENUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_ENUM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_ENUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SKILL_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SKILL_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POWER_RATE", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POWER_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COOL_TIME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOL_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CONSUMPTION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CONSUMPTION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STAT_BASE_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_BASE_HP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STAT_ATK_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_ATK_PHYSIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STAT_ATK_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_ATK_MAGIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STAT_DEF_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_DEF_PHYSIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STAT_DEF_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_DEF_MAGIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICON_TEXTURE_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICON_TEXTURE_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICON_TEXTURE_PIECE_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICON_TEXTURE_PIECE_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BORN_SEALED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BORN_SEALED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHOW_LEVEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHOW_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACTIVE_SKILL_USE_CONDITION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_SKILL_USE_CONDITION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACTIVE_SKILL_USE_CONDITION_ENUM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_SKILL_USE_CONDITION_ENUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IN_HOUSE_TEST_ONLY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_HOUSE_TEST_ONLY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_0", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_0", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_3", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SkillTable] SET [IndexKey] = @IndexKey, [ID] = @ID, [ID_ENUM] = @ID" +
                "_ENUM, [TYPE] = @TYPE, [TYPE_ENUM] = @TYPE_ENUM, [NAME] = @NAME, [DESC] = @DESC," +
                " [SKILL_LEVEL] = @SKILL_LEVEL, [POWER_RATE] = @POWER_RATE, [COOL_TIME] = @COOL_T" +
                "IME, [MP_CONSUMPTION] = @MP_CONSUMPTION, [STAT_BASE_HP] = @STAT_BASE_HP, [STAT_A" +
                "TK_PHYSIC] = @STAT_ATK_PHYSIC, [STAT_ATK_MAGIC] = @STAT_ATK_MAGIC, [STAT_DEF_PHY" +
                "SIC] = @STAT_DEF_PHYSIC, [STAT_DEF_MAGIC] = @STAT_DEF_MAGIC, [ICON_TEXTURE_NAME]" +
                " = @ICON_TEXTURE_NAME, [ICON_TEXTURE_PIECE_NAME] = @ICON_TEXTURE_PIECE_NAME, [BO" +
                "RN_SEALED] = @BORN_SEALED, [SHOW_LEVEL] = @SHOW_LEVEL, [ACTIVE_SKILL_USE_CONDITI" +
                "ON] = @ACTIVE_SKILL_USE_CONDITION, [ACTIVE_SKILL_USE_CONDITION_ENUM] = @ACTIVE_S" +
                "KILL_USE_CONDITION_ENUM, [Description] = @Description, [IN_HOUSE_TEST_ONLY] = @I" +
                "N_HOUSE_TEST_ONLY, [MISC_0] = @MISC_0, [MISC_1] = @MISC_1, [MISC_2] = @MISC_2, [" +
                "MISC_3] = @MISC_3, [MISC_4] = @MISC_4, [MISC_5] = @MISC_5, [MISC_6] = @MISC_6, [" +
                "MISC_7] = @MISC_7, [Regdate] = @Regdate WHERE (([IndexKey] = @Original_IndexKey)" +
                " AND ((@IsNull_ID = 1 AND [ID] IS NULL) OR ([ID] = @Original_ID)) AND ((@IsNull_" +
                "ID_ENUM = 1 AND [ID_ENUM] IS NULL) OR ([ID_ENUM] = @Original_ID_ENUM)) AND ((@Is" +
                "Null_TYPE = 1 AND [TYPE] IS NULL) OR ([TYPE] = @Original_TYPE)) AND ((@IsNull_TY" +
                "PE_ENUM = 1 AND [TYPE_ENUM] IS NULL) OR ([TYPE_ENUM] = @Original_TYPE_ENUM)) AND" +
                " ((@IsNull_NAME = 1 AND [NAME] IS NULL) OR ([NAME] = @Original_NAME)) AND ((@IsN" +
                "ull_DESC = 1 AND [DESC] IS NULL) OR ([DESC] = @Original_DESC)) AND ((@IsNull_SKI" +
                "LL_LEVEL = 1 AND [SKILL_LEVEL] IS NULL) OR ([SKILL_LEVEL] = @Original_SKILL_LEVE" +
                "L)) AND ((@IsNull_POWER_RATE = 1 AND [POWER_RATE] IS NULL) OR ([POWER_RATE] = @O" +
                "riginal_POWER_RATE)) AND ((@IsNull_COOL_TIME = 1 AND [COOL_TIME] IS NULL) OR ([C" +
                "OOL_TIME] = @Original_COOL_TIME)) AND ((@IsNull_MP_CONSUMPTION = 1 AND [MP_CONSU" +
                "MPTION] IS NULL) OR ([MP_CONSUMPTION] = @Original_MP_CONSUMPTION)) AND ((@IsNull" +
                "_STAT_BASE_HP = 1 AND [STAT_BASE_HP] IS NULL) OR ([STAT_BASE_HP] = @Original_STA" +
                "T_BASE_HP)) AND ((@IsNull_STAT_ATK_PHYSIC = 1 AND [STAT_ATK_PHYSIC] IS NULL) OR " +
                "([STAT_ATK_PHYSIC] = @Original_STAT_ATK_PHYSIC)) AND ((@IsNull_STAT_ATK_MAGIC = " +
                "1 AND [STAT_ATK_MAGIC] IS NULL) OR ([STAT_ATK_MAGIC] = @Original_STAT_ATK_MAGIC)" +
                ") AND ((@IsNull_STAT_DEF_PHYSIC = 1 AND [STAT_DEF_PHYSIC] IS NULL) OR ([STAT_DEF" +
                "_PHYSIC] = @Original_STAT_DEF_PHYSIC)) AND ((@IsNull_STAT_DEF_MAGIC = 1 AND [STA" +
                "T_DEF_MAGIC] IS NULL) OR ([STAT_DEF_MAGIC] = @Original_STAT_DEF_MAGIC)) AND ((@I" +
                "sNull_ICON_TEXTURE_NAME = 1 AND [ICON_TEXTURE_NAME] IS NULL) OR ([ICON_TEXTURE_N" +
                "AME] = @Original_ICON_TEXTURE_NAME)) AND ((@IsNull_ICON_TEXTURE_PIECE_NAME = 1 A" +
                "ND [ICON_TEXTURE_PIECE_NAME] IS NULL) OR ([ICON_TEXTURE_PIECE_NAME] = @Original_" +
                "ICON_TEXTURE_PIECE_NAME)) AND ((@IsNull_BORN_SEALED = 1 AND [BORN_SEALED] IS NUL" +
                "L) OR ([BORN_SEALED] = @Original_BORN_SEALED)) AND ((@IsNull_SHOW_LEVEL = 1 AND " +
                "[SHOW_LEVEL] IS NULL) OR ([SHOW_LEVEL] = @Original_SHOW_LEVEL)) AND ((@IsNull_AC" +
                "TIVE_SKILL_USE_CONDITION = 1 AND [ACTIVE_SKILL_USE_CONDITION] IS NULL) OR ([ACTI" +
                "VE_SKILL_USE_CONDITION] = @Original_ACTIVE_SKILL_USE_CONDITION)) AND ((@IsNull_A" +
                "CTIVE_SKILL_USE_CONDITION_ENUM = 1 AND [ACTIVE_SKILL_USE_CONDITION_ENUM] IS NULL" +
                ") OR ([ACTIVE_SKILL_USE_CONDITION_ENUM] = @Original_ACTIVE_SKILL_USE_CONDITION_E" +
                "NUM)) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description]" +
                " = @Original_Description)) AND ((@IsNull_IN_HOUSE_TEST_ONLY = 1 AND [IN_HOUSE_TE" +
                "ST_ONLY] IS NULL) OR ([IN_HOUSE_TEST_ONLY] = @Original_IN_HOUSE_TEST_ONLY)) AND " +
                "((@IsNull_MISC_0 = 1 AND [MISC_0] IS NULL) OR ([MISC_0] = @Original_MISC_0)) AND" +
                " ((@IsNull_MISC_1 = 1 AND [MISC_1] IS NULL) OR ([MISC_1] = @Original_MISC_1)) AN" +
                "D ((@IsNull_MISC_2 = 1 AND [MISC_2] IS NULL) OR ([MISC_2] = @Original_MISC_2)) A" +
                "ND ((@IsNull_MISC_3 = 1 AND [MISC_3] IS NULL) OR ([MISC_3] = @Original_MISC_3)) " +
                "AND ((@IsNull_MISC_4 = 1 AND [MISC_4] IS NULL) OR ([MISC_4] = @Original_MISC_4))" +
                " AND ((@IsNull_MISC_5 = 1 AND [MISC_5] IS NULL) OR ([MISC_5] = @Original_MISC_5)" +
                ") AND ((@IsNull_MISC_6 = 1 AND [MISC_6] IS NULL) OR ([MISC_6] = @Original_MISC_6" +
                ")) AND ((@IsNull_MISC_7 = 1 AND [MISC_7] IS NULL) OR ([MISC_7] = @Original_MISC_" +
                "7)) AND ((@IsNull_Regdate = 1 AND [Regdate] IS NULL) OR ([Regdate] = @Original_R" +
                "egdate)));\r\nSELECT IndexKey, ID, ID_ENUM, TYPE, TYPE_ENUM, NAME, [DESC], SKILL_L" +
                "EVEL, POWER_RATE, COOL_TIME, MP_CONSUMPTION, STAT_BASE_HP, STAT_ATK_PHYSIC, STAT" +
                "_ATK_MAGIC, STAT_DEF_PHYSIC, STAT_DEF_MAGIC, ICON_TEXTURE_NAME, ICON_TEXTURE_PIE" +
                "CE_NAME, BORN_SEALED, SHOW_LEVEL, ACTIVE_SKILL_USE_CONDITION, ACTIVE_SKILL_USE_C" +
                "ONDITION_ENUM, Description, IN_HOUSE_TEST_ONLY, MISC_0, MISC_1, MISC_2, MISC_3, " +
                "MISC_4, MISC_5, MISC_6, MISC_7, Regdate FROM SkillTable WHERE (IndexKey = @Index" +
                "Key)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ENUM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ENUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_ENUM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_ENUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SKILL_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SKILL_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POWER_RATE", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POWER_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COOL_TIME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOL_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CONSUMPTION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CONSUMPTION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STAT_BASE_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_BASE_HP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STAT_ATK_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_ATK_PHYSIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STAT_ATK_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_ATK_MAGIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STAT_DEF_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_DEF_PHYSIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STAT_DEF_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_DEF_MAGIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICON_TEXTURE_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICON_TEXTURE_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICON_TEXTURE_PIECE_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICON_TEXTURE_PIECE_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BORN_SEALED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BORN_SEALED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHOW_LEVEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHOW_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACTIVE_SKILL_USE_CONDITION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_SKILL_USE_CONDITION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACTIVE_SKILL_USE_CONDITION_ENUM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_SKILL_USE_CONDITION_ENUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IN_HOUSE_TEST_ONLY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_HOUSE_TEST_ONLY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_0", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_0", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_3", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MISC_7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IndexKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_ENUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ENUM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ENUM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ENUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TYPE_ENUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_ENUM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE_ENUM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_ENUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DESC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SKILL_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SKILL_LEVEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SKILL_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SKILL_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POWER_RATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POWER_RATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POWER_RATE", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POWER_RATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COOL_TIME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOL_TIME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COOL_TIME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOL_TIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_CONSUMPTION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CONSUMPTION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CONSUMPTION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CONSUMPTION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STAT_BASE_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_BASE_HP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STAT_BASE_HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_BASE_HP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STAT_ATK_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_ATK_PHYSIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STAT_ATK_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_ATK_PHYSIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STAT_ATK_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_ATK_MAGIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STAT_ATK_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_ATK_MAGIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STAT_DEF_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_DEF_PHYSIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STAT_DEF_PHYSIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_DEF_PHYSIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STAT_DEF_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_DEF_MAGIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STAT_DEF_MAGIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_DEF_MAGIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICON_TEXTURE_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICON_TEXTURE_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICON_TEXTURE_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICON_TEXTURE_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICON_TEXTURE_PIECE_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICON_TEXTURE_PIECE_NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICON_TEXTURE_PIECE_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICON_TEXTURE_PIECE_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BORN_SEALED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BORN_SEALED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BORN_SEALED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BORN_SEALED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SHOW_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHOW_LEVEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SHOW_LEVEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHOW_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACTIVE_SKILL_USE_CONDITION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_SKILL_USE_CONDITION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACTIVE_SKILL_USE_CONDITION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_SKILL_USE_CONDITION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACTIVE_SKILL_USE_CONDITION_ENUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_SKILL_USE_CONDITION_ENUM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACTIVE_SKILL_USE_CONDITION_ENUM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_SKILL_USE_CONDITION_ENUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IN_HOUSE_TEST_ONLY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_HOUSE_TEST_ONLY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IN_HOUSE_TEST_ONLY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_HOUSE_TEST_ONLY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_0", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_0", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_0", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_0", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_3", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MISC_7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MISC_7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MISC_7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Regdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Regdate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ScriptData_JPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT IndexKey, ID, ID_ENUM, TYPE, TYPE_ENUM, NAME, [DESC], SKILL_LEVEL, POWER_RATE, COOL_TIME, MP_CONSUMPTION, STAT_BASE_HP, STAT_ATK_PHYSIC, STAT_ATK_MAGIC, STAT_DEF_PHYSIC, STAT_DEF_MAGIC, ICON_TEXTURE_NAME, ICON_TEXTURE_PIECE_NAME, BORN_SEALED, SHOW_LEVEL, ACTIVE_SKILL_USE_CONDITION, ACTIVE_SKILL_USE_CONDITION_ENUM, Description, IN_HOUSE_TEST_ONLY, MISC_0, MISC_1, MISC_2, MISC_3, MISC_4, MISC_5, MISC_6, MISC_7, Regdate FROM dbo.SkillTable";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE  SkillTable\r\nSET        [DESC] = @DESC\r\nWHERE   (IndexKey = @IndexKey); ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESC", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexKey", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE  SkillTable\r\nSET         Regdate= @Regdate\r\nWHERE   (IndexKey = @Index); ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Regdate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Regdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Index", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IndexKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScriptData_JPDataSet.SkillTableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScriptData_JPDataSet.SkillTableDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScriptData_JPDataSet.SkillTableDataTable dataTable = new ScriptData_JPDataSet.SkillTableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet.SkillTableDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScriptData_JPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SkillTable");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_IndexKey, 
                    global::System.Nullable<int> Original_ID, 
                    string Original_ID_ENUM, 
                    global::System.Nullable<int> Original_TYPE, 
                    string Original_TYPE_ENUM, 
                    string Original_NAME, 
                    string Original_DESC, 
                    global::System.Nullable<int> Original_SKILL_LEVEL, 
                    global::System.Nullable<double> Original_POWER_RATE, 
                    global::System.Nullable<int> Original_COOL_TIME, 
                    global::System.Nullable<int> Original_MP_CONSUMPTION, 
                    global::System.Nullable<int> Original_STAT_BASE_HP, 
                    global::System.Nullable<int> Original_STAT_ATK_PHYSIC, 
                    global::System.Nullable<int> Original_STAT_ATK_MAGIC, 
                    global::System.Nullable<int> Original_STAT_DEF_PHYSIC, 
                    global::System.Nullable<int> Original_STAT_DEF_MAGIC, 
                    string Original_ICON_TEXTURE_NAME, 
                    string Original_ICON_TEXTURE_PIECE_NAME, 
                    global::System.Nullable<bool> Original_BORN_SEALED, 
                    global::System.Nullable<bool> Original_SHOW_LEVEL, 
                    global::System.Nullable<int> Original_ACTIVE_SKILL_USE_CONDITION, 
                    string Original_ACTIVE_SKILL_USE_CONDITION_ENUM, 
                    string Original_Description, 
                    global::System.Nullable<bool> Original_IN_HOUSE_TEST_ONLY, 
                    string Original_MISC_0, 
                    global::System.Nullable<double> Original_MISC_1, 
                    string Original_MISC_2, 
                    global::System.Nullable<double> Original_MISC_3, 
                    string Original_MISC_4, 
                    global::System.Nullable<double> Original_MISC_5, 
                    string Original_MISC_6, 
                    global::System.Nullable<double> Original_MISC_7, 
                    global::System.Nullable<global::System.DateTime> Original_Regdate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IndexKey));
            if ((Original_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_ENUM == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ID_ENUM));
            }
            if ((Original_TYPE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_TYPE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_TYPE_ENUM == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_TYPE_ENUM));
            }
            if ((Original_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_NAME));
            }
            if ((Original_DESC == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_DESC));
            }
            if ((Original_SKILL_LEVEL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_SKILL_LEVEL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_POWER_RATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_POWER_RATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_COOL_TIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_COOL_TIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_CONSUMPTION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_MP_CONSUMPTION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_STAT_BASE_HP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_STAT_BASE_HP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_STAT_ATK_PHYSIC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_STAT_ATK_PHYSIC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_STAT_ATK_MAGIC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_STAT_ATK_MAGIC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_STAT_DEF_PHYSIC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_STAT_DEF_PHYSIC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_STAT_DEF_MAGIC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_STAT_DEF_MAGIC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_ICON_TEXTURE_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_ICON_TEXTURE_NAME));
            }
            if ((Original_ICON_TEXTURE_PIECE_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_ICON_TEXTURE_PIECE_NAME));
            }
            if ((Original_BORN_SEALED.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((bool)(Original_BORN_SEALED.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_SHOW_LEVEL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((bool)(Original_SHOW_LEVEL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_ACTIVE_SKILL_USE_CONDITION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_ACTIVE_SKILL_USE_CONDITION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_ACTIVE_SKILL_USE_CONDITION_ENUM == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_ACTIVE_SKILL_USE_CONDITION_ENUM));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_Description));
            }
            if ((Original_IN_HOUSE_TEST_ONLY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((bool)(Original_IN_HOUSE_TEST_ONLY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_MISC_0 == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_MISC_0));
            }
            if ((Original_MISC_1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((double)(Original_MISC_1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_MISC_2 == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_MISC_2));
            }
            if ((Original_MISC_3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((double)(Original_MISC_3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_MISC_4 == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_MISC_4));
            }
            if ((Original_MISC_5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((double)(Original_MISC_5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_MISC_6 == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_MISC_6));
            }
            if ((Original_MISC_7.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((double)(Original_MISC_7.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_Regdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((System.DateTime)(Original_Regdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int IndexKey, 
                    global::System.Nullable<int> ID, 
                    string ID_ENUM, 
                    global::System.Nullable<int> TYPE, 
                    string TYPE_ENUM, 
                    string NAME, 
                    string DESC, 
                    global::System.Nullable<int> SKILL_LEVEL, 
                    global::System.Nullable<double> POWER_RATE, 
                    global::System.Nullable<int> COOL_TIME, 
                    global::System.Nullable<int> MP_CONSUMPTION, 
                    global::System.Nullable<int> STAT_BASE_HP, 
                    global::System.Nullable<int> STAT_ATK_PHYSIC, 
                    global::System.Nullable<int> STAT_ATK_MAGIC, 
                    global::System.Nullable<int> STAT_DEF_PHYSIC, 
                    global::System.Nullable<int> STAT_DEF_MAGIC, 
                    string ICON_TEXTURE_NAME, 
                    string ICON_TEXTURE_PIECE_NAME, 
                    global::System.Nullable<bool> BORN_SEALED, 
                    global::System.Nullable<bool> SHOW_LEVEL, 
                    global::System.Nullable<int> ACTIVE_SKILL_USE_CONDITION, 
                    string ACTIVE_SKILL_USE_CONDITION_ENUM, 
                    string Description, 
                    global::System.Nullable<bool> IN_HOUSE_TEST_ONLY, 
                    string MISC_0, 
                    global::System.Nullable<double> MISC_1, 
                    string MISC_2, 
                    global::System.Nullable<double> MISC_3, 
                    string MISC_4, 
                    global::System.Nullable<double> MISC_5, 
                    string MISC_6, 
                    global::System.Nullable<double> MISC_7, 
                    global::System.Nullable<global::System.DateTime> Regdate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IndexKey));
            if ((ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ID_ENUM == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ID_ENUM));
            }
            if ((TYPE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(TYPE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((TYPE_ENUM == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(TYPE_ENUM));
            }
            if ((NAME == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(NAME));
            }
            if ((DESC == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(DESC));
            }
            if ((SKILL_LEVEL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(SKILL_LEVEL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((POWER_RATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(POWER_RATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((COOL_TIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(COOL_TIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((MP_CONSUMPTION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(MP_CONSUMPTION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((STAT_BASE_HP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(STAT_BASE_HP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((STAT_ATK_PHYSIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(STAT_ATK_PHYSIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((STAT_ATK_MAGIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(STAT_ATK_MAGIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((STAT_DEF_PHYSIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(STAT_DEF_PHYSIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((STAT_DEF_MAGIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(STAT_DEF_MAGIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((ICON_TEXTURE_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ICON_TEXTURE_NAME));
            }
            if ((ICON_TEXTURE_PIECE_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ICON_TEXTURE_PIECE_NAME));
            }
            if ((BORN_SEALED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(BORN_SEALED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((SHOW_LEVEL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(SHOW_LEVEL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((ACTIVE_SKILL_USE_CONDITION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(ACTIVE_SKILL_USE_CONDITION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ACTIVE_SKILL_USE_CONDITION_ENUM == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(ACTIVE_SKILL_USE_CONDITION_ENUM));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Description));
            }
            if ((IN_HOUSE_TEST_ONLY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(IN_HOUSE_TEST_ONLY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((MISC_0 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(MISC_0));
            }
            if ((MISC_1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(MISC_1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((MISC_2 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(MISC_2));
            }
            if ((MISC_3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(MISC_3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((MISC_4 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(MISC_4));
            }
            if ((MISC_5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((double)(MISC_5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((MISC_6 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(MISC_6));
            }
            if ((MISC_7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((double)(MISC_7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IndexKey, 
                    global::System.Nullable<int> ID, 
                    string ID_ENUM, 
                    global::System.Nullable<int> TYPE, 
                    string TYPE_ENUM, 
                    string NAME, 
                    string DESC, 
                    global::System.Nullable<int> SKILL_LEVEL, 
                    global::System.Nullable<double> POWER_RATE, 
                    global::System.Nullable<int> COOL_TIME, 
                    global::System.Nullable<int> MP_CONSUMPTION, 
                    global::System.Nullable<int> STAT_BASE_HP, 
                    global::System.Nullable<int> STAT_ATK_PHYSIC, 
                    global::System.Nullable<int> STAT_ATK_MAGIC, 
                    global::System.Nullable<int> STAT_DEF_PHYSIC, 
                    global::System.Nullable<int> STAT_DEF_MAGIC, 
                    string ICON_TEXTURE_NAME, 
                    string ICON_TEXTURE_PIECE_NAME, 
                    global::System.Nullable<bool> BORN_SEALED, 
                    global::System.Nullable<bool> SHOW_LEVEL, 
                    global::System.Nullable<int> ACTIVE_SKILL_USE_CONDITION, 
                    string ACTIVE_SKILL_USE_CONDITION_ENUM, 
                    string Description, 
                    global::System.Nullable<bool> IN_HOUSE_TEST_ONLY, 
                    string MISC_0, 
                    global::System.Nullable<double> MISC_1, 
                    string MISC_2, 
                    global::System.Nullable<double> MISC_3, 
                    string MISC_4, 
                    global::System.Nullable<double> MISC_5, 
                    string MISC_6, 
                    global::System.Nullable<double> MISC_7, 
                    global::System.Nullable<global::System.DateTime> Regdate, 
                    int Original_IndexKey, 
                    global::System.Nullable<int> Original_ID, 
                    string Original_ID_ENUM, 
                    global::System.Nullable<int> Original_TYPE, 
                    string Original_TYPE_ENUM, 
                    string Original_NAME, 
                    string Original_DESC, 
                    global::System.Nullable<int> Original_SKILL_LEVEL, 
                    global::System.Nullable<double> Original_POWER_RATE, 
                    global::System.Nullable<int> Original_COOL_TIME, 
                    global::System.Nullable<int> Original_MP_CONSUMPTION, 
                    global::System.Nullable<int> Original_STAT_BASE_HP, 
                    global::System.Nullable<int> Original_STAT_ATK_PHYSIC, 
                    global::System.Nullable<int> Original_STAT_ATK_MAGIC, 
                    global::System.Nullable<int> Original_STAT_DEF_PHYSIC, 
                    global::System.Nullable<int> Original_STAT_DEF_MAGIC, 
                    string Original_ICON_TEXTURE_NAME, 
                    string Original_ICON_TEXTURE_PIECE_NAME, 
                    global::System.Nullable<bool> Original_BORN_SEALED, 
                    global::System.Nullable<bool> Original_SHOW_LEVEL, 
                    global::System.Nullable<int> Original_ACTIVE_SKILL_USE_CONDITION, 
                    string Original_ACTIVE_SKILL_USE_CONDITION_ENUM, 
                    string Original_Description, 
                    global::System.Nullable<bool> Original_IN_HOUSE_TEST_ONLY, 
                    string Original_MISC_0, 
                    global::System.Nullable<double> Original_MISC_1, 
                    string Original_MISC_2, 
                    global::System.Nullable<double> Original_MISC_3, 
                    string Original_MISC_4, 
                    global::System.Nullable<double> Original_MISC_5, 
                    string Original_MISC_6, 
                    global::System.Nullable<double> Original_MISC_7, 
                    global::System.Nullable<global::System.DateTime> Original_Regdate) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IndexKey));
            if ((ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ID_ENUM == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ID_ENUM));
            }
            if ((TYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(TYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((TYPE_ENUM == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(TYPE_ENUM));
            }
            if ((NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(NAME));
            }
            if ((DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(DESC));
            }
            if ((SKILL_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(SKILL_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((POWER_RATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(POWER_RATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((COOL_TIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(COOL_TIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((MP_CONSUMPTION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(MP_CONSUMPTION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((STAT_BASE_HP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(STAT_BASE_HP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((STAT_ATK_PHYSIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(STAT_ATK_PHYSIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((STAT_ATK_MAGIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(STAT_ATK_MAGIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((STAT_DEF_PHYSIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(STAT_DEF_PHYSIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((STAT_DEF_MAGIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(STAT_DEF_MAGIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((ICON_TEXTURE_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ICON_TEXTURE_NAME));
            }
            if ((ICON_TEXTURE_PIECE_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(ICON_TEXTURE_PIECE_NAME));
            }
            if ((BORN_SEALED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(BORN_SEALED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((SHOW_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(SHOW_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((ACTIVE_SKILL_USE_CONDITION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(ACTIVE_SKILL_USE_CONDITION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ACTIVE_SKILL_USE_CONDITION_ENUM == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(ACTIVE_SKILL_USE_CONDITION_ENUM));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Description));
            }
            if ((IN_HOUSE_TEST_ONLY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(IN_HOUSE_TEST_ONLY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((MISC_0 == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(MISC_0));
            }
            if ((MISC_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(MISC_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((MISC_2 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(MISC_2));
            }
            if ((MISC_3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(MISC_3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((MISC_4 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(MISC_4));
            }
            if ((MISC_5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(MISC_5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((MISC_6 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(MISC_6));
            }
            if ((MISC_7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(MISC_7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Regdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Original_IndexKey));
            if ((Original_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_ENUM == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_ID_ENUM));
            }
            if ((Original_TYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_TYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_TYPE_ENUM == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_TYPE_ENUM));
            }
            if ((Original_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_NAME));
            }
            if ((Original_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_DESC));
            }
            if ((Original_SKILL_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Original_SKILL_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_POWER_RATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(Original_POWER_RATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_COOL_TIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_COOL_TIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_CONSUMPTION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_MP_CONSUMPTION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_STAT_BASE_HP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Original_STAT_BASE_HP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_STAT_ATK_PHYSIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_STAT_ATK_PHYSIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_STAT_ATK_MAGIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(Original_STAT_ATK_MAGIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_STAT_DEF_PHYSIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(Original_STAT_DEF_PHYSIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_STAT_DEF_MAGIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(Original_STAT_DEF_MAGIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_ICON_TEXTURE_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_ICON_TEXTURE_NAME));
            }
            if ((Original_ICON_TEXTURE_PIECE_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_ICON_TEXTURE_PIECE_NAME));
            }
            if ((Original_BORN_SEALED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(Original_BORN_SEALED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_SHOW_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((bool)(Original_SHOW_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_ACTIVE_SKILL_USE_CONDITION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(Original_ACTIVE_SKILL_USE_CONDITION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_ACTIVE_SKILL_USE_CONDITION_ENUM == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_ACTIVE_SKILL_USE_CONDITION_ENUM));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_Description));
            }
            if ((Original_IN_HOUSE_TEST_ONLY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((bool)(Original_IN_HOUSE_TEST_ONLY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_MISC_0 == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_MISC_0));
            }
            if ((Original_MISC_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((double)(Original_MISC_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_MISC_2 == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_MISC_2));
            }
            if ((Original_MISC_3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((double)(Original_MISC_3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_MISC_4 == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_MISC_4));
            }
            if ((Original_MISC_5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((double)(Original_MISC_5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_MISC_6 == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_MISC_6));
            }
            if ((Original_MISC_7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((double)(Original_MISC_7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_Regdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((System.DateTime)(Original_Regdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID, 
                    string ID_ENUM, 
                    global::System.Nullable<int> TYPE, 
                    string TYPE_ENUM, 
                    string NAME, 
                    string DESC, 
                    global::System.Nullable<int> SKILL_LEVEL, 
                    global::System.Nullable<double> POWER_RATE, 
                    global::System.Nullable<int> COOL_TIME, 
                    global::System.Nullable<int> MP_CONSUMPTION, 
                    global::System.Nullable<int> STAT_BASE_HP, 
                    global::System.Nullable<int> STAT_ATK_PHYSIC, 
                    global::System.Nullable<int> STAT_ATK_MAGIC, 
                    global::System.Nullable<int> STAT_DEF_PHYSIC, 
                    global::System.Nullable<int> STAT_DEF_MAGIC, 
                    string ICON_TEXTURE_NAME, 
                    string ICON_TEXTURE_PIECE_NAME, 
                    global::System.Nullable<bool> BORN_SEALED, 
                    global::System.Nullable<bool> SHOW_LEVEL, 
                    global::System.Nullable<int> ACTIVE_SKILL_USE_CONDITION, 
                    string ACTIVE_SKILL_USE_CONDITION_ENUM, 
                    string Description, 
                    global::System.Nullable<bool> IN_HOUSE_TEST_ONLY, 
                    string MISC_0, 
                    global::System.Nullable<double> MISC_1, 
                    string MISC_2, 
                    global::System.Nullable<double> MISC_3, 
                    string MISC_4, 
                    global::System.Nullable<double> MISC_5, 
                    string MISC_6, 
                    global::System.Nullable<double> MISC_7, 
                    global::System.Nullable<global::System.DateTime> Regdate, 
                    int Original_IndexKey, 
                    global::System.Nullable<int> Original_ID, 
                    string Original_ID_ENUM, 
                    global::System.Nullable<int> Original_TYPE, 
                    string Original_TYPE_ENUM, 
                    string Original_NAME, 
                    string Original_DESC, 
                    global::System.Nullable<int> Original_SKILL_LEVEL, 
                    global::System.Nullable<double> Original_POWER_RATE, 
                    global::System.Nullable<int> Original_COOL_TIME, 
                    global::System.Nullable<int> Original_MP_CONSUMPTION, 
                    global::System.Nullable<int> Original_STAT_BASE_HP, 
                    global::System.Nullable<int> Original_STAT_ATK_PHYSIC, 
                    global::System.Nullable<int> Original_STAT_ATK_MAGIC, 
                    global::System.Nullable<int> Original_STAT_DEF_PHYSIC, 
                    global::System.Nullable<int> Original_STAT_DEF_MAGIC, 
                    string Original_ICON_TEXTURE_NAME, 
                    string Original_ICON_TEXTURE_PIECE_NAME, 
                    global::System.Nullable<bool> Original_BORN_SEALED, 
                    global::System.Nullable<bool> Original_SHOW_LEVEL, 
                    global::System.Nullable<int> Original_ACTIVE_SKILL_USE_CONDITION, 
                    string Original_ACTIVE_SKILL_USE_CONDITION_ENUM, 
                    string Original_Description, 
                    global::System.Nullable<bool> Original_IN_HOUSE_TEST_ONLY, 
                    string Original_MISC_0, 
                    global::System.Nullable<double> Original_MISC_1, 
                    string Original_MISC_2, 
                    global::System.Nullable<double> Original_MISC_3, 
                    string Original_MISC_4, 
                    global::System.Nullable<double> Original_MISC_5, 
                    string Original_MISC_6, 
                    global::System.Nullable<double> Original_MISC_7, 
                    global::System.Nullable<global::System.DateTime> Original_Regdate) {
            return this.Update(Original_IndexKey, ID, ID_ENUM, TYPE, TYPE_ENUM, NAME, DESC, SKILL_LEVEL, POWER_RATE, COOL_TIME, MP_CONSUMPTION, STAT_BASE_HP, STAT_ATK_PHYSIC, STAT_ATK_MAGIC, STAT_DEF_PHYSIC, STAT_DEF_MAGIC, ICON_TEXTURE_NAME, ICON_TEXTURE_PIECE_NAME, BORN_SEALED, SHOW_LEVEL, ACTIVE_SKILL_USE_CONDITION, ACTIVE_SKILL_USE_CONDITION_ENUM, Description, IN_HOUSE_TEST_ONLY, MISC_0, MISC_1, MISC_2, MISC_3, MISC_4, MISC_5, MISC_6, MISC_7, Regdate, Original_IndexKey, Original_ID, Original_ID_ENUM, Original_TYPE, Original_TYPE_ENUM, Original_NAME, Original_DESC, Original_SKILL_LEVEL, Original_POWER_RATE, Original_COOL_TIME, Original_MP_CONSUMPTION, Original_STAT_BASE_HP, Original_STAT_ATK_PHYSIC, Original_STAT_ATK_MAGIC, Original_STAT_DEF_PHYSIC, Original_STAT_DEF_MAGIC, Original_ICON_TEXTURE_NAME, Original_ICON_TEXTURE_PIECE_NAME, Original_BORN_SEALED, Original_SHOW_LEVEL, Original_ACTIVE_SKILL_USE_CONDITION, Original_ACTIVE_SKILL_USE_CONDITION_ENUM, Original_Description, Original_IN_HOUSE_TEST_ONLY, Original_MISC_0, Original_MISC_1, Original_MISC_2, Original_MISC_3, Original_MISC_4, Original_MISC_5, Original_MISC_6, Original_MISC_7, Original_Regdate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateSkillTable_DESC(string DESC, int IndexKey) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((DESC == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(DESC));
            }
            command.Parameters[1].Value = ((int)(IndexKey));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateSkillTable_Regdate(global::System.Nullable<global::System.DateTime> Regdate, int Index) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Regdate.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(Regdate.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(Index));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
}

#pragma warning restore 1591