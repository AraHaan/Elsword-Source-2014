// 클라이언트와 게임 서버간의 이벤트 정의.



#ifdef __NEVER_DEFINED_MACRO__
#define _ENUM(VAL) VAL,
enum
{
#endif

	//////////////////////////////////////////////////////////////////////////
	// dummy packet enum
	_ENUM( EGS_GOOD_JOB_1_REQ )
	_ENUM( EGS_GOOD_JOB_2_REQ )
	_ENUM( EGS_GOOD_JOB_3_REQ )
	_ENUM( EGS_GOOD_JOB_4_REQ )
	_ENUM( EGS_GOOD_JOB_5_REQ )
	//////////////////////////////////////////////////////////////////////////

    _ENUM( EGS_CONNECT_REQ )
    _ENUM( EGS_CONNECT_ACK )

    _ENUM( EGS_NEW_USER_JOIN_REQ )
    _ENUM( EGS_NEW_USER_JOIN_ACK )

    _ENUM( EGS_VERIFY_ACCOUNT_REQ )
    _ENUM( EGS_VERIFY_ACCOUNT_ACK )

	_ENUM( EGS_SEND_STATISTICS_LOCLOG_REQ )
	_ENUM( EGS_SEND_STATISTICS_DBLOG_REQ )
	
	_ENUM( EGS_MY_UNIT_AND_INVENTORY_INFO_LIST_REQ )
	_ENUM( EGS_MY_UNIT_AND_INVENTORY_INFO_LIST_ACK )

    _ENUM( EGS_CREATE_UNIT_REQ )
    _ENUM( EGS_CREATE_UNIT_ACK )

    _ENUM( EGS_DELETE_UNIT_REQ )
    _ENUM( EGS_DELETE_UNIT_ACK )

    _ENUM( EGS_SELECT_UNIT_REQ )
    _ENUM( EGS_SELECT_UNIT_ACK )

	//{{ 2012. 12. 10  캐릭터 선택 패킷 분할 - 김민성
//#ifdef SERV_SELECT_UNIT_PACKET_DIVISION
	_ENUM( EGS_SELECT_UNIT_1_NOT )
	_ENUM( EGS_SELECT_UNIT_2_NOT )
	_ENUM( EGS_SELECT_UNIT_3_NOT )
	_ENUM( EGS_SELECT_UNIT_4_NOT )
	_ENUM( EGS_SELECT_UNIT_5_NOT )
//#endif SERV_SELECT_UNIT_PACKET_DIVISION
	//}

	//{{ 2010. 01. 04  최육사	인벤토리 기능개선
	_ENUM( EGS_GET_MY_INVENTORY_REQ )
	_ENUM( EGS_GET_MY_INVENTORY_ACK )
	_ENUM( EGS_SELECT_UNIT_INVENTORY_INFO_NOT )
	//}}

	_ENUM( EGS_STATE_CHANGE_SERVER_SELECT_REQ )		//서버군 선택 스테이트로 이동
	_ENUM( EGS_STATE_CHANGE_SERVER_SELECT_ACK )

	_ENUM( EGS_GET_SERVER_SET_DATA_REQ )			//서버군 데이터 리스트 받아오기
	_ENUM( EGS_GET_SERVER_SET_DATA_ACK )

	_ENUM( EGS_SELECT_SERVER_SET_REQ )				//서버군 선택
	_ENUM( EGS_SELECT_SERVER_SET_ACK )

	//{{ 2009. 5. 26  최육사	채널이동
	_ENUM( EGS_CHECK_CHANNEL_CHANGE_REQ )
	_ENUM( EGS_CHECK_CHANNEL_CHANGE_ACK )

	_ENUM( EGS_CONNECT_CHANNEL_CHANGE_REQ )
	_ENUM( EGS_CONNECT_CHANNEL_CHANGE_ACK )

	_ENUM( EGS_JOIN_FIELD_CHANNEL_CHANGE_REQ )
	_ENUM( EGS_JOIN_FIELD_CHANNEL_CHANGE_ACK )
	//}}

	//{{ 2009. 2. 13  최육사	채널 리스트
	_ENUM( ECH_GET_CHANNEL_LIST_REQ )
	_ENUM( ECH_GET_CHANNEL_LIST_ACK )
	_ENUM( ECH_GET_CHANNEL_LIST_NOT )
	
	_ENUM( EGS_GET_CHANNEL_LIST_REQ )
	_ENUM( EGS_GET_CHANNEL_LIST_ACK )
	//}}

	_ENUM( EGS_STATE_CHANGE_UNIT_SELECT_REQ )
	_ENUM( EGS_STATE_CHANGE_UNIT_SELECT_ACK )

	_ENUM( EGS_ENTER_EQUIP_SHOP_REQ )
	_ENUM( EGS_ENTER_EQUIP_SHOP_ACK )

	_ENUM( EGS_ENTER_NPC_HOUSE_REQ )
	_ENUM( EGS_ENTER_NPC_HOUSE_ACK )

	//{{ 2008. 11. 25  최육사	
	_ENUM( EGS_OPEN_PVP_ROOM_LIST_REQ )
	_ENUM( EGS_OPEN_PVP_ROOM_LIST_ACK )
	//}}

	//{{ 2008. 11. 25  최육사	
	_ENUM( EGS_CHANGE_PVP_ROOM_LIST_REQ )
	_ENUM( EGS_CHANGE_PVP_ROOM_LIST_ACK )

	_ENUM( EGS_INVITE_PVP_ROOM_REQ )
	_ENUM( EGS_INVITE_PVP_ROOM_ACK )
	_ENUM( EGS_INVITE_PVP_ROOM_NOT )
	//}}

	_ENUM( EGS_ROOM_LIST_REQ )
	_ENUM( EGS_ROOM_LIST_ACK )

	_ENUM( EGS_SQUARE_LIST_REQ )
	_ENUM( EGS_SQUARE_LIST_ACK )

	//{{ 2008. 11. 26  최육사	파티 리스트
	_ENUM( EGS_PARTY_LIST_REQ )
	_ENUM( EGS_PARTY_LIST_ACK )
	//}}

	//////////////////////////////////////////////////////////////////////////
	// dummy packet enum
	_ENUM( EGS_GOOD_JOB_6_REQ )
	_ENUM( EGS_GOOD_JOB_7_REQ )
	_ENUM( EGS_GOOD_JOB_8_REQ )
	_ENUM( EGS_GOOD_JOB_9_REQ )
	_ENUM( EGS_GOOD_JOB_10_REQ )
	//////////////////////////////////////////////////////////////////////////

    _ENUM( EGS_CREATE_ROOM_REQ )
    _ENUM( EGS_CREATE_ROOM_ACK )

	_ENUM( EGS_CREATE_TUTORIAL_ROOM_REQ )
	_ENUM( EGS_CREATE_TUTORIAL_ROOM_ACK )

    _ENUM( EGS_JOIN_ROOM_REQ )
    _ENUM( EGS_JOIN_ROOM_ACK )
	_ENUM( EGS_JOIN_ROOM_NOT )

	_ENUM( EGS_JOIN_SQUARE_REQ )
	_ENUM( EGS_JOIN_SQUARE_ACK )
	_ENUM( EGS_JOIN_SQUARE_NOT )

    _ENUM( EGS_QUICK_JOIN_REQ )
    _ENUM( EGS_QUICK_JOIN_ACK )

    _ENUM( EGS_LEAVE_ROOM_REQ )
    _ENUM( EGS_LEAVE_ROOM_ACK )
    _ENUM( EGS_LEAVE_ROOM_NOT )

	_ENUM( EGS_LEAVE_SQUARE_REQ )
	_ENUM( EGS_LEAVE_SQUARE_ACK )
	_ENUM( EGS_LEAVE_SQUARE_NOT )

    _ENUM( EGS_LEAVE_GAME_REQ )
	_ENUM( EGS_LEAVE_GAME_ACK )
    _ENUM( EGS_LEAVE_GAME_NOT )

    _ENUM( EGS_BAN_USER_REQ )
    _ENUM( EGS_BAN_USER_ACK )
    _ENUM( EGS_BAN_USER_NOT )

	_ENUM( EGS_CHANGE_TEAM_REQ )
	_ENUM( EGS_CHANGE_TEAM_ACK )
	_ENUM( EGS_CHANGE_TEAM_NOT )

	_ENUM( EGS_CHANGE_READY_REQ )
	_ENUM( EGS_CHANGE_READY_ACK )
	_ENUM( EGS_CHANGE_READY_NOT )

	_ENUM( EGS_CHANGE_PITIN_REQ )	//방안에서 내정보창에 들어갔을때..
	_ENUM( EGS_CHANGE_PITIN_ACK )
	_ENUM( EGS_CHANGE_PITIN_NOT )

	_ENUM( EGS_CHANGE_MAP_REQ )
	_ENUM( EGS_CHANGE_MAP_ACK )
	_ENUM( EGS_CHANGE_MAP_NOT )

	_ENUM( EGS_CHANGE_SLOT_OPEN_REQ )
	_ENUM( EGS_CHANGE_SLOT_OPEN_ACK )
	_ENUM( EGS_CHANGE_SLOT_OPEN_NOT )

    _ENUM( EGS_CHANGE_PLAY_TIME_LIMIT_REQ )
    _ENUM( EGS_CHANGE_PLAY_TIME_LIMIT_ACK )
    _ENUM( EGS_CHANGE_PLAY_TIME_LIMIT_NOT )

    _ENUM( EGS_CHANGE_WINNING_NUM_KILL_REQ )
    _ENUM( EGS_CHANGE_WINNING_NUM_KILL_ACK )
    _ENUM( EGS_CHANGE_WINNING_NUM_KILL_NOT )

    _ENUM( EGS_CHAT_REQ )
    _ENUM( EGS_CHAT_ACK )
    _ENUM( EGS_CHAT_NOT )

	_ENUM( EGS_CHANGE_MOTION_REQ )
	_ENUM( EGS_CHANGE_MOTION_ACK )
	_ENUM( EGS_CHANGE_MOTION_NOT )

    _ENUM( EGS_STATE_CHANGE_GAME_START_REQ ) //호스트가 처음 게임 시작을 누름
    _ENUM( EGS_STATE_CHANGE_GAME_START_ACK )
    _ENUM( EGS_STATE_CHANGE_GAME_START_NOT )

	_ENUM( EGS_STATE_CHANGE_GAME_INTRUDE_REQ ) //난입자가 난입 버튼을 누름
	_ENUM( EGS_STATE_CHANGE_GAME_INTRUDE_ACK )
    _ENUM( EGS_STATE_CHANGE_GAME_INTRUDE_NOT )

    _ENUM( EGS_GAME_LOADING_REQ )
    _ENUM( EGS_GAME_LOADING_ACK )
    _ENUM( EGS_GAME_LOADING_NOT )
    _ENUM( EGS_GAME_LOADING_ALL_UNIT_OK_NOT )

	_ENUM( EGS_GAME_P2P_CONNECT_RESULT_REQ )
	_ENUM( EGS_GAME_P2P_CONNECT_RESULT_ACK )

	_ENUM( EGS_PLAY_START_NOT )
	_ENUM( EGS_INTRUDE_START_REQ ) //난입자가 로딩, 커넥트 끝나면
	_ENUM( EGS_INTRUDE_START_ACK ) //난입자가 로딩, 커넥트 끝나면
	_ENUM( EGS_INTRUDE_START_NOT ) //난입 성공

    _ENUM( EGS_CURRENT_KILL_SCORE_NOT )
	_ENUM( EGS_CURRENT_TEAM_KILL_SCORE_NOT )
		
	_ENUM( EGS_REMAINING_PLAY_TIME_NOT )
	_ENUM( EGS_PLAY_TIME_OUT_NOT )

	_ENUM( EGS_MY_USER_UNIT_INFO_TO_SERVER_REQ )
	_ENUM( EGS_MY_USER_UNIT_INFO_TO_SERVER_ACK )
	//_ENUM( EGS_MY_USER_UNIT_INFO_TO_SERVER_NOT )	//던전에서 정보수집후 STATE를 이동하기위해 동기화

	//{{ 2008. 9. 19  최육사	통계
	_ENUM( EGS_DUNGEON_PLAY_INFO_TO_SERVER_NOT )
	//}}

	_ENUM( EGS_USER_UNIT_RE_BIRTH_POS_REQ )
	_ENUM( EGS_USER_UNIT_RE_BIRTH_POS_ACK )

	//_ENUM( EGS_USER_UNIT_RE_BIRTH_REQ )
	//_ENUM( EGS_USER_UNIT_RE_BIRTH_ACK )
	_ENUM( EGS_USER_UNIT_RE_BIRTH_NOT )

	_ENUM( EGS_USER_UNIT_CREATE_REQ )
	_ENUM( EGS_USER_UNIT_CREATE_ACK )
	_ENUM( EGS_USER_UNIT_CREATE_NOT )

	_ENUM( EGS_USER_UNIT_DIE_REQ )
	_ENUM( EGS_USER_UNIT_DIE_ACK )
	_ENUM( EGS_USER_UNIT_DIE_NOT )

	_ENUM( EGS_USER_UNIT_DIE_COMPLETE_REQ )
	_ENUM( EGS_USER_UNIT_DIE_COMPLETE_ACK )
	_ENUM( EGS_USER_UNIT_DIE_COMPLETE_NOT )

	_ENUM( EGS_NPC_UNIT_CREATE_REQ ) //호스트가 보냄, 몬스터 위치, 종류 )
	_ENUM( EGS_NPC_UNIT_CREATE_ACK )
	_ENUM( EGS_NPC_UNIT_CREATE_NOT ) //몬스터 UID를 추가해서 보냄

	_ENUM( EGS_NPC_UNIT_DIE_REQ ) //몬스터 UID
	_ENUM( EGS_NPC_UNIT_DIE_ACK )
	_ENUM( EGS_NPC_UNIT_DIE_NOT ) 

	_ENUM( EGS_DUNGEON_STAGE_LOAD_REQ ) //호스트가 날림, 스테이지 번호 있음, 몬스터 개수
	_ENUM( EGS_DUNGEON_STAGE_LOAD_ACK )
	_ENUM( EGS_DUNGEON_STAGE_LOAD_NOT ) //몬스터 UID 발급

	_ENUM( EGS_DUNGEON_STAGE_LOAD_COMPLETE_REQ )
	_ENUM( EGS_DUNGEON_STAGE_LOAD_COMPLETE_ACK )
	_ENUM( EGS_DUNGEON_STAGE_LOAD_COMPLETE_NOT )

	_ENUM( EGS_DUNGEON_STAGE_START_NOT ) //스테이지 번호

	_ENUM( EGS_DUNGEON_SUB_STAGE_OPEN_REQ ) //호스트가 날림, 서브 스테이지 번호 
	_ENUM( EGS_DUNGEON_SUB_STAGE_OPEN_ACK )
	_ENUM( EGS_DUNGEON_SUB_STAGE_OPEN_NOT )// 다음 스테이지의 스타트 라인을 연다
	
	_ENUM( EGS_DUNGEON_SUB_STAGE_GO_NEXT_REQ ) //내가 다음 스테이지 라인으로 넘어갔다 장막 생성
	_ENUM( EGS_DUNGEON_SUB_STAGE_GO_NEXT_ACK )
	_ENUM( EGS_DUNGEON_SUB_STAGE_GO_NEXT_ALL_NOT ) //모두 넘어왔다 이전 스테이지 라인을 끈다

	_ENUM( EGS_DUNGEON_SUB_STAGE_LOAD_COMPLETE_REQ ) //몬스터 생성이 끝나면 각자 날림
	_ENUM( EGS_DUNGEON_SUB_STAGE_LOAD_COMPLETE_ACK )

	_ENUM( EGS_DUNGEON_SUB_STAGE_START_NOT ) //장막 열림

	_ENUM( EGS_END_GAME_REQ ) //호스트만, 던전에서 이겼을 때
	_ENUM( EGS_END_GAME_ACK )
    _ENUM( EGS_END_GAME_NOT )

	_ENUM( EGS_END_GAME_DUNGEON_RESULT_DATA_NOT )
	_ENUM( EGS_END_GAME_PVP_RESULT_DATA_NOT )

	_ENUM( EGS_STATE_CHANGE_RESULT_REQ )
	_ENUM( EGS_STATE_CHANGE_RESULT_ACK )
	_ENUM( EGS_STATE_CHANGE_RESULT_NOT )

	_ENUM( EGS_START_REWARD_BOX_SELECT_REQ )
	_ENUM( EGS_START_REWARD_BOX_SELECT_ACK )
	_ENUM( EGS_START_REWARD_BOX_SELECT_NOT )

	_ENUM( EGS_SELECT_REWARD_BOX_REQ )
	_ENUM( EGS_SELECT_REWARD_BOX_ACK )
	_ENUM( EGS_SELECT_REWARD_BOX_NOT )

    _ENUM( EGS_CHANGE_DUNGEON_DIFFICULTY_REQ )
    _ENUM( EGS_CHANGE_DUNGEON_DIFFICULTY_ACK )
    _ENUM( EGS_CHANGE_DUNGEON_DIFFICULTY_NOT )

	_ENUM( EGS_DROP_ITEM_NOT )
	_ENUM( EGS_GET_ITEM_REQ )
	_ENUM( EGS_GET_ITEM_ACK )
	_ENUM( EGS_GET_ITEM_NOT )

	//{{ 2009. 5. 11  최육사	실시간아이템
	_ENUM( EGS_GET_ITEM_REALTIME_NOT )
	_ENUM( EGS_GET_ITEM_TEMP_INVENTORY_NOT )
	_ENUM( EGS_GET_TEMP_ITEM_REQ )
	_ENUM( EGS_GET_TEMP_ITEM_ACK )
	_ENUM( EGS_DELETE_TEMP_ITEM_REQ )
	_ENUM( EGS_DELETE_TEMP_ITEM_ACK )
	//}}

	_ENUM( EGS_UPDATE_UNIT_INFO_NOT )
	
    _ENUM( EGS_REFRESH_ROOM_REQ )
    _ENUM( EGS_REFRESH_ROOM_ACK )

	_ENUM( EGS_NOTIFY_MSG_REQ )
	_ENUM( EGS_NOTIFY_MSG_NOT )

    _ENUM( EGS_ADMIN_SERVER_STATUS_REQ )
    _ENUM( EGS_ADMIN_SERVER_STATUS_ACK )

    _ENUM( EGS_CLIENT_QUIT_REQ )
    _ENUM( EGS_CLIENT_QUIT_ACK )

    _ENUM( EGS_ADMIN_MODIFY_UNIT_LEVEL_REQ )
    _ENUM( EGS_ADMIN_MODIFY_UNIT_LEVEL_ACK )

    _ENUM( EGS_CHANGE_OPTION_PLAY_GUIDE_REQ )
    _ENUM( EGS_CHANGE_OPTION_PLAY_GUIDE_ACK )

    _ENUM( EGS_BUY_ED_ITEM_REQ )
    _ENUM( EGS_BUY_ED_ITEM_ACK )

    _ENUM( EGS_SELL_ED_ITEM_REQ )
    _ENUM( EGS_SELL_ED_ITEM_ACK )

	_ENUM( EGS_NEW_QUEST_REQ )
	_ENUM( EGS_NEW_QUEST_ACK )
	_ENUM( EGS_NEW_QUEST_NOT )

	_ENUM( EGS_UPDATE_QUEST_REQ )
	_ENUM( EGS_UPDATE_QUEST_ACK )
	_ENUM( EGS_UPDATE_QUEST_NOT )

	_ENUM( EGS_QUEST_COMPLETE_REQ )
	_ENUM( EGS_QUEST_COMPLETE_ACK )

	_ENUM( EGS_ADMIN_QUEST_COMPLETE_REQ )		//운영자 이상의 유저가 테스트를 하기위해 퀘스트 무조건 완료처리 하기위한..

	_ENUM( EGS_QUEST_COMPLETE_NOT )	// 선택보상 & 일반보상 처리후 유저정보 처리는 이패킷으로 한다.

	//{{ 2012. 04. 17	최육사	퀘스트 조건 마을 입장
//#ifdef SERV_ENTER_FIELD_QUEST_CLEAR
	_ENUM( EGS_ALL_COMPLETED_QUEST_COMPLETE_REQ )
	_ENUM( EGS_ALL_COMPLETED_QUEST_COMPLETE_ACK )
//#endif SERV_ENTER_FIELD_QUEST_CLEAR
	//}}

	_ENUM( EGS_GIVE_UP_QUEST_REQ )
//#ifdef SERV_GATHER_GIVE_UP_QUEST
	_ENUM( EGS_GATHER_GIVE_UP_QUEST_REQ )
//#endif // SERV_GATHER_GIVE_UP_QUEST
	_ENUM( EGS_GIVE_UP_QUEST_ACK )

	_ENUM( EGS_TALK_WITH_NPC_REQ )
	_ENUM( EGS_TALK_WITH_NPC_ACK )

	//////////////////////////////////////////////////////////////////////////
	// dummy packet enum
	_ENUM( EGS_GOOD_JOB_11_REQ )
	_ENUM( EGS_GOOD_JOB_12_REQ )
	_ENUM( EGS_GOOD_JOB_13_REQ )
	_ENUM( EGS_GOOD_JOB_14_REQ )
	_ENUM( EGS_GOOD_JOB_15_REQ )
	//////////////////////////////////////////////////////////////////////////

	_ENUM( EGS_CHANGE_INVENTORY_SLOT_ITEM_REQ )
	_ENUM( EGS_CHANGE_INVENTORY_SLOT_ITEM_ACK )

    _ENUM( EGS_CHANGE_EQUIPPED_ITEM_IN_SQUARE_NOT )
    _ENUM( EGS_CHANGE_EQUIPPED_ITEM_IN_ROOM_NOT )
	//{{ 2008. 11. 30  최육사		
	_ENUM( EGS_CHANGE_EQUIPPED_ITEM_IN_FIELD_NOT )
	//}}
    _ENUM( EGS_GAME_LOADING_TIME_OUT_NOT )

    _ENUM( EGS_DELETE_ITEM_REQ )
    _ENUM( EGS_DELETE_ITEM_ACK )

	_ENUM( EGS_ADMIN_CHANGE_AUTH_LEVEL_REQ )
	_ENUM( EGS_ADMIN_CHANGE_AUTH_LEVEL_ACK )

	_ENUM( EGS_ADMIN_GET_AUTH_LEVEL_LIST_REQ )
	_ENUM( EGS_ADMIN_GET_AUTH_LEVEL_LIST_ACK )

	_ENUM( EGS_CHECK_INVALID_ROOM_NOT )

	_ENUM( EGS_RESULT_SUCCESS_REQ )
	_ENUM( EGS_RESULT_SUCCESS_ACK )
	_ENUM( EGS_RESULT_ALL_UNIT_SUCCESS_NOT )

	_ENUM( EGS_USE_QUICK_SLOT_REQ )
	_ENUM( EGS_USE_QUICK_SLOT_ACK )
	_ENUM( EGS_USE_QUICK_SLOT_NOT )

	_ENUM( EGS_ADMIN_CHANGE_ED_REQ )
	_ENUM( EGS_ADMIN_CHANGE_ED_ACK )

	_ENUM( EGS_SEARCH_UNIT_REQ )	//유저찾기 기능(ACK : UNIT INFO 를 담아 보내준다)
	_ENUM( EGS_SEARCH_UNIT_ACK )

	//{{ 2009. 4. 17  최육사	접속중인 유저정보 얻기
	_ENUM( EGS_GET_CONNECTION_UNIT_INFO_REQ )
	_ENUM( EGS_GET_CONNECTION_UNIT_INFO_ACK )
	//}}

	//{{ 2009. 6. 23  최육사	엿보기
	_ENUM( EGS_WATCH_UNIT_REQ )
	_ENUM( EGS_WATCH_UNIT_ACK )
	//}}

	_ENUM( EGS_SQUARE_UNIT_SYNC_DATA_REQ ) //광장유닛 정보
	_ENUM( EGS_SQUARE_UNIT_SYNC_DATA_NOT )

	_ENUM( EGS_GET_SKILL_REQ )
	_ENUM( EGS_GET_SKILL_ACK )

	_ENUM( EGS_CHANGE_SKILL_SLOT_REQ )
	_ENUM( EGS_CHANGE_SKILL_SLOT_ACK )
	_ENUM( EGS_CHANGE_SKILL_SLOT_NOT )	

	_ENUM( EGS_ADMIN_CHANGE_SKILL_POINT_REQ )
	_ENUM( EGS_ADMIN_CHANGE_SKILL_POINT_ACK )

	_ENUM( EGS_ADMIN_INIT_SKILL_TREE_REQ )
	_ENUM( EGS_ADMIN_INIT_SKILL_TREE_ACK )

	_ENUM( EGS_INIT_SKILL_TREE_REQ )
	_ENUM( EGS_INIT_SKILL_TREE_ACK )

	// 스킬 되돌리기
	_ENUM( EGS_RESET_SKILL_REQ )
	_ENUM( EGS_RESET_SKILL_ACK )

	_ENUM( EGS_UPDATE_CASH_SKILL_POINT_NOT )			// 캐시스킬포인트를 구매하거나 사용했을 때 받는 패킷
	_ENUM( EGS_EXPIRE_CASH_SKILL_POINT_NOT )			// 캐시 스킬포인트가 만료 되었을 때

	_ENUM( EGS_EXPAND_SKILL_SLOT_NOT )					// 스킬 슬롯 B 확장 아이템을 샀을 때 가져왔을 때
	_ENUM( EGS_EXPIRE_SKILL_SLOT_NOT )					// 스킬 슬롯 B 확장 기간만료 되었을 때

	//{{ 2009. 8. 4  최육사		봉인스킬
	_ENUM( EGS_UNSEAL_SKILL_NOT )						// 스킬 봉인 해제 통보
	//}}

    _ENUM( EGS_ADMIN_KICK_USER_REQ )
	_ENUM( EGS_ADMIN_KICK_USER_ACK )
	_ENUM( ELG_ADMIN_KICK_USER_REQ )
	_ENUM( ELG_ADMIN_KICK_USER_ACK )

	//{{ 2011. 12. 22	최육사	배틀필드 파티 개편
	//////////////////////////////////////////////////////////////////////////
//#ifdef SERV_BATTLE_FIELD_SYSTEM
	//////////////////////////////////////////////////////////////////////////

	_ENUM( EGS_INVITE_PARTY_REQ )
	_ENUM( EGS_INVITE_PARTY_ACK )
	_ENUM( EGS_INVITE_PARTY_NOT )

	_ENUM( EGS_INVITE_PARTY_REPLY_NOT )
	_ENUM( EGS_INVITE_PARTY_DENY_NOT )

	_ENUM( EGS_JOIN_PARTY_NOT )
	_ENUM( EGS_CLOSE_PARTY_NOT )

	_ENUM( EGS_UPDATE_PARTY_USER_INFO_NOT )
	_ENUM( EGS_UPDATE_PARTY_UID_NOT )

	_ENUM( EGS_LEAVE_PARTY_REQ )
	_ENUM( EGS_LEAVE_PARTY_ACK )
	_ENUM( EGS_LEAVE_PARTY_NOT )

	_ENUM( EGS_PARTY_CHANGE_READY_REQ )
	_ENUM( EGS_PARTY_CHANGE_READY_ACK )
	_ENUM( EGS_PARTY_CHANGE_READY_NOT )

	_ENUM( EGS_PARTY_CHANGE_DUNGEON_REQ )
	_ENUM( EGS_PARTY_CHANGE_DUNGEON_ACK )
	_ENUM( EGS_PARTY_CHANGE_DUNGEON_NOT )

	_ENUM( EGS_PARTY_GAME_START_REQ )
	_ENUM( EGS_PARTY_GAME_START_ACK )
	_ENUM( EGS_PARTY_GAME_START_NOT )

	//{{ 2012. 01. 12	최육사	배틀필드 시스템
	//#ifdef SERV_BATTLE_FIELD_SYSTEM
	_ENUM( EGS_PARTY_GAME_START_OPINION_CHECK_NOT )
	_ENUM( EGS_PARTY_GAME_START_OPINION_CHECK_REPLY_NOT )

	_ENUM( EGS_PARTY_GAME_START_FAILED_NOT )
	//#endif SERV_BATTLE_FIELD_SYSTEM
	//}}

	_ENUM( EGS_PARTY_CHANGE_HOST_REQ )
	_ENUM( EGS_PARTY_CHANGE_HOST_ACK )
	_ENUM( EGS_PARTY_CHANGE_HOST_NOT )

	_ENUM( EGS_PARTY_BAN_USER_REQ )
	_ENUM( EGS_PARTY_BAN_USER_ACK )
	_ENUM( EGS_PARTY_BAN_USER_NOT )

	_ENUM( EGS_PARTY_CHANGE_GET_ITEM_TYPE_REQ )
	_ENUM( EGS_PARTY_CHANGE_GET_ITEM_TYPE_ACK )
	_ENUM( EGS_PARTY_CHANGE_GET_ITEM_TYPE_NOT )

	_ENUM( EGS_PARTY_CHANGE_NUM_OF_PER_REQ )
	_ENUM( EGS_PARTY_CHANGE_NUM_OF_PER_ACK )
	_ENUM( EGS_PARTY_CHANGE_NUM_OF_PER_NOT )

	_ENUM( EGS_PARTY_LIMIT_LEVEL_REQ )
	_ENUM( EGS_PARTY_LIMIT_LEVEL_ACK )
	_ENUM( EGS_PARTY_LIMIT_LEVEL_NOT )

	_ENUM( EGS_BAN_PARTY_USER_REQ )
	_ENUM( EGS_BAN_PARTY_USER_ACK )
	_ENUM( EGS_BAN_PARTY_USER_NOT )

	//////////////////////////////////////////////////////////////////////////
//#else
	//////////////////////////////////////////////////////////////////////////
	// Party
	//_ENUM( EGS_CREATE_PARTY_REQ )
	//_ENUM( EGS_CREATE_PARTY_ACK )

	////{{ 2008. 11. 26  최육사	파티 리스트
	//_ENUM( EGS_PARTY_LIST_REQ )
	//_ENUM( EGS_PARTY_LIST_ACK )
	////}}

	//// 파티리스트를 통해 들어오는 경우.
	//_ENUM( EGS_JOIN_PARTY_REQ )
	//_ENUM( EGS_JOIN_PARTY_ACK )
	//_ENUM( EGS_JOIN_PARTY_NOT )
	//_ENUM( EGS_JOIN_PARTY_INVITE_NOT )
	//_ENUM( EGS_JOIN_PARTY_INVITE_REPLY_NOT )
	//_ENUM( EGS_JOIN_PARTY_INVITE_DENY_NOT )			// 파티참가 요청자가 파티장에게 참가 신청한 후 time out 됐을 때 파티장이 받는 패킷

	//_ENUM( EGS_LEAVE_PARTY_REQ )
	//_ENUM( EGS_LEAVE_PARTY_ACK )
	//_ENUM( EGS_LEAVE_PARTY_NOT )

	//// 파티장이 초대하는경우.
	//_ENUM( EGS_INVITE_PARTY_REQ )
	//_ENUM( EGS_INVITE_PARTY_ACK )
	//_ENUM( EGS_INVITE_PARTY_NOT )
	//_ENUM( EGS_INVITE_PARTY_REPLY_NOT )
	//_ENUM( EGS_INVITE_PARTY_DENY_NOT )				// 파티장이 다른 사람에게 파티 참가 신청한 후 time out 됐을 때 파티장이 받는 패킷

	//_ENUM( EGS_UPDATE_PARTY_USER_INFO_NOT )
	////{{ 2009. 3. 31  최육사	파티유저
	//_ENUM( EGS_UPDATE_PARTY_UID_NOT )
	////}}

	//_ENUM( EGS_PARTY_CHANGE_READY_REQ )
	//_ENUM( EGS_PARTY_CHANGE_READY_ACK )
	//_ENUM( EGS_PARTY_CHANGE_READY_NOT )

	//_ENUM( EGS_PARTY_CHANGE_DUNGEON_REQ )
	//_ENUM( EGS_PARTY_CHANGE_DUNGEON_ACK )
	//_ENUM( EGS_PARTY_CHANGE_DUNGEON_NOT )

	//// 게임 시작
	//_ENUM( EGS_PARTY_GAME_START_REQ )
	//_ENUM( EGS_PARTY_GAME_START_ACK )
	//_ENUM( EGS_PARTY_GAME_START_NOT )

	//_ENUM( EGS_PARTY_TO_FIELD_MAP_REQ )
	//_ENUM( EGS_PARTY_TO_FIELD_MAP_ACK )
	//_ENUM( EGS_PARTY_TO_FIELD_MAP_NOT )

	//// 파티 이름변경.
	//_ENUM( EGS_PARTY_CHANGE_NAME_REQ )
	//_ENUM( EGS_PARTY_CHANGE_NAME_ACK )
	//_ENUM( EGS_PARTY_CHANGE_NAME_NOT )

	//// 파티 공개설정 변경.
	//_ENUM( EGS_PARTY_CHANGE_PUBLIC_REQ )
	//_ENUM( EGS_PARTY_CHANGE_PUBLIC_ACK )
	//_ENUM( EGS_PARTY_CHANGE_PUBLIC_NOT )

	//// 파티장 변경.
	//_ENUM( EGS_PARTY_CHANGE_HOST_REQ )
	//_ENUM( EGS_PARTY_CHANGE_HOST_ACK )
	//_ENUM( EGS_PARTY_CHANGE_HOST_NOT )

	//// 파티원 강퇴.
	//_ENUM( EGS_PARTY_BAN_USER_REQ )
	//_ENUM( EGS_PARTY_BAN_USER_ACK )
	//_ENUM( EGS_PARTY_BAN_USER_NOT )

	//// 던전게임 아이템 먹는 방식 결정.
	//_ENUM( EGS_PARTY_CHANGE_GET_ITEM_TYPE_REQ )
	//_ENUM( EGS_PARTY_CHANGE_GET_ITEM_TYPE_ACK )
	//_ENUM( EGS_PARTY_CHANGE_GET_ITEM_TYPE_NOT )

	//// 던전게임 아이템 먹는 방식 결정.
	//_ENUM( EGS_PARTY_CHANGE_NUM_OF_PER_REQ )
	//_ENUM( EGS_PARTY_CHANGE_NUM_OF_PER_ACK )
	//_ENUM( EGS_PARTY_CHANGE_NUM_OF_PER_NOT )

	////{{ 2009. 4. 1  최육사		파티렙제
	//_ENUM( EGS_PARTY_LIMIT_LEVEL_REQ )
	//_ENUM( EGS_PARTY_LIMIT_LEVEL_ACK )
	//_ENUM( EGS_PARTY_LIMIT_LEVEL_NOT )
	////}}

	////{{ 2009. 5. 1  최육사		파티 퀵조인
	//_ENUM( EGS_PARTY_QUICK_JOIN_REQ )
	//_ENUM( EGS_PARTY_QUICK_JOIN_ACK )
	////}}

	//// 파티 유저 밴
	//_ENUM( EGS_BAN_PARTY_USER_REQ )
	//_ENUM( EGS_BAN_PARTY_USER_ACK )
	//_ENUM( EGS_BAN_PARTY_USER_NOT )

	// Party
	//////////////////////////////////////////////////////////////////////////
//#endif SERV_BATTLE_FIELD_SYSTEM
	//////////////////////////////////////////////////////////////////////////
	//}}
	
	_ENUM( EGS_RESURRECT_TO_CONTINUE_DUNGEON_REQ )
	_ENUM( EGS_RESURRECT_TO_CONTINUE_DUNGEON_ACK )
	_ENUM( EGS_RESURRECT_TO_CONTINUE_DUNGEON_NOT )

	// 블랙리스트
	_ENUM( EGS_NEW_BLACKLIST_USER_REQ )
	_ENUM( EGS_NEW_BLACKLIST_USER_ACK )
	_ENUM( EGS_DEL_BLACKLIST_USER_REQ )
	_ENUM( EGS_DEL_BLACKLIST_USER_ACK )

	_ENUM( EGS_UPDATE_COMMUNITY_OPTION_REQ )
	_ENUM( EGS_UPDATE_COMMUNITY_OPTION_ACK )	

	_ENUM( EGS_SKIP_CONTINUE_DUNGEON_NOT )

	_ENUM( EGS_CHECK_SUM_REQ )
	_ENUM( EGS_CHECK_SUM_ACK )

	//korea nexon msg
	_ENUM( EGS_KNM_REQUEST_NEW_FRIEND_INFO_REQ )
	_ENUM( EGS_KNM_REQUEST_NEW_FRIEND_INFO_ACK )
	_ENUM( EGS_KNM_INVITE_REQ )
	_ENUM( EGS_KNM_INVITE_ACK )
	_ENUM( EGS_KNM_INVITE_NOT )
	_ENUM( EGS_KNM_INVITE_RESULT_NOT )
	_ENUM( EGS_KNM_TOGETHER_REQ )
	_ENUM( EGS_KNM_TOGETHER_ACK )

	// 개인 거래
	_ENUM( EGS_REQUEST_TRADE_REQ )
	_ENUM( EGS_REQUEST_TRADE_ACK )

	_ENUM( EGS_REQUEST_TRADE_NOT )
	_ENUM( EGS_REQUEST_TRADE_REPLY_NOT )
	_ENUM( EGS_REQUEST_TRADE_DENY_NOT )

	_ENUM( EGS_CREATE_TRADE_NOT )

	_ENUM( EGS_BREAK_TRADE_REQ )
	_ENUM( EGS_BREAK_TRADE_ACK )
	_ENUM( EGS_BREAK_TRADE_NOT )

	_ENUM( EGS_TRADE_USER_INFO_NOT )
	_ENUM( EGS_JOIN_TRADE_NOT )

	_ENUM( EGS_UPDATE_TRADE_ITEM_REQ )
	_ENUM( EGS_UPDATE_TRADE_ITEM_ACK )
	_ENUM( EGS_UPDATE_TRADE_ITEM_NOT )

	_ENUM( EGS_UPDATE_TRADE_ED_REQ )
	_ENUM( EGS_UPDATE_TRADE_ED_ACK )
	_ENUM( EGS_UPDATE_TRADE_ED_NOT )

	_ENUM( EGS_OFFER_TRADE_REQ )
	_ENUM( EGS_OFFER_TRADE_ACK )
	_ENUM( EGS_OFFER_TRADE_NOT )

	_ENUM( EGS_APPROVE_TRADE_REQ )
	_ENUM( EGS_APPROVE_TRADE_ACK )
	_ENUM( EGS_APPROVE_TRADE_NOT )

	_ENUM( EGS_TRADE_COMPLETE_NOT )

	_ENUM( EGS_REPAIR_ITEM_REQ )
	_ENUM( EGS_REPAIR_ITEM_ACK )
	_ENUM( EGS_REPAIR_ITEM_NOT )

	_ENUM( EGS_CREATE_TC_ROOM_REQ )
	_ENUM( EGS_CREATE_TC_ROOM_ACK )

	_ENUM( EGS_END_TC_GAME_REQ ) //훈련소 게임 끝났을때
	_ENUM( EGS_END_TC_GAME_ACK )

	_ENUM( EGS_SET_TC_REMAINING_TIME_REQ )
	_ENUM( EGS_SET_TC_REMAINING_TIME_ACK )
	
	_ENUM( EGS_LEAVE_TC_ROOM_REQ )
	_ENUM( EGS_LEAVE_TC_ROOM_ACK )

	_ENUM( EGS_OPEN_RANDOM_ITEM_REQ )
	_ENUM( EGS_OPEN_RANDOM_ITEM_ACK )	

	_ENUM( EGS_ITEM_MANUFACTURE_REQ )
	_ENUM( EGS_ITEM_MANUFACTURE_ACK )	

	_ENUM( EGS_KNPROTECT_AUTH_CHECK_NOT )
	_ENUM( EGS_KNPROTECT_USER_SHOWDOWN_NOT )

    _ENUM( ENX_USER_LOGIN_NOT )

	//게임중 추가 능력치 적용
	_ENUM( EGS_ADD_ON_STAT_REQ )
	_ENUM( EGS_ADD_ON_STAT_ACK )
	_ENUM( EGS_ADD_ON_STAT_NOT )

    _ENUM( EGS_APPLY_COUPON_REQ )
    _ENUM( EGS_APPLY_COUPON_ACK )

    _ENUM( EGS_PURCHASED_CASH_ITEM_LIST_REQ )
    _ENUM( EGS_PURCHASED_CASH_ITEM_LIST_ACK )

    _ENUM( EGS_GET_PURCHASED_CASH_ITEM_REQ )
    _ENUM( EGS_GET_PURCHASED_CASH_ITEM_ACK )
	
	_ENUM( EGS_FRAME_AVERAGE_REQ )
	_ENUM( EGS_FRAME_AVERAGE_ACK )

    _ENUM( EGS_CHANGE_NICK_NAME_REQ )
    _ENUM( EGS_CHANGE_NICK_NAME_ACK )

	_ENUM( EGS_ADMIN_CHANGE_SPIRIT_REQ )
	_ENUM( EGS_ADMIN_CHANGE_SPIRIT_ACK )

    _ENUM( EGS_ADMIN_SET_PC_BANG_REQ )
    _ENUM( EGS_ADMIN_SET_PC_BANG_ACK )

	_ENUM( EGS_ADMIN_CHANGE_VSPOINT_REQ )
	_ENUM( EGS_ADMIN_CHANGE_VSPOINT_ACK )

    _ENUM( EGS_CHECK_BALANCE_REQ )
    _ENUM( EGS_CHECK_BALANCE_ACK )

	//////////////////////////////////////////////////////////////////////////
	//[개인상점] Personal Shop packet
	_ENUM( EGS_CREATE_PERSONAL_SHOP_REQ )
	_ENUM( EGS_CREATE_PERSONAL_SHOP_ACK )

	_ENUM( EGS_REG_PERSONAL_SHOP_ITEM_REQ )
	_ENUM( EGS_REG_PERSONAL_SHOP_ITEM_ACK )

	_ENUM( EGS_BUY_PERSONAL_SHOP_ITEM_REQ )
	_ENUM( EGS_BUY_PERSONAL_SHOP_ITEM_ACK )
	_ENUM( EGS_BUY_PERSONAL_SHOP_ITEM_COMPLETE_NOT )

	_ENUM( EGS_UPDATE_PERSONAL_SHOP_ITEM_INFO_NOT )

	_ENUM( EGS_BREAK_PERSONAL_SHOP_REQ )
	_ENUM( EGS_BREAK_PERSONAL_SHOP_ACK )
	_ENUM( EGS_BREAK_PERSONAL_SHOP_NOT )

	_ENUM( EGS_JOIN_PERSONAL_SHOP_REQ )
	_ENUM( EGS_JOIN_PERSONAL_SHOP_ACK )

	_ENUM( EGS_LEAVE_PERSONAL_SHOP_REQ )
	_ENUM( EGS_LEAVE_PERSONAL_SHOP_ACK )

	_ENUM( EGS_UPDATE_SQUARE_PERSONAL_SHOP_INFO_NOT )
	//Personal Shop packet
	//////////////////////////////////////////////////////////////////////////
	
	_ENUM( EGS_ADMIN_CHANGE_UNIT_CLASS_REQ )
	_ENUM( EGS_ADMIN_CHANGE_UNIT_CLASS_ACK )

    _ENUM( EGS_CHANGE_TRADE_NOT )
	
	_ENUM( EGS_RESOLVE_ITEM_REQ )
	_ENUM( EGS_RESOLVE_ITEM_ACK )
	_ENUM( EGS_ENCHANT_ITEM_REQ )
	_ENUM( EGS_ENCHANT_ITEM_ACK )
	_ENUM( EGS_SOCKET_ITEM_REQ )
	_ENUM( EGS_SOCKET_ITEM_ACK )

    _ENUM( EGS_ITEM_EXPIRATION_NOT )


	// 추천인
	_ENUM( EGS_RECOMMEND_USER_REQ )
	_ENUM( EGS_RECOMMEND_USER_ACK )
	_ENUM( EGS_RECOMMEND_USER_RESULT_NOT )
	_ENUM( EGS_REWARD_TO_RECOMMEND_USER_NOT )
	_ENUM( EGS_REWARD_TO_TUTORIAL_USER_NOT )

	// 우체국
	_ENUM( EGS_GET_POST_LETTER_LIST_REQ )
	_ENUM( EGS_GET_POST_LETTER_LIST_ACK )
	_ENUM( EGS_NEW_POST_LETTER_INFO_NOT )
	_ENUM( EGS_SEND_LETTER_REQ )
	_ENUM( EGS_SEND_LETTER_ACK )
	_ENUM( EGS_RECEIVE_LETTER_NOT )
	_ENUM( EGS_READ_LETTER_REQ )
	_ENUM( EGS_READ_LETTER_ACK )
	_ENUM( EGS_GET_ITEM_FROM_LETTER_REQ )
	_ENUM( EGS_GET_ITEM_FROM_LETTER_ACK )
	_ENUM( EGS_DELETE_LETTER_REQ )
	_ENUM( EGS_DELETE_LETTER_ACK )
	_ENUM( EGS_RENEWAL_LETTER_REQ )
	_ENUM( EGS_RENEWAL_LETTER_ACK )

	// 근성도 회복 아이템
	_ENUM( EGS_RESTORE_SPIRIT_NOT )

    _ENUM( EGS_CASH_PRODUCT_INFO_REQ )
    _ENUM( EGS_CASH_PRODUCT_INFO_ACK )

    _ENUM( EGS_BUY_CASH_ITEM_REQ )
    _ENUM( EGS_BUY_CASH_ITEM_ACK )

    _ENUM( EGS_PRESENT_CASH_ITEM_REQ )
    _ENUM( EGS_PRESENT_CASH_ITEM_ACK )

	//{{ 2009. 10. 6  최육사	자동결재
	_ENUM( EGS_BUY_CASH_ITEM_AUTOMATIC_PAYMENT_REQ )
	_ENUM( EGS_BUY_CASH_ITEM_AUTOMATIC_PAYMENT_ACK )
	_ENUM( EGS_AUTO_PAYMENT_RESURRECTION_STONE_NOT )
	//}}

	_ENUM( EGS_DEL_TUTORIAL_REQ )
	_ENUM( EGS_DEL_TUTORIAL_ACK )
	_ENUM( EGS_DEL_TUTORIAL_NOT )	//유저에게 사제관계가 끈어졌다는걸 알려주는 패킷.
	_ENUM( EGS_TUTORIAL_UPDATE_UNIT_INFO_NOT )

	_ENUM( EGS_REQUEST_TUTORIAL_REQ )	//사제관계 요청패킷
	_ENUM( EGS_REQUEST_TUTORIAL_ACK )	//확인패킷
	_ENUM( EGS_REQUEST_TUTORIAL_NOT )	//요청을 받는 당사장에게 보내지는 패킷
	_ENUM( EGS_REQUEST_TUTORIAL_REPLY_NOT )	//요청한 사람에게 최후에 알려지는 패킷

	_ENUM( EGS_TUTORIAL_STUDENT_LIST_REQ )
	_ENUM( EGS_TUTORIAL_STUDENT_LIST_ACK )


    _ENUM( EGS_CASH_PRODUCT_INFO_CHANGED_NOT )

    _ENUM( EGS_CURRENT_TIME_REQ )
    _ENUM( EGS_CURRENT_TIME_ACK )

	// 장바구니
	_ENUM( EGS_GET_WISH_LIST_REQ )
	_ENUM( EGS_GET_WISH_LIST_ACK )
	_ENUM( EGS_MODIFY_WISH_LIST_REQ )
	_ENUM( EGS_MODIFY_WISH_LIST_ACK )

	//{{ 2008. 5. 21  최육사  체험ID 제한
	_ENUM( EGS_GUEST_USER_LIMIT_LEVEL_NOT )
	//}}

	_ENUM( EGS_AGREE_HACK_USER_REQ )
	_ENUM( EGS_AGREE_HACK_USER_ACK )
	_ENUM( EGS_REPORT_HACK_USER_NOT )

	//{{ 2008. 6. 16  최육사  넥슨빌링 패키지 픽업
	_ENUM( EGS_GET_PURCHASED_PACKAGE_CASH_ITEM_REQ )
	_ENUM( EGS_GET_PURCHASED_PACKAGE_CASH_ITEM_ACK )
	//}}

	//{{ 2008. 6. 16  최육사  던전 컨티뉴 시간 멈추기
	_ENUM( EGS_STOP_DUNGEON_CONTINUE_TIME_REQ )
	_ENUM( EGS_STOP_DUNGEON_CONTINUE_TIME_ACK )
	//}}

	//{{ 2008. 6. 20  최육사  캐쉬 인벤 선물 확인
	_ENUM( EGS_NEW_PRESENT_CASH_INVENTORY_NOT )
	_ENUM( EGS_CHECK_PRESENT_CASH_INVENTORY_NOT )
	_ENUM( EGS_PRESENT_MESSAGE_TO_RECEIVER_NOT )
	//}}

	//{{ 2008. 6. 24  최육사  nProtect 해킹
	_ENUM( EGS_NPROTECT_HACKING_USER_NOT )
	//}}

	//{{ 2009. 7. 6  최육사		랭킹 개편
    _ENUM( EGS_NEW_RECORD_RANKING_SUCCESS_NOT )
	_ENUM( EGS_GET_RANKING_INFO_REQ )
	_ENUM( EGS_GET_RANKING_INFO_ACK )
	//}}

	//{{ 2008. 9. 3  최육사		속성강화
	_ENUM( EGS_ATTRIB_ENCHANT_ITEM_REQ )
	_ENUM( EGS_ATTRIB_ENCHANT_ITEM_ACK )
	_ENUM( EGS_IDENTIFY_ITEM_REQ )
	_ENUM( EGS_IDENTIFY_ITEM_ACK )
	//}}

	//////////////////////////////////////////////////////////////////////////
	// dummy packet enum
	_ENUM( EGS_GOOD_JOB_21_REQ )
	_ENUM( EGS_GOOD_JOB_22_REQ )
	_ENUM( EGS_GOOD_JOB_23_REQ )
	_ENUM( EGS_GOOD_JOB_24_REQ )
	_ENUM( EGS_GOOD_JOB_25_REQ )
	//////////////////////////////////////////////////////////////////////////

	//{{ 2008. 9. 26  최육사	우체국 블랙리스트
	_ENUM( EGS_GET_POST_BLACK_LIST_REQ )
	_ENUM( EGS_GET_POST_BLACK_LIST_ACK )
	_ENUM( EGS_NEW_POST_BLACK_LIST_REQ )
	_ENUM( EGS_NEW_POST_BLACK_LIST_ACK )
	_ENUM( EGS_DEL_POST_BLACK_LIST_REQ )
	_ENUM( EGS_DEL_POST_BLACK_LIST_ACK )
	//}}

	//{{ 2008. 10. 6  최육사	타이틀
	_ENUM( EGS_EQUIP_TITLE_REQ )
	_ENUM( EGS_EQUIP_TITLE_ACK )
	_ENUM( EGS_TITLE_EXPIRATION_NOT )
	_ENUM( EGS_NEW_MISSION_NOT )
	_ENUM( EGS_UPDATE_MISSION_NOT )
	_ENUM( EGS_REWARD_TITLE_NOT )
	//}}

	//{{ 2008. 10. 9  최육사	아이템사용
	_ENUM( EGS_USE_ITEM_IN_INVENTORY_REQ )
	_ENUM( EGS_USE_ITEM_IN_INVENTORY_ACK )
	//}}

	//{{ 2008. 10. 24  최육사	타이틀 치트
	_ENUM( EGS_ADMIN_GET_TITLE_CHEAT_REQ )
	_ENUM( EGS_ADMIN_GET_TITLE_CHEAT_ACK )
	//}}

	//{{ 2008. 10. 29  최육사	던전입장불가
	_ENUM( EGS_DUNGEON_REQUIRE_ITEM_MESSAGE_NOT )
	//}}

	//{{ 2008. 12. 14  최육사	캐릭터 슬롯 확장
	_ENUM( EGS_EXPAND_CHAR_SLOT_NOT )
	//}}

	//{{ 2008. 12. 19  최육사	아이템 복구
	_ENUM( EGS_RESTORE_ITEM_REQ )
	_ENUM( EGS_RESTORE_ITEM_ACK )
	//}}

	//{{ 2008. 12. 25  최육사	부여
	_ENUM( EGS_ENCHANT_ATTACH_ITEM_REQ )
	_ENUM( EGS_ENCHANT_ATTACH_ITEM_ACK )
	//}}

	//{{ 2008. 11. 18  최육사	아이템 교환
	_ENUM( EGS_ITEM_EXCHANGE_REQ )
	_ENUM( EGS_ITEM_EXCHANGE_ACK )
	//}}

	//{{ 2008. 11. 4  최육사	광장 개편
	_ENUM( EGS_STATE_CHANGE_FIELD_REQ )
	_ENUM( EGS_STATE_CHANGE_FIELD_ACK )
	_ENUM( EGS_FIELD_LOADING_COMPLETE_REQ )
	_ENUM( EGS_FIELD_LOADING_COMPLETE_ACK )
	_ENUM( EGS_LEAVE_FIELD_NOT )

	_ENUM( EGS_CHANGE_USER_LIST_IN_SECTOR_NOT )
	_ENUM( EGS_FIELD_UNIT_SYNC_DATA_NOT )
	//}}

	_ENUM( ETR_REG_UID )	// TCP RELAY 접속후 UID 전송.
	_ENUM( ETR_UNIT_DISCONNECT )
	_ENUM( EGS_FIELD_UNIT_SYNC_DATA_BROAD_NOT )

	//{{ 2009. 1. 13  최육사	커뮤니티 유저 리스트
	_ENUM( EGS_COMMUNITY_USER_LIST_REQ )
	_ENUM( EGS_COMMUNITY_USER_LIST_ACK )
	//}}

	//{{ 2008. 12. 9  최육사	친구 리스트
	_ENUM( EGS_OPTION_UPDATE_REQ )
	_ENUM( EGS_OPTION_UPDATE_ACK )
	//}}

	//{{ 2009. 2. 13  최육사	채널 이동
	_ENUM( EGS_DISCONNECT_FOR_SERVER_SELECT_REQ )
	_ENUM( EGS_DISCONNECT_FOR_SERVER_SELECT_ACK )
	_ENUM( EGS_DISCONNECT_FOR_CHANNEL_CHANGE_REQ )
	_ENUM( EGS_DISCONNECT_FOR_CHANNEL_CHANGE_ACK )
	_ENUM( ECH_DISCONNECT_REQ )
	_ENUM( ECH_DISCONNECT_ACK )
	//}}

	//{{ 2009. 4. 7  최육사		친구정보
	_ENUM( EGS_UPDATE_FRIEND_INFO_REQ )
	_ENUM( EGS_UPDATE_FRIEND_INFO_ACK )
	//}}

	//{{ 2009. 4. 8  최육사		닉네임 변경
	_ENUM( EGS_DELETE_NICK_NAME_SUCCESS_NOT )
	//}}

	//{{ 2009.05.06.hoons.캐릭터 메신져 아이디 요청.
	_ENUM( EGS_GET_MY_MESSENGER_SN_REQ )
	_ENUM( EGS_GET_MY_MESSENGER_SN_ACK )
	//}} hoons

	//{{ 2009. 5. 8  최육사		실시간 레벨업
	_ENUM( EGS_CHAR_LEVEL_UP_NOT )
	//}}

	//{{ 2009. 5. 14  최육사	내구도 소모 개편
	_ENUM( EGS_DECREASE_ENDURANCE_NOT )	
	_ENUM( EGS_ZERO_ENDURANCE_ITEM_IN_ROOM_NOT )
	_ENUM( EGS_DECREASE_SPIRIT_NOT )
	//}}

	//{{ 2009. 6. 3  최육사		확성기
	_ENUM( EGS_USE_MEGAPHONE_REQ )
	_ENUM( EGS_USE_MEGAPHONE_ACK )
	_ENUM( EGS_MEGAPHONE_MESSAGE_NOT )
	//}}

	//{{ 2009. 7. 10  최육사	사기 시스템
	_ENUM( EGS_PARTY_FEVER_POINT_NOT )
	_ENUM( EGS_CHANGE_PARTY_FEVER_STATE_NOT )
	_ENUM( EGS_ADMIN_INCREASE_PARTY_FEVER_POINT_NOT )
	//}}

    // -----------------------------------------------------------------------------------------------------------------------
    // 여기 아래에 선언하시오
    // -----------------------------------------------------------------------------------------------------------------------


    _ENUM( EGS_REQUEST_FRIEND_REQ )
    _ENUM( EGS_REQUEST_FRIEND_ACK )
    _ENUM( EGS_REQUEST_FRIEND_NOT )

    _ENUM( EGS_ACCEPT_FRIEND_REQ )
    _ENUM( EGS_ACCEPT_FRIEND_ACK )
    _ENUM( EGS_ACCEPT_FRIEND_NOT )

    _ENUM( EGS_DENY_FRIEND_REQ )
    _ENUM( EGS_DENY_FRIEND_ACK )
    _ENUM( EGS_DENY_FRIEND_NOT )

    _ENUM( EGS_BLOCK_FRIEND_REQ )
    _ENUM( EGS_BLOCK_FRIEND_ACK )
    _ENUM( EGS_BLOCK_FRIEND_NOT )

    _ENUM( EGS_UNBLOCK_FRIEND_REQ )
    _ENUM( EGS_UNBLOCK_FRIEND_ACK )
    _ENUM( EGS_UNBLOCK_FRIEND_NOT )

    _ENUM( EGS_DELETE_FRIEND_REQ )
    _ENUM( EGS_DELETE_FRIEND_ACK )
    _ENUM( EGS_DELETE_FRIEND_NOT )

    _ENUM( EGS_MOVE_FRIEND_REQ )
    _ENUM( EGS_MOVE_FRIEND_ACK )

    _ENUM( EGS_MAKE_FRIEND_GROUP_REQ )
    _ENUM( EGS_MAKE_FRIEND_GROUP_ACK )

    _ENUM( EGS_RENAME_FRIEND_GROUP_REQ )
    _ENUM( EGS_RENAME_FRIEND_GROUP_ACK )

    _ENUM( EGS_DELETE_FRIEND_GROUP_REQ )
    _ENUM( EGS_DELETE_FRIEND_GROUP_ACK )

    _ENUM( EGS_FRIEND_POSITION_UPDATE_NOT )


	//{{ dmlee 2009/07/17 헤니르 시공 비밀스테이지 관련

	_ENUM( EGS_DUNGEON_SECRET_STAGE_ENTER_CHECK_REQ )	// 비밀 스테이지로 입장가능한지 서버에 물어보는 패킷, 방장 -> 서버
	_ENUM( EGS_DUNGEON_SECRET_STAGE_ENTER_CHECK_ACK )	// 서버 -> 방장
	_ENUM( EGS_DUNGEON_SECRET_STAGE_ENTER_CHECK_NOT )	// 비밀 스테이지로 입장가능한 경우에 서버 -> 모든 유저
	
	_ENUM( EGS_DUNGEON_SECRET_STAGE_ENTER_SELECT_NOT )	// 모든 유저가 각각 비밀 스테이지로 입장 할지 말지 선택을 서버로 알리는 패킷
	
	_ENUM( EGS_DUNGEON_SECRET_STAGE_ENTER_RESULT_NOT )	// 서버가 실제로 비밀 스테이지로 진행하라는 것을 모든 유저에게 알리는 패킷 (단, 방장만 이 패킷을 받아서 처리한다)

	//}} dmlee 2009/07/17 헤니르 시공 비밀스테이지 관련

	//{{ 2009. 7. 29  최육사	item set cheat
	_ENUM( EGS_ADMIN_GET_ITEM_SET_NOT )
	//}}
	//{{ 2009. 8. 5  최육사		체험ID치트
	_ENUM( EGS_ADMIN_GUEST_USER_MODE_NOT )
	//}}

	//{{ 2009. 8. 7  최육사		은행
	_ENUM( EGS_GET_MY_BANK_INFO_REQ )
	_ENUM( EGS_GET_MY_BANK_INFO_ACK )
	_ENUM( EGS_EXPAND_BANK_SLOT_NOT )
	//}}

	//{{ 2009. 8. 18  최육사	HackShield	
	_ENUM( EGS_HACKSHIELD_CHECK_REQ )
	_ENUM( EGS_HACKSHIELD_CHECK_ACK )
	//}}

	//{{ 2009. 8. 27  최육사	밀봉
	_ENUM( EGS_SEAL_ITEM_REQ )
	_ENUM( EGS_SEAL_ITEM_ACK )
	_ENUM( EGS_UNSEAL_ITEM_REQ )
	_ENUM( EGS_UNSEAL_ITEM_ACK )
	//}}

    _ENUM( ECH_VERIFY_ACCOUNT_REQ )
    _ENUM( ECH_VERIFY_ACCOUNT_ACK )

	//////////////////////////////////////////////////////////////////////////
	//{{ 2009. 9. 17  최육사	길드
	_ENUM( EGS_CREATE_GUILD_REQ )
	_ENUM( EGS_CREATE_GUILD_ACK )
	_ENUM( EGS_GUILD_INFO_NOT )

	_ENUM( EGS_GET_GUILD_USER_LIST_REQ )
	_ENUM( EGS_GET_GUILD_USER_LIST_ACK )

	_ENUM( EGS_GUILD_MEMBER_INFO_NOT )
	_ENUM( EGS_GUILD_MESSAGE_NOT )

	_ENUM( EGS_INVITE_GUILD_REQ )
	_ENUM( EGS_INVITE_GUILD_ACK )
	_ENUM( EGS_INVITE_GUILD_NOT )

	_ENUM( EGS_INVITE_GUILD_REPLY_REQ )
	_ENUM( EGS_INVITE_GUILD_REPLY_ACK )
	_ENUM( EGS_INVITE_GUILD_REPLY_DENY_NOT )
	_ENUM( EGS_JOIN_GUILD_SUCCESS_NOT )

	_ENUM( EGS_CHANGE_GUILD_MEMBER_GRADE_REQ )
	_ENUM( EGS_CHANGE_GUILD_MEMBER_GRADE_ACK )

	_ENUM( EGS_CHANGE_GUILD_MESSAGE_REQ )
	_ENUM( EGS_CHANGE_GUILD_MESSAGE_ACK )

	_ENUM( EGS_KICK_GUILD_MEMBER_REQ )
	_ENUM( EGS_KICK_GUILD_MEMBER_ACK )
	
	_ENUM( EGS_CHANGE_GUILD_MEMBER_MESSAGE_REQ )
	_ENUM( EGS_CHANGE_GUILD_MEMBER_MESSAGE_ACK )

	_ENUM( EGS_DISBAND_GUILD_REQ )
	_ENUM( EGS_DISBAND_GUILD_ACK )

	//{{ 2012. 02. 22	박세훈	길드 이름 변경권
//#ifdef SERV_GUILD_CHANGE_NAME
	_ENUM( EGS_CHANGE_GUILD_NAME_CHECK_REQ )
	_ENUM( EGS_CHANGE_GUILD_NAME_CHECK_ACK )

	_ENUM( EGS_CHANGE_GUILD_NAME_REQ )
	_ENUM( EGS_CHANGE_GUILD_NAME_ACK )
//#endif SERV_GUILD_CHANGE_NAME
	//}}

	//////////////////////////////////////////////////////////////////////////
	// dummy packet enum
	_ENUM( EGS_GOOD_JOB_26_REQ )
	_ENUM( EGS_GOOD_JOB_27_REQ )
	_ENUM( EGS_GOOD_JOB_28_REQ )
	_ENUM( EGS_GOOD_JOB_29_REQ )
	_ENUM( EGS_GOOD_JOB_30_REQ )
	//////////////////////////////////////////////////////////////////////////

	//}}
	//////////////////////////////////////////////////////////////////////////

	//{{ 2009. 9. 22  최육사	전직캐쉬
	_ENUM( EGS_CHANGE_JOB_CASH_ITEM_NOT )
	_ENUM( EGS_CHANGE_USER_INFO_NOT )
	//}}

	//{{ 2009. 10. 26  최육사	트래픽공격
	_ENUM( EGS_TRAFFIC_ATTACKER_NOT )
	//}}

	//////////////////////////////////////////////////////////////////////////
	//{{ 2009. 11. 23  최육사	길드스킬

	_ENUM( EGS_GET_GUILD_SKILL_REQ )
	_ENUM( EGS_GET_GUILD_SKILL_ACK )
	_ENUM( EGS_GET_GUILD_SKILL_NOT )

	_ENUM( EGS_RESET_GUILD_SKILL_REQ )
	_ENUM( EGS_RESET_GUILD_SKILL_ACK )
	_ENUM( EGS_RESET_GUILD_SKILL_NOT )

	_ENUM( EGS_INIT_GUILD_SKILL_REQ )
	_ENUM( EGS_INIT_GUILD_SKILL_ACK )
	_ENUM( EGS_INIT_GUILD_SKILL_NOT )

	_ENUM( EGS_EXPIRE_GUILD_CASH_SKILL_POINT_NOT )

	_ENUM( EGS_CHANGE_SKILL_INFO_IN_ROOM_NOT )
	
	_ENUM( EGS_ADMIN_GET_GUILD_SKILL_POINT_REQ )
	_ENUM( EGS_ADMIN_GET_GUILD_SKILL_POINT_ACK )

	//}}
	//////////////////////////////////////////////////////////////////////////

	//{{ 2009. 12. 4  최육사	접속시간이벤트시스템개편
	_ENUM( EGS_TIME_EVENT_INFO_NOT )
	//}}

	//////////////////////////////////////////////////////////////////////////
	// 던전,대전 아이템 기능.
	_ENUM( EGS_CREATE_PVP_ITEM_REQ )
	_ENUM( EGS_CREATE_PVP_ITEM_ACK )
	_ENUM( EGS_CREATE_PVP_ITEM_NOT )

	//_ENUM( EGS_GET_ITEM_REQ ) // -> 기존 던전용 패킷을 이용하자.
	//_ENUM( EGS_GET_ITEM_ACK ) // -> 기존 던전용 패킷을 이용하자.
	//_ENUM( EGS_GET_ITEM_NOT ) // -> 기존 던전용 패킷을 이용하자.

	_ENUM( EGS_CHANGE_PVP_ITEM_NOT )

	_ENUM( EGS_CHANGE_PVP_ITEMMODE_REQ )
	_ENUM( EGS_CHANGE_PVP_ITEMMODE_ACK )
	_ENUM( EGS_CHANGE_PVP_ITEMMODE_NOT )

	// 던전,대전 아이템 기능.
	//////////////////////////////////////////////////////////////////////////

	//{{ 2009. 12. 8  최육사	크리스마스이벤트
	_ENUM( EGS_CHECK_TIME_EVENT_COMPLETE_REQ )
	_ENUM( EGS_CHECK_TIME_EVENT_COMPLETE_ACK )
	//}}

	//{{ 2009. 12. 14  최육사	헤니르임시인벤
	_ENUM( EGS_CLEAR_TEMP_INVENTORY_NOT )
	//}}

	//{{ dmlee 2009/12/15 PVP 게임 테스트 
	_ENUM( EGS_CHANGE_PVP_GAME_OPTION_REQ )
	_ENUM( EGS_CHANGE_PVP_GAME_OPTION_ACK )
	_ENUM( EGS_CHANGE_PVP_GAME_OPTION_NOT )
	//}} dmlee 2009/12/15 PVP 게임 테스트

	//{{ 2009. 12. 29  최육사	NPCKILLALL해킹방지
	_ENUM( EGS_DUNGEON_KILLALLNPC_CHECK_REQ )
	_ENUM( EGS_DUNGEON_KILLALLNPC_CHECK_ACK )
	_ENUM( EGS_REQUEST_HACKSHIELD_CHECK_NOT )
	//}}

	//////////////////////////////////////////////////////////////////////////
	//{{ 2009. 12. 31  최육사	길드 광고
	_ENUM( EGS_GET_GUILD_AD_LIST_REQ )
	_ENUM( EGS_GET_GUILD_AD_LIST_ACK )

	_ENUM( EGS_GET_GUILD_SKILL_IN_BOARD_REQ )
	_ENUM( EGS_GET_GUILD_SKILL_IN_BOARD_ACK )

	_ENUM( EGS_REGISTRATION_GUILD_AD_REQ )
	_ENUM( EGS_REGISTRATION_GUILD_AD_ACK )

	_ENUM( EGS_MODIFY_REG_GUILD_AD_REQ )
	_ENUM( EGS_MODIFY_REG_GUILD_AD_ACK )

	_ENUM( EGS_APPLY_JOIN_GUILD_REQ )
	_ENUM( EGS_APPLY_JOIN_GUILD_ACK )

	_ENUM( EGS_GET_APPLY_JOIN_GUILD_LIST_REQ )
	_ENUM( EGS_GET_APPLY_JOIN_GUILD_LIST_ACK )

	_ENUM( EGS_ACCEPT_JOIN_GUILD_REQ )
	_ENUM( EGS_ACCEPT_JOIN_GUILD_ACK )

	_ENUM( EGS_DELETE_APPLY_JOIN_GUILD_REQ )
	_ENUM( EGS_DELETE_APPLY_JOIN_GUILD_ACK )
	//}}
	//////////////////////////////////////////////////////////////////////////	

	//{{ 2010. 01. 07  최육사	추천인리스트
	_ENUM( EGS_GET_RECOMMEND_USER_LIST_REQ )
	_ENUM( EGS_GET_RECOMMEND_USER_LIST_ACK )

	_ENUM( EGS_RECOMMEND_USER_INFO_NOT )
	//}}

	//{{ 2010. 01. 29  최육사	PC방 상용화
	_ENUM( EGS_PC_BANG_AUTH_RESULT_NOT )
	//}}
	
	//{{ 2010. 02. 06  최육사	일일 이벤트 퀘스트
	_ENUM( EGS_EVENT_QUEST_INFO_NOT )
	//}}

	//{{ 2010. 02. 12  최육사	해킹툴 리스트
	_ENUM( EGS_HACKING_TOOL_LIST_NOT )
	//}}

	//{{ 2010. 02. 23  최육사	웹 포인트 이벤트
	_ENUM( EGS_ATTENDANCE_CHECK_REQ )
	_ENUM( EGS_ATTENDANCE_CHECK_ACK )

	_ENUM( EGS_GET_WEB_POINT_NOT )
	//}}

	_ENUM( EGS_SEARCH_TRADE_BOARD_REQ )
	_ENUM( EGS_SEARCH_TRADE_BOARD_ACK )

	//{{ 2010. 03. 22  최육사	기술의 노트
	_ENUM( EGS_EXPAND_SKILL_NOTE_PAGE_NUM_NOT )
	_ENUM( EGS_REG_SKILL_NOTE_MEMO_REQ )
	_ENUM( EGS_REG_SKILL_NOTE_MEMO_ACK )
	//}}

	//{{ 2010. 05. 06  최육사	비밀던전 헬모드
	_ENUM( EGS_DUNGEON_EFFECT_REMAINING_TIME_NOT )
	_ENUM( EGS_DUNGEON_EFFECT_TIME_OUT_NOT )
	//}}

	//{{ 2010. 05. 06  최육사	에러 팝업
	_ENUM( EGS_ERROR_POPUP_NOT )
	//}}

	//{{ 2010. 05. 20  최육사	스크립트 파싱
	_ENUM( EGS_GET_CLIENT_SCRIPT_REQ )
	_ENUM( EGS_GET_CLIENT_SCRIPT_ACK )
	//}}

	//{{ 2010. 06. 17  최육사	오토핵 방지
	_ENUM( EGS_SERVER_CHECK_HACK_USER_NOT )
	//}}

	//{{ 2010. 7. 21  최육사	펫 시스템
	_ENUM( EGS_CREATE_PET_REQ )
	_ENUM( EGS_CREATE_PET_ACK )

	_ENUM( EGS_GET_PET_LIST_REQ )
	_ENUM( EGS_GET_PET_LIST_ACK )

	_ENUM( EGS_SUMMON_PET_REQ )
	_ENUM( EGS_SUMMON_PET_ACK )
	_ENUM( EGS_SUMMON_PET_NOT )

	_ENUM( EGS_COMMANDS_FOR_PETS_REQ )
	_ENUM( EGS_COMMANDS_FOR_PETS_ACK )
	_ENUM( EGS_PET_ACTION_NOT )

	_ENUM( EGS_CHANGED_PET_SATIETY_NOT )
	_ENUM( EGS_CHANGED_PET_INTIMACY_NOT )
	_ENUM( EGS_CHANGED_PET_SATIETY_INTIMACY_NOT )
	
	_ENUM( EGS_FEED_PETS_REQ )
	_ENUM( EGS_FEED_PETS_ACK )
	_ENUM( EGS_FIRST_FEED_PETS_NOT )

	_ENUM( EGS_SET_AUTO_FEED_PETS_REQ )
	_ENUM( EGS_SET_AUTO_FEED_PETS_ACK )
	_ENUM( EGS_AUTO_FEED_NOT )	

	_ENUM( EGS_PET_EVOLUTION_REQ )
	_ENUM( EGS_PET_EVOLUTION_ACK )
	_ENUM( EGS_PET_EVOLUTION_NOT )

	_ENUM( EGS_ADMIN_CHANGE_PET_INFO_NOT )

	//{{ 2012. 02. 22	박세훈	펫 이름 변경권
//#ifdef SERV_PET_CHANGE_NAME
	_ENUM( EGS_CHANGE_PET_NAME_REQ )
	_ENUM( EGS_CHANGE_PET_NAME_ACK )
//#endif SERV_PET_CHANGE_NAME
	//}}

	//}}

	//{{ 2010. 8. 16	최육사	기간 리셋 아이템 이벤트
	_ENUM( EGS_RESET_PERIOD_ITEM_NOT )
	//}}

	//{{ 2010. 9. 29	최육사	ED 모니터링 치트
	_ENUM( EGS_ADMIN_SHOW_ED_CHEAT_REQ )
	_ENUM( EGS_ADMIN_SHOW_ED_CHEAT_ACK )
	//}}

	//{{ 2010. 10. 13	최육사	DLL Manager
	_ENUM( EGS_MODULE_INFO_UPDATE_NOT )
	//}}

	//{{ 2010. 11. 17	최육사	넥슨 빌링 청약 철회
	_ENUM( EGS_CASH_ITEM_REFUND_REQ )
	_ENUM( EGS_CASH_ITEM_REFUND_ACK )
	//}}

	//{{ 2011. 01. 04  김민성	속성 부적
	_ENUM( EGS_ATTRIB_ATTACH_ITEM_REQ )
	_ENUM( EGS_ATTRIB_ATTACH_ITEM_ACK )
	//}}

	//{{ 2011. 01. 06  김민성  스킬슬롯체인지 체크(인벤토리-기간제) 기능 구현
	_ENUM( EGS_SKILL_SLOT_CHANGE_ITEM_NOT )
	//}}

	//{{ 2011. 01. 25  김민성  월드 트리거 전달(던전만 적용중 - 이후 PVP 확장)
	_ENUM( EGS_WORLD_TRIGGER_RELOCATION_REQ )
	_ENUM( EGS_WORLD_TRIGGER_RELOCATION_ACK )
	_ENUM( EGS_WORLD_TRIGGER_RELOCATION_NOT )
	//}}

	//{{ 2011. 03. 26  김민성	청 1차 추가 스킬 추가 - 버프 스킬 정보 전달
	_ENUM( EGS_BUFF_SKILL_INFO_CONVEY_REQ )
	_ENUM( EGS_BUFF_SKILL_INFO_CONVEY_ACK )
	_ENUM( EGS_BUFF_SKILL_INFO_CONVEY_NOT )
	//}}

	//{{ 2011. 04. 13  김민성  글로벌 서버 추가
//#ifdef SERV_INSERT_GLOBAL_SERVER
	_ENUM( EGS_WORLD_MISSION_UPDATE_NOT )
	_ENUM( EGS_UPDATE_WORLD_BUFF_NOT )
	_ENUM( EGS_CREATE_ATTRIB_NPC_NOT )
//#endif SERV_INSERT_GLOBAL_SERVER
	//}} 2011. 04. 13  김민성  글로벌 서버 추가

	//////////////////////////////////////////////////////////////////////////
	// dummy packet enum
	_ENUM( EGS_GOOD_JOB_31_REQ )
	_ENUM( EGS_GOOD_JOB_32_REQ )
	_ENUM( EGS_GOOD_JOB_33_REQ )
	_ENUM( EGS_GOOD_JOB_34_REQ )
	_ENUM( EGS_GOOD_JOB_35_REQ )
	//////////////////////////////////////////////////////////////////////////
	
	//{{ 2011. 04. 04	최육사	대리 상인
	_ENUM( EGS_CREATE_PSHOP_AGENCY_REQ )
	_ENUM( EGS_CREATE_PSHOP_AGENCY_ACK )

	_ENUM( EGS_CHANGE_PSHOP_AGENCY_EXPIRATION_NOT )

	_ENUM( EGS_REG_PSHOP_AGENCY_ITEM_REQ )
	_ENUM( EGS_REG_PSHOP_AGENCY_ITEM_ACK )

	_ENUM( EGS_JOIN_MY_PSHOP_AGENCY_REQ )
	_ENUM( EGS_JOIN_MY_PSHOP_AGENCY_ACK )

	_ENUM( EGS_LEAVE_PSHOP_AGENCY_REQ )
	_ENUM( EGS_LEAVE_PSHOP_AGENCY_ACK )

	_ENUM( EGS_PSHOP_AGENCY_MESSAGE_NOT )

	_ENUM( EGS_STOP_SALE_PSHOP_AGENCY_REQ )
	_ENUM( EGS_STOP_SALE_PSHOP_AGENCY_ACK )

	_ENUM( EGS_PICK_UP_FROM_PSHOP_AGENCY_REQ )
	_ENUM( EGS_PICK_UP_FROM_PSHOP_AGENCY_ACK )

	_ENUM( EGS_ADMIN_PSHOP_AGENCY_CHEAT_REQ )
	//}}

	//{{ 2011. 05. 02  김민성	2차 보안 시스템
//#ifdef SERV_SECOND_SECURITY
	_ENUM( EGS_SECOND_SECURITY_INFO_NOT )

	_ENUM( EGS_AUTH_SECOND_SECURITY_REQ )	// 2차 보안 비밀번호 입력
	_ENUM( EGS_AUTH_SECOND_SECURITY_ACK )

	_ENUM( EGS_CREATE_SECOND_SECURITY_REQ )	// 2차 보안 설정
	_ENUM( EGS_CREATE_SECOND_SECURITY_ACK )

	_ENUM( EGS_DELETE_SECOND_SECURITY_REQ ) // 2차 보안 해지
	_ENUM( EGS_DELETE_SECOND_SECURITY_ACK )

	_ENUM( EGS_DELETE_SECOND_SECURITY_VERIFY_REQ ) // 2차 보안 해지 확인
	_ENUM( EGS_DELETE_SECOND_SECURITY_VERIFY_ACK )

	_ENUM( EGS_CHANGE_SECOND_SECURITY_PW_REQ )	// 2차 보안 비밀번호 변경
	_ENUM( EGS_CHANGE_SECOND_SECURITY_PW_ACK )

	_ENUM( EGS_COMPARE_SECOND_SECURITY_PW_REQ )	// 2차 보안 비밀번호 확인
	_ENUM( EGS_COMPARE_SECOND_SECURITY_PW_ACK )

    _ENUM( EGS_CHECK_SECOND_SECURITY_PW_CHRACTER_LIST_REQ ) // 2차 보안 비밀번호 확인(캐릭터 목록창)
    _ENUM( EGS_CHECK_SECOND_SECURITY_PW_CHRACTER_LIST_ACK )
//#endif SERV_SECOND_SECURITY
	//}}

	//{{ 2011. 03. 21  김민성	던전 난이도 보정
//#ifdef SERV_DUNGEON_DIFFICULTY_REVISION
	_ENUM( EGS_PARTY_CHANGE_CHECK_MIN_LEVEL_REQ )
	_ENUM( EGS_PARTY_CHANGE_CHECK_MIN_LEVEL_ACK )
	_ENUM( EGS_PARTY_CHANGE_CHECK_MIN_LEVEL_NOT )
//#endif SERV_DUNGEON_DIFFICULTY_REVISION
	//}}

	//{{ 2011. 05. 23  김민성	큐피엘 젤리 친밀도 증감
//#ifdef SERV_ADD_KEWPIEL_JELLY
	_ENUM( EGS_EAT_SPECIAL_FEED_NOT )
//#endif SERV_ADD_KEWPIEL_JELLY
	//}}
	
	//{{ 2011. 05. 27    김민성    휴면 복귀 유저 보상
//#ifdef SERV_COME_BACK_USER_REWARD
	_ENUM( EGS_COME_BACK_USER_NOT )
	_ENUM( EGS_COME_BACK_BUFF_NOT )
//#endif SERV_COME_BACK_USER_REWARD
	//}} 

	//{{ 2011. 06. 14	최육사	대전 개편
//#ifdef SERV_PVP_NEW_SYSTEM
	_ENUM( EGS_CHANGE_PARTY_TYPE_REQ )
	_ENUM( EGS_CHANGE_PARTY_TYPE_ACK )
	_ENUM( EGS_CHANGE_PARTY_TYPE_NOT )

	_ENUM( EGS_PVP_PARTY_CHANGE_MATCH_INFO_REQ )
	_ENUM( EGS_PVP_PARTY_CHANGE_MATCH_INFO_ACK )
	_ENUM( EGS_PVP_PARTY_CHANGE_MATCH_INFO_NOT )

	_ENUM( EGS_REQUEST_MATCH_MAKING_REQ )
	_ENUM( EGS_REQUEST_MATCH_MAKING_ACK )
	_ENUM( EGS_REG_MATCH_WAIT_LIST_SUCCESS_NOT )

	_ENUM( EGS_CANCEL_MATCH_MAKING_REQ )
	_ENUM( EGS_CANCEL_MATCH_MAKING_ACK )

	_ENUM( EGS_UNREG_MATCH_WAIT_LIST_NOT )
	_ENUM( EGS_MATCH_CLOSE_NOT )

	_ENUM( EGS_MATCH_MAKING_SUCCESS_NOT )
	_ENUM( EGS_MATCH_MAKING_SUCCESS_REPLY_NOT )	

	_ENUM( EGS_GAME_START_PVP_MATCH_NOT )

	_ENUM( EGS_PVP_NPC_UNIT_RE_BIRTH_POS_REQ )
	_ENUM( EGS_PVP_NPC_UNIT_RE_BIRTH_POS_ACK )

	_ENUM( EGS_PVP_NPC_UNIT_INFO_TO_SERVER_REQ )
	_ENUM( EGS_PVP_NPC_UNIT_INFO_TO_SERVER_ACK )
//#endif SERV_PVP_NEW_SYSTEM
	//}}

	//{{ 2011. 06. 22    김민성    이탈 방지 모델 - NEXON 세션 시스템 수정
//#ifdef SERV_NEXON_SESSION_PROTOCOL
	_ENUM( EGS_OUT_USER_RETAINING_REQ )
	_ENUM( EGS_OUT_USER_RETAINING_ACK )
	_ENUM( EGS_RETAINING_SELECT_REWARD_REQ )
	_ENUM( EGS_RETAINING_SELECT_REWARD_ACK )
//#endif SERV_NEXON_SESSION_PROTOCOL
	//}} 

	//{{ 2011.10.13 박진웅 : GM계정용 엘리트 소환기능
	//#ifdef SERV_CREATE_ELITE_FOR_ADMIN
	_ENUM( EGS_ADMIN_NPC_UNIT_CREATE_REQ )
	_ENUM( EGS_ADMIN_NPC_UNIT_CREATE_ACK )
	_ENUM( EGS_ADMIN_NPC_UNIT_CREATE_NOT )
	//#endif SERV_CREATE_ELITE_FOR_ADMIN
	//}}


	//{{ 2011. 08. 08	최육사	머신ID 블럭기능
//#ifdef SERV_MACHINE_ID_BLOCK
	_ENUM( EGS_CHECK_MACHINE_ID_REQ )
	_ENUM( EGS_CHECK_MACHINE_ID_ACK )
//#endif SERV_MACHINE_ID_BLOCK
	//}}

	//{{ 2011. 08. 10    김민성    채널링 SOAP
//#ifdef SERV_CHANNELING_SOAP
	_ENUM( EGS_TOONILAND_USER_ID_NOT )
//#endif SERV_CHANNELING_SOAP
	//}}
	//{{ 2011. 08. 11	최육사	투니 랜드 채널링 
//#ifdef SERV_TOONILAND_CHANNELING // SERV_JAPAN_CHANNELING
	_ENUM( EGS_ADMIN_CHANNELING_CODE_CHEAT_NOT )
//#endif SERV_TOONILAND_CHANNELING // SERV_JAPAN_CHANNELING
	//}}
	//{{ 2011. 08. 12   김민성      헤니르 개편 
//#ifdef SERV_NEW_HENIR_TEST
	_ENUM( EGS_HENIR_REWARD_COUNT_NOT )
	_ENUM( EGS_ADMIN_HENIR_REWARD_CHEAT_NOT )
//#endif SERV_NEW_HENIR_TEST
	//}}

	//////////////////////////////////////////////////////////////////////////
	// dummy packet enum
	_ENUM( EGS_GOOD_JOB_36_REQ )
	_ENUM( EGS_GOOD_JOB_37_REQ )
	_ENUM( EGS_GOOD_JOB_38_REQ )
	_ENUM( EGS_GOOD_JOB_39_REQ )
	_ENUM( EGS_GOOD_JOB_40_REQ )
	//////////////////////////////////////////////////////////////////////////

	//{{ 2011. 08. 29	김민성       일일 랜덤 퀘스트
//#ifdef SERV_RANDOM_DAY_QUEST
	_ENUM( EGS_CHANGE_RANDOM_QUEST_NOT )
//#endif SERV_RANDOM_DAY_QUEST
	//}}
	
	//{{ 2011. 09. 14  김민성	해킹 프로세스 목록 전달 - 게임 로딩 이전 단계
//#ifdef SERV_DLL_LIST_CHECK_BEFOR_LOADING
	_ENUM( ECH_HACKING_TOOL_LIST_REQ )
	_ENUM( ECH_HACKING_TOOL_LIST_ACK )
//#endif SERV_DLL_LIST_CHECK_BEFOR_LOADING
	//}}

	//{{ 2011. 09. 20  김민성	게임내 ED 감시 모니터링
//#ifdef SERV_ED_MONITORING_IN_GAME
	_ENUM( EGS_ADMIN_ED_MONITORING_CHEAT_NOT )
	_ENUM( EGS_ED_MONITORING_BLOCK_REQ )
	_ENUM( EGS_ED_MONITORING_BLOCK_ACK )
	_ENUM( EGS_COMMUNITY_USER_LIST_MONITORING_MODE_REQ )
//#endif SERV_ED_MONITORING_IN_GAME
	//}}

	//{{ 2011. 10. 13	최육사	컨텐츠 관리자
//#ifdef SERV_CONTENT_MANAGER
	_ENUM( EGS_CASH_SHOP_OPEN_NOT )
//#endif SERV_CONTENT_MANAGER
	//}}

	//{{ 2011. 09. 29  김민성	셧다운제 도입
//#ifdef SERV_SHUTDOWN_SYSTEM
	_ENUM( EGS_SHUT_DOWN_MESSAGE_NOT )
//#endif SERV_SHUTDOWN_SYSTEM
	//}}

	//{{ 2011.11.02     김민성    서버에서 SN 발급 및 유효성 검사
//#ifdef SERV_SERIAL_NUMBER_AVAILABILITY_CHECK
	_ENUM( ECH_NEW_SERVER_SN_NOT )
//#endif SERV_SERIAL_NUMBER_AVAILABILITY_CHECK
	//}}

	//{{ 2011. 11. 21  김민성	전직 변경 아이템
//#ifdef SERV_UNIT_CLASS_CHANGE_ITEM
	_ENUM( EGS_BUY_UNIT_CLASS_CHANGE_NOT )
//#endif SERV_UNIT_CLASS_CHANGE_ITEM
	//}}

	//{{ 2012. 02. 14    김민성   PVP 대전 Item 생성 위치 변경
//#ifdef SERV_PVP_ITEM_CHANGE_POS
	_ENUM( EGS_CHANGE_PVP_ITEM_POS_REQ )
	_ENUM( EGS_CHANGE_PVP_ITEM_POS_ACK )
	_ENUM( EGS_CHANGE_PVP_ITEM_POS_NOT )
//#endif SERV_PVP_ITEM_CHANGE_POS
	//}}

	//{{ 2012. 02. 21	김민성	인벤토리 정렬
//#ifdef SERV_SORT_CATEGORY_ITEM 
	_ENUM( EGS_SORT_CATEGORY_ITEM_REQ )
	_ENUM( EGS_SORT_CATEGORY_ITEM_ACK )
//#endif SERV_SORT_CATEGORY_ITEM 
	//}}

	//{{ 2011. 10. 27	최육사	배틀필드 시스템
//#ifdef SERV_BATTLE_FIELD_SYSTEM
	_ENUM( EGS_JOIN_BATTLE_FIELD_REQ )
	_ENUM( EGS_JOIN_BATTLE_FIELD_ACK )
	_ENUM( EGS_JOIN_BATTLE_FIELD_NOT )

	_ENUM( EGS_LEAVE_BATTLE_FIELD_NOT )

	_ENUM( EGS_BATTLE_FIELD_JOIN_USER_LOAD_COMPLETE_NOT )
	
	_ENUM( EGS_BATTLE_FIELD_NPC_LOAD_NOT )

	_ENUM( EGS_BATTLE_FIELD_NPC_LOAD_COMPLETE_REQ )
	_ENUM( EGS_BATTLE_FIELD_NPC_LOAD_COMPLETE_ACK )

	_ENUM( EGS_BATTLE_FIELD_NPC_P2P_SYNC_NOT )
//#ifndef  SERV_OPTIMIZE_ROBUST_USER_NPC_PACKET_SEND
	//_ENUM( EGS_BATTLE_FIELD_NPC_P2P_SYNC_COMPLETE_NOT )
//#endif  SERV_OPTIMIZE_ROBUST_USER_NPC_PACKET_SEND

	_ENUM( EGS_BATTLE_FIELD_EVENT_MESSAGE_NOT )

	_ENUM( EGS_UPDATE_BATTLE_FIELD_USER_POS_NOT )

	_ENUM( EGS_QUICK_START_DUNGEON_GAME_REQ )				// 구성된 파티로 또는 혼자서 던전 게임 바로 시작!
	_ENUM( EGS_QUICK_START_DUNGEON_GAME_ACK )

	_ENUM( EGS_UPDATE_MOVE_TO_PARTY_MEMBER_INFO_NOT )		// 파티원에게 이동하는 버튼 활성화 여부

	// 자동 파티
	_ENUM( EGS_AUTO_PARTY_DUNGEON_GAME_REQ )				// 구성된 파티로 또는 혼자서 자동 파티 신청!
	_ENUM( EGS_AUTO_PARTY_DUNGEON_GAME_ACK )
	_ENUM( EGS_REG_AUTO_PARTY_WAIT_LIST_SUCCESS_NOT )		// 자동 파티 신청 성공!! 파티UI가 자동 파티UI로 변경된다.

	_ENUM( EGS_CANCEL_AUTO_PARTY_MAKING_REQ )				// 자동 파티 등록 해제 요청
	_ENUM( EGS_CANCEL_AUTO_PARTY_MAKING_ACK )

	_ENUM( EGS_UNREG_AUTO_PARTY_WAIT_LIST_NOT )				// 자동 파티 등록 해제!! 파티UI가 원래 파티UI로 변경된다.

	_ENUM( EGS_AUTO_PARTY_MAKING_SUCCESS_NOT )				// 자동 파티 매칭 성공! 던전 게임을 시작할지 말지를 물어보는 팝업이 뜬다!
	_ENUM( EGS_AUTO_PARTY_MAKING_SUCCESS_REPLY_NOT )		// 팝업의 수락&거절에 대한 응답을 담아 서버로 보내는 패킷

	_ENUM( EGS_AUTO_PARTY_CLOSE_NOT )						// 자동 파티 매칭이 닫히는 경우 오는 패킷, 떠있는 팝업을 지우고 왜 매칭이 실패했는지 에러 팝업을 띄운다.

	_ENUM( EGS_REGROUP_PARTY_NOT )							// 새로 맺어지는 파티 정보

	_ENUM( EGS_REQUEST_GET_AUTO_PARTY_BONUS_INFO_NOT )		// 자동 파티 보너스 정보 요청
	_ENUM( EGS_UPDATE_AUTO_PARTY_BONUS_INFO_NOT )			// 자동 파티 보너스 정보

	// 플레이 정보
	_ENUM( EGS_UPDATE_PLAY_STATUS_NOT )						// 게임 플레이 상태	
	_ENUM( EGS_UPDATE_PARTY_MEMBER_STATUS_NOT )				// 파티원들의 상태 정보

	_ENUM( EGS_GAME_START_TIME_COUNT_NOT )					// 게임 시작 카운트

	_ENUM( EGS_USE_SKILL_BUFF_IN_PLAY_NOT )					// 게임중에 사용되는 스킬에 대한 정보
	_ENUM( EGS_USE_SKILL_BUFF_IN_PLAY_BROAD_NOT )			// 게임중에 사용되는 스킬에 대한 정보 브로드 캐스팅
//#endif SERV_BATTLE_FIELD_SYSTEM
	//}}
	
	//{{ 2012. 04. 11	박세훈	( 복귀 유저 표시 )
//#ifdef SERV_EVENT_RETURN_USER_MARK_SCRIPT
	_ENUM( EGS_CRITERION_EVENT_NOT )
//#endif SERV_EVENT_RETURN_USER_MARK_SCRIPT
	//}}

	//{{ 2012. 06. 04	김민성       서버 해킹 유저 체크 요청 응답으로 변경
//#ifdef SERV_SERVER_CHECK_HACK_USER_REQ_ACK
	_ENUM( EGS_SERVER_CHECK_HACK_USER_REQ )
	_ENUM( EGS_SERVER_CHECK_HACK_USER_ACK )
	_ENUM( EGS_CHECK_HACK_USER_PACKET_REQUEST_NOT )
//#endif SERV_SERVER_CHECK_HACK_USER_REQ_ACK
	//}}

	//{{ 2012. 05. 17	박세훈	키보드 맵핑 정보를 DB에서 읽고 쓰기
//#ifdef SERV_KEYBOARD_MAPPING_INFO_RW
	_ENUM( EGS_KEYBOARD_MAPPING_INFO_WRITE_REQ )
	_ENUM( EGS_KEYBOARD_MAPPING_INFO_WRITE_ACK )
	_ENUM( EGS_KEYBOARD_MAPPING_INFO_NOT )
//#endif SERV_KEYBOARD_MAPPING_INFO_RW
	//}}

	//{{ 2012. 05. 25	박세훈	채팅 옵션 정보를 DB에서 읽고 쓰기
//#ifdef SERV_CHAT_OPTION_INFO_RW
	_ENUM( EGS_CHAT_OPTION_INFO_WRITE_REQ )
	_ENUM( EGS_CHAT_OPTION_INFO_WRITE_ACK )
	_ENUM( EGS_CHAT_OPTION_INFO_NOT )
//#endif SERV_CHAT_OPTION_INFO_RW
	//}}
	//{{ 2012. 05. 30	최육사	그노시스 기간 치트
//#ifdef SERV_CASH_SKILL_POINT_DATE_CHANGE
	_ENUM( EGS_ADMIN_CASH_SKILL_POINT_DATE_CHANGE_REQ )
	_ENUM( EGS_ADMIN_CASH_SKILL_POINT_DATE_CHANGE_ACK )
//#endif SERV_CASH_SKILL_POINT_DATE_CHANGE
	//}}
	//{{ 2012. 06. 13	김민성       선택적 셧다운제
//#ifdef SERV_SELECTIVE_SHUTDOWN_SYSTEM
	_ENUM( EGS_BEFORE_SHUT_DOWN_MESSAGE_NOT )
//#endif SERV_SELECTIVE_SHUTDOWN_SYSTEM
	//}}

//#ifdef SERV_EVENT_MONEY	// 김민성 // 적용날짜: 2013-07-04
	_ENUM( EGS_UPDATE_EVENT_MONEY_NOT )
//#endif // SERV_EVENT_MONEY

	//{{ 2012. 07. 02	최육사		대기열 시스템
//#ifdef SERV_WAIT_QUEUE_SYSTEM
	_ENUM( ECH_WAIT_QUEUE_MESSAGE_NOT )
//#endif SERV_WAIT_QUEUE_SYSTEM
	//}}

	//{{ 버프 관리 시스템 - 김민성
//#ifdef SERV_SERVER_BUFF_SYSTEM
	_ENUM( EGS_UPDATE_BUFF_INFO_NOT )						// 버프 정보 갱신 s -> c
	_ENUM( EGS_UPDATE_BUFF_INFO_IN_ROOM_NOT )				// 방 안에서의 버프 정보

	_ENUM( EGS_UPDATE_USER_UNIT_BUFF_INFO_NOT )
	_ENUM( EGS_UPDATE_USER_UNIT_BUFF_INFO_BROAD_NOT )

	_ENUM( EGS_UPDATE_NPC_UNIT_BUFF_INFO_NOT )
	_ENUM( EGS_UPDATE_NPC_UNIT_BUFF_INFO_BROAD_NOT )
//#endif SERV_SERVER_BUFF_SYSTEM
	//}}
	//{{ 2012. 07. 24	박세훈	해당 캐릭터의 모든 스킬을 다 찍는 치트
//#ifdef SERV_ADMIN_CHEAT_GET_ALL_SKILL
	_ENUM( EGS_ADMIN_CHEAT_GET_ALL_SKILL_REQ )
	_ENUM( EGS_ADMIN_CHEAT_GET_ALL_SKILL_ACK )
//#endif SERV_ADMIN_CHEAT_GET_ALL_SKILL
	//}}

	//{{ 2012. 08. 14	박세훈	대천사의 주화 이벤트 가이드 문구 출력
//#ifdef SERV_ARCHUANGEL_S_COIN_EVENT_GUIDE
	_ENUM( EGS_CHECK_THE_ARCHUANGEL_S_COIN_EVENT_LETTER_REQ )
	_ENUM( EGS_CHECK_THE_ARCHUANGEL_S_COIN_EVENT_LETTER_ACK )
//#endif SERV_ARCHUANGEL_S_COIN_EVENT_GUIDE
	//}}

	//{{ 2012. 09. 02	박세훈	Merge ( 대전에서 클라이언트 조작등으로 UDP 패킷이 날아오지 않는 유저가 발견되면 서버에서 킥한다. // 2012.06.11 lygan_조성욱 )
//#ifdef UDP_CAN_NOT_SEND_USER_KICK
	_ENUM( EGS_UDP_CHECK_KICK_USER_NOT )
	_ENUM( EGS_UDP_KICK_GAMEEDIT_NOT )
//#endif UDP_CAN_NOT_SEND_USER_KICK
	//}}

	//{{ 2012 대전 시즌2 전야 런칭 이벤트	- 김민성
//#ifdef SERV_2012_PVP_SEASON2_EVENT
	_ENUM( EGS_PVP_EVENT_INFO_NOT )
//#endif SERV_2012_PVP_SEASON2_EVENT
	//}}

	//{{ 2012. 09. 21	박세훈	빙고 이벤트
//#ifdef SERV_EVENT_BINGO
	_ENUM( EGS_BINGO_EVENT_INFO_REQ )		// 빙고 관련 이벤트 정보
	_ENUM( EGS_BINGO_EVENT_INFO_ACK )
	_ENUM( EGS_BINGO_EVENT_LOTTERY_REQ )	// 숫자 뽑기
	_ENUM( EGS_BINGO_EVENT_LOTTERY_ACK )
	_ENUM( EGS_BINGO_EVENT_MIX_REQ )		// 숫자 뒤섞기
	_ENUM( EGS_BINGO_EVENT_MIX_ACK )
	_ENUM( EGS_BINGO_EVENT_RESET_REQ )		// 판 초기화
	_ENUM( EGS_BINGO_EVENT_RESET_ACK )
	_ENUM( EGS_BINGO_EVENT_INIT_REQ )		// 12줄 완성 후 초기화
	_ENUM( EGS_BINGO_EVENT_INIT_ACK )
//#endif SERV_EVENT_BINGO
	//}}

	//{{ 공존의 축제 - 지진 효과 - 김민성
//#ifdef SERV_EARTH_QUAKE_EFFECT
	_ENUM( EGS_EARTH_QUAKE_NOT )
//#endif SERV_EARTH_QUAKE_EFFECT
	//}}
	
	//{{ 2012. 09. 19   김민성   캐시샵 방문 상태
//#ifdef SERV_VISIT_CASH_SHOP
	_ENUM( EGS_VISIT_CASH_SHOP_NOT )
//#endif SERV_VISIT_CASH_SHOP
	//}}

	//{{ 배틀필드 위험도 확인 치트 - 김민성
//#ifdef SERV_BATTLE_FIELD_DANGEROUS_CHEAT
	_ENUM( EGS_BATTLE_FIELD_DANGEROUS_VALUE_NOT )
//#endif SERV_BATTLE_FIELD_DANGEROUS_CHEAT
	//}}

	//{{ 2012. 10. 10	박세훈	튕긴 유저 마을로 보내기
//#ifdef UDP_CAN_NOT_SEND_USER_KICK
	_ENUM( EGS_UDP_KICK_STATE_CHANGE_FIELD_NOT )
//#endif UDP_CAN_NOT_SEND_USER_KICK
	//}}
	
	//{{ 핑 상태체크 호스트 변경 - 김민성
//#ifdef SERV_CHOOSE_FASTEST_HOST
	_ENUM( EGS_UDP_PING_SCORE_NOT )
	_ENUM( EGS_CHECK_PING_SCORE_CHANGE_HOST_NOT )
//#endif SERV_CHOOSE_FASTEST_HOST
	//}	
	//{{ 2012. 10. 30	박세훈	Merge 랜선랙 방지 작업-릴레이를 기본적으로 사용한다.
//#ifdef SERV_FIX_SYNC_PACKET_USING_RELAY
	_ENUM( EGS_FORCE_RELAY_REQ )
	_ENUM( EGS_FORCE_RELAY_NOT )
//#endif SERV_FIX_SYNC_PACKET_USING_RELAY
	//}}
	//{{ 2012. 11. 13	최육사		자동파티 대기열 카운트 표시
//#ifdef SERV_AUTO_PARTY_WAIT_USER_COUNT_VIEW
	_ENUM( EGS_AUTO_PARTY_WAIT_USER_COUNT_NOT )
//#endif SERV_AUTO_PARTY_WAIT_USER_COUNT_VIEW
	//}}
	//{{ 2012. 12. 5	최육사		옵저버 대전 난입 모드
//#ifdef SERV_OBSERVER_PVP_INTRUDE_MODE
	_ENUM( EGS_ADMIN_OBSERVER_MODE_REQ )
	_ENUM( EGS_ADMIN_OBSERVER_MODE_ACK )
//#endif SERV_OBSERVER_PVP_INTRUDE_MODE
	//}}

	//{{ 2012. 11. 20	박세훈	영웅 대전 참가자 관리용 리스트
//#ifdef SERV_HERO_PVP_MANAGE_LIST
	_ENUM( EGS_ADMIN_HERO_PVP_USER_LIST_REQ )
	_ENUM( EGS_ADMIN_HERO_PVP_USER_LIST_ACK )

	_ENUM( EGS_ADMIN_NOTIFY_HERO_PVP_USER_REQ )
	_ENUM( EGS_ADMIN_NOTIFY_HERO_PVP_USER_ACK )
	_ENUM( EGS_ADMIN_NOTIFY_HERO_PVP_USER_NOT )
//#endif SERV_HERO_PVP_MANAGE_LIST
	//}}

	//{{ 2013. 01. 09 던전 강퇴 시스템 - 김민성
//#ifdef SERV_DUNGEON_FORCED_EXIT_SYSTEM
	_ENUM( EGS_BAD_ATTITUDE_USER_CHECK_INFO_NOT )
	_ENUM( EGS_BAD_ATTITUDE_USER_NOT )
	_ENUM( EGS_FORCED_EXIT_VOTE_REQ )
	_ENUM( EGS_FORCED_EXIT_VOTE_ACK )
	_ENUM( EGS_BAD_ATTITUDE_USER_MSG_NOT )
	_ENUM( EGS_DEFENCE_DUNGEON_WAVE_ID_NOT )
//#endif SERV_DUNGEON_FORCED_EXIT_SYSTEM
	//}
	
	//{{ 2013. 01. 21  대규모 이벤트 보상 시 최초 선택 캐릭터에게 지급하는 시스템 - 김민성
//#ifdef SERV_FIRST_SELECT_UNIT_REWARD_SYSTEM
	_ENUM( EGS_EXIST_FIRST_SELECT_UNIT_REWARD_NOT )
//#endif SERV_FIRST_SELECT_UNIT_REWARD_SYSTEM
	//}
	//{{ 2013. 02. 01  이벤트 발렌타인 던전 - 김민성
//#ifdef SERV_EVENT_VALENTINE_DUNGEON
	_ENUM( EGS_SYNC_DUNGEON_TIMER_NOT )
//#endif SERV_EVENT_VALENTINE_DUNGEON
	//}

	//{{ 2013. 02. 07   플루오르 스톤 강화 이벤트 실시간 적용 - 김민성
//#ifdef SERV_SUPPORT_MATERIAL_ENCHANT_EVENT
	_ENUM( EGS_SUPPORT_MATERIAL_EVENT_TIME_REQ )
	_ENUM( EGS_SUPPORT_MATERIAL_EVENT_TIME_ACK )
//#endif SERV_SUPPORT_MATERIAL_ENCHANT_EVENT
	//}

	//{{ 2013. 03. 12	최육사	몬스터 유효 검사
//#ifdef SERV_CHECK_EXIST_MONSTER_UID
	_ENUM( EGS_CHECK_EXIST_MONSTER_UID_REQ )
	_ENUM( EGS_CHECK_EXIST_MONSTER_UID_ACK )
//#endif SERV_CHECK_EXIST_MONSTER_UID
	//}}

	//{{ 2013. 02. 15   필드 중간 보스 - 김민성
//#ifdef SERV_BATTLEFIELD_MIDDLE_BOSS
	_ENUM( EGS_NPC_UNIT_CREATE_MIDDLE_BOSS_NOT )
	_ENUM( EGS_ADMIN_BATTLE_FIELD_INCREASE_DANGER_REQ )
	_ENUM( EGS_ADMIN_BATTLE_FIELD_INCREASE_DANGER_ACK )
	_ENUM( EGS_SYNC_BATTLE_FIELD_DAMAGED_MAP_REQ )
	_ENUM( EGS_SYNC_BATTLE_FIELD_DAMAGED_MAP_ACK )
	_ENUM( EGS_SYNC_BATTLE_FIELD_DAMAGED_MAP_NOT )
	_ENUM( EGS_BATTLE_FIELD_NPC_DAMAGED_MAP_REQ )
	_ENUM( EGS_BATTLE_FIELD_NPC_DAMAGED_MAP_ACK )
//#endif SERV_BATTLEFIELD_MIDDLE_BOSS
	//}

	//{{ 2013. 3. 4	박세훈	 로컬 랭킹 시스템
//#ifdef SERV_LOCAL_RANKING_SYSTEM
	_ENUM( EGS_LOCAL_RANKING_USER_INFO_READ_REQ )
	_ENUM( EGS_LOCAL_RANKING_USER_INFO_READ_ACK )
	_ENUM( EGS_LOCAL_RANKING_USER_INFO_WRITE_REQ )
	_ENUM( EGS_LOCAL_RANKING_USER_INFO_WRITE_ACK )

	_ENUM( EGS_LOCAL_RANKING_INQUIRY_REQ )
	_ENUM( EGS_LOCAL_RANKING_INQUIRY_ACK )

	_ENUM( EGS_LOCAL_RANKING_RANK_UP_NOT )
//#endif SERV_LOCAL_RANKING_SYSTEM
	//}}

	
//#ifdef SERV_ACTIVE_KOG_GAME_PERFORMANCE_CHECK
	_ENUM( EGS_SYSTEM_INFO )
	_ENUM( EGS_TCP_PING )
	_ENUM( EGS_KOG_GAME_PERFORMANCE_VILLAGE_LOG )
	_ENUM( EGS_KOG_GAME_PERFORMANCE_FIELD_LOG )
	_ENUM( EGS_KOG_GAME_PERFORMANCE_DUNGEON_LOG )
	_ENUM( EGS_KOG_GAME_PERFORMANCE_PVP_LOG )
//#endif//SERV_ACTIVE_KOG_GAME_PERFORMANCE_CHECK

//#ifdef SERV_ACTIVE_KOG_GAME_PERFORMANCE_CHECK_VER2
	_ENUM( EGS_GET_ACTIVE_LAGCHECK_REQ )
	_ENUM( EGS_GET_ACTIVE_LAGCHECK_ACK )
//#endif//SERV_ACTIVE_KOG_GAME_PERFORMANCE_CHECK_VER2

//#ifdef SERV_OPTIMIZE_TCP_RELAY_TEST
//	_ENUM( EGS_TCP_RELAY_TEST )
//	_ENUM( EGS_TCP_RELAY_TEST2 )
//#endif//SERV_OPTIMIZE_TCP_RELAY_TEST


//{{ 2012. 11. 20	박세훈	영웅 대전 참가자 관리용 리스트
//#ifdef SERV_HERO_PVP_MANAGE_LIST
	_ENUM( EGS_ADMIN_HERO_PVP_USER_ADD_REQ )
	_ENUM( EGS_ADMIN_HERO_PVP_USER_ADD_ACK )

	_ENUM( EGS_ADMIN_HERO_PVP_USER_REMOVE_REQ )
	_ENUM( EGS_ADMIN_HERO_PVP_USER_REMOVE_ACK )

	_ENUM( EGS_ADMIN_HERO_PVP_USER_CONNECTION_NOT )
//#endif SERV_HERO_PVP_MANAGE_LIST
//}}
	//{{ 2013. 04. 05	최육사	어둠의 문 개편
	//#ifdef SERV_NEW_DEFENCE_DUNGEON
	_ENUM( EGS_DECISION_ENTER_DEFENCE_DUNGEON_NOT )
	_ENUM( EGS_DEFENCE_DUNGEON_GAME_START_NOT )
	_ENUM( EGS_CHANGE_GAME_STAT_INFO_IN_ROOM_NOT )

	_ENUM( EGS_USE_DEFENCE_DUNGEON_QUICK_SLOT_REQ )
	_ENUM( EGS_USE_DEFENCE_DUNGEON_QUICK_SLOT_ACK )
	_ENUM( EGS_USE_DEFENCE_DUNGEON_QUICK_SLOT_NOT )

	_ENUM( EGS_UPDATE_INVENTORY_SLOT_INFO_NOT )
	//#endif SERV_NEW_DEFENCE_DUNGEON
	//}}

//#ifdef	SERV_LOCAL_RANKING_SYSTEM // 적용날짜: 2013-04-05
	_ENUM( EGS_LOCAL_RANKING_WATCH_UNIT_REQ )
	_ENUM( EGS_LOCAL_RANKING_WATCH_UNIT_ACK )
//#endif	// SERV_LOCAL_RANKING_SYSTEM

//{{ 2013. 04. 01	 인연 시스템 - 김민성
//#ifdef SERV_RELATIONSHIP_SYSTEM
	_ENUM( EGS_COUPLE_PROPOSE_REQ )	// 커플 신청
	_ENUM( EGS_COUPLE_PROPOSE_ACK )
	_ENUM( EGS_COUPLE_PROPOSE_NOT )

	_ENUM( EGS_COUPLE_PROPOSE_AGREE_NOT )	// 커플 신청 응답
	_ENUM( EGS_COUPLE_PROPOSE_RESULT_NOT )	// 커플 맺기 결과
	_ENUM( EGS_COUPLE_MAKING_SUCCESS_NOT )	// 커플 맺음 알림

	_ENUM( EGS_RELATIONSHIP_INFO_REQ )	// 인연 정보 요청(커뮤니티창)
	_ENUM( EGS_RELATIONSHIP_INFO_ACK )

	_ENUM( EGS_RELATIONSHIP_EFFECT_NOT )	// 연인 이팩트

	_ENUM( EGS_WEDDING_PROPOSE_REQ )	// 결혼 신청
	_ENUM( EGS_WEDDING_PROPOSE_ACK )

	_ENUM( EGS_CHECK_NICK_NAME_REQ )	// 닉네임 검사
	_ENUM( EGS_CHECK_NICK_NAME_ACK )

	_ENUM( EGS_WEDDING_ITEM_INFO_REQ )
	_ENUM( EGS_WEDDING_ITEM_INFO_ACK )

	_ENUM( EGS_CALL_MY_LOVER_REQ )	// 연인 소환
	_ENUM( EGS_CALL_MY_LOVER_ACK )
	_ENUM( EGS_CALL_MY_LOVER_VILLAGE_NOT )
	_ENUM( EGS_CALL_MY_LOVER_ROOM_NOT )

	_ENUM( EGS_CALL_MY_LOVER_AGREE_VILLAGE_NOT )	// 소환 응답
	_ENUM( EGS_CALL_MY_LOVER_STATE_CHANGE_FIELD_NOT )	// 소환 마을 입장

	_ENUM( EGS_CALL_MY_LOVER_AGREE_ROOM_NOT )	// 소환 응답
	_ENUM( EGS_CALL_MY_LOVER_JOIN_BATTLE_FIELD_NOT )	// 소환 필드 입장

	_ENUM( EGS_CALL_MY_LOVER_AGREE_RESULT_NOT )	// 소환 응답 결과

	_ENUM( EGS_CALL_MY_LOVER_JOIN_BATTLE_FIELD_FAILD_NOT )	// 소환 응답 이후 입장 실패 알림

	_ENUM( EGS_JOIN_WEDDING_HALL_REQ )	// 결혼식장 입장 요청
	_ENUM( EGS_JOIN_WEDDING_HALL_ACK )	// 결혼식장 입장 결과
	_ENUM( EGS_JOIN_WEDDING_HALL_NOT )	// 결혼식장 입장 알림

	_ENUM( EGS_LEAVE_WEDDING_HALL_REQ )	// 결혼식장 이탈 요청
	_ENUM( EGS_LEAVE_WEDDING_HALL_ACK )	// 결혼식장 이탈 결과
	_ENUM( EGS_LEAVE_WEDDING_HALL_NOT )	// 결혼식장 이탈 알림

	_ENUM( EGS_CHECK_BREAK_UP_REQ )	// 헤어지기 요청
	_ENUM( EGS_CHECK_BREAK_UP_ACK )	// 헤어지기 결과

	_ENUM( EGS_BREAK_UP_REQ )	// 헤어지기 요청
	_ENUM( EGS_BREAK_UP_ACK )	// 헤어지기 결과
	_ENUM( EGS_BREAK_UP_NOT )	// 헤어지기 알림 -- 연인에게 전달

	_ENUM( EGS_START_WEDDING_REQ )	// 결혼식 시작 요청
	_ENUM( EGS_START_WEDDING_ACK )	// 결혼식 시작 요청 결과

	_ENUM( EGS_START_WEDDING_ASK_REQ )	// 결혼식 시작 동의 문의
	_ENUM( EGS_START_WEDDING_ASK_ACK )	// 결혼식 시작 동의 응답
	_ENUM( EGS_START_WEDDING_AGREE_NOT )	// 결혼식 시작 동의 알림
    
	_ENUM( EGS_START_WEDDING_NOT )	// 결혼식 시작 동의 알림

	_ENUM( EGS_CHANGE_LOVE_WORD_REQ )	// 애칭 변경 요청
	_ENUM( EGS_CHANGE_LOVE_WORD_ACK )	// 애칭 변경 결과
	_ENUM( EGS_CHANGE_LOVE_WORD_NOT )	// 애칭 변경 알림

	_ENUM( EGS_ADMIN_CHANGE_COUPLE_DATE_REQ )	// 커플 맺은 시간 변경
	_ENUM( EGS_ADMIN_CHANGE_COUPLE_DATE_ACK )
//#endif SERV_RELATIONSHIP_SYSTEM
//}

//#ifdef	SERV_RIDING_PET_SYSTM// 적용날짜: 2013-04-20
	_ENUM( EGS_GET_RIDING_PET_LIST_REQ )
	_ENUM( EGS_GET_RIDING_PET_LIST_ACK )

	_ENUM( EGS_SUMMON_RIDING_PET_REQ )
	_ENUM( EGS_SUMMON_RIDING_PET_ACK )
	_ENUM( EGS_SUMMON_RIDING_PET_NOT )

	_ENUM( EGS_UNSUMMON_RIDING_PET_REQ )
	_ENUM( EGS_UNSUMMON_RIDING_PET_ACK )
	_ENUM( EGS_UNSUMMON_RIDING_PET_NOT )

	_ENUM( EGS_CREATE_RIDING_PET_REQ )
	_ENUM( EGS_CREATE_RIDING_PET_ACK )

	_ENUM( EGS_RELEASE_RIDING_PET_REQ )
	_ENUM( EGS_RELEASE_RIDING_PET_ACK )
	_ENUM( EGS_RELEASE_RIDING_PET_NOT )		// 기간제 라이딩 펫의 만료 패킷

	_ENUM( EGS_UPDATE_RIDING_PET_NOT )
//#endif	// SERV_RIDING_PET_SYSTM

//{{ 2013. 05. 10	최육사	아이템 개편
//#ifdef SERV_NEW_ITEM_SYSTEM_2013_05
	_ENUM( EGS_ITEM_EVALUATE_REQ )
	_ENUM( EGS_ITEM_EVALUATE_ACK )

	_ENUM( EGS_RESTORE_ITEM_EVALUATE_REQ )
	_ENUM( EGS_RESTORE_ITEM_EVALUATE_ACK )

	_ENUM( EGS_ITEM_CONVERT_REQ )
	_ENUM( EGS_ITEM_CONVERT_ACK )
//#endif SERV_NEW_ITEM_SYSTEM_2013_05
//}}

//{{ 2013. 04. 22	최육사	어둠의 문 입장 로직 변경
//#ifdef SERV_NEW_DEFENCE_DUNGEON_ENTER_LOGIC
	_ENUM( EGS_ENTER_DEFENCE_DUNGEON_POPUP_NOT )
	_ENUM( EGS_ENTER_DEFENCE_DUNGEON_POPUP_REPLY_NOT )
	_ENUM( EGS_LEAVE_ROOM_BEFORE_DEFENCE_DUNGEON_START_NOT )
//#endif SERV_NEW_DEFENCE_DUNGEON_ENTER_LOGIC
//}}

//#ifdef SERV_RELATIONSHIP_SYSTEM_LAUNCHING_EVENT// 작업날짜: 2013-05-10	// 박세훈
	_ENUM( EGS_SEND_LOVE_LETTER_EVENT_REQ )
	_ENUM( EGS_SEND_LOVE_LETTER_EVENT_ACK )
//#endif // SERV_RELATIONSHIP_SYSTEM_LAUNCHING_EVENT

//#ifdef SERV_FIELD_WORKINGS_BLOCK_LOG// 작업날짜: 2013-05-15	// 박세훈
	_ENUM( EGS_FIELD_WORKINGS_BLOCK_LOG_REQ )
	_ENUM( EGS_FIELD_WORKINGS_BLOCK_LOG_ACK )
//#endif // SERV_FIELD_WORKINGS_BLOCK_LOG

//#ifdef SERV_FIX_NONE_NPC_DUNGEON_LINES// 작업날짜: 2013-05-22	// 박세훈
	_ENUM( EGS_DUNGEON_KILLALLNPC_CHECK_NOT )
//#endif // SERV_FIX_NONE_NPC_DUNGEON_LINES

//#ifdef SERV_HACKING_USER_PROCESS_NAME_RECORD// 작업날짜: 2013-06-03	// 박세훈
	_ENUM( EGS_HACKING_USER_PROCESS_NAME_RECORD_NOT )
//#endif // SERV_HACKING_USER_PROCESS_NAME_RECORD

//#ifdef SERV_UPGRADE_SKILL_SYSTEM_2013 // 적용날짜: 2013-06-27
	_ENUM( EGS_CHANGE_MY_UNIT_INFO_NOT )
	_ENUM( EGS_ADMIN_AUTO_GET_ALL_SKILL_REQ )
	_ENUM( EGS_ADMIN_AUTO_GET_ALL_SKILL_ACK )
	_ENUM( EGS_ADMIN_GET_SKILL_REQ )
	_ENUM( EGS_ADMIN_GET_SKILL_ACK )
//#endif	// SERV_UPGRADE_SKILL_SYSTEM_2013

//#ifdef SERV_NEXON_COUPON_SYSTEM// 작업날짜: 2013-06-12	// 박세훈
	_ENUM( EGS_COUPON_LIST_REQ )
	_ENUM( EGS_COUPON_LIST_ACK )

	_ENUM( EGS_REGIST_COUPON_REQ )
	_ENUM( EGS_REGIST_COUPON_ACK )

	_ENUM( EGS_USE_ITEM_COUPON_REQ )
	_ENUM( EGS_USE_ITEM_COUPON_ACK )

	_ENUM( EGS_COUPON_TARGET_ITEM_REQ )
	_ENUM( EGS_COUPON_TARGET_ITEM_ACK )

	_ENUM( EGS_DISCOUNT_COUPON_INQUIRY_REQ )
	_ENUM( EGS_DISCOUNT_COUPON_INQUIRY_ACK )

	_ENUM( EGS_DISCOUNT_COUPON_LIST_INQUIRY_REQ )
	_ENUM( EGS_DISCOUNT_COUPON_LIST_INQUIRY_ACK )

	_ENUM( EGS_PRESENT_CASH_ITEM_COUPON_REQ )
	_ENUM( EGS_PRESENT_CASH_ITEM_COUPON_ACK )
//#endif // SERV_NEXON_COUPON_SYSTEM

//#ifdef SERV_ACCOUNT_BLOCK_USER_POPUP_TEMP// 작업날짜: 2013-06-18	// 박세훈
	_ENUM( EGS_ACCOUNT_BLOCK_USER_POPUP_NOT )
//#endif // SERV_ACCOUNT_BLOCK_USER_POPUP_TEMP

//#ifdef SERV_JUMPING_CHARACTER// 작업날짜: 2013-07-10	// 박세훈
	_ENUM( EGS_JUMPING_CHARACTER_GUIDE_NOT )
	_ENUM( EGS_JUMPING_CHARACTER_NOT )
	
	_ENUM( EGS_JUMPING_CHARACTER_REQ )
	_ENUM( EGS_JUMPING_CHARACTER_ACK )
//#endif // SERV_JUMPING_CHARACTER

//#ifdef SERV_FINALITY_SKILL_SYSTEM	// 적용날짜: 2013-08-01
	_ENUM( EGS_ITEM_EXTRACT_REQ )
	_ENUM( EGS_ITEM_EXTRACT_ACK )

	_ENUM( EGS_USE_FINALITY_SKILL_REQ )
	_ENUM( EGS_USE_FINALITY_SKILL_ACK )
//#endif // SERV_FINALITY_SKILL_SYSTEM

//#ifdef SERV_BATTLE_FIELD_BOSS// 작업날짜: 2013-10-28	// 박세훈
	_ENUM( EGS_BATTLE_FIELD_BOSS_GATE_OPEN_NOT )
	_ENUM( EGS_BATTLE_FIELD_BOSS_GATE_CLOSE_NOT )
	
	_ENUM( EGS_BOSS_FIELD_INTRUDE_RESTRICTION_REQ )
	_ENUM( EGS_BOSS_FIELD_INTRUDE_RESTRICTION_ACK )
	_ENUM( EGS_BOSS_FIELD_CLOSE_PROCESS_NOT )
	_ENUM( EGS_BOSS_FIELD_RETURN_PROCESS_NOT )

	_ENUM( EGS_ADMIN_BOSS_FIELD_GATE_OPEN_REQ )
	_ENUM( EGS_ADMIN_BOSS_FIELD_GATE_OPEN_ACK )
	_ENUM( EGS_ADMIN_BOSS_FIELD_GATE_CLOSE_NOT )
	_ENUM( EGS_ADMIN_GET_TOTAL_DANGEROUS_VALUE_REQ )
	_ENUM( EGS_ADMIN_GET_TOTAL_DANGEROUS_VALUE_ACK )
	_ENUM( EGS_ADMIN_SET_TOTAL_DANGEROUS_VALUE_REQ )
	_ENUM( EGS_ADMIN_SET_TOTAL_DANGEROUS_VALUE_ACK )

	_ENUM( EGS_NPC_UNIT_CREATE_BOSS_NOT )

	_ENUM( EGS_SOCKET_EXPAND_ITEM_REQ )
	_ENUM( EGS_SOCKET_EXPAND_ITEM_ACK )

	_ENUM( EGS_BOSS_FIELD_LOG_NOT )
//#endif // SERV_BATTLE_FIELD_BOSS

//#ifdef SERV_STAGE_CLEAR_IN_SERVER// 작업날짜: 2013-10-30	// 박세훈
	_ENUM( EGS_DUNGEON_SUB_STAGE_CLEAR_REQ )
	_ENUM( EGS_DUNGEON_SUB_STAGE_CLEAR_ACK )
	_ENUM( EGS_SECRET_STAGE_LOAD_REQ )
//#endif // SERV_STAGE_CLEAR_IN_SERVER

//#ifdef SERV_GOOD_ELSWORD // 2013-10-29 작업시작 // 우상혁
    _ENUM( EGS_EXPAND_BANK_SLOT_ED_REQ )
    _ENUM( EGS_EXPAND_BANK_SLOT_ED_ACK )
    _ENUM( EGS_GET_NEXT_BANK_ED_REQ ) // 은행 업그레이드 비용
    _ENUM( EGS_GET_NEXT_BANK_ED_ACK )
    _ENUM( EGS_EXPAND_INVENTORY_ED_REQ )
    _ENUM( EGS_EXPAND_INVENTORY_ED_ACK )
    _ENUM( EGS_GET_NEXT_INVENTORY_ED_REQ ) // 인벤토리 업그레이드 비용
    _ENUM( EGS_GET_NEXT_INVENTORY_ED_ACK )
//#endif 

//#ifdef SERV_KOM_FILE_CHECK_ADVANCED
	_ENUM( EGS_KOM_FILE_CHECK_LOG_REQ )
	_ENUM( EGS_KOM_FILE_CHECK_LOG_ACK )
	//#endif SERV_KOM_FILE_CHECK_ADVANCED

//#ifdef SERV_SKILL_PAGE_SYSTEM // 작업날짜: 2013-11-14	// 김현철
	_ENUM( EGS_GET_NEXT_SKILL_PAGE_ED_REQ )
	_ENUM( EGS_GET_NEXT_SKILL_PAGE_ED_ACK )
	_ENUM( EGS_EXPAND_SKILL_PAGE_REQ )
	_ENUM( EGS_EXPAND_SKILL_PAGE_ACK )
	_ENUM( EGS_DECIDE_TO_USE_THIS_SKILL_PAGE_REQ )
	_ENUM( EGS_DECIDE_TO_USE_THIS_SKILL_PAGE_ACK )
//#endif SERV_SKILL_PAGE_SYSTEM

//#ifdef SERV_ENTRY_POINT
    _ENUM( EGS_CHARACTER_LIST_REQ ) // 게임 서버에 캐릭터 리스트 요청
    _ENUM( EGS_CHARACTER_LIST_1ST_ACK ) // 첫번째 서버군의 캐릭터 결과
    _ENUM( EGS_CHARACTER_LIST_2ND_REQ ) // 두번째 서버군으로 요청
    _ENUM( EGS_CHARACTER_LIST_ACK ) // 두 서버군의 캐릭터 리스트 합
    _ENUM( EGS_CREATE_NEW_UNIT_REQ ) // 
    _ENUM( EGS_ENTRY_POINT_DELETE_UNIT_REQ )
    _ENUM( EGS_ENTRY_POINT_CHECK_NICK_NAME_REQ )
    _ENUM( EGS_ENTRY_POINT_CHECK_NICK_NAME_ACK )
    _ENUM( EGS_GET_CREATE_UNIT_TODAY_COUNT_REQ )
    _ENUM( EGS_GET_CREATE_UNIT_TODAY_COUNT_1ST_ACK )
    //_ENUM( EGS_GET_CREATE_UNIT_TODAY_COUNT_2ND_REQ )
    _ENUM( EGS_GET_CREATE_UNIT_TODAY_COUNT_ACK )
    _ENUM( EGS_ENTRY_POINT_GET_CHANNEL_LIST_REQ )
    _ENUM( EGS_ENTRY_POINT_GET_CHANNEL_LIST_ACK )
    _ENUM( EGS_ENTRY_POINT_CHANGE_NICK_NAME_REQ )
    _ENUM( EGS_GET_SECOND_SECURITY_INFO_REQ )
    _ENUM( EGS_GET_SECOND_SECURITY_INFO_ACK )
//#endif SERV_ENTRY_POINT

//#ifdef SERV_NAVER_CHANNELING
    _ENUM( EGS_GET_NAVER_ACCESS_TOKEN_REQ )
    _ENUM( EGS_GET_NAVER_ACCESS_TOKEN_ACK )
//#endif SERV_NAVER_CHANNELING

	//=============================================================//
	//{{ 2013.02.27 조효진	해외 기본 구조 작업 (SERV_GLOBAL_BASE)
#   include "OnlyGlobal/EventID_Client_global.h"
	//}}
	//=============================================================//

	_ENUM( EGS_CLIENT_EVENT_ID_END )

#ifdef __NEVER_DEFINED_MACRO__
};
#undef _ENUM
#endif
