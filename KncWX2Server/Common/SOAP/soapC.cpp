/* soapC.cpp
   Generated by gSOAP 2.8.15 from nx_soap.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif

#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapC.cpp ver 2.8.15 2014-01-13 05:53:35 GMT")


#ifndef WITH_NOGLOBAL

SOAP_FMAC3 int SOAP_FMAC4 soap_getheader(struct soap *soap)
{
	soap->part = SOAP_IN_HEADER;
	soap->header = soap_in_SOAP_ENV__Header(soap, "SOAP-ENV:Header", soap->header, NULL);
	soap->part = SOAP_END_HEADER;
	return soap->header == NULL;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_putheader(struct soap *soap)
{
	if (soap->version && soap->header)
	{	soap->part = SOAP_IN_HEADER;
		if (soap_out_SOAP_ENV__Header(soap, "SOAP-ENV:Header", 0, soap->header, NULL))
			return soap->error;
		soap->part = SOAP_END_HEADER;
	}
	return SOAP_OK;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serializeheader(struct soap *soap)
{
	if (soap->version && soap->header)
		soap_serialize_SOAP_ENV__Header(soap, soap->header);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_header(struct soap *soap)
{
	if (soap->header == NULL)
	{	if ((soap->header = soap_new_SOAP_ENV__Header(soap, -1)))
			soap_default_SOAP_ENV__Header(soap, soap->header);
	}
}

SOAP_FMAC3 void SOAP_FMAC4 soap_fault(struct soap *soap)
{
	if (soap->fault == NULL)
	{	soap->fault = soap_new_SOAP_ENV__Fault(soap, -1);
		if (soap->fault == NULL)
			return;
		soap_default_SOAP_ENV__Fault(soap, soap->fault);
	}
	if (soap->version == 2 && !soap->fault->SOAP_ENV__Code)
	{	soap->fault->SOAP_ENV__Code = soap_new_SOAP_ENV__Code(soap, -1);
		soap_default_SOAP_ENV__Code(soap, soap->fault->SOAP_ENV__Code);
	}
	if (soap->version == 2 && !soap->fault->SOAP_ENV__Reason)
	{	soap->fault->SOAP_ENV__Reason = soap_new_SOAP_ENV__Reason(soap, -1);
		soap_default_SOAP_ENV__Reason(soap, soap->fault->SOAP_ENV__Reason);
	}
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serializefault(struct soap *soap)
{
	soap_fault(soap);
	if (soap->fault)
		soap_serialize_SOAP_ENV__Fault(soap, soap->fault);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_putfault(struct soap *soap)
{
	if (soap->fault)
		return soap_put_SOAP_ENV__Fault(soap, soap->fault, "SOAP-ENV:Fault", NULL);
	return SOAP_OK;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_getfault(struct soap *soap)
{
	return (soap->fault = soap_get_SOAP_ENV__Fault(soap, NULL, "SOAP-ENV:Fault", NULL)) == NULL;
}

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap)
{
	soap_fault(soap);
	if (soap->version == 2 && soap->fault->SOAP_ENV__Code)
		return (const char**)&soap->fault->SOAP_ENV__Code->SOAP_ENV__Value;
	return (const char**)&soap->fault->faultcode;
}

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultsubcode(struct soap *soap)
{
	soap_fault(soap);
	if (soap->version == 2)
	{	if (soap->fault->SOAP_ENV__Code->SOAP_ENV__Subcode == NULL)
		{	soap->fault->SOAP_ENV__Code->SOAP_ENV__Subcode = soap_new_SOAP_ENV__Code(soap, -1);
			soap_default_SOAP_ENV__Code(soap, soap->fault->SOAP_ENV__Code->SOAP_ENV__Subcode);
		}
		return (const char**)&soap->fault->SOAP_ENV__Code->SOAP_ENV__Subcode->SOAP_ENV__Value;
	}
	return (const char**)&soap->fault->faultcode;
}

SOAP_FMAC3 const char * SOAP_FMAC4 soap_check_faultsubcode(struct soap *soap)
{
	soap_fault(soap);
	if (soap->version == 2)
	{	if (soap->fault->SOAP_ENV__Code && soap->fault->SOAP_ENV__Code->SOAP_ENV__Subcode && soap->fault->SOAP_ENV__Code->SOAP_ENV__Subcode)
			return soap->fault->SOAP_ENV__Code->SOAP_ENV__Subcode->SOAP_ENV__Value;
		return NULL;
	}
	return soap->fault->faultcode;
}

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultstring(struct soap *soap)
{
	soap_fault(soap);
	if (soap->version == 2)
		return (const char**)&soap->fault->SOAP_ENV__Reason->SOAP_ENV__Text;
	return (const char**)&soap->fault->faultstring;
}

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultdetail(struct soap *soap)
{
	soap_fault(soap);
	if (soap->version == 2)
	{	if (soap->fault->SOAP_ENV__Detail == NULL)
		{	soap->fault->SOAP_ENV__Detail = soap_new_SOAP_ENV__Detail(soap, -1);
			soap_default_SOAP_ENV__Detail(soap, soap->fault->SOAP_ENV__Detail);
		}
		return (const char**)&soap->fault->SOAP_ENV__Detail->__any;
	}
	if (soap->fault->detail == NULL)
	{	soap->fault->detail = soap_new_SOAP_ENV__Detail(soap, -1);
		soap_default_SOAP_ENV__Detail(soap, soap->fault->detail);
	}
	return (const char**)&soap->fault->detail->__any;
}

SOAP_FMAC3 const char * SOAP_FMAC4 soap_check_faultdetail(struct soap *soap)
{
	soap_fault(soap);
	if (soap->version == 2 && soap->fault->SOAP_ENV__Detail)
		return soap->fault->SOAP_ENV__Detail->__any;
	if (soap->fault->detail)
		return soap->fault->detail->__any;
	return NULL;
}

#endif

#ifndef WITH_NOIDREF
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap *soap)
{
	int t;
	if (soap->version == 1)
	{	for (;;)
		{	if (!soap_getelement(soap, &t))
				if (soap->error || soap_ignore_element(soap))
					break;
		}
	}
	if (soap->error == SOAP_NO_TAG || soap->error == SOAP_EOF)
		soap->error = SOAP_OK;
	return soap->error;
}
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void * SOAP_FMAC4 soap_getelement(struct soap *soap, int *type)
{	(void)type;
	if (soap_peek_element(soap))
		return NULL;
#ifndef WITH_NOIDREF
	if (!*soap->id || !(*type = soap_lookup_type(soap, soap->id)))
		*type = soap_lookup_type(soap, soap->href);
	switch (*type)
	{
	case SOAP_TYPE_byte:
		return soap_in_byte(soap, NULL, NULL, "xsd:byte");
	case SOAP_TYPE_short:
		return soap_in_short(soap, NULL, NULL, "xsd:short");
	case SOAP_TYPE_int:
		return soap_in_int(soap, NULL, NULL, "xsd:int");
	case SOAP_TYPE_LONG64:
		return soap_in_LONG64(soap, NULL, NULL, "xsd:long");
	case SOAP_TYPE_bool:
		return soap_in_bool(soap, NULL, NULL, "xsd:boolean");
	case SOAP_TYPE_std__string:
		return soap_in_std__string(soap, NULL, NULL, "xsd:string");
	case SOAP_TYPE_ns1__UseRestrictInfoEntity:
		return soap_in_ns1__UseRestrictInfoEntity(soap, NULL, NULL, "ns1:UseRestrictInfoEntity");
	case SOAP_TYPE_ns1__ItemEntity:
		return soap_in_ns1__ItemEntity(soap, NULL, NULL, "ns1:ItemEntity");
	case SOAP_TYPE_ns1__ArrayOfItemEntity:
		return soap_in_ns1__ArrayOfItemEntity(soap, NULL, NULL, "ns1:ArrayOfItemEntity");
	case SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity:
		return soap_in_ns1__ArrayOfHoldingCouponCountEntity(soap, NULL, NULL, "ns1:ArrayOfHoldingCouponCountEntity");
	case SOAP_TYPE_ns1__HoldingCouponCountEntity:
		return soap_in_ns1__HoldingCouponCountEntity(soap, NULL, NULL, "ns1:HoldingCouponCountEntity");
	case SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity:
		return soap_in_ns1__DiscountAppliableItemInfoEntity(soap, NULL, NULL, "ns1:DiscountAppliableItemInfoEntity");
	case SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity:
		return soap_in_ns1__ArrayOfDiscountAppliableItemInfoEntity(soap, NULL, NULL, "ns1:ArrayOfDiscountAppliableItemInfoEntity");
	case SOAP_TYPE_ns1__CouponBoxTargetItem:
		return soap_in_ns1__CouponBoxTargetItem(soap, NULL, NULL, "ns1:CouponBoxTargetItem");
	case SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem:
		return soap_in_ns1__ArrayOfCouponBoxTargetItem(soap, NULL, NULL, "ns1:ArrayOfCouponBoxTargetItem");
	case SOAP_TYPE_ns1__CouponBoxItem:
		return soap_in_ns1__CouponBoxItem(soap, NULL, NULL, "ns1:CouponBoxItem");
	case SOAP_TYPE_ns1__ArrayOfCouponBoxItem:
		return soap_in_ns1__ArrayOfCouponBoxItem(soap, NULL, NULL, "ns1:ArrayOfCouponBoxItem");
	case SOAP_TYPE_ns1__ExtensionDataObject:
		return soap_in_ns1__ExtensionDataObject(soap, NULL, NULL, "ns1:ExtensionDataObject");
	case SOAP_TYPE_ns1__ClientCouponBox:
		return soap_in_ns1__ClientCouponBox(soap, NULL, NULL, "ns1:ClientCouponBox");
	case SOAP_TYPE_ns1__ArrayOfClientCouponBox:
		return soap_in_ns1__ArrayOfClientCouponBox(soap, NULL, NULL, "ns1:ArrayOfClientCouponBox");
	case SOAP_TYPE_PointerTo_ns2__GetGameAccessTokenResponse:
		return soap_in_PointerTo_ns2__GetGameAccessTokenResponse(soap, NULL, NULL, "ns2:GetGameAccessTokenResponse");
	case SOAP_TYPE_PointerTo_ns2__GetGameAccessToken:
		return soap_in_PointerTo_ns2__GetGameAccessToken(soap, NULL, NULL, "ns2:GetGameAccessToken");
	case SOAP_TYPE_PointerTo_ns1__WakeUpResponse:
		return soap_in_PointerTo_ns1__WakeUpResponse(soap, NULL, NULL, "ns1:WakeUpResponse");
	case SOAP_TYPE_PointerTo_ns1__WakeUp:
		return soap_in_PointerTo_ns1__WakeUp(soap, NULL, NULL, "ns1:WakeUp");
	case SOAP_TYPE_PointerTo_ns1__GetUseRestrictInfoResponse:
		return soap_in_PointerTo_ns1__GetUseRestrictInfoResponse(soap, NULL, NULL, "ns1:GetUseRestrictInfoResponse");
	case SOAP_TYPE_PointerTo_ns1__GetUseRestrictInfo:
		return soap_in_PointerTo_ns1__GetUseRestrictInfo(soap, NULL, NULL, "ns1:GetUseRestrictInfo");
	case SOAP_TYPE_PointerTo_ns1__BulkCheckExtendResponse:
		return soap_in_PointerTo_ns1__BulkCheckExtendResponse(soap, NULL, NULL, "ns1:BulkCheckExtendResponse");
	case SOAP_TYPE_PointerTo_ns1__BulkCheckExtend:
		return soap_in_PointerTo_ns1__BulkCheckExtend(soap, NULL, NULL, "ns1:BulkCheckExtend");
	case SOAP_TYPE_PointerTo_ns1__BulkCheckResponse:
		return soap_in_PointerTo_ns1__BulkCheckResponse(soap, NULL, NULL, "ns1:BulkCheckResponse");
	case SOAP_TYPE_PointerTo_ns1__BulkCheck:
		return soap_in_PointerTo_ns1__BulkCheck(soap, NULL, NULL, "ns1:BulkCheck");
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponOLDResponse:
		return soap_in_PointerTo_ns1__UseItemCouponOLDResponse(soap, NULL, NULL, "ns1:UseItemCouponOLDResponse");
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponOLD:
		return soap_in_PointerTo_ns1__UseItemCouponOLD(soap, NULL, NULL, "ns1:UseItemCouponOLD");
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponOLDResponse:
		return soap_in_PointerTo_ns1__CheckItemCouponOLDResponse(soap, NULL, NULL, "ns1:CheckItemCouponOLDResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponOLD:
		return soap_in_PointerTo_ns1__CheckItemCouponOLD(soap, NULL, NULL, "ns1:CheckItemCouponOLD");
	case SOAP_TYPE_PointerTo_ns1__RollbackItemCouponResponse:
		return soap_in_PointerTo_ns1__RollbackItemCouponResponse(soap, NULL, NULL, "ns1:RollbackItemCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__RollbackItemCoupon:
		return soap_in_PointerTo_ns1__RollbackItemCoupon(soap, NULL, NULL, "ns1:RollbackItemCoupon");
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponResponse:
		return soap_in_PointerTo_ns1__UseItemCouponResponse(soap, NULL, NULL, "ns1:UseItemCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__UseItemCoupon:
		return soap_in_PointerTo_ns1__UseItemCoupon(soap, NULL, NULL, "ns1:UseItemCoupon");
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponResponse:
		return soap_in_PointerTo_ns1__CheckItemCouponResponse(soap, NULL, NULL, "ns1:CheckItemCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckItemCoupon:
		return soap_in_PointerTo_ns1__CheckItemCoupon(soap, NULL, NULL, "ns1:CheckItemCoupon");
	case SOAP_TYPE_PointerTo_ns1__RollbackItemCouponFromCouponBoxResponse:
		return soap_in_PointerTo_ns1__RollbackItemCouponFromCouponBoxResponse(soap, NULL, NULL, "ns1:RollbackItemCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__RollbackItemCouponFromCouponBox:
		return soap_in_PointerTo_ns1__RollbackItemCouponFromCouponBox(soap, NULL, NULL, "ns1:RollbackItemCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponFromCouponBoxResponse:
		return soap_in_PointerTo_ns1__UseItemCouponFromCouponBoxResponse(soap, NULL, NULL, "ns1:UseItemCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponFromCouponBox:
		return soap_in_PointerTo_ns1__UseItemCouponFromCouponBox(soap, NULL, NULL, "ns1:UseItemCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponFromCouponBoxResponse:
		return soap_in_PointerTo_ns1__CheckItemCouponFromCouponBoxResponse(soap, NULL, NULL, "ns1:CheckItemCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponFromCouponBox:
		return soap_in_PointerTo_ns1__CheckItemCouponFromCouponBox(soap, NULL, NULL, "ns1:CheckItemCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__RollbackDiscountItemCouponResponse:
		return soap_in_PointerTo_ns1__RollbackDiscountItemCouponResponse(soap, NULL, NULL, "ns1:RollbackDiscountItemCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__RollbackDiscountItemCoupon:
		return soap_in_PointerTo_ns1__RollbackDiscountItemCoupon(soap, NULL, NULL, "ns1:RollbackDiscountItemCoupon");
	case SOAP_TYPE_PointerTo_ns1__UseDiscountItemCouponResponse:
		return soap_in_PointerTo_ns1__UseDiscountItemCouponResponse(soap, NULL, NULL, "ns1:UseDiscountItemCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__UseDiscountItemCoupon:
		return soap_in_PointerTo_ns1__UseDiscountItemCoupon(soap, NULL, NULL, "ns1:UseDiscountItemCoupon");
	case SOAP_TYPE_PointerTo_ns1__CheckDiscountItemCouponResponse:
		return soap_in_PointerTo_ns1__CheckDiscountItemCouponResponse(soap, NULL, NULL, "ns1:CheckDiscountItemCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckDiscountItemCoupon:
		return soap_in_PointerTo_ns1__CheckDiscountItemCoupon(soap, NULL, NULL, "ns1:CheckDiscountItemCoupon");
	case SOAP_TYPE_PointerTo_ns1__RollbackDiscountCouponFromCouponBoxResponse:
		return soap_in_PointerTo_ns1__RollbackDiscountCouponFromCouponBoxResponse(soap, NULL, NULL, "ns1:RollbackDiscountCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__RollbackDiscountCouponFromCouponBox:
		return soap_in_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(soap, NULL, NULL, "ns1:RollbackDiscountCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__UseDiscountCouponFromCouponBoxResponse:
		return soap_in_PointerTo_ns1__UseDiscountCouponFromCouponBoxResponse(soap, NULL, NULL, "ns1:UseDiscountCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__UseDiscountCouponFromCouponBox:
		return soap_in_PointerTo_ns1__UseDiscountCouponFromCouponBox(soap, NULL, NULL, "ns1:UseDiscountCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__CheckDiscountCouponFromCouponBoxResponse:
		return soap_in_PointerTo_ns1__CheckDiscountCouponFromCouponBoxResponse(soap, NULL, NULL, "ns1:CheckDiscountCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckDiscountCouponFromCouponBox:
		return soap_in_PointerTo_ns1__CheckDiscountCouponFromCouponBox(soap, NULL, NULL, "ns1:CheckDiscountCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountIdResponse:
		return soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountIdResponse(soap, NULL, NULL, "ns1:SelectHoldingCouponCountByAccountIdResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountId:
		return soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountId(soap, NULL, NULL, "ns1:SelectHoldingCouponCountByAccountId");
	case SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse:
		return soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(soap, NULL, NULL, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode:
		return soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, NULL, NULL, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCode");
	case SOAP_TYPE_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse:
		return soap_in_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(soap, NULL, NULL, "ns1:SelectAppliableItemCodeForDiscountByAccountByGameResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame:
		return soap_in_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, NULL, NULL, "ns1:SelectAppliableItemCodeForDiscountByAccountByGame");
	case SOAP_TYPE_PointerTo_ns1__CheckActivationCouponStatusResponse:
		return soap_in_PointerTo_ns1__CheckActivationCouponStatusResponse(soap, NULL, NULL, "ns1:CheckActivationCouponStatusResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckActivationCouponStatus:
		return soap_in_PointerTo_ns1__CheckActivationCouponStatus(soap, NULL, NULL, "ns1:CheckActivationCouponStatus");
	case SOAP_TYPE_PointerTo_ns1__CancelActivationCashCouponResponse:
		return soap_in_PointerTo_ns1__CancelActivationCashCouponResponse(soap, NULL, NULL, "ns1:CancelActivationCashCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__CancelActivationCashCoupon:
		return soap_in_PointerTo_ns1__CancelActivationCashCoupon(soap, NULL, NULL, "ns1:CancelActivationCashCoupon");
	case SOAP_TYPE_PointerTo_ns1__ReverseDeactivationCashCouponResponse:
		return soap_in_PointerTo_ns1__ReverseDeactivationCashCouponResponse(soap, NULL, NULL, "ns1:ReverseDeactivationCashCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__ReverseDeactivationCashCoupon:
		return soap_in_PointerTo_ns1__ReverseDeactivationCashCoupon(soap, NULL, NULL, "ns1:ReverseDeactivationCashCoupon");
	case SOAP_TYPE_PointerTo_ns1__ReverseActivationCashCouponResponse:
		return soap_in_PointerTo_ns1__ReverseActivationCashCouponResponse(soap, NULL, NULL, "ns1:ReverseActivationCashCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__ReverseActivationCashCoupon:
		return soap_in_PointerTo_ns1__ReverseActivationCashCoupon(soap, NULL, NULL, "ns1:ReverseActivationCashCoupon");
	case SOAP_TYPE_PointerTo_ns1__ActivationCashCouponResponse:
		return soap_in_PointerTo_ns1__ActivationCashCouponResponse(soap, NULL, NULL, "ns1:ActivationCashCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__ActivationCashCoupon:
		return soap_in_PointerTo_ns1__ActivationCashCoupon(soap, NULL, NULL, "ns1:ActivationCashCoupon");
	case SOAP_TYPE_PointerTo_ns1__RollbackCashCouponResponse:
		return soap_in_PointerTo_ns1__RollbackCashCouponResponse(soap, NULL, NULL, "ns1:RollbackCashCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__RollbackCashCoupon:
		return soap_in_PointerTo_ns1__RollbackCashCoupon(soap, NULL, NULL, "ns1:RollbackCashCoupon");
	case SOAP_TYPE_PointerTo_ns1__UseCashCouponResponse:
		return soap_in_PointerTo_ns1__UseCashCouponResponse(soap, NULL, NULL, "ns1:UseCashCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__UseCashCoupon:
		return soap_in_PointerTo_ns1__UseCashCoupon(soap, NULL, NULL, "ns1:UseCashCoupon");
	case SOAP_TYPE_PointerTo_ns1__CheckCashCouponResponse:
		return soap_in_PointerTo_ns1__CheckCashCouponResponse(soap, NULL, NULL, "ns1:CheckCashCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckCashCoupon:
		return soap_in_PointerTo_ns1__CheckCashCoupon(soap, NULL, NULL, "ns1:CheckCashCoupon");
	case SOAP_TYPE_PointerTo_ns1__RollbackCashCouponFromCouponBoxResponse:
		return soap_in_PointerTo_ns1__RollbackCashCouponFromCouponBoxResponse(soap, NULL, NULL, "ns1:RollbackCashCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__RollbackCashCouponFromCouponBox:
		return soap_in_PointerTo_ns1__RollbackCashCouponFromCouponBox(soap, NULL, NULL, "ns1:RollbackCashCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__UseCashCouponFromCouponBoxResponse:
		return soap_in_PointerTo_ns1__UseCashCouponFromCouponBoxResponse(soap, NULL, NULL, "ns1:UseCashCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__UseCashCouponFromCouponBox:
		return soap_in_PointerTo_ns1__UseCashCouponFromCouponBox(soap, NULL, NULL, "ns1:UseCashCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__CheckCashCouponFromCouponBoxResponse:
		return soap_in_PointerTo_ns1__CheckCashCouponFromCouponBoxResponse(soap, NULL, NULL, "ns1:CheckCashCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckCashCouponFromCouponBox:
		return soap_in_PointerTo_ns1__CheckCashCouponFromCouponBox(soap, NULL, NULL, "ns1:CheckCashCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxTargetItemListCountResponse:
		return soap_in_PointerTo_ns1__GetCouponBoxTargetItemListCountResponse(soap, NULL, NULL, "ns1:GetCouponBoxTargetItemListCountResponse");
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxTargetItemListCount:
		return soap_in_PointerTo_ns1__GetCouponBoxTargetItemListCount(soap, NULL, NULL, "ns1:GetCouponBoxTargetItemListCount");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxTargetItemListResponse:
		return soap_in_PointerTo_ns1__SelectCouponBoxTargetItemListResponse(soap, NULL, NULL, "ns1:SelectCouponBoxTargetItemListResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxTargetItemList:
		return soap_in_PointerTo_ns1__SelectCouponBoxTargetItemList(soap, NULL, NULL, "ns1:SelectCouponBoxTargetItemList");
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse:
		return soap_in_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(soap, NULL, NULL, "ns1:GetCouponBoxUsedListCountByNexonIDForUserResponse");
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser:
		return soap_in_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, NULL, NULL, "ns1:GetCouponBoxUsedListCountByNexonIDForUser");
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUserResponse:
		return soap_in_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUserResponse(soap, NULL, NULL, "ns1:GetCouponBoxListCountByNexonIDForUserResponse");
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser:
		return soap_in_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(soap, NULL, NULL, "ns1:GetCouponBoxListCountByNexonIDForUser");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse:
		return soap_in_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(soap, NULL, NULL, "ns1:SelectCouponBoxUsedListByNexonIDForUserResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser:
		return soap_in_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, NULL, NULL, "ns1:SelectCouponBoxUsedListByNexonIDForUser");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxListByNexonIDForUserResponse:
		return soap_in_PointerTo_ns1__SelectCouponBoxListByNexonIDForUserResponse(soap, NULL, NULL, "ns1:SelectCouponBoxListByNexonIDForUserResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser:
		return soap_in_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(soap, NULL, NULL, "ns1:SelectCouponBoxListByNexonIDForUser");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByAccountIDForUserResponse:
		return soap_in_PointerTo_ns1__SelectCouponBoxByAccountIDForUserResponse(soap, NULL, NULL, "ns1:SelectCouponBoxByAccountIDForUserResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByAccountIDForUser:
		return soap_in_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(soap, NULL, NULL, "ns1:SelectCouponBoxByAccountIDForUser");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByCharacterIDForUserResponse:
		return soap_in_PointerTo_ns1__SelectCouponBoxByCharacterIDForUserResponse(soap, NULL, NULL, "ns1:SelectCouponBoxByCharacterIDForUserResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser:
		return soap_in_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(soap, NULL, NULL, "ns1:SelectCouponBoxByCharacterIDForUser");
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse:
		return soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(soap, NULL, NULL, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode:
		return soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, NULL, NULL, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode");
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse:
		return soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(soap, NULL, NULL, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList:
		return soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, NULL, NULL, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemList");
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse:
		return soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(soap, NULL, NULL, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode:
		return soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, NULL, NULL, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCode");
	case SOAP_TYPE_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse:
		return soap_in_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(soap, NULL, NULL, "ns1:CheckAddCouponBoxByCouponPinByNexonIdResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId:
		return soap_in_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, NULL, NULL, "ns1:CheckAddCouponBoxByCouponPinByNexonId");
	case SOAP_TYPE_PointerTo_ns1__AddCouponBoxByCouponPinByNexonIdResponse:
		return soap_in_PointerTo_ns1__AddCouponBoxByCouponPinByNexonIdResponse(soap, NULL, NULL, "ns1:AddCouponBoxByCouponPinByNexonIdResponse");
	case SOAP_TYPE_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId:
		return soap_in_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(soap, NULL, NULL, "ns1:AddCouponBoxByCouponPinByNexonId");
	case SOAP_TYPE_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse:
		return soap_in_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(soap, NULL, NULL, "ns1:SelectItemCouponFromCouponBoxByNexonIDResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID:
		return soap_in_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(soap, NULL, NULL, "ns1:SelectItemCouponFromCouponBoxByNexonID");
	case SOAP_TYPE_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse:
		return soap_in_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(soap, NULL, NULL, "ns1:SelectCashCouponFromCouponBoxByNexonIDResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID:
		return soap_in_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(soap, NULL, NULL, "ns1:SelectCashCouponFromCouponBoxByNexonID");
	case SOAP_TYPE_PointerTo_ns1__GetListSchoolResponse:
		return soap_in_PointerTo_ns1__GetListSchoolResponse(soap, NULL, NULL, "ns1:GetListSchoolResponse");
	case SOAP_TYPE_PointerTo_ns1__GetListSchool:
		return soap_in_PointerTo_ns1__GetListSchool(soap, NULL, NULL, "ns1:GetListSchool");
	case SOAP_TYPE_PointerTo_ns1__CheckPasswordByMemberSNResponse:
		return soap_in_PointerTo_ns1__CheckPasswordByMemberSNResponse(soap, NULL, NULL, "ns1:CheckPasswordByMemberSNResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckPasswordByMemberSN:
		return soap_in_PointerTo_ns1__CheckPasswordByMemberSN(soap, NULL, NULL, "ns1:CheckPasswordByMemberSN");
	case SOAP_TYPE_PointerTo_ns1__CheckSameUserResponse:
		return soap_in_PointerTo_ns1__CheckSameUserResponse(soap, NULL, NULL, "ns1:CheckSameUserResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckSameUser:
		return soap_in_PointerTo_ns1__CheckSameUser(soap, NULL, NULL, "ns1:CheckSameUser");
	case SOAP_TYPE_PointerTons1__UseRestrictInfoEntity:
		return soap_in_PointerTons1__UseRestrictInfoEntity(soap, NULL, NULL, "ns1:UseRestrictInfoEntity");
	case SOAP_TYPE_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult:
		return soap_in_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, NULL, NULL, "ns1:BulkCheckExtendResponse-BulkCheckExtendResult");
	case SOAP_TYPE_PointerTo_ns1__BulkCheckExtend_dsCouponPin:
		return soap_in_PointerTo_ns1__BulkCheckExtend_dsCouponPin(soap, NULL, NULL, "ns1:BulkCheckExtend-dsCouponPin");
	case SOAP_TYPE_PointerTo_ns1__BulkCheckResponse_BulkCheckResult:
		return soap_in_PointerTo_ns1__BulkCheckResponse_BulkCheckResult(soap, NULL, NULL, "ns1:BulkCheckResponse-BulkCheckResult");
	case SOAP_TYPE_PointerTo_ns1__BulkCheck_dsCouponPin:
		return soap_in_PointerTo_ns1__BulkCheck_dsCouponPin(soap, NULL, NULL, "ns1:BulkCheck-dsCouponPin");
	case SOAP_TYPE_PointerTons1__ArrayOfItemEntity:
		return soap_in_PointerTons1__ArrayOfItemEntity(soap, NULL, NULL, "ns1:ArrayOfItemEntity");
	case SOAP_TYPE_PointerTons1__ArrayOfHoldingCouponCountEntity:
		return soap_in_PointerTons1__ArrayOfHoldingCouponCountEntity(soap, NULL, NULL, "ns1:ArrayOfHoldingCouponCountEntity");
	case SOAP_TYPE_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity:
		return soap_in_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity(soap, NULL, NULL, "ns1:ArrayOfDiscountAppliableItemInfoEntity");
	case SOAP_TYPE_PointerTons1__ArrayOfCouponBoxTargetItem:
		return soap_in_PointerTons1__ArrayOfCouponBoxTargetItem(soap, NULL, NULL, "ns1:ArrayOfCouponBoxTargetItem");
	case SOAP_TYPE_PointerTons1__ArrayOfCouponBoxItem:
		return soap_in_PointerTons1__ArrayOfCouponBoxItem(soap, NULL, NULL, "ns1:ArrayOfCouponBoxItem");
	case SOAP_TYPE_PointerTons1__ArrayOfClientCouponBox:
		return soap_in_PointerTons1__ArrayOfClientCouponBox(soap, NULL, NULL, "ns1:ArrayOfClientCouponBox");
	case SOAP_TYPE_PointerTons1__ItemEntity:
		return soap_in_PointerTons1__ItemEntity(soap, NULL, NULL, "ns1:ItemEntity");
	case SOAP_TYPE_PointerTons1__HoldingCouponCountEntity:
		return soap_in_PointerTons1__HoldingCouponCountEntity(soap, NULL, NULL, "ns1:HoldingCouponCountEntity");
	case SOAP_TYPE_PointerTons1__DiscountAppliableItemInfoEntity:
		return soap_in_PointerTons1__DiscountAppliableItemInfoEntity(soap, NULL, NULL, "ns1:DiscountAppliableItemInfoEntity");
	case SOAP_TYPE_PointerTons1__CouponBoxTargetItem:
		return soap_in_PointerTons1__CouponBoxTargetItem(soap, NULL, NULL, "ns1:CouponBoxTargetItem");
	case SOAP_TYPE_PointerTons1__CouponBoxItem:
		return soap_in_PointerTons1__CouponBoxItem(soap, NULL, NULL, "ns1:CouponBoxItem");
	case SOAP_TYPE_PointerTostd__string:
		return soap_in_PointerTostd__string(soap, NULL, NULL, "xsd:string");
	case SOAP_TYPE_PointerTons1__ExtensionDataObject:
		return soap_in_PointerTons1__ExtensionDataObject(soap, NULL, NULL, "ns1:ExtensionDataObject");
	case SOAP_TYPE_PointerTons1__ClientCouponBox:
		return soap_in_PointerTons1__ClientCouponBox(soap, NULL, NULL, "ns1:ClientCouponBox");
	case SOAP_TYPE__QName:
	{	char **s;
		s = soap_in__QName(soap, NULL, NULL, "xsd:QName");
		return s ? *s : NULL;
	}
	case SOAP_TYPE_string:
	{	char **s;
		s = soap_in_string(soap, NULL, NULL, "xsd:string");
		return s ? *s : NULL;
	}
	default:
#endif
	{	const char *t = soap->type;
		if (!*t)
			t = soap->tag;
		if (!soap_match_tag(soap, t, "xsd:string"))
		{	*type = SOAP_TYPE_std__string;
			return soap_in_std__string(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseRestrictInfoEntity"))
		{	*type = SOAP_TYPE_ns1__UseRestrictInfoEntity;
			return soap_in_ns1__UseRestrictInfoEntity(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ItemEntity"))
		{	*type = SOAP_TYPE_ns1__ItemEntity;
			return soap_in_ns1__ItemEntity(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ArrayOfItemEntity"))
		{	*type = SOAP_TYPE_ns1__ArrayOfItemEntity;
			return soap_in_ns1__ArrayOfItemEntity(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ArrayOfHoldingCouponCountEntity"))
		{	*type = SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity;
			return soap_in_ns1__ArrayOfHoldingCouponCountEntity(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:HoldingCouponCountEntity"))
		{	*type = SOAP_TYPE_ns1__HoldingCouponCountEntity;
			return soap_in_ns1__HoldingCouponCountEntity(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:DiscountAppliableItemInfoEntity"))
		{	*type = SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity;
			return soap_in_ns1__DiscountAppliableItemInfoEntity(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ArrayOfDiscountAppliableItemInfoEntity"))
		{	*type = SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity;
			return soap_in_ns1__ArrayOfDiscountAppliableItemInfoEntity(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CouponBoxTargetItem"))
		{	*type = SOAP_TYPE_ns1__CouponBoxTargetItem;
			return soap_in_ns1__CouponBoxTargetItem(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ArrayOfCouponBoxTargetItem"))
		{	*type = SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem;
			return soap_in_ns1__ArrayOfCouponBoxTargetItem(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CouponBoxItem"))
		{	*type = SOAP_TYPE_ns1__CouponBoxItem;
			return soap_in_ns1__CouponBoxItem(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ArrayOfCouponBoxItem"))
		{	*type = SOAP_TYPE_ns1__ArrayOfCouponBoxItem;
			return soap_in_ns1__ArrayOfCouponBoxItem(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ExtensionDataObject"))
		{	*type = SOAP_TYPE_ns1__ExtensionDataObject;
			return soap_in_ns1__ExtensionDataObject(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ClientCouponBox"))
		{	*type = SOAP_TYPE_ns1__ClientCouponBox;
			return soap_in_ns1__ClientCouponBox(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ArrayOfClientCouponBox"))
		{	*type = SOAP_TYPE_ns1__ArrayOfClientCouponBox;
			return soap_in_ns1__ArrayOfClientCouponBox(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "xsd:byte"))
		{	*type = SOAP_TYPE_byte;
			return soap_in_byte(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "xsd:short"))
		{	*type = SOAP_TYPE_short;
			return soap_in_short(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "xsd:int"))
		{	*type = SOAP_TYPE_int;
			return soap_in_int(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "xsd:long"))
		{	*type = SOAP_TYPE_LONG64;
			return soap_in_LONG64(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "xsd:boolean"))
		{	*type = SOAP_TYPE_bool;
			return soap_in_bool(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "xsd:QName"))
		{	char **s;
			*type = SOAP_TYPE__QName;
			s = soap_in__QName(soap, NULL, NULL, NULL);
			return s ? *s : NULL;
		}
		if (!soap_match_tag(soap, t, "xsd:string"))
		{	char **s;
			*type = SOAP_TYPE_string;
			s = soap_in_string(soap, NULL, NULL, NULL);
			return s ? *s : NULL;
		}
		t = soap->tag;
		if (!soap_match_tag(soap, t, "ns1:BulkCheckExtendResponse-BulkCheckExtendResult"))
		{	*type = SOAP_TYPE__ns1__BulkCheckExtendResponse_BulkCheckExtendResult;
			return soap_in__ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:BulkCheckExtend-dsCouponPin"))
		{	*type = SOAP_TYPE__ns1__BulkCheckExtend_dsCouponPin;
			return soap_in__ns1__BulkCheckExtend_dsCouponPin(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:BulkCheckResponse-BulkCheckResult"))
		{	*type = SOAP_TYPE__ns1__BulkCheckResponse_BulkCheckResult;
			return soap_in__ns1__BulkCheckResponse_BulkCheckResult(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:BulkCheck-dsCouponPin"))
		{	*type = SOAP_TYPE__ns1__BulkCheck_dsCouponPin;
			return soap_in__ns1__BulkCheck_dsCouponPin(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns2:GetGameAccessTokenResponse"))
		{	*type = SOAP_TYPE__ns2__GetGameAccessTokenResponse;
			return soap_in__ns2__GetGameAccessTokenResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns2:GetGameAccessToken"))
		{	*type = SOAP_TYPE__ns2__GetGameAccessToken;
			return soap_in__ns2__GetGameAccessToken(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:WakeUpResponse"))
		{	*type = SOAP_TYPE__ns1__WakeUpResponse;
			return soap_in__ns1__WakeUpResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:WakeUp"))
		{	*type = SOAP_TYPE__ns1__WakeUp;
			return soap_in__ns1__WakeUp(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:GetUseRestrictInfoResponse"))
		{	*type = SOAP_TYPE__ns1__GetUseRestrictInfoResponse;
			return soap_in__ns1__GetUseRestrictInfoResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:GetUseRestrictInfo"))
		{	*type = SOAP_TYPE__ns1__GetUseRestrictInfo;
			return soap_in__ns1__GetUseRestrictInfo(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:BulkCheckExtendResponse"))
		{	*type = SOAP_TYPE__ns1__BulkCheckExtendResponse;
			return soap_in__ns1__BulkCheckExtendResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:BulkCheckExtend"))
		{	*type = SOAP_TYPE__ns1__BulkCheckExtend;
			return soap_in__ns1__BulkCheckExtend(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:BulkCheckResponse"))
		{	*type = SOAP_TYPE__ns1__BulkCheckResponse;
			return soap_in__ns1__BulkCheckResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:BulkCheck"))
		{	*type = SOAP_TYPE__ns1__BulkCheck;
			return soap_in__ns1__BulkCheck(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseItemCouponOLDResponse"))
		{	*type = SOAP_TYPE__ns1__UseItemCouponOLDResponse;
			return soap_in__ns1__UseItemCouponOLDResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseItemCouponOLD"))
		{	*type = SOAP_TYPE__ns1__UseItemCouponOLD;
			return soap_in__ns1__UseItemCouponOLD(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckItemCouponOLDResponse"))
		{	*type = SOAP_TYPE__ns1__CheckItemCouponOLDResponse;
			return soap_in__ns1__CheckItemCouponOLDResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckItemCouponOLD"))
		{	*type = SOAP_TYPE__ns1__CheckItemCouponOLD;
			return soap_in__ns1__CheckItemCouponOLD(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:RollbackItemCouponResponse"))
		{	*type = SOAP_TYPE__ns1__RollbackItemCouponResponse;
			return soap_in__ns1__RollbackItemCouponResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:RollbackItemCoupon"))
		{	*type = SOAP_TYPE__ns1__RollbackItemCoupon;
			return soap_in__ns1__RollbackItemCoupon(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseItemCouponResponse"))
		{	*type = SOAP_TYPE__ns1__UseItemCouponResponse;
			return soap_in__ns1__UseItemCouponResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseItemCoupon"))
		{	*type = SOAP_TYPE__ns1__UseItemCoupon;
			return soap_in__ns1__UseItemCoupon(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckItemCouponResponse"))
		{	*type = SOAP_TYPE__ns1__CheckItemCouponResponse;
			return soap_in__ns1__CheckItemCouponResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckItemCoupon"))
		{	*type = SOAP_TYPE__ns1__CheckItemCoupon;
			return soap_in__ns1__CheckItemCoupon(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:RollbackItemCouponFromCouponBoxResponse"))
		{	*type = SOAP_TYPE__ns1__RollbackItemCouponFromCouponBoxResponse;
			return soap_in__ns1__RollbackItemCouponFromCouponBoxResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:RollbackItemCouponFromCouponBox"))
		{	*type = SOAP_TYPE__ns1__RollbackItemCouponFromCouponBox;
			return soap_in__ns1__RollbackItemCouponFromCouponBox(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseItemCouponFromCouponBoxResponse"))
		{	*type = SOAP_TYPE__ns1__UseItemCouponFromCouponBoxResponse;
			return soap_in__ns1__UseItemCouponFromCouponBoxResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseItemCouponFromCouponBox"))
		{	*type = SOAP_TYPE__ns1__UseItemCouponFromCouponBox;
			return soap_in__ns1__UseItemCouponFromCouponBox(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckItemCouponFromCouponBoxResponse"))
		{	*type = SOAP_TYPE__ns1__CheckItemCouponFromCouponBoxResponse;
			return soap_in__ns1__CheckItemCouponFromCouponBoxResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckItemCouponFromCouponBox"))
		{	*type = SOAP_TYPE__ns1__CheckItemCouponFromCouponBox;
			return soap_in__ns1__CheckItemCouponFromCouponBox(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:RollbackDiscountItemCouponResponse"))
		{	*type = SOAP_TYPE__ns1__RollbackDiscountItemCouponResponse;
			return soap_in__ns1__RollbackDiscountItemCouponResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:RollbackDiscountItemCoupon"))
		{	*type = SOAP_TYPE__ns1__RollbackDiscountItemCoupon;
			return soap_in__ns1__RollbackDiscountItemCoupon(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseDiscountItemCouponResponse"))
		{	*type = SOAP_TYPE__ns1__UseDiscountItemCouponResponse;
			return soap_in__ns1__UseDiscountItemCouponResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseDiscountItemCoupon"))
		{	*type = SOAP_TYPE__ns1__UseDiscountItemCoupon;
			return soap_in__ns1__UseDiscountItemCoupon(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckDiscountItemCouponResponse"))
		{	*type = SOAP_TYPE__ns1__CheckDiscountItemCouponResponse;
			return soap_in__ns1__CheckDiscountItemCouponResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckDiscountItemCoupon"))
		{	*type = SOAP_TYPE__ns1__CheckDiscountItemCoupon;
			return soap_in__ns1__CheckDiscountItemCoupon(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:RollbackDiscountCouponFromCouponBoxResponse"))
		{	*type = SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBoxResponse;
			return soap_in__ns1__RollbackDiscountCouponFromCouponBoxResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:RollbackDiscountCouponFromCouponBox"))
		{	*type = SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBox;
			return soap_in__ns1__RollbackDiscountCouponFromCouponBox(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseDiscountCouponFromCouponBoxResponse"))
		{	*type = SOAP_TYPE__ns1__UseDiscountCouponFromCouponBoxResponse;
			return soap_in__ns1__UseDiscountCouponFromCouponBoxResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseDiscountCouponFromCouponBox"))
		{	*type = SOAP_TYPE__ns1__UseDiscountCouponFromCouponBox;
			return soap_in__ns1__UseDiscountCouponFromCouponBox(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckDiscountCouponFromCouponBoxResponse"))
		{	*type = SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBoxResponse;
			return soap_in__ns1__CheckDiscountCouponFromCouponBoxResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckDiscountCouponFromCouponBox"))
		{	*type = SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBox;
			return soap_in__ns1__CheckDiscountCouponFromCouponBox(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectHoldingCouponCountByAccountIdResponse"))
		{	*type = SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdResponse;
			return soap_in__ns1__SelectHoldingCouponCountByAccountIdResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectHoldingCouponCountByAccountId"))
		{	*type = SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountId;
			return soap_in__ns1__SelectHoldingCouponCountByAccountId(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse"))
		{	*type = SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse;
			return soap_in__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCode"))
		{	*type = SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode;
			return soap_in__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectAppliableItemCodeForDiscountByAccountByGameResponse"))
		{	*type = SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse;
			return soap_in__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectAppliableItemCodeForDiscountByAccountByGame"))
		{	*type = SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGame;
			return soap_in__ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckActivationCouponStatusResponse"))
		{	*type = SOAP_TYPE__ns1__CheckActivationCouponStatusResponse;
			return soap_in__ns1__CheckActivationCouponStatusResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckActivationCouponStatus"))
		{	*type = SOAP_TYPE__ns1__CheckActivationCouponStatus;
			return soap_in__ns1__CheckActivationCouponStatus(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CancelActivationCashCouponResponse"))
		{	*type = SOAP_TYPE__ns1__CancelActivationCashCouponResponse;
			return soap_in__ns1__CancelActivationCashCouponResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CancelActivationCashCoupon"))
		{	*type = SOAP_TYPE__ns1__CancelActivationCashCoupon;
			return soap_in__ns1__CancelActivationCashCoupon(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ReverseDeactivationCashCouponResponse"))
		{	*type = SOAP_TYPE__ns1__ReverseDeactivationCashCouponResponse;
			return soap_in__ns1__ReverseDeactivationCashCouponResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ReverseDeactivationCashCoupon"))
		{	*type = SOAP_TYPE__ns1__ReverseDeactivationCashCoupon;
			return soap_in__ns1__ReverseDeactivationCashCoupon(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ReverseActivationCashCouponResponse"))
		{	*type = SOAP_TYPE__ns1__ReverseActivationCashCouponResponse;
			return soap_in__ns1__ReverseActivationCashCouponResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ReverseActivationCashCoupon"))
		{	*type = SOAP_TYPE__ns1__ReverseActivationCashCoupon;
			return soap_in__ns1__ReverseActivationCashCoupon(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ActivationCashCouponResponse"))
		{	*type = SOAP_TYPE__ns1__ActivationCashCouponResponse;
			return soap_in__ns1__ActivationCashCouponResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:ActivationCashCoupon"))
		{	*type = SOAP_TYPE__ns1__ActivationCashCoupon;
			return soap_in__ns1__ActivationCashCoupon(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:RollbackCashCouponResponse"))
		{	*type = SOAP_TYPE__ns1__RollbackCashCouponResponse;
			return soap_in__ns1__RollbackCashCouponResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:RollbackCashCoupon"))
		{	*type = SOAP_TYPE__ns1__RollbackCashCoupon;
			return soap_in__ns1__RollbackCashCoupon(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseCashCouponResponse"))
		{	*type = SOAP_TYPE__ns1__UseCashCouponResponse;
			return soap_in__ns1__UseCashCouponResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseCashCoupon"))
		{	*type = SOAP_TYPE__ns1__UseCashCoupon;
			return soap_in__ns1__UseCashCoupon(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckCashCouponResponse"))
		{	*type = SOAP_TYPE__ns1__CheckCashCouponResponse;
			return soap_in__ns1__CheckCashCouponResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckCashCoupon"))
		{	*type = SOAP_TYPE__ns1__CheckCashCoupon;
			return soap_in__ns1__CheckCashCoupon(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:RollbackCashCouponFromCouponBoxResponse"))
		{	*type = SOAP_TYPE__ns1__RollbackCashCouponFromCouponBoxResponse;
			return soap_in__ns1__RollbackCashCouponFromCouponBoxResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:RollbackCashCouponFromCouponBox"))
		{	*type = SOAP_TYPE__ns1__RollbackCashCouponFromCouponBox;
			return soap_in__ns1__RollbackCashCouponFromCouponBox(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseCashCouponFromCouponBoxResponse"))
		{	*type = SOAP_TYPE__ns1__UseCashCouponFromCouponBoxResponse;
			return soap_in__ns1__UseCashCouponFromCouponBoxResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:UseCashCouponFromCouponBox"))
		{	*type = SOAP_TYPE__ns1__UseCashCouponFromCouponBox;
			return soap_in__ns1__UseCashCouponFromCouponBox(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckCashCouponFromCouponBoxResponse"))
		{	*type = SOAP_TYPE__ns1__CheckCashCouponFromCouponBoxResponse;
			return soap_in__ns1__CheckCashCouponFromCouponBoxResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckCashCouponFromCouponBox"))
		{	*type = SOAP_TYPE__ns1__CheckCashCouponFromCouponBox;
			return soap_in__ns1__CheckCashCouponFromCouponBox(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:GetCouponBoxTargetItemListCountResponse"))
		{	*type = SOAP_TYPE__ns1__GetCouponBoxTargetItemListCountResponse;
			return soap_in__ns1__GetCouponBoxTargetItemListCountResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:GetCouponBoxTargetItemListCount"))
		{	*type = SOAP_TYPE__ns1__GetCouponBoxTargetItemListCount;
			return soap_in__ns1__GetCouponBoxTargetItemListCount(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectCouponBoxTargetItemListResponse"))
		{	*type = SOAP_TYPE__ns1__SelectCouponBoxTargetItemListResponse;
			return soap_in__ns1__SelectCouponBoxTargetItemListResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectCouponBoxTargetItemList"))
		{	*type = SOAP_TYPE__ns1__SelectCouponBoxTargetItemList;
			return soap_in__ns1__SelectCouponBoxTargetItemList(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:GetCouponBoxUsedListCountByNexonIDForUserResponse"))
		{	*type = SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse;
			return soap_in__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:GetCouponBoxUsedListCountByNexonIDForUser"))
		{	*type = SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUser;
			return soap_in__ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:GetCouponBoxListCountByNexonIDForUserResponse"))
		{	*type = SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUserResponse;
			return soap_in__ns1__GetCouponBoxListCountByNexonIDForUserResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:GetCouponBoxListCountByNexonIDForUser"))
		{	*type = SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUser;
			return soap_in__ns1__GetCouponBoxListCountByNexonIDForUser(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectCouponBoxUsedListByNexonIDForUserResponse"))
		{	*type = SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse;
			return soap_in__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectCouponBoxUsedListByNexonIDForUser"))
		{	*type = SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUser;
			return soap_in__ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectCouponBoxListByNexonIDForUserResponse"))
		{	*type = SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUserResponse;
			return soap_in__ns1__SelectCouponBoxListByNexonIDForUserResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectCouponBoxListByNexonIDForUser"))
		{	*type = SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUser;
			return soap_in__ns1__SelectCouponBoxListByNexonIDForUser(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectCouponBoxByAccountIDForUserResponse"))
		{	*type = SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUserResponse;
			return soap_in__ns1__SelectCouponBoxByAccountIDForUserResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectCouponBoxByAccountIDForUser"))
		{	*type = SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUser;
			return soap_in__ns1__SelectCouponBoxByAccountIDForUser(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectCouponBoxByCharacterIDForUserResponse"))
		{	*type = SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUserResponse;
			return soap_in__ns1__SelectCouponBoxByCharacterIDForUserResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectCouponBoxByCharacterIDForUser"))
		{	*type = SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUser;
			return soap_in__ns1__SelectCouponBoxByCharacterIDForUser(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse"))
		{	*type = SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse;
			return soap_in__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode"))
		{	*type = SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode;
			return soap_in__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse"))
		{	*type = SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse;
			return soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemList"))
		{	*type = SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList;
			return soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse"))
		{	*type = SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse;
			return soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCode"))
		{	*type = SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode;
			return soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckAddCouponBoxByCouponPinByNexonIdResponse"))
		{	*type = SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse;
			return soap_in__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckAddCouponBoxByCouponPinByNexonId"))
		{	*type = SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonId;
			return soap_in__ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:AddCouponBoxByCouponPinByNexonIdResponse"))
		{	*type = SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonIdResponse;
			return soap_in__ns1__AddCouponBoxByCouponPinByNexonIdResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:AddCouponBoxByCouponPinByNexonId"))
		{	*type = SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonId;
			return soap_in__ns1__AddCouponBoxByCouponPinByNexonId(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectItemCouponFromCouponBoxByNexonIDResponse"))
		{	*type = SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse;
			return soap_in__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectItemCouponFromCouponBoxByNexonID"))
		{	*type = SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonID;
			return soap_in__ns1__SelectItemCouponFromCouponBoxByNexonID(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectCashCouponFromCouponBoxByNexonIDResponse"))
		{	*type = SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse;
			return soap_in__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:SelectCashCouponFromCouponBoxByNexonID"))
		{	*type = SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonID;
			return soap_in__ns1__SelectCashCouponFromCouponBoxByNexonID(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:GetListSchoolResponse"))
		{	*type = SOAP_TYPE__ns1__GetListSchoolResponse;
			return soap_in__ns1__GetListSchoolResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:GetListSchool"))
		{	*type = SOAP_TYPE__ns1__GetListSchool;
			return soap_in__ns1__GetListSchool(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckPasswordByMemberSNResponse"))
		{	*type = SOAP_TYPE__ns1__CheckPasswordByMemberSNResponse;
			return soap_in__ns1__CheckPasswordByMemberSNResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckPasswordByMemberSN"))
		{	*type = SOAP_TYPE__ns1__CheckPasswordByMemberSN;
			return soap_in__ns1__CheckPasswordByMemberSN(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckSameUserResponse"))
		{	*type = SOAP_TYPE__ns1__CheckSameUserResponse;
			return soap_in__ns1__CheckSameUserResponse(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "ns1:CheckSameUser"))
		{	*type = SOAP_TYPE__ns1__CheckSameUser;
			return soap_in__ns1__CheckSameUser(soap, NULL, NULL, NULL);
		}
		if (!soap_match_tag(soap, t, "xsd:schema"))
		{	char **s;
			*type = SOAP_TYPE__xsd__schema;
			s = soap_in__xsd__schema(soap, NULL, NULL, NULL);
			return s ? *s : NULL;
		}
#ifndef WITH_NOIDREF
	}
#endif
	}
	soap->error = SOAP_TAG_MISMATCH;
	return NULL;
}

#ifdef __cplusplus
}
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap *soap)
{
	if (!soap_peek_element(soap))
	{	int t;
		DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Unexpected element '%s' in input (level=%u, %d)\n", soap->tag, soap->level, soap->body));
		if (soap->mustUnderstand && !soap->other)
			return soap->error = SOAP_MUSTUNDERSTAND;
		if (((soap->mode & SOAP_XML_STRICT) && soap->part != SOAP_IN_HEADER) || !soap_match_tag(soap, soap->tag, "SOAP-ENV:"))
		{	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "REJECTING element '%s'\n", soap->tag));
			return soap->error = SOAP_TAG_MISMATCH;
		}
		if (!*soap->id || !soap_getelement(soap, &t))
		{	soap->peeked = 0;
			if (soap->fignore)
				soap->error = soap->fignore(soap, soap->tag);
			else
				soap->error = SOAP_OK;
			DBGLOG(TEST, if (!soap->error) SOAP_MESSAGE(fdebug, "IGNORING element '%s'\n", soap->tag));
			if (!soap->error && soap->body)
			{	soap->level++;
				while (!soap_ignore_element(soap))
					;
				if (soap->error == SOAP_NO_TAG)
					soap->error = soap_element_end_in(soap, NULL);
			}
		}
	}
	return soap->error;
}

#ifndef WITH_NOIDREF
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap *soap)
{
	int i;
	struct soap_plist *pp;
	if (soap->version == 1 && soap->encodingStyle && !(soap->mode & (SOAP_XML_TREE | SOAP_XML_GRAPH)))
		for (i = 0; i < SOAP_PTRHASH; i++)
			for (pp = soap->pht[i]; pp; pp = pp->next)
				if (pp->mark1 == 2 || pp->mark2 == 2)
					if (soap_putelement(soap, pp->ptr, "id", pp->id, pp->type))
						return soap->error;
	return SOAP_OK;
}
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap *soap, const void *ptr, const char *tag, int id, int type)
{	(void)tag;
	switch (type)
	{
	case SOAP_TYPE_byte:
		return soap_out_byte(soap, tag, id, (const char *)ptr, "xsd:byte");
	case SOAP_TYPE_short:
		return soap_out_short(soap, tag, id, (const short *)ptr, "xsd:short");
	case SOAP_TYPE_int:
		return soap_out_int(soap, tag, id, (const int *)ptr, "xsd:int");
	case SOAP_TYPE_LONG64:
		return soap_out_LONG64(soap, tag, id, (const LONG64 *)ptr, "xsd:long");
	case SOAP_TYPE_bool:
		return soap_out_bool(soap, tag, id, (const bool *)ptr, "xsd:boolean");
	case SOAP_TYPE__ns1__BulkCheckExtendResponse_BulkCheckExtendResult:
		return ((_ns1__BulkCheckExtendResponse_BulkCheckExtendResult *)ptr)->soap_out(soap, "ns1:BulkCheckExtendResponse-BulkCheckExtendResult", id, NULL);
	case SOAP_TYPE__ns1__BulkCheckExtend_dsCouponPin:
		return ((_ns1__BulkCheckExtend_dsCouponPin *)ptr)->soap_out(soap, "ns1:BulkCheckExtend-dsCouponPin", id, NULL);
	case SOAP_TYPE__ns1__BulkCheckResponse_BulkCheckResult:
		return ((_ns1__BulkCheckResponse_BulkCheckResult *)ptr)->soap_out(soap, "ns1:BulkCheckResponse-BulkCheckResult", id, NULL);
	case SOAP_TYPE__ns1__BulkCheck_dsCouponPin:
		return ((_ns1__BulkCheck_dsCouponPin *)ptr)->soap_out(soap, "ns1:BulkCheck-dsCouponPin", id, NULL);
	case SOAP_TYPE_std__string:
		return soap_out_std__string(soap, tag, id, (const std::string *)ptr, "xsd:string");
	case SOAP_TYPE__ns2__GetGameAccessTokenResponse:
		return ((_ns2__GetGameAccessTokenResponse *)ptr)->soap_out(soap, "ns2:GetGameAccessTokenResponse", id, NULL);
	case SOAP_TYPE__ns2__GetGameAccessToken:
		return ((_ns2__GetGameAccessToken *)ptr)->soap_out(soap, "ns2:GetGameAccessToken", id, NULL);
	case SOAP_TYPE__ns1__WakeUpResponse:
		return ((_ns1__WakeUpResponse *)ptr)->soap_out(soap, "ns1:WakeUpResponse", id, NULL);
	case SOAP_TYPE__ns1__WakeUp:
		return ((_ns1__WakeUp *)ptr)->soap_out(soap, "ns1:WakeUp", id, NULL);
	case SOAP_TYPE__ns1__GetUseRestrictInfoResponse:
		return ((_ns1__GetUseRestrictInfoResponse *)ptr)->soap_out(soap, "ns1:GetUseRestrictInfoResponse", id, NULL);
	case SOAP_TYPE__ns1__GetUseRestrictInfo:
		return ((_ns1__GetUseRestrictInfo *)ptr)->soap_out(soap, "ns1:GetUseRestrictInfo", id, NULL);
	case SOAP_TYPE__ns1__BulkCheckExtendResponse:
		return ((_ns1__BulkCheckExtendResponse *)ptr)->soap_out(soap, "ns1:BulkCheckExtendResponse", id, NULL);
	case SOAP_TYPE__ns1__BulkCheckExtend:
		return ((_ns1__BulkCheckExtend *)ptr)->soap_out(soap, "ns1:BulkCheckExtend", id, NULL);
	case SOAP_TYPE__ns1__BulkCheckResponse:
		return ((_ns1__BulkCheckResponse *)ptr)->soap_out(soap, "ns1:BulkCheckResponse", id, NULL);
	case SOAP_TYPE__ns1__BulkCheck:
		return ((_ns1__BulkCheck *)ptr)->soap_out(soap, "ns1:BulkCheck", id, NULL);
	case SOAP_TYPE__ns1__UseItemCouponOLDResponse:
		return ((_ns1__UseItemCouponOLDResponse *)ptr)->soap_out(soap, "ns1:UseItemCouponOLDResponse", id, NULL);
	case SOAP_TYPE__ns1__UseItemCouponOLD:
		return ((_ns1__UseItemCouponOLD *)ptr)->soap_out(soap, "ns1:UseItemCouponOLD", id, NULL);
	case SOAP_TYPE__ns1__CheckItemCouponOLDResponse:
		return ((_ns1__CheckItemCouponOLDResponse *)ptr)->soap_out(soap, "ns1:CheckItemCouponOLDResponse", id, NULL);
	case SOAP_TYPE__ns1__CheckItemCouponOLD:
		return ((_ns1__CheckItemCouponOLD *)ptr)->soap_out(soap, "ns1:CheckItemCouponOLD", id, NULL);
	case SOAP_TYPE__ns1__RollbackItemCouponResponse:
		return ((_ns1__RollbackItemCouponResponse *)ptr)->soap_out(soap, "ns1:RollbackItemCouponResponse", id, NULL);
	case SOAP_TYPE__ns1__RollbackItemCoupon:
		return ((_ns1__RollbackItemCoupon *)ptr)->soap_out(soap, "ns1:RollbackItemCoupon", id, NULL);
	case SOAP_TYPE__ns1__UseItemCouponResponse:
		return ((_ns1__UseItemCouponResponse *)ptr)->soap_out(soap, "ns1:UseItemCouponResponse", id, NULL);
	case SOAP_TYPE__ns1__UseItemCoupon:
		return ((_ns1__UseItemCoupon *)ptr)->soap_out(soap, "ns1:UseItemCoupon", id, NULL);
	case SOAP_TYPE__ns1__CheckItemCouponResponse:
		return ((_ns1__CheckItemCouponResponse *)ptr)->soap_out(soap, "ns1:CheckItemCouponResponse", id, NULL);
	case SOAP_TYPE__ns1__CheckItemCoupon:
		return ((_ns1__CheckItemCoupon *)ptr)->soap_out(soap, "ns1:CheckItemCoupon", id, NULL);
	case SOAP_TYPE__ns1__RollbackItemCouponFromCouponBoxResponse:
		return ((_ns1__RollbackItemCouponFromCouponBoxResponse *)ptr)->soap_out(soap, "ns1:RollbackItemCouponFromCouponBoxResponse", id, NULL);
	case SOAP_TYPE__ns1__RollbackItemCouponFromCouponBox:
		return ((_ns1__RollbackItemCouponFromCouponBox *)ptr)->soap_out(soap, "ns1:RollbackItemCouponFromCouponBox", id, NULL);
	case SOAP_TYPE__ns1__UseItemCouponFromCouponBoxResponse:
		return ((_ns1__UseItemCouponFromCouponBoxResponse *)ptr)->soap_out(soap, "ns1:UseItemCouponFromCouponBoxResponse", id, NULL);
	case SOAP_TYPE__ns1__UseItemCouponFromCouponBox:
		return ((_ns1__UseItemCouponFromCouponBox *)ptr)->soap_out(soap, "ns1:UseItemCouponFromCouponBox", id, NULL);
	case SOAP_TYPE__ns1__CheckItemCouponFromCouponBoxResponse:
		return ((_ns1__CheckItemCouponFromCouponBoxResponse *)ptr)->soap_out(soap, "ns1:CheckItemCouponFromCouponBoxResponse", id, NULL);
	case SOAP_TYPE__ns1__CheckItemCouponFromCouponBox:
		return ((_ns1__CheckItemCouponFromCouponBox *)ptr)->soap_out(soap, "ns1:CheckItemCouponFromCouponBox", id, NULL);
	case SOAP_TYPE__ns1__RollbackDiscountItemCouponResponse:
		return ((_ns1__RollbackDiscountItemCouponResponse *)ptr)->soap_out(soap, "ns1:RollbackDiscountItemCouponResponse", id, NULL);
	case SOAP_TYPE__ns1__RollbackDiscountItemCoupon:
		return ((_ns1__RollbackDiscountItemCoupon *)ptr)->soap_out(soap, "ns1:RollbackDiscountItemCoupon", id, NULL);
	case SOAP_TYPE__ns1__UseDiscountItemCouponResponse:
		return ((_ns1__UseDiscountItemCouponResponse *)ptr)->soap_out(soap, "ns1:UseDiscountItemCouponResponse", id, NULL);
	case SOAP_TYPE__ns1__UseDiscountItemCoupon:
		return ((_ns1__UseDiscountItemCoupon *)ptr)->soap_out(soap, "ns1:UseDiscountItemCoupon", id, NULL);
	case SOAP_TYPE__ns1__CheckDiscountItemCouponResponse:
		return ((_ns1__CheckDiscountItemCouponResponse *)ptr)->soap_out(soap, "ns1:CheckDiscountItemCouponResponse", id, NULL);
	case SOAP_TYPE__ns1__CheckDiscountItemCoupon:
		return ((_ns1__CheckDiscountItemCoupon *)ptr)->soap_out(soap, "ns1:CheckDiscountItemCoupon", id, NULL);
	case SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBoxResponse:
		return ((_ns1__RollbackDiscountCouponFromCouponBoxResponse *)ptr)->soap_out(soap, "ns1:RollbackDiscountCouponFromCouponBoxResponse", id, NULL);
	case SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBox:
		return ((_ns1__RollbackDiscountCouponFromCouponBox *)ptr)->soap_out(soap, "ns1:RollbackDiscountCouponFromCouponBox", id, NULL);
	case SOAP_TYPE__ns1__UseDiscountCouponFromCouponBoxResponse:
		return ((_ns1__UseDiscountCouponFromCouponBoxResponse *)ptr)->soap_out(soap, "ns1:UseDiscountCouponFromCouponBoxResponse", id, NULL);
	case SOAP_TYPE__ns1__UseDiscountCouponFromCouponBox:
		return ((_ns1__UseDiscountCouponFromCouponBox *)ptr)->soap_out(soap, "ns1:UseDiscountCouponFromCouponBox", id, NULL);
	case SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBoxResponse:
		return ((_ns1__CheckDiscountCouponFromCouponBoxResponse *)ptr)->soap_out(soap, "ns1:CheckDiscountCouponFromCouponBoxResponse", id, NULL);
	case SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBox:
		return ((_ns1__CheckDiscountCouponFromCouponBox *)ptr)->soap_out(soap, "ns1:CheckDiscountCouponFromCouponBox", id, NULL);
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdResponse:
		return ((_ns1__SelectHoldingCouponCountByAccountIdResponse *)ptr)->soap_out(soap, "ns1:SelectHoldingCouponCountByAccountIdResponse", id, NULL);
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountId:
		return ((_ns1__SelectHoldingCouponCountByAccountId *)ptr)->soap_out(soap, "ns1:SelectHoldingCouponCountByAccountId", id, NULL);
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse:
		return ((_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *)ptr)->soap_out(soap, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse", id, NULL);
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode:
		return ((_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *)ptr)->soap_out(soap, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCode", id, NULL);
	case SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse:
		return ((_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *)ptr)->soap_out(soap, "ns1:SelectAppliableItemCodeForDiscountByAccountByGameResponse", id, NULL);
	case SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGame:
		return ((_ns1__SelectAppliableItemCodeForDiscountByAccountByGame *)ptr)->soap_out(soap, "ns1:SelectAppliableItemCodeForDiscountByAccountByGame", id, NULL);
	case SOAP_TYPE__ns1__CheckActivationCouponStatusResponse:
		return ((_ns1__CheckActivationCouponStatusResponse *)ptr)->soap_out(soap, "ns1:CheckActivationCouponStatusResponse", id, NULL);
	case SOAP_TYPE__ns1__CheckActivationCouponStatus:
		return ((_ns1__CheckActivationCouponStatus *)ptr)->soap_out(soap, "ns1:CheckActivationCouponStatus", id, NULL);
	case SOAP_TYPE__ns1__CancelActivationCashCouponResponse:
		return ((_ns1__CancelActivationCashCouponResponse *)ptr)->soap_out(soap, "ns1:CancelActivationCashCouponResponse", id, NULL);
	case SOAP_TYPE__ns1__CancelActivationCashCoupon:
		return ((_ns1__CancelActivationCashCoupon *)ptr)->soap_out(soap, "ns1:CancelActivationCashCoupon", id, NULL);
	case SOAP_TYPE__ns1__ReverseDeactivationCashCouponResponse:
		return ((_ns1__ReverseDeactivationCashCouponResponse *)ptr)->soap_out(soap, "ns1:ReverseDeactivationCashCouponResponse", id, NULL);
	case SOAP_TYPE__ns1__ReverseDeactivationCashCoupon:
		return ((_ns1__ReverseDeactivationCashCoupon *)ptr)->soap_out(soap, "ns1:ReverseDeactivationCashCoupon", id, NULL);
	case SOAP_TYPE__ns1__ReverseActivationCashCouponResponse:
		return ((_ns1__ReverseActivationCashCouponResponse *)ptr)->soap_out(soap, "ns1:ReverseActivationCashCouponResponse", id, NULL);
	case SOAP_TYPE__ns1__ReverseActivationCashCoupon:
		return ((_ns1__ReverseActivationCashCoupon *)ptr)->soap_out(soap, "ns1:ReverseActivationCashCoupon", id, NULL);
	case SOAP_TYPE__ns1__ActivationCashCouponResponse:
		return ((_ns1__ActivationCashCouponResponse *)ptr)->soap_out(soap, "ns1:ActivationCashCouponResponse", id, NULL);
	case SOAP_TYPE__ns1__ActivationCashCoupon:
		return ((_ns1__ActivationCashCoupon *)ptr)->soap_out(soap, "ns1:ActivationCashCoupon", id, NULL);
	case SOAP_TYPE__ns1__RollbackCashCouponResponse:
		return ((_ns1__RollbackCashCouponResponse *)ptr)->soap_out(soap, "ns1:RollbackCashCouponResponse", id, NULL);
	case SOAP_TYPE__ns1__RollbackCashCoupon:
		return ((_ns1__RollbackCashCoupon *)ptr)->soap_out(soap, "ns1:RollbackCashCoupon", id, NULL);
	case SOAP_TYPE__ns1__UseCashCouponResponse:
		return ((_ns1__UseCashCouponResponse *)ptr)->soap_out(soap, "ns1:UseCashCouponResponse", id, NULL);
	case SOAP_TYPE__ns1__UseCashCoupon:
		return ((_ns1__UseCashCoupon *)ptr)->soap_out(soap, "ns1:UseCashCoupon", id, NULL);
	case SOAP_TYPE__ns1__CheckCashCouponResponse:
		return ((_ns1__CheckCashCouponResponse *)ptr)->soap_out(soap, "ns1:CheckCashCouponResponse", id, NULL);
	case SOAP_TYPE__ns1__CheckCashCoupon:
		return ((_ns1__CheckCashCoupon *)ptr)->soap_out(soap, "ns1:CheckCashCoupon", id, NULL);
	case SOAP_TYPE__ns1__RollbackCashCouponFromCouponBoxResponse:
		return ((_ns1__RollbackCashCouponFromCouponBoxResponse *)ptr)->soap_out(soap, "ns1:RollbackCashCouponFromCouponBoxResponse", id, NULL);
	case SOAP_TYPE__ns1__RollbackCashCouponFromCouponBox:
		return ((_ns1__RollbackCashCouponFromCouponBox *)ptr)->soap_out(soap, "ns1:RollbackCashCouponFromCouponBox", id, NULL);
	case SOAP_TYPE__ns1__UseCashCouponFromCouponBoxResponse:
		return ((_ns1__UseCashCouponFromCouponBoxResponse *)ptr)->soap_out(soap, "ns1:UseCashCouponFromCouponBoxResponse", id, NULL);
	case SOAP_TYPE__ns1__UseCashCouponFromCouponBox:
		return ((_ns1__UseCashCouponFromCouponBox *)ptr)->soap_out(soap, "ns1:UseCashCouponFromCouponBox", id, NULL);
	case SOAP_TYPE__ns1__CheckCashCouponFromCouponBoxResponse:
		return ((_ns1__CheckCashCouponFromCouponBoxResponse *)ptr)->soap_out(soap, "ns1:CheckCashCouponFromCouponBoxResponse", id, NULL);
	case SOAP_TYPE__ns1__CheckCashCouponFromCouponBox:
		return ((_ns1__CheckCashCouponFromCouponBox *)ptr)->soap_out(soap, "ns1:CheckCashCouponFromCouponBox", id, NULL);
	case SOAP_TYPE__ns1__GetCouponBoxTargetItemListCountResponse:
		return ((_ns1__GetCouponBoxTargetItemListCountResponse *)ptr)->soap_out(soap, "ns1:GetCouponBoxTargetItemListCountResponse", id, NULL);
	case SOAP_TYPE__ns1__GetCouponBoxTargetItemListCount:
		return ((_ns1__GetCouponBoxTargetItemListCount *)ptr)->soap_out(soap, "ns1:GetCouponBoxTargetItemListCount", id, NULL);
	case SOAP_TYPE__ns1__SelectCouponBoxTargetItemListResponse:
		return ((_ns1__SelectCouponBoxTargetItemListResponse *)ptr)->soap_out(soap, "ns1:SelectCouponBoxTargetItemListResponse", id, NULL);
	case SOAP_TYPE__ns1__SelectCouponBoxTargetItemList:
		return ((_ns1__SelectCouponBoxTargetItemList *)ptr)->soap_out(soap, "ns1:SelectCouponBoxTargetItemList", id, NULL);
	case SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse:
		return ((_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *)ptr)->soap_out(soap, "ns1:GetCouponBoxUsedListCountByNexonIDForUserResponse", id, NULL);
	case SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUser:
		return ((_ns1__GetCouponBoxUsedListCountByNexonIDForUser *)ptr)->soap_out(soap, "ns1:GetCouponBoxUsedListCountByNexonIDForUser", id, NULL);
	case SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUserResponse:
		return ((_ns1__GetCouponBoxListCountByNexonIDForUserResponse *)ptr)->soap_out(soap, "ns1:GetCouponBoxListCountByNexonIDForUserResponse", id, NULL);
	case SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUser:
		return ((_ns1__GetCouponBoxListCountByNexonIDForUser *)ptr)->soap_out(soap, "ns1:GetCouponBoxListCountByNexonIDForUser", id, NULL);
	case SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse:
		return ((_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *)ptr)->soap_out(soap, "ns1:SelectCouponBoxUsedListByNexonIDForUserResponse", id, NULL);
	case SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUser:
		return ((_ns1__SelectCouponBoxUsedListByNexonIDForUser *)ptr)->soap_out(soap, "ns1:SelectCouponBoxUsedListByNexonIDForUser", id, NULL);
	case SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUserResponse:
		return ((_ns1__SelectCouponBoxListByNexonIDForUserResponse *)ptr)->soap_out(soap, "ns1:SelectCouponBoxListByNexonIDForUserResponse", id, NULL);
	case SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUser:
		return ((_ns1__SelectCouponBoxListByNexonIDForUser *)ptr)->soap_out(soap, "ns1:SelectCouponBoxListByNexonIDForUser", id, NULL);
	case SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUserResponse:
		return ((_ns1__SelectCouponBoxByAccountIDForUserResponse *)ptr)->soap_out(soap, "ns1:SelectCouponBoxByAccountIDForUserResponse", id, NULL);
	case SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUser:
		return ((_ns1__SelectCouponBoxByAccountIDForUser *)ptr)->soap_out(soap, "ns1:SelectCouponBoxByAccountIDForUser", id, NULL);
	case SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUserResponse:
		return ((_ns1__SelectCouponBoxByCharacterIDForUserResponse *)ptr)->soap_out(soap, "ns1:SelectCouponBoxByCharacterIDForUserResponse", id, NULL);
	case SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUser:
		return ((_ns1__SelectCouponBoxByCharacterIDForUser *)ptr)->soap_out(soap, "ns1:SelectCouponBoxByCharacterIDForUser", id, NULL);
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse:
		return ((_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *)ptr)->soap_out(soap, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse", id, NULL);
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode:
		return ((_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *)ptr)->soap_out(soap, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode", id, NULL);
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse:
		return ((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *)ptr)->soap_out(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse", id, NULL);
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList:
		return ((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *)ptr)->soap_out(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemList", id, NULL);
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse:
		return ((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *)ptr)->soap_out(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse", id, NULL);
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode:
		return ((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *)ptr)->soap_out(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCode", id, NULL);
	case SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse:
		return ((_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *)ptr)->soap_out(soap, "ns1:CheckAddCouponBoxByCouponPinByNexonIdResponse", id, NULL);
	case SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonId:
		return ((_ns1__CheckAddCouponBoxByCouponPinByNexonId *)ptr)->soap_out(soap, "ns1:CheckAddCouponBoxByCouponPinByNexonId", id, NULL);
	case SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonIdResponse:
		return ((_ns1__AddCouponBoxByCouponPinByNexonIdResponse *)ptr)->soap_out(soap, "ns1:AddCouponBoxByCouponPinByNexonIdResponse", id, NULL);
	case SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonId:
		return ((_ns1__AddCouponBoxByCouponPinByNexonId *)ptr)->soap_out(soap, "ns1:AddCouponBoxByCouponPinByNexonId", id, NULL);
	case SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse:
		return ((_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *)ptr)->soap_out(soap, "ns1:SelectItemCouponFromCouponBoxByNexonIDResponse", id, NULL);
	case SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonID:
		return ((_ns1__SelectItemCouponFromCouponBoxByNexonID *)ptr)->soap_out(soap, "ns1:SelectItemCouponFromCouponBoxByNexonID", id, NULL);
	case SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse:
		return ((_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *)ptr)->soap_out(soap, "ns1:SelectCashCouponFromCouponBoxByNexonIDResponse", id, NULL);
	case SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonID:
		return ((_ns1__SelectCashCouponFromCouponBoxByNexonID *)ptr)->soap_out(soap, "ns1:SelectCashCouponFromCouponBoxByNexonID", id, NULL);
	case SOAP_TYPE__ns1__GetListSchoolResponse:
		return ((_ns1__GetListSchoolResponse *)ptr)->soap_out(soap, "ns1:GetListSchoolResponse", id, NULL);
	case SOAP_TYPE__ns1__GetListSchool:
		return ((_ns1__GetListSchool *)ptr)->soap_out(soap, "ns1:GetListSchool", id, NULL);
	case SOAP_TYPE__ns1__CheckPasswordByMemberSNResponse:
		return ((_ns1__CheckPasswordByMemberSNResponse *)ptr)->soap_out(soap, "ns1:CheckPasswordByMemberSNResponse", id, NULL);
	case SOAP_TYPE__ns1__CheckPasswordByMemberSN:
		return ((_ns1__CheckPasswordByMemberSN *)ptr)->soap_out(soap, "ns1:CheckPasswordByMemberSN", id, NULL);
	case SOAP_TYPE__ns1__CheckSameUserResponse:
		return ((_ns1__CheckSameUserResponse *)ptr)->soap_out(soap, "ns1:CheckSameUserResponse", id, NULL);
	case SOAP_TYPE__ns1__CheckSameUser:
		return ((_ns1__CheckSameUser *)ptr)->soap_out(soap, "ns1:CheckSameUser", id, NULL);
	case SOAP_TYPE_ns1__UseRestrictInfoEntity:
		return ((ns1__UseRestrictInfoEntity *)ptr)->soap_out(soap, tag, id, "ns1:UseRestrictInfoEntity");
	case SOAP_TYPE_ns1__ItemEntity:
		return ((ns1__ItemEntity *)ptr)->soap_out(soap, tag, id, "ns1:ItemEntity");
	case SOAP_TYPE_ns1__ArrayOfItemEntity:
		return ((ns1__ArrayOfItemEntity *)ptr)->soap_out(soap, tag, id, "ns1:ArrayOfItemEntity");
	case SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity:
		return ((ns1__ArrayOfHoldingCouponCountEntity *)ptr)->soap_out(soap, tag, id, "ns1:ArrayOfHoldingCouponCountEntity");
	case SOAP_TYPE_ns1__HoldingCouponCountEntity:
		return ((ns1__HoldingCouponCountEntity *)ptr)->soap_out(soap, tag, id, "ns1:HoldingCouponCountEntity");
	case SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity:
		return ((ns1__DiscountAppliableItemInfoEntity *)ptr)->soap_out(soap, tag, id, "ns1:DiscountAppliableItemInfoEntity");
	case SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity:
		return ((ns1__ArrayOfDiscountAppliableItemInfoEntity *)ptr)->soap_out(soap, tag, id, "ns1:ArrayOfDiscountAppliableItemInfoEntity");
	case SOAP_TYPE_ns1__CouponBoxTargetItem:
		return ((ns1__CouponBoxTargetItem *)ptr)->soap_out(soap, tag, id, "ns1:CouponBoxTargetItem");
	case SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem:
		return ((ns1__ArrayOfCouponBoxTargetItem *)ptr)->soap_out(soap, tag, id, "ns1:ArrayOfCouponBoxTargetItem");
	case SOAP_TYPE_ns1__CouponBoxItem:
		return ((ns1__CouponBoxItem *)ptr)->soap_out(soap, tag, id, "ns1:CouponBoxItem");
	case SOAP_TYPE_ns1__ArrayOfCouponBoxItem:
		return ((ns1__ArrayOfCouponBoxItem *)ptr)->soap_out(soap, tag, id, "ns1:ArrayOfCouponBoxItem");
	case SOAP_TYPE_ns1__ExtensionDataObject:
		return ((ns1__ExtensionDataObject *)ptr)->soap_out(soap, tag, id, "ns1:ExtensionDataObject");
	case SOAP_TYPE_ns1__ClientCouponBox:
		return ((ns1__ClientCouponBox *)ptr)->soap_out(soap, tag, id, "ns1:ClientCouponBox");
	case SOAP_TYPE_ns1__ArrayOfClientCouponBox:
		return ((ns1__ArrayOfClientCouponBox *)ptr)->soap_out(soap, tag, id, "ns1:ArrayOfClientCouponBox");
	case SOAP_TYPE_PointerTo_ns2__GetGameAccessTokenResponse:
		return soap_out_PointerTo_ns2__GetGameAccessTokenResponse(soap, tag, id, (_ns2__GetGameAccessTokenResponse *const*)ptr, "ns2:GetGameAccessTokenResponse");
	case SOAP_TYPE_PointerTo_ns2__GetGameAccessToken:
		return soap_out_PointerTo_ns2__GetGameAccessToken(soap, tag, id, (_ns2__GetGameAccessToken *const*)ptr, "ns2:GetGameAccessToken");
	case SOAP_TYPE_PointerTo_ns1__WakeUpResponse:
		return soap_out_PointerTo_ns1__WakeUpResponse(soap, tag, id, (_ns1__WakeUpResponse *const*)ptr, "ns1:WakeUpResponse");
	case SOAP_TYPE_PointerTo_ns1__WakeUp:
		return soap_out_PointerTo_ns1__WakeUp(soap, tag, id, (_ns1__WakeUp *const*)ptr, "ns1:WakeUp");
	case SOAP_TYPE_PointerTo_ns1__GetUseRestrictInfoResponse:
		return soap_out_PointerTo_ns1__GetUseRestrictInfoResponse(soap, tag, id, (_ns1__GetUseRestrictInfoResponse *const*)ptr, "ns1:GetUseRestrictInfoResponse");
	case SOAP_TYPE_PointerTo_ns1__GetUseRestrictInfo:
		return soap_out_PointerTo_ns1__GetUseRestrictInfo(soap, tag, id, (_ns1__GetUseRestrictInfo *const*)ptr, "ns1:GetUseRestrictInfo");
	case SOAP_TYPE_PointerTo_ns1__BulkCheckExtendResponse:
		return soap_out_PointerTo_ns1__BulkCheckExtendResponse(soap, tag, id, (_ns1__BulkCheckExtendResponse *const*)ptr, "ns1:BulkCheckExtendResponse");
	case SOAP_TYPE_PointerTo_ns1__BulkCheckExtend:
		return soap_out_PointerTo_ns1__BulkCheckExtend(soap, tag, id, (_ns1__BulkCheckExtend *const*)ptr, "ns1:BulkCheckExtend");
	case SOAP_TYPE_PointerTo_ns1__BulkCheckResponse:
		return soap_out_PointerTo_ns1__BulkCheckResponse(soap, tag, id, (_ns1__BulkCheckResponse *const*)ptr, "ns1:BulkCheckResponse");
	case SOAP_TYPE_PointerTo_ns1__BulkCheck:
		return soap_out_PointerTo_ns1__BulkCheck(soap, tag, id, (_ns1__BulkCheck *const*)ptr, "ns1:BulkCheck");
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponOLDResponse:
		return soap_out_PointerTo_ns1__UseItemCouponOLDResponse(soap, tag, id, (_ns1__UseItemCouponOLDResponse *const*)ptr, "ns1:UseItemCouponOLDResponse");
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponOLD:
		return soap_out_PointerTo_ns1__UseItemCouponOLD(soap, tag, id, (_ns1__UseItemCouponOLD *const*)ptr, "ns1:UseItemCouponOLD");
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponOLDResponse:
		return soap_out_PointerTo_ns1__CheckItemCouponOLDResponse(soap, tag, id, (_ns1__CheckItemCouponOLDResponse *const*)ptr, "ns1:CheckItemCouponOLDResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponOLD:
		return soap_out_PointerTo_ns1__CheckItemCouponOLD(soap, tag, id, (_ns1__CheckItemCouponOLD *const*)ptr, "ns1:CheckItemCouponOLD");
	case SOAP_TYPE_PointerTo_ns1__RollbackItemCouponResponse:
		return soap_out_PointerTo_ns1__RollbackItemCouponResponse(soap, tag, id, (_ns1__RollbackItemCouponResponse *const*)ptr, "ns1:RollbackItemCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__RollbackItemCoupon:
		return soap_out_PointerTo_ns1__RollbackItemCoupon(soap, tag, id, (_ns1__RollbackItemCoupon *const*)ptr, "ns1:RollbackItemCoupon");
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponResponse:
		return soap_out_PointerTo_ns1__UseItemCouponResponse(soap, tag, id, (_ns1__UseItemCouponResponse *const*)ptr, "ns1:UseItemCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__UseItemCoupon:
		return soap_out_PointerTo_ns1__UseItemCoupon(soap, tag, id, (_ns1__UseItemCoupon *const*)ptr, "ns1:UseItemCoupon");
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponResponse:
		return soap_out_PointerTo_ns1__CheckItemCouponResponse(soap, tag, id, (_ns1__CheckItemCouponResponse *const*)ptr, "ns1:CheckItemCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckItemCoupon:
		return soap_out_PointerTo_ns1__CheckItemCoupon(soap, tag, id, (_ns1__CheckItemCoupon *const*)ptr, "ns1:CheckItemCoupon");
	case SOAP_TYPE_PointerTo_ns1__RollbackItemCouponFromCouponBoxResponse:
		return soap_out_PointerTo_ns1__RollbackItemCouponFromCouponBoxResponse(soap, tag, id, (_ns1__RollbackItemCouponFromCouponBoxResponse *const*)ptr, "ns1:RollbackItemCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__RollbackItemCouponFromCouponBox:
		return soap_out_PointerTo_ns1__RollbackItemCouponFromCouponBox(soap, tag, id, (_ns1__RollbackItemCouponFromCouponBox *const*)ptr, "ns1:RollbackItemCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponFromCouponBoxResponse:
		return soap_out_PointerTo_ns1__UseItemCouponFromCouponBoxResponse(soap, tag, id, (_ns1__UseItemCouponFromCouponBoxResponse *const*)ptr, "ns1:UseItemCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponFromCouponBox:
		return soap_out_PointerTo_ns1__UseItemCouponFromCouponBox(soap, tag, id, (_ns1__UseItemCouponFromCouponBox *const*)ptr, "ns1:UseItemCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponFromCouponBoxResponse:
		return soap_out_PointerTo_ns1__CheckItemCouponFromCouponBoxResponse(soap, tag, id, (_ns1__CheckItemCouponFromCouponBoxResponse *const*)ptr, "ns1:CheckItemCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponFromCouponBox:
		return soap_out_PointerTo_ns1__CheckItemCouponFromCouponBox(soap, tag, id, (_ns1__CheckItemCouponFromCouponBox *const*)ptr, "ns1:CheckItemCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__RollbackDiscountItemCouponResponse:
		return soap_out_PointerTo_ns1__RollbackDiscountItemCouponResponse(soap, tag, id, (_ns1__RollbackDiscountItemCouponResponse *const*)ptr, "ns1:RollbackDiscountItemCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__RollbackDiscountItemCoupon:
		return soap_out_PointerTo_ns1__RollbackDiscountItemCoupon(soap, tag, id, (_ns1__RollbackDiscountItemCoupon *const*)ptr, "ns1:RollbackDiscountItemCoupon");
	case SOAP_TYPE_PointerTo_ns1__UseDiscountItemCouponResponse:
		return soap_out_PointerTo_ns1__UseDiscountItemCouponResponse(soap, tag, id, (_ns1__UseDiscountItemCouponResponse *const*)ptr, "ns1:UseDiscountItemCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__UseDiscountItemCoupon:
		return soap_out_PointerTo_ns1__UseDiscountItemCoupon(soap, tag, id, (_ns1__UseDiscountItemCoupon *const*)ptr, "ns1:UseDiscountItemCoupon");
	case SOAP_TYPE_PointerTo_ns1__CheckDiscountItemCouponResponse:
		return soap_out_PointerTo_ns1__CheckDiscountItemCouponResponse(soap, tag, id, (_ns1__CheckDiscountItemCouponResponse *const*)ptr, "ns1:CheckDiscountItemCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckDiscountItemCoupon:
		return soap_out_PointerTo_ns1__CheckDiscountItemCoupon(soap, tag, id, (_ns1__CheckDiscountItemCoupon *const*)ptr, "ns1:CheckDiscountItemCoupon");
	case SOAP_TYPE_PointerTo_ns1__RollbackDiscountCouponFromCouponBoxResponse:
		return soap_out_PointerTo_ns1__RollbackDiscountCouponFromCouponBoxResponse(soap, tag, id, (_ns1__RollbackDiscountCouponFromCouponBoxResponse *const*)ptr, "ns1:RollbackDiscountCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__RollbackDiscountCouponFromCouponBox:
		return soap_out_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(soap, tag, id, (_ns1__RollbackDiscountCouponFromCouponBox *const*)ptr, "ns1:RollbackDiscountCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__UseDiscountCouponFromCouponBoxResponse:
		return soap_out_PointerTo_ns1__UseDiscountCouponFromCouponBoxResponse(soap, tag, id, (_ns1__UseDiscountCouponFromCouponBoxResponse *const*)ptr, "ns1:UseDiscountCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__UseDiscountCouponFromCouponBox:
		return soap_out_PointerTo_ns1__UseDiscountCouponFromCouponBox(soap, tag, id, (_ns1__UseDiscountCouponFromCouponBox *const*)ptr, "ns1:UseDiscountCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__CheckDiscountCouponFromCouponBoxResponse:
		return soap_out_PointerTo_ns1__CheckDiscountCouponFromCouponBoxResponse(soap, tag, id, (_ns1__CheckDiscountCouponFromCouponBoxResponse *const*)ptr, "ns1:CheckDiscountCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckDiscountCouponFromCouponBox:
		return soap_out_PointerTo_ns1__CheckDiscountCouponFromCouponBox(soap, tag, id, (_ns1__CheckDiscountCouponFromCouponBox *const*)ptr, "ns1:CheckDiscountCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountIdResponse:
		return soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountIdResponse(soap, tag, id, (_ns1__SelectHoldingCouponCountByAccountIdResponse *const*)ptr, "ns1:SelectHoldingCouponCountByAccountIdResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountId:
		return soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountId(soap, tag, id, (_ns1__SelectHoldingCouponCountByAccountId *const*)ptr, "ns1:SelectHoldingCouponCountByAccountId");
	case SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse:
		return soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(soap, tag, id, (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *const*)ptr, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode:
		return soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, tag, id, (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *const*)ptr, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCode");
	case SOAP_TYPE_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse:
		return soap_out_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(soap, tag, id, (_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *const*)ptr, "ns1:SelectAppliableItemCodeForDiscountByAccountByGameResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame:
		return soap_out_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, tag, id, (_ns1__SelectAppliableItemCodeForDiscountByAccountByGame *const*)ptr, "ns1:SelectAppliableItemCodeForDiscountByAccountByGame");
	case SOAP_TYPE_PointerTo_ns1__CheckActivationCouponStatusResponse:
		return soap_out_PointerTo_ns1__CheckActivationCouponStatusResponse(soap, tag, id, (_ns1__CheckActivationCouponStatusResponse *const*)ptr, "ns1:CheckActivationCouponStatusResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckActivationCouponStatus:
		return soap_out_PointerTo_ns1__CheckActivationCouponStatus(soap, tag, id, (_ns1__CheckActivationCouponStatus *const*)ptr, "ns1:CheckActivationCouponStatus");
	case SOAP_TYPE_PointerTo_ns1__CancelActivationCashCouponResponse:
		return soap_out_PointerTo_ns1__CancelActivationCashCouponResponse(soap, tag, id, (_ns1__CancelActivationCashCouponResponse *const*)ptr, "ns1:CancelActivationCashCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__CancelActivationCashCoupon:
		return soap_out_PointerTo_ns1__CancelActivationCashCoupon(soap, tag, id, (_ns1__CancelActivationCashCoupon *const*)ptr, "ns1:CancelActivationCashCoupon");
	case SOAP_TYPE_PointerTo_ns1__ReverseDeactivationCashCouponResponse:
		return soap_out_PointerTo_ns1__ReverseDeactivationCashCouponResponse(soap, tag, id, (_ns1__ReverseDeactivationCashCouponResponse *const*)ptr, "ns1:ReverseDeactivationCashCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__ReverseDeactivationCashCoupon:
		return soap_out_PointerTo_ns1__ReverseDeactivationCashCoupon(soap, tag, id, (_ns1__ReverseDeactivationCashCoupon *const*)ptr, "ns1:ReverseDeactivationCashCoupon");
	case SOAP_TYPE_PointerTo_ns1__ReverseActivationCashCouponResponse:
		return soap_out_PointerTo_ns1__ReverseActivationCashCouponResponse(soap, tag, id, (_ns1__ReverseActivationCashCouponResponse *const*)ptr, "ns1:ReverseActivationCashCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__ReverseActivationCashCoupon:
		return soap_out_PointerTo_ns1__ReverseActivationCashCoupon(soap, tag, id, (_ns1__ReverseActivationCashCoupon *const*)ptr, "ns1:ReverseActivationCashCoupon");
	case SOAP_TYPE_PointerTo_ns1__ActivationCashCouponResponse:
		return soap_out_PointerTo_ns1__ActivationCashCouponResponse(soap, tag, id, (_ns1__ActivationCashCouponResponse *const*)ptr, "ns1:ActivationCashCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__ActivationCashCoupon:
		return soap_out_PointerTo_ns1__ActivationCashCoupon(soap, tag, id, (_ns1__ActivationCashCoupon *const*)ptr, "ns1:ActivationCashCoupon");
	case SOAP_TYPE_PointerTo_ns1__RollbackCashCouponResponse:
		return soap_out_PointerTo_ns1__RollbackCashCouponResponse(soap, tag, id, (_ns1__RollbackCashCouponResponse *const*)ptr, "ns1:RollbackCashCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__RollbackCashCoupon:
		return soap_out_PointerTo_ns1__RollbackCashCoupon(soap, tag, id, (_ns1__RollbackCashCoupon *const*)ptr, "ns1:RollbackCashCoupon");
	case SOAP_TYPE_PointerTo_ns1__UseCashCouponResponse:
		return soap_out_PointerTo_ns1__UseCashCouponResponse(soap, tag, id, (_ns1__UseCashCouponResponse *const*)ptr, "ns1:UseCashCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__UseCashCoupon:
		return soap_out_PointerTo_ns1__UseCashCoupon(soap, tag, id, (_ns1__UseCashCoupon *const*)ptr, "ns1:UseCashCoupon");
	case SOAP_TYPE_PointerTo_ns1__CheckCashCouponResponse:
		return soap_out_PointerTo_ns1__CheckCashCouponResponse(soap, tag, id, (_ns1__CheckCashCouponResponse *const*)ptr, "ns1:CheckCashCouponResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckCashCoupon:
		return soap_out_PointerTo_ns1__CheckCashCoupon(soap, tag, id, (_ns1__CheckCashCoupon *const*)ptr, "ns1:CheckCashCoupon");
	case SOAP_TYPE_PointerTo_ns1__RollbackCashCouponFromCouponBoxResponse:
		return soap_out_PointerTo_ns1__RollbackCashCouponFromCouponBoxResponse(soap, tag, id, (_ns1__RollbackCashCouponFromCouponBoxResponse *const*)ptr, "ns1:RollbackCashCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__RollbackCashCouponFromCouponBox:
		return soap_out_PointerTo_ns1__RollbackCashCouponFromCouponBox(soap, tag, id, (_ns1__RollbackCashCouponFromCouponBox *const*)ptr, "ns1:RollbackCashCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__UseCashCouponFromCouponBoxResponse:
		return soap_out_PointerTo_ns1__UseCashCouponFromCouponBoxResponse(soap, tag, id, (_ns1__UseCashCouponFromCouponBoxResponse *const*)ptr, "ns1:UseCashCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__UseCashCouponFromCouponBox:
		return soap_out_PointerTo_ns1__UseCashCouponFromCouponBox(soap, tag, id, (_ns1__UseCashCouponFromCouponBox *const*)ptr, "ns1:UseCashCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__CheckCashCouponFromCouponBoxResponse:
		return soap_out_PointerTo_ns1__CheckCashCouponFromCouponBoxResponse(soap, tag, id, (_ns1__CheckCashCouponFromCouponBoxResponse *const*)ptr, "ns1:CheckCashCouponFromCouponBoxResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckCashCouponFromCouponBox:
		return soap_out_PointerTo_ns1__CheckCashCouponFromCouponBox(soap, tag, id, (_ns1__CheckCashCouponFromCouponBox *const*)ptr, "ns1:CheckCashCouponFromCouponBox");
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxTargetItemListCountResponse:
		return soap_out_PointerTo_ns1__GetCouponBoxTargetItemListCountResponse(soap, tag, id, (_ns1__GetCouponBoxTargetItemListCountResponse *const*)ptr, "ns1:GetCouponBoxTargetItemListCountResponse");
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxTargetItemListCount:
		return soap_out_PointerTo_ns1__GetCouponBoxTargetItemListCount(soap, tag, id, (_ns1__GetCouponBoxTargetItemListCount *const*)ptr, "ns1:GetCouponBoxTargetItemListCount");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxTargetItemListResponse:
		return soap_out_PointerTo_ns1__SelectCouponBoxTargetItemListResponse(soap, tag, id, (_ns1__SelectCouponBoxTargetItemListResponse *const*)ptr, "ns1:SelectCouponBoxTargetItemListResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxTargetItemList:
		return soap_out_PointerTo_ns1__SelectCouponBoxTargetItemList(soap, tag, id, (_ns1__SelectCouponBoxTargetItemList *const*)ptr, "ns1:SelectCouponBoxTargetItemList");
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse:
		return soap_out_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(soap, tag, id, (_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *const*)ptr, "ns1:GetCouponBoxUsedListCountByNexonIDForUserResponse");
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser:
		return soap_out_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, tag, id, (_ns1__GetCouponBoxUsedListCountByNexonIDForUser *const*)ptr, "ns1:GetCouponBoxUsedListCountByNexonIDForUser");
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUserResponse:
		return soap_out_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUserResponse(soap, tag, id, (_ns1__GetCouponBoxListCountByNexonIDForUserResponse *const*)ptr, "ns1:GetCouponBoxListCountByNexonIDForUserResponse");
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser:
		return soap_out_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(soap, tag, id, (_ns1__GetCouponBoxListCountByNexonIDForUser *const*)ptr, "ns1:GetCouponBoxListCountByNexonIDForUser");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse:
		return soap_out_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(soap, tag, id, (_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *const*)ptr, "ns1:SelectCouponBoxUsedListByNexonIDForUserResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser:
		return soap_out_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, tag, id, (_ns1__SelectCouponBoxUsedListByNexonIDForUser *const*)ptr, "ns1:SelectCouponBoxUsedListByNexonIDForUser");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxListByNexonIDForUserResponse:
		return soap_out_PointerTo_ns1__SelectCouponBoxListByNexonIDForUserResponse(soap, tag, id, (_ns1__SelectCouponBoxListByNexonIDForUserResponse *const*)ptr, "ns1:SelectCouponBoxListByNexonIDForUserResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser:
		return soap_out_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(soap, tag, id, (_ns1__SelectCouponBoxListByNexonIDForUser *const*)ptr, "ns1:SelectCouponBoxListByNexonIDForUser");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByAccountIDForUserResponse:
		return soap_out_PointerTo_ns1__SelectCouponBoxByAccountIDForUserResponse(soap, tag, id, (_ns1__SelectCouponBoxByAccountIDForUserResponse *const*)ptr, "ns1:SelectCouponBoxByAccountIDForUserResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByAccountIDForUser:
		return soap_out_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(soap, tag, id, (_ns1__SelectCouponBoxByAccountIDForUser *const*)ptr, "ns1:SelectCouponBoxByAccountIDForUser");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByCharacterIDForUserResponse:
		return soap_out_PointerTo_ns1__SelectCouponBoxByCharacterIDForUserResponse(soap, tag, id, (_ns1__SelectCouponBoxByCharacterIDForUserResponse *const*)ptr, "ns1:SelectCouponBoxByCharacterIDForUserResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser:
		return soap_out_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(soap, tag, id, (_ns1__SelectCouponBoxByCharacterIDForUser *const*)ptr, "ns1:SelectCouponBoxByCharacterIDForUser");
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse:
		return soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(soap, tag, id, (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *const*)ptr, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode:
		return soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, tag, id, (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *const*)ptr, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode");
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse:
		return soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(soap, tag, id, (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *const*)ptr, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList:
		return soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, tag, id, (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *const*)ptr, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemList");
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse:
		return soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(soap, tag, id, (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *const*)ptr, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode:
		return soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, tag, id, (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *const*)ptr, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCode");
	case SOAP_TYPE_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse:
		return soap_out_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(soap, tag, id, (_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *const*)ptr, "ns1:CheckAddCouponBoxByCouponPinByNexonIdResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId:
		return soap_out_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, tag, id, (_ns1__CheckAddCouponBoxByCouponPinByNexonId *const*)ptr, "ns1:CheckAddCouponBoxByCouponPinByNexonId");
	case SOAP_TYPE_PointerTo_ns1__AddCouponBoxByCouponPinByNexonIdResponse:
		return soap_out_PointerTo_ns1__AddCouponBoxByCouponPinByNexonIdResponse(soap, tag, id, (_ns1__AddCouponBoxByCouponPinByNexonIdResponse *const*)ptr, "ns1:AddCouponBoxByCouponPinByNexonIdResponse");
	case SOAP_TYPE_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId:
		return soap_out_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(soap, tag, id, (_ns1__AddCouponBoxByCouponPinByNexonId *const*)ptr, "ns1:AddCouponBoxByCouponPinByNexonId");
	case SOAP_TYPE_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse:
		return soap_out_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(soap, tag, id, (_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *const*)ptr, "ns1:SelectItemCouponFromCouponBoxByNexonIDResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID:
		return soap_out_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(soap, tag, id, (_ns1__SelectItemCouponFromCouponBoxByNexonID *const*)ptr, "ns1:SelectItemCouponFromCouponBoxByNexonID");
	case SOAP_TYPE_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse:
		return soap_out_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(soap, tag, id, (_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *const*)ptr, "ns1:SelectCashCouponFromCouponBoxByNexonIDResponse");
	case SOAP_TYPE_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID:
		return soap_out_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(soap, tag, id, (_ns1__SelectCashCouponFromCouponBoxByNexonID *const*)ptr, "ns1:SelectCashCouponFromCouponBoxByNexonID");
	case SOAP_TYPE_PointerTo_ns1__GetListSchoolResponse:
		return soap_out_PointerTo_ns1__GetListSchoolResponse(soap, tag, id, (_ns1__GetListSchoolResponse *const*)ptr, "ns1:GetListSchoolResponse");
	case SOAP_TYPE_PointerTo_ns1__GetListSchool:
		return soap_out_PointerTo_ns1__GetListSchool(soap, tag, id, (_ns1__GetListSchool *const*)ptr, "ns1:GetListSchool");
	case SOAP_TYPE_PointerTo_ns1__CheckPasswordByMemberSNResponse:
		return soap_out_PointerTo_ns1__CheckPasswordByMemberSNResponse(soap, tag, id, (_ns1__CheckPasswordByMemberSNResponse *const*)ptr, "ns1:CheckPasswordByMemberSNResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckPasswordByMemberSN:
		return soap_out_PointerTo_ns1__CheckPasswordByMemberSN(soap, tag, id, (_ns1__CheckPasswordByMemberSN *const*)ptr, "ns1:CheckPasswordByMemberSN");
	case SOAP_TYPE_PointerTo_ns1__CheckSameUserResponse:
		return soap_out_PointerTo_ns1__CheckSameUserResponse(soap, tag, id, (_ns1__CheckSameUserResponse *const*)ptr, "ns1:CheckSameUserResponse");
	case SOAP_TYPE_PointerTo_ns1__CheckSameUser:
		return soap_out_PointerTo_ns1__CheckSameUser(soap, tag, id, (_ns1__CheckSameUser *const*)ptr, "ns1:CheckSameUser");
	case SOAP_TYPE_PointerTons1__UseRestrictInfoEntity:
		return soap_out_PointerTons1__UseRestrictInfoEntity(soap, tag, id, (ns1__UseRestrictInfoEntity *const*)ptr, "ns1:UseRestrictInfoEntity");
	case SOAP_TYPE_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult:
		return soap_out_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, tag, id, (_ns1__BulkCheckExtendResponse_BulkCheckExtendResult *const*)ptr, "ns1:BulkCheckExtendResponse-BulkCheckExtendResult");
	case SOAP_TYPE_PointerTo_ns1__BulkCheckExtend_dsCouponPin:
		return soap_out_PointerTo_ns1__BulkCheckExtend_dsCouponPin(soap, tag, id, (_ns1__BulkCheckExtend_dsCouponPin *const*)ptr, "ns1:BulkCheckExtend-dsCouponPin");
	case SOAP_TYPE_PointerTo_ns1__BulkCheckResponse_BulkCheckResult:
		return soap_out_PointerTo_ns1__BulkCheckResponse_BulkCheckResult(soap, tag, id, (_ns1__BulkCheckResponse_BulkCheckResult *const*)ptr, "ns1:BulkCheckResponse-BulkCheckResult");
	case SOAP_TYPE_PointerTo_ns1__BulkCheck_dsCouponPin:
		return soap_out_PointerTo_ns1__BulkCheck_dsCouponPin(soap, tag, id, (_ns1__BulkCheck_dsCouponPin *const*)ptr, "ns1:BulkCheck-dsCouponPin");
	case SOAP_TYPE_PointerTons1__ArrayOfItemEntity:
		return soap_out_PointerTons1__ArrayOfItemEntity(soap, tag, id, (ns1__ArrayOfItemEntity *const*)ptr, "ns1:ArrayOfItemEntity");
	case SOAP_TYPE_PointerTons1__ArrayOfHoldingCouponCountEntity:
		return soap_out_PointerTons1__ArrayOfHoldingCouponCountEntity(soap, tag, id, (ns1__ArrayOfHoldingCouponCountEntity *const*)ptr, "ns1:ArrayOfHoldingCouponCountEntity");
	case SOAP_TYPE_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity:
		return soap_out_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity(soap, tag, id, (ns1__ArrayOfDiscountAppliableItemInfoEntity *const*)ptr, "ns1:ArrayOfDiscountAppliableItemInfoEntity");
	case SOAP_TYPE_PointerTons1__ArrayOfCouponBoxTargetItem:
		return soap_out_PointerTons1__ArrayOfCouponBoxTargetItem(soap, tag, id, (ns1__ArrayOfCouponBoxTargetItem *const*)ptr, "ns1:ArrayOfCouponBoxTargetItem");
	case SOAP_TYPE_PointerTons1__ArrayOfCouponBoxItem:
		return soap_out_PointerTons1__ArrayOfCouponBoxItem(soap, tag, id, (ns1__ArrayOfCouponBoxItem *const*)ptr, "ns1:ArrayOfCouponBoxItem");
	case SOAP_TYPE_PointerTons1__ArrayOfClientCouponBox:
		return soap_out_PointerTons1__ArrayOfClientCouponBox(soap, tag, id, (ns1__ArrayOfClientCouponBox *const*)ptr, "ns1:ArrayOfClientCouponBox");
	case SOAP_TYPE_PointerTons1__ItemEntity:
		return soap_out_PointerTons1__ItemEntity(soap, tag, id, (ns1__ItemEntity *const*)ptr, "ns1:ItemEntity");
	case SOAP_TYPE_PointerTons1__HoldingCouponCountEntity:
		return soap_out_PointerTons1__HoldingCouponCountEntity(soap, tag, id, (ns1__HoldingCouponCountEntity *const*)ptr, "ns1:HoldingCouponCountEntity");
	case SOAP_TYPE_PointerTons1__DiscountAppliableItemInfoEntity:
		return soap_out_PointerTons1__DiscountAppliableItemInfoEntity(soap, tag, id, (ns1__DiscountAppliableItemInfoEntity *const*)ptr, "ns1:DiscountAppliableItemInfoEntity");
	case SOAP_TYPE_PointerTons1__CouponBoxTargetItem:
		return soap_out_PointerTons1__CouponBoxTargetItem(soap, tag, id, (ns1__CouponBoxTargetItem *const*)ptr, "ns1:CouponBoxTargetItem");
	case SOAP_TYPE_PointerTons1__CouponBoxItem:
		return soap_out_PointerTons1__CouponBoxItem(soap, tag, id, (ns1__CouponBoxItem *const*)ptr, "ns1:CouponBoxItem");
	case SOAP_TYPE_PointerTostd__string:
		return soap_out_PointerTostd__string(soap, tag, id, (std::string *const*)ptr, "xsd:string");
	case SOAP_TYPE_PointerTons1__ExtensionDataObject:
		return soap_out_PointerTons1__ExtensionDataObject(soap, tag, id, (ns1__ExtensionDataObject *const*)ptr, "ns1:ExtensionDataObject");
	case SOAP_TYPE_PointerTons1__ClientCouponBox:
		return soap_out_PointerTons1__ClientCouponBox(soap, tag, id, (ns1__ClientCouponBox *const*)ptr, "ns1:ClientCouponBox");
	case SOAP_TYPE__xsd__schema:
		return soap_out_string(soap, "xsd:schema", id, (char*const*)&ptr, NULL);
	case SOAP_TYPE__QName:
		return soap_out_string(soap, tag, id, (char*const*)&ptr, "xsd:QName");
	case SOAP_TYPE_string:
		return soap_out_string(soap, tag, id, (char*const*)&ptr, "xsd:string");
	}
	return SOAP_OK;
}

#ifdef __cplusplus
}
#endif

#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap *soap, const void *ptr, int type)
{
	(void)soap; (void)ptr; (void)type; /* appease -Wall -Werror */
	switch (type)
	{
	case SOAP_TYPE__ns1__BulkCheckExtendResponse_BulkCheckExtendResult:
		((_ns1__BulkCheckExtendResponse_BulkCheckExtendResult *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__BulkCheckExtend_dsCouponPin:
		((_ns1__BulkCheckExtend_dsCouponPin *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__BulkCheckResponse_BulkCheckResult:
		((_ns1__BulkCheckResponse_BulkCheckResult *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__BulkCheck_dsCouponPin:
		((_ns1__BulkCheck_dsCouponPin *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_std__string:
		soap_serialize_std__string(soap, (const std::string *)ptr);
		break;
	case SOAP_TYPE__ns2__GetGameAccessTokenResponse:
		((_ns2__GetGameAccessTokenResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns2__GetGameAccessToken:
		((_ns2__GetGameAccessToken *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__WakeUpResponse:
		((_ns1__WakeUpResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__WakeUp:
		((_ns1__WakeUp *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__GetUseRestrictInfoResponse:
		((_ns1__GetUseRestrictInfoResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__GetUseRestrictInfo:
		((_ns1__GetUseRestrictInfo *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__BulkCheckExtendResponse:
		((_ns1__BulkCheckExtendResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__BulkCheckExtend:
		((_ns1__BulkCheckExtend *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__BulkCheckResponse:
		((_ns1__BulkCheckResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__BulkCheck:
		((_ns1__BulkCheck *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__UseItemCouponOLDResponse:
		((_ns1__UseItemCouponOLDResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__UseItemCouponOLD:
		((_ns1__UseItemCouponOLD *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckItemCouponOLDResponse:
		((_ns1__CheckItemCouponOLDResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckItemCouponOLD:
		((_ns1__CheckItemCouponOLD *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__RollbackItemCouponResponse:
		((_ns1__RollbackItemCouponResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__RollbackItemCoupon:
		((_ns1__RollbackItemCoupon *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__UseItemCouponResponse:
		((_ns1__UseItemCouponResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__UseItemCoupon:
		((_ns1__UseItemCoupon *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckItemCouponResponse:
		((_ns1__CheckItemCouponResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckItemCoupon:
		((_ns1__CheckItemCoupon *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__RollbackItemCouponFromCouponBoxResponse:
		((_ns1__RollbackItemCouponFromCouponBoxResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__RollbackItemCouponFromCouponBox:
		((_ns1__RollbackItemCouponFromCouponBox *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__UseItemCouponFromCouponBoxResponse:
		((_ns1__UseItemCouponFromCouponBoxResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__UseItemCouponFromCouponBox:
		((_ns1__UseItemCouponFromCouponBox *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckItemCouponFromCouponBoxResponse:
		((_ns1__CheckItemCouponFromCouponBoxResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckItemCouponFromCouponBox:
		((_ns1__CheckItemCouponFromCouponBox *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__RollbackDiscountItemCouponResponse:
		((_ns1__RollbackDiscountItemCouponResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__RollbackDiscountItemCoupon:
		((_ns1__RollbackDiscountItemCoupon *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__UseDiscountItemCouponResponse:
		((_ns1__UseDiscountItemCouponResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__UseDiscountItemCoupon:
		((_ns1__UseDiscountItemCoupon *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckDiscountItemCouponResponse:
		((_ns1__CheckDiscountItemCouponResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckDiscountItemCoupon:
		((_ns1__CheckDiscountItemCoupon *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBoxResponse:
		((_ns1__RollbackDiscountCouponFromCouponBoxResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBox:
		((_ns1__RollbackDiscountCouponFromCouponBox *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__UseDiscountCouponFromCouponBoxResponse:
		((_ns1__UseDiscountCouponFromCouponBoxResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__UseDiscountCouponFromCouponBox:
		((_ns1__UseDiscountCouponFromCouponBox *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBoxResponse:
		((_ns1__CheckDiscountCouponFromCouponBoxResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBox:
		((_ns1__CheckDiscountCouponFromCouponBox *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdResponse:
		((_ns1__SelectHoldingCouponCountByAccountIdResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountId:
		((_ns1__SelectHoldingCouponCountByAccountId *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse:
		((_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode:
		((_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse:
		((_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGame:
		((_ns1__SelectAppliableItemCodeForDiscountByAccountByGame *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckActivationCouponStatusResponse:
		((_ns1__CheckActivationCouponStatusResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckActivationCouponStatus:
		((_ns1__CheckActivationCouponStatus *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CancelActivationCashCouponResponse:
		((_ns1__CancelActivationCashCouponResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CancelActivationCashCoupon:
		((_ns1__CancelActivationCashCoupon *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__ReverseDeactivationCashCouponResponse:
		((_ns1__ReverseDeactivationCashCouponResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__ReverseDeactivationCashCoupon:
		((_ns1__ReverseDeactivationCashCoupon *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__ReverseActivationCashCouponResponse:
		((_ns1__ReverseActivationCashCouponResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__ReverseActivationCashCoupon:
		((_ns1__ReverseActivationCashCoupon *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__ActivationCashCouponResponse:
		((_ns1__ActivationCashCouponResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__ActivationCashCoupon:
		((_ns1__ActivationCashCoupon *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__RollbackCashCouponResponse:
		((_ns1__RollbackCashCouponResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__RollbackCashCoupon:
		((_ns1__RollbackCashCoupon *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__UseCashCouponResponse:
		((_ns1__UseCashCouponResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__UseCashCoupon:
		((_ns1__UseCashCoupon *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckCashCouponResponse:
		((_ns1__CheckCashCouponResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckCashCoupon:
		((_ns1__CheckCashCoupon *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__RollbackCashCouponFromCouponBoxResponse:
		((_ns1__RollbackCashCouponFromCouponBoxResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__RollbackCashCouponFromCouponBox:
		((_ns1__RollbackCashCouponFromCouponBox *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__UseCashCouponFromCouponBoxResponse:
		((_ns1__UseCashCouponFromCouponBoxResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__UseCashCouponFromCouponBox:
		((_ns1__UseCashCouponFromCouponBox *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckCashCouponFromCouponBoxResponse:
		((_ns1__CheckCashCouponFromCouponBoxResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckCashCouponFromCouponBox:
		((_ns1__CheckCashCouponFromCouponBox *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__GetCouponBoxTargetItemListCountResponse:
		((_ns1__GetCouponBoxTargetItemListCountResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__GetCouponBoxTargetItemListCount:
		((_ns1__GetCouponBoxTargetItemListCount *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxTargetItemListResponse:
		((_ns1__SelectCouponBoxTargetItemListResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxTargetItemList:
		((_ns1__SelectCouponBoxTargetItemList *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse:
		((_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUser:
		((_ns1__GetCouponBoxUsedListCountByNexonIDForUser *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUserResponse:
		((_ns1__GetCouponBoxListCountByNexonIDForUserResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUser:
		((_ns1__GetCouponBoxListCountByNexonIDForUser *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse:
		((_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUser:
		((_ns1__SelectCouponBoxUsedListByNexonIDForUser *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUserResponse:
		((_ns1__SelectCouponBoxListByNexonIDForUserResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUser:
		((_ns1__SelectCouponBoxListByNexonIDForUser *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUserResponse:
		((_ns1__SelectCouponBoxByAccountIDForUserResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUser:
		((_ns1__SelectCouponBoxByAccountIDForUser *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUserResponse:
		((_ns1__SelectCouponBoxByCharacterIDForUserResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUser:
		((_ns1__SelectCouponBoxByCharacterIDForUser *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse:
		((_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode:
		((_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse:
		((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList:
		((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse:
		((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode:
		((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse:
		((_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonId:
		((_ns1__CheckAddCouponBoxByCouponPinByNexonId *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonIdResponse:
		((_ns1__AddCouponBoxByCouponPinByNexonIdResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonId:
		((_ns1__AddCouponBoxByCouponPinByNexonId *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse:
		((_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonID:
		((_ns1__SelectItemCouponFromCouponBoxByNexonID *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse:
		((_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonID:
		((_ns1__SelectCashCouponFromCouponBoxByNexonID *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__GetListSchoolResponse:
		((_ns1__GetListSchoolResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__GetListSchool:
		((_ns1__GetListSchool *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckPasswordByMemberSNResponse:
		((_ns1__CheckPasswordByMemberSNResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckPasswordByMemberSN:
		((_ns1__CheckPasswordByMemberSN *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckSameUserResponse:
		((_ns1__CheckSameUserResponse *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE__ns1__CheckSameUser:
		((_ns1__CheckSameUser *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_ns1__UseRestrictInfoEntity:
		((ns1__UseRestrictInfoEntity *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_ns1__ItemEntity:
		((ns1__ItemEntity *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_ns1__ArrayOfItemEntity:
		((ns1__ArrayOfItemEntity *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity:
		((ns1__ArrayOfHoldingCouponCountEntity *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_ns1__HoldingCouponCountEntity:
		((ns1__HoldingCouponCountEntity *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity:
		((ns1__DiscountAppliableItemInfoEntity *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity:
		((ns1__ArrayOfDiscountAppliableItemInfoEntity *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_ns1__CouponBoxTargetItem:
		((ns1__CouponBoxTargetItem *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem:
		((ns1__ArrayOfCouponBoxTargetItem *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_ns1__CouponBoxItem:
		((ns1__CouponBoxItem *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_ns1__ArrayOfCouponBoxItem:
		((ns1__ArrayOfCouponBoxItem *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_ns1__ExtensionDataObject:
		((ns1__ExtensionDataObject *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_ns1__ClientCouponBox:
		((ns1__ClientCouponBox *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE_ns1__ArrayOfClientCouponBox:
		((ns1__ArrayOfClientCouponBox *)ptr)->soap_serialize(soap);
		break;
	case SOAP_TYPE___ns2__GetGameAccessToken_:
		soap_serialize___ns2__GetGameAccessToken_(soap, (const struct __ns2__GetGameAccessToken_ *)ptr);
		break;
	case SOAP_TYPE___ns2__GetGameAccessToken:
		soap_serialize___ns2__GetGameAccessToken(soap, (const struct __ns2__GetGameAccessToken *)ptr);
		break;
	case SOAP_TYPE___ns1__WakeUp_:
		soap_serialize___ns1__WakeUp_(soap, (const struct __ns1__WakeUp_ *)ptr);
		break;
	case SOAP_TYPE___ns1__GetUseRestrictInfo_:
		soap_serialize___ns1__GetUseRestrictInfo_(soap, (const struct __ns1__GetUseRestrictInfo_ *)ptr);
		break;
	case SOAP_TYPE___ns1__BulkCheckExtend_:
		soap_serialize___ns1__BulkCheckExtend_(soap, (const struct __ns1__BulkCheckExtend_ *)ptr);
		break;
	case SOAP_TYPE___ns1__BulkCheck_:
		soap_serialize___ns1__BulkCheck_(soap, (const struct __ns1__BulkCheck_ *)ptr);
		break;
	case SOAP_TYPE___ns1__UseItemCouponOLD_:
		soap_serialize___ns1__UseItemCouponOLD_(soap, (const struct __ns1__UseItemCouponOLD_ *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckItemCouponOLD_:
		soap_serialize___ns1__CheckItemCouponOLD_(soap, (const struct __ns1__CheckItemCouponOLD_ *)ptr);
		break;
	case SOAP_TYPE___ns1__RollbackItemCoupon_:
		soap_serialize___ns1__RollbackItemCoupon_(soap, (const struct __ns1__RollbackItemCoupon_ *)ptr);
		break;
	case SOAP_TYPE___ns1__UseItemCoupon_:
		soap_serialize___ns1__UseItemCoupon_(soap, (const struct __ns1__UseItemCoupon_ *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckItemCoupon_:
		soap_serialize___ns1__CheckItemCoupon_(soap, (const struct __ns1__CheckItemCoupon_ *)ptr);
		break;
	case SOAP_TYPE___ns1__RollbackItemCouponFromCouponBox_:
		soap_serialize___ns1__RollbackItemCouponFromCouponBox_(soap, (const struct __ns1__RollbackItemCouponFromCouponBox_ *)ptr);
		break;
	case SOAP_TYPE___ns1__UseItemCouponFromCouponBox_:
		soap_serialize___ns1__UseItemCouponFromCouponBox_(soap, (const struct __ns1__UseItemCouponFromCouponBox_ *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckItemCouponFromCouponBox_:
		soap_serialize___ns1__CheckItemCouponFromCouponBox_(soap, (const struct __ns1__CheckItemCouponFromCouponBox_ *)ptr);
		break;
	case SOAP_TYPE___ns1__RollbackDiscountItemCoupon_:
		soap_serialize___ns1__RollbackDiscountItemCoupon_(soap, (const struct __ns1__RollbackDiscountItemCoupon_ *)ptr);
		break;
	case SOAP_TYPE___ns1__UseDiscountItemCoupon_:
		soap_serialize___ns1__UseDiscountItemCoupon_(soap, (const struct __ns1__UseDiscountItemCoupon_ *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckDiscountItemCoupon_:
		soap_serialize___ns1__CheckDiscountItemCoupon_(soap, (const struct __ns1__CheckDiscountItemCoupon_ *)ptr);
		break;
	case SOAP_TYPE___ns1__RollbackDiscountCouponFromCouponBox_:
		soap_serialize___ns1__RollbackDiscountCouponFromCouponBox_(soap, (const struct __ns1__RollbackDiscountCouponFromCouponBox_ *)ptr);
		break;
	case SOAP_TYPE___ns1__UseDiscountCouponFromCouponBox_:
		soap_serialize___ns1__UseDiscountCouponFromCouponBox_(soap, (const struct __ns1__UseDiscountCouponFromCouponBox_ *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckDiscountCouponFromCouponBox_:
		soap_serialize___ns1__CheckDiscountCouponFromCouponBox_(soap, (const struct __ns1__CheckDiscountCouponFromCouponBox_ *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountId_:
		soap_serialize___ns1__SelectHoldingCouponCountByAccountId_(soap, (const struct __ns1__SelectHoldingCouponCountByAccountId_ *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_:
		soap_serialize___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_(soap, (const struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_ *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_:
		soap_serialize___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_(soap, (const struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_ *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckActivationCouponStatus_:
		soap_serialize___ns1__CheckActivationCouponStatus_(soap, (const struct __ns1__CheckActivationCouponStatus_ *)ptr);
		break;
	case SOAP_TYPE___ns1__CancelActivationCashCoupon_:
		soap_serialize___ns1__CancelActivationCashCoupon_(soap, (const struct __ns1__CancelActivationCashCoupon_ *)ptr);
		break;
	case SOAP_TYPE___ns1__ReverseDeactivationCashCoupon_:
		soap_serialize___ns1__ReverseDeactivationCashCoupon_(soap, (const struct __ns1__ReverseDeactivationCashCoupon_ *)ptr);
		break;
	case SOAP_TYPE___ns1__ReverseActivationCashCoupon_:
		soap_serialize___ns1__ReverseActivationCashCoupon_(soap, (const struct __ns1__ReverseActivationCashCoupon_ *)ptr);
		break;
	case SOAP_TYPE___ns1__ActivationCashCoupon_:
		soap_serialize___ns1__ActivationCashCoupon_(soap, (const struct __ns1__ActivationCashCoupon_ *)ptr);
		break;
	case SOAP_TYPE___ns1__RollbackCashCoupon_:
		soap_serialize___ns1__RollbackCashCoupon_(soap, (const struct __ns1__RollbackCashCoupon_ *)ptr);
		break;
	case SOAP_TYPE___ns1__UseCashCoupon_:
		soap_serialize___ns1__UseCashCoupon_(soap, (const struct __ns1__UseCashCoupon_ *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckCashCoupon_:
		soap_serialize___ns1__CheckCashCoupon_(soap, (const struct __ns1__CheckCashCoupon_ *)ptr);
		break;
	case SOAP_TYPE___ns1__RollbackCashCouponFromCouponBox_:
		soap_serialize___ns1__RollbackCashCouponFromCouponBox_(soap, (const struct __ns1__RollbackCashCouponFromCouponBox_ *)ptr);
		break;
	case SOAP_TYPE___ns1__UseCashCouponFromCouponBox_:
		soap_serialize___ns1__UseCashCouponFromCouponBox_(soap, (const struct __ns1__UseCashCouponFromCouponBox_ *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckCashCouponFromCouponBox_:
		soap_serialize___ns1__CheckCashCouponFromCouponBox_(soap, (const struct __ns1__CheckCashCouponFromCouponBox_ *)ptr);
		break;
	case SOAP_TYPE___ns1__GetCouponBoxTargetItemListCount_:
		soap_serialize___ns1__GetCouponBoxTargetItemListCount_(soap, (const struct __ns1__GetCouponBoxTargetItemListCount_ *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxTargetItemList_:
		soap_serialize___ns1__SelectCouponBoxTargetItemList_(soap, (const struct __ns1__SelectCouponBoxTargetItemList_ *)ptr);
		break;
	case SOAP_TYPE___ns1__GetCouponBoxUsedListCountByNexonIDForUser_:
		soap_serialize___ns1__GetCouponBoxUsedListCountByNexonIDForUser_(soap, (const struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_ *)ptr);
		break;
	case SOAP_TYPE___ns1__GetCouponBoxListCountByNexonIDForUser_:
		soap_serialize___ns1__GetCouponBoxListCountByNexonIDForUser_(soap, (const struct __ns1__GetCouponBoxListCountByNexonIDForUser_ *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxUsedListByNexonIDForUser_:
		soap_serialize___ns1__SelectCouponBoxUsedListByNexonIDForUser_(soap, (const struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_ *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxListByNexonIDForUser_:
		soap_serialize___ns1__SelectCouponBoxListByNexonIDForUser_(soap, (const struct __ns1__SelectCouponBoxListByNexonIDForUser_ *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxByAccountIDForUser_:
		soap_serialize___ns1__SelectCouponBoxByAccountIDForUser_(soap, (const struct __ns1__SelectCouponBoxByAccountIDForUser_ *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxByCharacterIDForUser_:
		soap_serialize___ns1__SelectCouponBoxByCharacterIDForUser_(soap, (const struct __ns1__SelectCouponBoxByCharacterIDForUser_ *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_:
		soap_serialize___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_(soap, (const struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_ *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_:
		soap_serialize___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_(soap, (const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_ *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_:
		soap_serialize___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_(soap, (const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_ *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckAddCouponBoxByCouponPinByNexonId_:
		soap_serialize___ns1__CheckAddCouponBoxByCouponPinByNexonId_(soap, (const struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_ *)ptr);
		break;
	case SOAP_TYPE___ns1__AddCouponBoxByCouponPinByNexonId_:
		soap_serialize___ns1__AddCouponBoxByCouponPinByNexonId_(soap, (const struct __ns1__AddCouponBoxByCouponPinByNexonId_ *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectItemCouponFromCouponBoxByNexonID_:
		soap_serialize___ns1__SelectItemCouponFromCouponBoxByNexonID_(soap, (const struct __ns1__SelectItemCouponFromCouponBoxByNexonID_ *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectCashCouponFromCouponBoxByNexonID_:
		soap_serialize___ns1__SelectCashCouponFromCouponBoxByNexonID_(soap, (const struct __ns1__SelectCashCouponFromCouponBoxByNexonID_ *)ptr);
		break;
	case SOAP_TYPE___ns1__WakeUp:
		soap_serialize___ns1__WakeUp(soap, (const struct __ns1__WakeUp *)ptr);
		break;
	case SOAP_TYPE___ns1__GetUseRestrictInfo:
		soap_serialize___ns1__GetUseRestrictInfo(soap, (const struct __ns1__GetUseRestrictInfo *)ptr);
		break;
	case SOAP_TYPE___ns1__BulkCheckExtend:
		soap_serialize___ns1__BulkCheckExtend(soap, (const struct __ns1__BulkCheckExtend *)ptr);
		break;
	case SOAP_TYPE___ns1__BulkCheck:
		soap_serialize___ns1__BulkCheck(soap, (const struct __ns1__BulkCheck *)ptr);
		break;
	case SOAP_TYPE___ns1__UseItemCouponOLD:
		soap_serialize___ns1__UseItemCouponOLD(soap, (const struct __ns1__UseItemCouponOLD *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckItemCouponOLD:
		soap_serialize___ns1__CheckItemCouponOLD(soap, (const struct __ns1__CheckItemCouponOLD *)ptr);
		break;
	case SOAP_TYPE___ns1__RollbackItemCoupon:
		soap_serialize___ns1__RollbackItemCoupon(soap, (const struct __ns1__RollbackItemCoupon *)ptr);
		break;
	case SOAP_TYPE___ns1__UseItemCoupon:
		soap_serialize___ns1__UseItemCoupon(soap, (const struct __ns1__UseItemCoupon *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckItemCoupon:
		soap_serialize___ns1__CheckItemCoupon(soap, (const struct __ns1__CheckItemCoupon *)ptr);
		break;
	case SOAP_TYPE___ns1__RollbackItemCouponFromCouponBox:
		soap_serialize___ns1__RollbackItemCouponFromCouponBox(soap, (const struct __ns1__RollbackItemCouponFromCouponBox *)ptr);
		break;
	case SOAP_TYPE___ns1__UseItemCouponFromCouponBox:
		soap_serialize___ns1__UseItemCouponFromCouponBox(soap, (const struct __ns1__UseItemCouponFromCouponBox *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckItemCouponFromCouponBox:
		soap_serialize___ns1__CheckItemCouponFromCouponBox(soap, (const struct __ns1__CheckItemCouponFromCouponBox *)ptr);
		break;
	case SOAP_TYPE___ns1__RollbackDiscountItemCoupon:
		soap_serialize___ns1__RollbackDiscountItemCoupon(soap, (const struct __ns1__RollbackDiscountItemCoupon *)ptr);
		break;
	case SOAP_TYPE___ns1__UseDiscountItemCoupon:
		soap_serialize___ns1__UseDiscountItemCoupon(soap, (const struct __ns1__UseDiscountItemCoupon *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckDiscountItemCoupon:
		soap_serialize___ns1__CheckDiscountItemCoupon(soap, (const struct __ns1__CheckDiscountItemCoupon *)ptr);
		break;
	case SOAP_TYPE___ns1__RollbackDiscountCouponFromCouponBox:
		soap_serialize___ns1__RollbackDiscountCouponFromCouponBox(soap, (const struct __ns1__RollbackDiscountCouponFromCouponBox *)ptr);
		break;
	case SOAP_TYPE___ns1__UseDiscountCouponFromCouponBox:
		soap_serialize___ns1__UseDiscountCouponFromCouponBox(soap, (const struct __ns1__UseDiscountCouponFromCouponBox *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckDiscountCouponFromCouponBox:
		soap_serialize___ns1__CheckDiscountCouponFromCouponBox(soap, (const struct __ns1__CheckDiscountCouponFromCouponBox *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountId:
		soap_serialize___ns1__SelectHoldingCouponCountByAccountId(soap, (const struct __ns1__SelectHoldingCouponCountByAccountId *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode:
		soap_serialize___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, (const struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectAppliableItemCodeForDiscountByAccountByGame:
		soap_serialize___ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, (const struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckActivationCouponStatus:
		soap_serialize___ns1__CheckActivationCouponStatus(soap, (const struct __ns1__CheckActivationCouponStatus *)ptr);
		break;
	case SOAP_TYPE___ns1__CancelActivationCashCoupon:
		soap_serialize___ns1__CancelActivationCashCoupon(soap, (const struct __ns1__CancelActivationCashCoupon *)ptr);
		break;
	case SOAP_TYPE___ns1__ReverseDeactivationCashCoupon:
		soap_serialize___ns1__ReverseDeactivationCashCoupon(soap, (const struct __ns1__ReverseDeactivationCashCoupon *)ptr);
		break;
	case SOAP_TYPE___ns1__ReverseActivationCashCoupon:
		soap_serialize___ns1__ReverseActivationCashCoupon(soap, (const struct __ns1__ReverseActivationCashCoupon *)ptr);
		break;
	case SOAP_TYPE___ns1__ActivationCashCoupon:
		soap_serialize___ns1__ActivationCashCoupon(soap, (const struct __ns1__ActivationCashCoupon *)ptr);
		break;
	case SOAP_TYPE___ns1__RollbackCashCoupon:
		soap_serialize___ns1__RollbackCashCoupon(soap, (const struct __ns1__RollbackCashCoupon *)ptr);
		break;
	case SOAP_TYPE___ns1__UseCashCoupon:
		soap_serialize___ns1__UseCashCoupon(soap, (const struct __ns1__UseCashCoupon *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckCashCoupon:
		soap_serialize___ns1__CheckCashCoupon(soap, (const struct __ns1__CheckCashCoupon *)ptr);
		break;
	case SOAP_TYPE___ns1__RollbackCashCouponFromCouponBox:
		soap_serialize___ns1__RollbackCashCouponFromCouponBox(soap, (const struct __ns1__RollbackCashCouponFromCouponBox *)ptr);
		break;
	case SOAP_TYPE___ns1__UseCashCouponFromCouponBox:
		soap_serialize___ns1__UseCashCouponFromCouponBox(soap, (const struct __ns1__UseCashCouponFromCouponBox *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckCashCouponFromCouponBox:
		soap_serialize___ns1__CheckCashCouponFromCouponBox(soap, (const struct __ns1__CheckCashCouponFromCouponBox *)ptr);
		break;
	case SOAP_TYPE___ns1__GetCouponBoxTargetItemListCount:
		soap_serialize___ns1__GetCouponBoxTargetItemListCount(soap, (const struct __ns1__GetCouponBoxTargetItemListCount *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxTargetItemList:
		soap_serialize___ns1__SelectCouponBoxTargetItemList(soap, (const struct __ns1__SelectCouponBoxTargetItemList *)ptr);
		break;
	case SOAP_TYPE___ns1__GetCouponBoxUsedListCountByNexonIDForUser:
		soap_serialize___ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, (const struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser *)ptr);
		break;
	case SOAP_TYPE___ns1__GetCouponBoxListCountByNexonIDForUser:
		soap_serialize___ns1__GetCouponBoxListCountByNexonIDForUser(soap, (const struct __ns1__GetCouponBoxListCountByNexonIDForUser *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxUsedListByNexonIDForUser:
		soap_serialize___ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, (const struct __ns1__SelectCouponBoxUsedListByNexonIDForUser *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxListByNexonIDForUser:
		soap_serialize___ns1__SelectCouponBoxListByNexonIDForUser(soap, (const struct __ns1__SelectCouponBoxListByNexonIDForUser *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxByAccountIDForUser:
		soap_serialize___ns1__SelectCouponBoxByAccountIDForUser(soap, (const struct __ns1__SelectCouponBoxByAccountIDForUser *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxByCharacterIDForUser:
		soap_serialize___ns1__SelectCouponBoxByCharacterIDForUser(soap, (const struct __ns1__SelectCouponBoxByCharacterIDForUser *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode:
		soap_serialize___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, (const struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList:
		soap_serialize___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, (const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode:
		soap_serialize___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, (const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckAddCouponBoxByCouponPinByNexonId:
		soap_serialize___ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, (const struct __ns1__CheckAddCouponBoxByCouponPinByNexonId *)ptr);
		break;
	case SOAP_TYPE___ns1__AddCouponBoxByCouponPinByNexonId:
		soap_serialize___ns1__AddCouponBoxByCouponPinByNexonId(soap, (const struct __ns1__AddCouponBoxByCouponPinByNexonId *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectItemCouponFromCouponBoxByNexonID:
		soap_serialize___ns1__SelectItemCouponFromCouponBoxByNexonID(soap, (const struct __ns1__SelectItemCouponFromCouponBoxByNexonID *)ptr);
		break;
	case SOAP_TYPE___ns1__SelectCashCouponFromCouponBoxByNexonID:
		soap_serialize___ns1__SelectCashCouponFromCouponBoxByNexonID(soap, (const struct __ns1__SelectCashCouponFromCouponBoxByNexonID *)ptr);
		break;
	case SOAP_TYPE___ns1__GetListSchool_:
		soap_serialize___ns1__GetListSchool_(soap, (const struct __ns1__GetListSchool_ *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckPasswordByMemberSN_:
		soap_serialize___ns1__CheckPasswordByMemberSN_(soap, (const struct __ns1__CheckPasswordByMemberSN_ *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckSameUser_:
		soap_serialize___ns1__CheckSameUser_(soap, (const struct __ns1__CheckSameUser_ *)ptr);
		break;
	case SOAP_TYPE___ns1__GetListSchool:
		soap_serialize___ns1__GetListSchool(soap, (const struct __ns1__GetListSchool *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckPasswordByMemberSN:
		soap_serialize___ns1__CheckPasswordByMemberSN(soap, (const struct __ns1__CheckPasswordByMemberSN *)ptr);
		break;
	case SOAP_TYPE___ns1__CheckSameUser:
		soap_serialize___ns1__CheckSameUser(soap, (const struct __ns1__CheckSameUser *)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns2__GetGameAccessTokenResponse:
		soap_serialize_PointerTo_ns2__GetGameAccessTokenResponse(soap, (_ns2__GetGameAccessTokenResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns2__GetGameAccessToken:
		soap_serialize_PointerTo_ns2__GetGameAccessToken(soap, (_ns2__GetGameAccessToken *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__WakeUpResponse:
		soap_serialize_PointerTo_ns1__WakeUpResponse(soap, (_ns1__WakeUpResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__WakeUp:
		soap_serialize_PointerTo_ns1__WakeUp(soap, (_ns1__WakeUp *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__GetUseRestrictInfoResponse:
		soap_serialize_PointerTo_ns1__GetUseRestrictInfoResponse(soap, (_ns1__GetUseRestrictInfoResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__GetUseRestrictInfo:
		soap_serialize_PointerTo_ns1__GetUseRestrictInfo(soap, (_ns1__GetUseRestrictInfo *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__BulkCheckExtendResponse:
		soap_serialize_PointerTo_ns1__BulkCheckExtendResponse(soap, (_ns1__BulkCheckExtendResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__BulkCheckExtend:
		soap_serialize_PointerTo_ns1__BulkCheckExtend(soap, (_ns1__BulkCheckExtend *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__BulkCheckResponse:
		soap_serialize_PointerTo_ns1__BulkCheckResponse(soap, (_ns1__BulkCheckResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__BulkCheck:
		soap_serialize_PointerTo_ns1__BulkCheck(soap, (_ns1__BulkCheck *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponOLDResponse:
		soap_serialize_PointerTo_ns1__UseItemCouponOLDResponse(soap, (_ns1__UseItemCouponOLDResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponOLD:
		soap_serialize_PointerTo_ns1__UseItemCouponOLD(soap, (_ns1__UseItemCouponOLD *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponOLDResponse:
		soap_serialize_PointerTo_ns1__CheckItemCouponOLDResponse(soap, (_ns1__CheckItemCouponOLDResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponOLD:
		soap_serialize_PointerTo_ns1__CheckItemCouponOLD(soap, (_ns1__CheckItemCouponOLD *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__RollbackItemCouponResponse:
		soap_serialize_PointerTo_ns1__RollbackItemCouponResponse(soap, (_ns1__RollbackItemCouponResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__RollbackItemCoupon:
		soap_serialize_PointerTo_ns1__RollbackItemCoupon(soap, (_ns1__RollbackItemCoupon *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponResponse:
		soap_serialize_PointerTo_ns1__UseItemCouponResponse(soap, (_ns1__UseItemCouponResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__UseItemCoupon:
		soap_serialize_PointerTo_ns1__UseItemCoupon(soap, (_ns1__UseItemCoupon *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponResponse:
		soap_serialize_PointerTo_ns1__CheckItemCouponResponse(soap, (_ns1__CheckItemCouponResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckItemCoupon:
		soap_serialize_PointerTo_ns1__CheckItemCoupon(soap, (_ns1__CheckItemCoupon *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__RollbackItemCouponFromCouponBoxResponse:
		soap_serialize_PointerTo_ns1__RollbackItemCouponFromCouponBoxResponse(soap, (_ns1__RollbackItemCouponFromCouponBoxResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__RollbackItemCouponFromCouponBox:
		soap_serialize_PointerTo_ns1__RollbackItemCouponFromCouponBox(soap, (_ns1__RollbackItemCouponFromCouponBox *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponFromCouponBoxResponse:
		soap_serialize_PointerTo_ns1__UseItemCouponFromCouponBoxResponse(soap, (_ns1__UseItemCouponFromCouponBoxResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__UseItemCouponFromCouponBox:
		soap_serialize_PointerTo_ns1__UseItemCouponFromCouponBox(soap, (_ns1__UseItemCouponFromCouponBox *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponFromCouponBoxResponse:
		soap_serialize_PointerTo_ns1__CheckItemCouponFromCouponBoxResponse(soap, (_ns1__CheckItemCouponFromCouponBoxResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckItemCouponFromCouponBox:
		soap_serialize_PointerTo_ns1__CheckItemCouponFromCouponBox(soap, (_ns1__CheckItemCouponFromCouponBox *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__RollbackDiscountItemCouponResponse:
		soap_serialize_PointerTo_ns1__RollbackDiscountItemCouponResponse(soap, (_ns1__RollbackDiscountItemCouponResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__RollbackDiscountItemCoupon:
		soap_serialize_PointerTo_ns1__RollbackDiscountItemCoupon(soap, (_ns1__RollbackDiscountItemCoupon *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__UseDiscountItemCouponResponse:
		soap_serialize_PointerTo_ns1__UseDiscountItemCouponResponse(soap, (_ns1__UseDiscountItemCouponResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__UseDiscountItemCoupon:
		soap_serialize_PointerTo_ns1__UseDiscountItemCoupon(soap, (_ns1__UseDiscountItemCoupon *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckDiscountItemCouponResponse:
		soap_serialize_PointerTo_ns1__CheckDiscountItemCouponResponse(soap, (_ns1__CheckDiscountItemCouponResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckDiscountItemCoupon:
		soap_serialize_PointerTo_ns1__CheckDiscountItemCoupon(soap, (_ns1__CheckDiscountItemCoupon *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__RollbackDiscountCouponFromCouponBoxResponse:
		soap_serialize_PointerTo_ns1__RollbackDiscountCouponFromCouponBoxResponse(soap, (_ns1__RollbackDiscountCouponFromCouponBoxResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__RollbackDiscountCouponFromCouponBox:
		soap_serialize_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(soap, (_ns1__RollbackDiscountCouponFromCouponBox *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__UseDiscountCouponFromCouponBoxResponse:
		soap_serialize_PointerTo_ns1__UseDiscountCouponFromCouponBoxResponse(soap, (_ns1__UseDiscountCouponFromCouponBoxResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__UseDiscountCouponFromCouponBox:
		soap_serialize_PointerTo_ns1__UseDiscountCouponFromCouponBox(soap, (_ns1__UseDiscountCouponFromCouponBox *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckDiscountCouponFromCouponBoxResponse:
		soap_serialize_PointerTo_ns1__CheckDiscountCouponFromCouponBoxResponse(soap, (_ns1__CheckDiscountCouponFromCouponBoxResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckDiscountCouponFromCouponBox:
		soap_serialize_PointerTo_ns1__CheckDiscountCouponFromCouponBox(soap, (_ns1__CheckDiscountCouponFromCouponBox *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountIdResponse:
		soap_serialize_PointerTo_ns1__SelectHoldingCouponCountByAccountIdResponse(soap, (_ns1__SelectHoldingCouponCountByAccountIdResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountId:
		soap_serialize_PointerTo_ns1__SelectHoldingCouponCountByAccountId(soap, (_ns1__SelectHoldingCouponCountByAccountId *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse:
		soap_serialize_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(soap, (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode:
		soap_serialize_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse:
		soap_serialize_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(soap, (_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame:
		soap_serialize_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, (_ns1__SelectAppliableItemCodeForDiscountByAccountByGame *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckActivationCouponStatusResponse:
		soap_serialize_PointerTo_ns1__CheckActivationCouponStatusResponse(soap, (_ns1__CheckActivationCouponStatusResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckActivationCouponStatus:
		soap_serialize_PointerTo_ns1__CheckActivationCouponStatus(soap, (_ns1__CheckActivationCouponStatus *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CancelActivationCashCouponResponse:
		soap_serialize_PointerTo_ns1__CancelActivationCashCouponResponse(soap, (_ns1__CancelActivationCashCouponResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CancelActivationCashCoupon:
		soap_serialize_PointerTo_ns1__CancelActivationCashCoupon(soap, (_ns1__CancelActivationCashCoupon *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__ReverseDeactivationCashCouponResponse:
		soap_serialize_PointerTo_ns1__ReverseDeactivationCashCouponResponse(soap, (_ns1__ReverseDeactivationCashCouponResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__ReverseDeactivationCashCoupon:
		soap_serialize_PointerTo_ns1__ReverseDeactivationCashCoupon(soap, (_ns1__ReverseDeactivationCashCoupon *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__ReverseActivationCashCouponResponse:
		soap_serialize_PointerTo_ns1__ReverseActivationCashCouponResponse(soap, (_ns1__ReverseActivationCashCouponResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__ReverseActivationCashCoupon:
		soap_serialize_PointerTo_ns1__ReverseActivationCashCoupon(soap, (_ns1__ReverseActivationCashCoupon *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__ActivationCashCouponResponse:
		soap_serialize_PointerTo_ns1__ActivationCashCouponResponse(soap, (_ns1__ActivationCashCouponResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__ActivationCashCoupon:
		soap_serialize_PointerTo_ns1__ActivationCashCoupon(soap, (_ns1__ActivationCashCoupon *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__RollbackCashCouponResponse:
		soap_serialize_PointerTo_ns1__RollbackCashCouponResponse(soap, (_ns1__RollbackCashCouponResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__RollbackCashCoupon:
		soap_serialize_PointerTo_ns1__RollbackCashCoupon(soap, (_ns1__RollbackCashCoupon *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__UseCashCouponResponse:
		soap_serialize_PointerTo_ns1__UseCashCouponResponse(soap, (_ns1__UseCashCouponResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__UseCashCoupon:
		soap_serialize_PointerTo_ns1__UseCashCoupon(soap, (_ns1__UseCashCoupon *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckCashCouponResponse:
		soap_serialize_PointerTo_ns1__CheckCashCouponResponse(soap, (_ns1__CheckCashCouponResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckCashCoupon:
		soap_serialize_PointerTo_ns1__CheckCashCoupon(soap, (_ns1__CheckCashCoupon *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__RollbackCashCouponFromCouponBoxResponse:
		soap_serialize_PointerTo_ns1__RollbackCashCouponFromCouponBoxResponse(soap, (_ns1__RollbackCashCouponFromCouponBoxResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__RollbackCashCouponFromCouponBox:
		soap_serialize_PointerTo_ns1__RollbackCashCouponFromCouponBox(soap, (_ns1__RollbackCashCouponFromCouponBox *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__UseCashCouponFromCouponBoxResponse:
		soap_serialize_PointerTo_ns1__UseCashCouponFromCouponBoxResponse(soap, (_ns1__UseCashCouponFromCouponBoxResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__UseCashCouponFromCouponBox:
		soap_serialize_PointerTo_ns1__UseCashCouponFromCouponBox(soap, (_ns1__UseCashCouponFromCouponBox *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckCashCouponFromCouponBoxResponse:
		soap_serialize_PointerTo_ns1__CheckCashCouponFromCouponBoxResponse(soap, (_ns1__CheckCashCouponFromCouponBoxResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckCashCouponFromCouponBox:
		soap_serialize_PointerTo_ns1__CheckCashCouponFromCouponBox(soap, (_ns1__CheckCashCouponFromCouponBox *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxTargetItemListCountResponse:
		soap_serialize_PointerTo_ns1__GetCouponBoxTargetItemListCountResponse(soap, (_ns1__GetCouponBoxTargetItemListCountResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxTargetItemListCount:
		soap_serialize_PointerTo_ns1__GetCouponBoxTargetItemListCount(soap, (_ns1__GetCouponBoxTargetItemListCount *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxTargetItemListResponse:
		soap_serialize_PointerTo_ns1__SelectCouponBoxTargetItemListResponse(soap, (_ns1__SelectCouponBoxTargetItemListResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxTargetItemList:
		soap_serialize_PointerTo_ns1__SelectCouponBoxTargetItemList(soap, (_ns1__SelectCouponBoxTargetItemList *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse:
		soap_serialize_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(soap, (_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser:
		soap_serialize_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, (_ns1__GetCouponBoxUsedListCountByNexonIDForUser *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUserResponse:
		soap_serialize_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUserResponse(soap, (_ns1__GetCouponBoxListCountByNexonIDForUserResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser:
		soap_serialize_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(soap, (_ns1__GetCouponBoxListCountByNexonIDForUser *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse:
		soap_serialize_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(soap, (_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser:
		soap_serialize_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, (_ns1__SelectCouponBoxUsedListByNexonIDForUser *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxListByNexonIDForUserResponse:
		soap_serialize_PointerTo_ns1__SelectCouponBoxListByNexonIDForUserResponse(soap, (_ns1__SelectCouponBoxListByNexonIDForUserResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser:
		soap_serialize_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(soap, (_ns1__SelectCouponBoxListByNexonIDForUser *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByAccountIDForUserResponse:
		soap_serialize_PointerTo_ns1__SelectCouponBoxByAccountIDForUserResponse(soap, (_ns1__SelectCouponBoxByAccountIDForUserResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByAccountIDForUser:
		soap_serialize_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(soap, (_ns1__SelectCouponBoxByAccountIDForUser *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByCharacterIDForUserResponse:
		soap_serialize_PointerTo_ns1__SelectCouponBoxByCharacterIDForUserResponse(soap, (_ns1__SelectCouponBoxByCharacterIDForUserResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser:
		soap_serialize_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(soap, (_ns1__SelectCouponBoxByCharacterIDForUser *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse:
		soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(soap, (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode:
		soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse:
		soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(soap, (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList:
		soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse:
		soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(soap, (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode:
		soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse:
		soap_serialize_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(soap, (_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId:
		soap_serialize_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, (_ns1__CheckAddCouponBoxByCouponPinByNexonId *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__AddCouponBoxByCouponPinByNexonIdResponse:
		soap_serialize_PointerTo_ns1__AddCouponBoxByCouponPinByNexonIdResponse(soap, (_ns1__AddCouponBoxByCouponPinByNexonIdResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId:
		soap_serialize_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(soap, (_ns1__AddCouponBoxByCouponPinByNexonId *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse:
		soap_serialize_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(soap, (_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID:
		soap_serialize_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(soap, (_ns1__SelectItemCouponFromCouponBoxByNexonID *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse:
		soap_serialize_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(soap, (_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID:
		soap_serialize_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(soap, (_ns1__SelectCashCouponFromCouponBoxByNexonID *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__GetListSchoolResponse:
		soap_serialize_PointerTo_ns1__GetListSchoolResponse(soap, (_ns1__GetListSchoolResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__GetListSchool:
		soap_serialize_PointerTo_ns1__GetListSchool(soap, (_ns1__GetListSchool *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckPasswordByMemberSNResponse:
		soap_serialize_PointerTo_ns1__CheckPasswordByMemberSNResponse(soap, (_ns1__CheckPasswordByMemberSNResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckPasswordByMemberSN:
		soap_serialize_PointerTo_ns1__CheckPasswordByMemberSN(soap, (_ns1__CheckPasswordByMemberSN *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckSameUserResponse:
		soap_serialize_PointerTo_ns1__CheckSameUserResponse(soap, (_ns1__CheckSameUserResponse *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__CheckSameUser:
		soap_serialize_PointerTo_ns1__CheckSameUser(soap, (_ns1__CheckSameUser *const*)ptr);
		break;
	case SOAP_TYPE_PointerTons1__UseRestrictInfoEntity:
		soap_serialize_PointerTons1__UseRestrictInfoEntity(soap, (ns1__UseRestrictInfoEntity *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult:
		soap_serialize_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, (_ns1__BulkCheckExtendResponse_BulkCheckExtendResult *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__BulkCheckExtend_dsCouponPin:
		soap_serialize_PointerTo_ns1__BulkCheckExtend_dsCouponPin(soap, (_ns1__BulkCheckExtend_dsCouponPin *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__BulkCheckResponse_BulkCheckResult:
		soap_serialize_PointerTo_ns1__BulkCheckResponse_BulkCheckResult(soap, (_ns1__BulkCheckResponse_BulkCheckResult *const*)ptr);
		break;
	case SOAP_TYPE_PointerTo_ns1__BulkCheck_dsCouponPin:
		soap_serialize_PointerTo_ns1__BulkCheck_dsCouponPin(soap, (_ns1__BulkCheck_dsCouponPin *const*)ptr);
		break;
	case SOAP_TYPE_PointerTons1__ArrayOfItemEntity:
		soap_serialize_PointerTons1__ArrayOfItemEntity(soap, (ns1__ArrayOfItemEntity *const*)ptr);
		break;
	case SOAP_TYPE_PointerTons1__ArrayOfHoldingCouponCountEntity:
		soap_serialize_PointerTons1__ArrayOfHoldingCouponCountEntity(soap, (ns1__ArrayOfHoldingCouponCountEntity *const*)ptr);
		break;
	case SOAP_TYPE_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity:
		soap_serialize_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity(soap, (ns1__ArrayOfDiscountAppliableItemInfoEntity *const*)ptr);
		break;
	case SOAP_TYPE_PointerTons1__ArrayOfCouponBoxTargetItem:
		soap_serialize_PointerTons1__ArrayOfCouponBoxTargetItem(soap, (ns1__ArrayOfCouponBoxTargetItem *const*)ptr);
		break;
	case SOAP_TYPE_PointerTons1__ArrayOfCouponBoxItem:
		soap_serialize_PointerTons1__ArrayOfCouponBoxItem(soap, (ns1__ArrayOfCouponBoxItem *const*)ptr);
		break;
	case SOAP_TYPE_PointerTons1__ArrayOfClientCouponBox:
		soap_serialize_PointerTons1__ArrayOfClientCouponBox(soap, (ns1__ArrayOfClientCouponBox *const*)ptr);
		break;
	case SOAP_TYPE_PointerTons1__ItemEntity:
		soap_serialize_PointerTons1__ItemEntity(soap, (ns1__ItemEntity *const*)ptr);
		break;
	case SOAP_TYPE_PointerTons1__HoldingCouponCountEntity:
		soap_serialize_PointerTons1__HoldingCouponCountEntity(soap, (ns1__HoldingCouponCountEntity *const*)ptr);
		break;
	case SOAP_TYPE_PointerTons1__DiscountAppliableItemInfoEntity:
		soap_serialize_PointerTons1__DiscountAppliableItemInfoEntity(soap, (ns1__DiscountAppliableItemInfoEntity *const*)ptr);
		break;
	case SOAP_TYPE_PointerTons1__CouponBoxTargetItem:
		soap_serialize_PointerTons1__CouponBoxTargetItem(soap, (ns1__CouponBoxTargetItem *const*)ptr);
		break;
	case SOAP_TYPE_PointerTons1__CouponBoxItem:
		soap_serialize_PointerTons1__CouponBoxItem(soap, (ns1__CouponBoxItem *const*)ptr);
		break;
	case SOAP_TYPE_PointerTostd__string:
		soap_serialize_PointerTostd__string(soap, (std::string *const*)ptr);
		break;
	case SOAP_TYPE_PointerTons1__ExtensionDataObject:
		soap_serialize_PointerTons1__ExtensionDataObject(soap, (ns1__ExtensionDataObject *const*)ptr);
		break;
	case SOAP_TYPE_PointerTons1__ClientCouponBox:
		soap_serialize_PointerTons1__ClientCouponBox(soap, (ns1__ClientCouponBox *const*)ptr);
		break;
	case SOAP_TYPE__xsd__schema:
		soap_serialize_string(soap, (char*const*)&ptr);
		break;
	case SOAP_TYPE__QName:
		soap_serialize_string(soap, (char*const*)&ptr);
		break;
	case SOAP_TYPE_string:
		soap_serialize_string(soap, (char*const*)&ptr);
		break;
	}
}

#ifdef __cplusplus
}
#endif
#endif

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap *soap, int t, const char *type, const char *arrayType, size_t *n)
{	(void)type;
	switch (t)
	{
	case SOAP_TYPE_ns1__ArrayOfClientCouponBox:
		return (void*)soap_instantiate_ns1__ArrayOfClientCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE_std__string:
		return (void*)soap_instantiate_std__string(soap, -1, type, arrayType, n);
	case SOAP_TYPE_ns1__ClientCouponBox:
		return (void*)soap_instantiate_ns1__ClientCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE_ns1__ExtensionDataObject:
		return (void*)soap_instantiate_ns1__ExtensionDataObject(soap, -1, type, arrayType, n);
	case SOAP_TYPE_ns1__ArrayOfCouponBoxItem:
		return (void*)soap_instantiate_ns1__ArrayOfCouponBoxItem(soap, -1, type, arrayType, n);
	case SOAP_TYPE_ns1__CouponBoxItem:
		return (void*)soap_instantiate_ns1__CouponBoxItem(soap, -1, type, arrayType, n);
	case SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem:
		return (void*)soap_instantiate_ns1__ArrayOfCouponBoxTargetItem(soap, -1, type, arrayType, n);
	case SOAP_TYPE_ns1__CouponBoxTargetItem:
		return (void*)soap_instantiate_ns1__CouponBoxTargetItem(soap, -1, type, arrayType, n);
	case SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity:
		return (void*)soap_instantiate_ns1__ArrayOfDiscountAppliableItemInfoEntity(soap, -1, type, arrayType, n);
	case SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity:
		return (void*)soap_instantiate_ns1__DiscountAppliableItemInfoEntity(soap, -1, type, arrayType, n);
	case SOAP_TYPE_ns1__HoldingCouponCountEntity:
		return (void*)soap_instantiate_ns1__HoldingCouponCountEntity(soap, -1, type, arrayType, n);
	case SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity:
		return (void*)soap_instantiate_ns1__ArrayOfHoldingCouponCountEntity(soap, -1, type, arrayType, n);
	case SOAP_TYPE_ns1__ArrayOfItemEntity:
		return (void*)soap_instantiate_ns1__ArrayOfItemEntity(soap, -1, type, arrayType, n);
	case SOAP_TYPE_ns1__ItemEntity:
		return (void*)soap_instantiate_ns1__ItemEntity(soap, -1, type, arrayType, n);
	case SOAP_TYPE_ns1__UseRestrictInfoEntity:
		return (void*)soap_instantiate_ns1__UseRestrictInfoEntity(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckSameUser:
		return (void*)soap_instantiate__ns1__CheckSameUser(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckSameUserResponse:
		return (void*)soap_instantiate__ns1__CheckSameUserResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckPasswordByMemberSN:
		return (void*)soap_instantiate__ns1__CheckPasswordByMemberSN(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckPasswordByMemberSNResponse:
		return (void*)soap_instantiate__ns1__CheckPasswordByMemberSNResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__GetListSchool:
		return (void*)soap_instantiate__ns1__GetListSchool(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__GetListSchoolResponse:
		return (void*)soap_instantiate__ns1__GetListSchoolResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonID:
		return (void*)soap_instantiate__ns1__SelectCashCouponFromCouponBoxByNexonID(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse:
		return (void*)soap_instantiate__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonID:
		return (void*)soap_instantiate__ns1__SelectItemCouponFromCouponBoxByNexonID(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse:
		return (void*)soap_instantiate__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonId:
		return (void*)soap_instantiate__ns1__AddCouponBoxByCouponPinByNexonId(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonIdResponse:
		return (void*)soap_instantiate__ns1__AddCouponBoxByCouponPinByNexonIdResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonId:
		return (void*)soap_instantiate__ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse:
		return (void*)soap_instantiate__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode:
		return (void*)soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse:
		return (void*)soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList:
		return (void*)soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse:
		return (void*)soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode:
		return (void*)soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse:
		return (void*)soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUser:
		return (void*)soap_instantiate__ns1__SelectCouponBoxByCharacterIDForUser(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUserResponse:
		return (void*)soap_instantiate__ns1__SelectCouponBoxByCharacterIDForUserResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUser:
		return (void*)soap_instantiate__ns1__SelectCouponBoxByAccountIDForUser(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUserResponse:
		return (void*)soap_instantiate__ns1__SelectCouponBoxByAccountIDForUserResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUser:
		return (void*)soap_instantiate__ns1__SelectCouponBoxListByNexonIDForUser(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUserResponse:
		return (void*)soap_instantiate__ns1__SelectCouponBoxListByNexonIDForUserResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUser:
		return (void*)soap_instantiate__ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse:
		return (void*)soap_instantiate__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUser:
		return (void*)soap_instantiate__ns1__GetCouponBoxListCountByNexonIDForUser(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUserResponse:
		return (void*)soap_instantiate__ns1__GetCouponBoxListCountByNexonIDForUserResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUser:
		return (void*)soap_instantiate__ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse:
		return (void*)soap_instantiate__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectCouponBoxTargetItemList:
		return (void*)soap_instantiate__ns1__SelectCouponBoxTargetItemList(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectCouponBoxTargetItemListResponse:
		return (void*)soap_instantiate__ns1__SelectCouponBoxTargetItemListResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__GetCouponBoxTargetItemListCount:
		return (void*)soap_instantiate__ns1__GetCouponBoxTargetItemListCount(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__GetCouponBoxTargetItemListCountResponse:
		return (void*)soap_instantiate__ns1__GetCouponBoxTargetItemListCountResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckCashCouponFromCouponBox:
		return (void*)soap_instantiate__ns1__CheckCashCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckCashCouponFromCouponBoxResponse:
		return (void*)soap_instantiate__ns1__CheckCashCouponFromCouponBoxResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__UseCashCouponFromCouponBox:
		return (void*)soap_instantiate__ns1__UseCashCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__UseCashCouponFromCouponBoxResponse:
		return (void*)soap_instantiate__ns1__UseCashCouponFromCouponBoxResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__RollbackCashCouponFromCouponBox:
		return (void*)soap_instantiate__ns1__RollbackCashCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__RollbackCashCouponFromCouponBoxResponse:
		return (void*)soap_instantiate__ns1__RollbackCashCouponFromCouponBoxResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckCashCoupon:
		return (void*)soap_instantiate__ns1__CheckCashCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckCashCouponResponse:
		return (void*)soap_instantiate__ns1__CheckCashCouponResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__UseCashCoupon:
		return (void*)soap_instantiate__ns1__UseCashCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__UseCashCouponResponse:
		return (void*)soap_instantiate__ns1__UseCashCouponResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__RollbackCashCoupon:
		return (void*)soap_instantiate__ns1__RollbackCashCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__RollbackCashCouponResponse:
		return (void*)soap_instantiate__ns1__RollbackCashCouponResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__ActivationCashCoupon:
		return (void*)soap_instantiate__ns1__ActivationCashCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__ActivationCashCouponResponse:
		return (void*)soap_instantiate__ns1__ActivationCashCouponResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__ReverseActivationCashCoupon:
		return (void*)soap_instantiate__ns1__ReverseActivationCashCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__ReverseActivationCashCouponResponse:
		return (void*)soap_instantiate__ns1__ReverseActivationCashCouponResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__ReverseDeactivationCashCoupon:
		return (void*)soap_instantiate__ns1__ReverseDeactivationCashCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__ReverseDeactivationCashCouponResponse:
		return (void*)soap_instantiate__ns1__ReverseDeactivationCashCouponResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CancelActivationCashCoupon:
		return (void*)soap_instantiate__ns1__CancelActivationCashCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CancelActivationCashCouponResponse:
		return (void*)soap_instantiate__ns1__CancelActivationCashCouponResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckActivationCouponStatus:
		return (void*)soap_instantiate__ns1__CheckActivationCouponStatus(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckActivationCouponStatusResponse:
		return (void*)soap_instantiate__ns1__CheckActivationCouponStatusResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGame:
		return (void*)soap_instantiate__ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse:
		return (void*)soap_instantiate__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode:
		return (void*)soap_instantiate__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse:
		return (void*)soap_instantiate__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountId:
		return (void*)soap_instantiate__ns1__SelectHoldingCouponCountByAccountId(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdResponse:
		return (void*)soap_instantiate__ns1__SelectHoldingCouponCountByAccountIdResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBox:
		return (void*)soap_instantiate__ns1__CheckDiscountCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBoxResponse:
		return (void*)soap_instantiate__ns1__CheckDiscountCouponFromCouponBoxResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__UseDiscountCouponFromCouponBox:
		return (void*)soap_instantiate__ns1__UseDiscountCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__UseDiscountCouponFromCouponBoxResponse:
		return (void*)soap_instantiate__ns1__UseDiscountCouponFromCouponBoxResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBox:
		return (void*)soap_instantiate__ns1__RollbackDiscountCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBoxResponse:
		return (void*)soap_instantiate__ns1__RollbackDiscountCouponFromCouponBoxResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckDiscountItemCoupon:
		return (void*)soap_instantiate__ns1__CheckDiscountItemCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckDiscountItemCouponResponse:
		return (void*)soap_instantiate__ns1__CheckDiscountItemCouponResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__UseDiscountItemCoupon:
		return (void*)soap_instantiate__ns1__UseDiscountItemCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__UseDiscountItemCouponResponse:
		return (void*)soap_instantiate__ns1__UseDiscountItemCouponResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__RollbackDiscountItemCoupon:
		return (void*)soap_instantiate__ns1__RollbackDiscountItemCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__RollbackDiscountItemCouponResponse:
		return (void*)soap_instantiate__ns1__RollbackDiscountItemCouponResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckItemCouponFromCouponBox:
		return (void*)soap_instantiate__ns1__CheckItemCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckItemCouponFromCouponBoxResponse:
		return (void*)soap_instantiate__ns1__CheckItemCouponFromCouponBoxResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__UseItemCouponFromCouponBox:
		return (void*)soap_instantiate__ns1__UseItemCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__UseItemCouponFromCouponBoxResponse:
		return (void*)soap_instantiate__ns1__UseItemCouponFromCouponBoxResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__RollbackItemCouponFromCouponBox:
		return (void*)soap_instantiate__ns1__RollbackItemCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__RollbackItemCouponFromCouponBoxResponse:
		return (void*)soap_instantiate__ns1__RollbackItemCouponFromCouponBoxResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckItemCoupon:
		return (void*)soap_instantiate__ns1__CheckItemCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckItemCouponResponse:
		return (void*)soap_instantiate__ns1__CheckItemCouponResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__UseItemCoupon:
		return (void*)soap_instantiate__ns1__UseItemCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__UseItemCouponResponse:
		return (void*)soap_instantiate__ns1__UseItemCouponResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__RollbackItemCoupon:
		return (void*)soap_instantiate__ns1__RollbackItemCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__RollbackItemCouponResponse:
		return (void*)soap_instantiate__ns1__RollbackItemCouponResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckItemCouponOLD:
		return (void*)soap_instantiate__ns1__CheckItemCouponOLD(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__CheckItemCouponOLDResponse:
		return (void*)soap_instantiate__ns1__CheckItemCouponOLDResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__UseItemCouponOLD:
		return (void*)soap_instantiate__ns1__UseItemCouponOLD(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__UseItemCouponOLDResponse:
		return (void*)soap_instantiate__ns1__UseItemCouponOLDResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__BulkCheck_dsCouponPin:
		return (void*)soap_instantiate__ns1__BulkCheck_dsCouponPin(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__BulkCheck:
		return (void*)soap_instantiate__ns1__BulkCheck(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__BulkCheckResponse_BulkCheckResult:
		return (void*)soap_instantiate__ns1__BulkCheckResponse_BulkCheckResult(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__BulkCheckResponse:
		return (void*)soap_instantiate__ns1__BulkCheckResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__BulkCheckExtend_dsCouponPin:
		return (void*)soap_instantiate__ns1__BulkCheckExtend_dsCouponPin(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__BulkCheckExtend:
		return (void*)soap_instantiate__ns1__BulkCheckExtend(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__BulkCheckExtendResponse_BulkCheckExtendResult:
		return (void*)soap_instantiate__ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__BulkCheckExtendResponse:
		return (void*)soap_instantiate__ns1__BulkCheckExtendResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__GetUseRestrictInfo:
		return (void*)soap_instantiate__ns1__GetUseRestrictInfo(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__GetUseRestrictInfoResponse:
		return (void*)soap_instantiate__ns1__GetUseRestrictInfoResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__WakeUp:
		return (void*)soap_instantiate__ns1__WakeUp(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns1__WakeUpResponse:
		return (void*)soap_instantiate__ns1__WakeUpResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns2__GetGameAccessToken:
		return (void*)soap_instantiate__ns2__GetGameAccessToken(soap, -1, type, arrayType, n);
	case SOAP_TYPE__ns2__GetGameAccessTokenResponse:
		return (void*)soap_instantiate__ns2__GetGameAccessTokenResponse(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckSameUser:
		return (void*)soap_instantiate___ns1__CheckSameUser(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckPasswordByMemberSN:
		return (void*)soap_instantiate___ns1__CheckPasswordByMemberSN(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__GetListSchool:
		return (void*)soap_instantiate___ns1__GetListSchool(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckSameUser_:
		return (void*)soap_instantiate___ns1__CheckSameUser_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckPasswordByMemberSN_:
		return (void*)soap_instantiate___ns1__CheckPasswordByMemberSN_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__GetListSchool_:
		return (void*)soap_instantiate___ns1__GetListSchool_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectCashCouponFromCouponBoxByNexonID:
		return (void*)soap_instantiate___ns1__SelectCashCouponFromCouponBoxByNexonID(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectItemCouponFromCouponBoxByNexonID:
		return (void*)soap_instantiate___ns1__SelectItemCouponFromCouponBoxByNexonID(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__AddCouponBoxByCouponPinByNexonId:
		return (void*)soap_instantiate___ns1__AddCouponBoxByCouponPinByNexonId(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckAddCouponBoxByCouponPinByNexonId:
		return (void*)soap_instantiate___ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode:
		return (void*)soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList:
		return (void*)soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode:
		return (void*)soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectCouponBoxByCharacterIDForUser:
		return (void*)soap_instantiate___ns1__SelectCouponBoxByCharacterIDForUser(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectCouponBoxByAccountIDForUser:
		return (void*)soap_instantiate___ns1__SelectCouponBoxByAccountIDForUser(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectCouponBoxListByNexonIDForUser:
		return (void*)soap_instantiate___ns1__SelectCouponBoxListByNexonIDForUser(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectCouponBoxUsedListByNexonIDForUser:
		return (void*)soap_instantiate___ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__GetCouponBoxListCountByNexonIDForUser:
		return (void*)soap_instantiate___ns1__GetCouponBoxListCountByNexonIDForUser(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__GetCouponBoxUsedListCountByNexonIDForUser:
		return (void*)soap_instantiate___ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectCouponBoxTargetItemList:
		return (void*)soap_instantiate___ns1__SelectCouponBoxTargetItemList(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__GetCouponBoxTargetItemListCount:
		return (void*)soap_instantiate___ns1__GetCouponBoxTargetItemListCount(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckCashCouponFromCouponBox:
		return (void*)soap_instantiate___ns1__CheckCashCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__UseCashCouponFromCouponBox:
		return (void*)soap_instantiate___ns1__UseCashCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__RollbackCashCouponFromCouponBox:
		return (void*)soap_instantiate___ns1__RollbackCashCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckCashCoupon:
		return (void*)soap_instantiate___ns1__CheckCashCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__UseCashCoupon:
		return (void*)soap_instantiate___ns1__UseCashCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__RollbackCashCoupon:
		return (void*)soap_instantiate___ns1__RollbackCashCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__ActivationCashCoupon:
		return (void*)soap_instantiate___ns1__ActivationCashCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__ReverseActivationCashCoupon:
		return (void*)soap_instantiate___ns1__ReverseActivationCashCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__ReverseDeactivationCashCoupon:
		return (void*)soap_instantiate___ns1__ReverseDeactivationCashCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CancelActivationCashCoupon:
		return (void*)soap_instantiate___ns1__CancelActivationCashCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckActivationCouponStatus:
		return (void*)soap_instantiate___ns1__CheckActivationCouponStatus(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectAppliableItemCodeForDiscountByAccountByGame:
		return (void*)soap_instantiate___ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode:
		return (void*)soap_instantiate___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountId:
		return (void*)soap_instantiate___ns1__SelectHoldingCouponCountByAccountId(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckDiscountCouponFromCouponBox:
		return (void*)soap_instantiate___ns1__CheckDiscountCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__UseDiscountCouponFromCouponBox:
		return (void*)soap_instantiate___ns1__UseDiscountCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__RollbackDiscountCouponFromCouponBox:
		return (void*)soap_instantiate___ns1__RollbackDiscountCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckDiscountItemCoupon:
		return (void*)soap_instantiate___ns1__CheckDiscountItemCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__UseDiscountItemCoupon:
		return (void*)soap_instantiate___ns1__UseDiscountItemCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__RollbackDiscountItemCoupon:
		return (void*)soap_instantiate___ns1__RollbackDiscountItemCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckItemCouponFromCouponBox:
		return (void*)soap_instantiate___ns1__CheckItemCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__UseItemCouponFromCouponBox:
		return (void*)soap_instantiate___ns1__UseItemCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__RollbackItemCouponFromCouponBox:
		return (void*)soap_instantiate___ns1__RollbackItemCouponFromCouponBox(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckItemCoupon:
		return (void*)soap_instantiate___ns1__CheckItemCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__UseItemCoupon:
		return (void*)soap_instantiate___ns1__UseItemCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__RollbackItemCoupon:
		return (void*)soap_instantiate___ns1__RollbackItemCoupon(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckItemCouponOLD:
		return (void*)soap_instantiate___ns1__CheckItemCouponOLD(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__UseItemCouponOLD:
		return (void*)soap_instantiate___ns1__UseItemCouponOLD(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__BulkCheck:
		return (void*)soap_instantiate___ns1__BulkCheck(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__BulkCheckExtend:
		return (void*)soap_instantiate___ns1__BulkCheckExtend(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__GetUseRestrictInfo:
		return (void*)soap_instantiate___ns1__GetUseRestrictInfo(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__WakeUp:
		return (void*)soap_instantiate___ns1__WakeUp(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectCashCouponFromCouponBoxByNexonID_:
		return (void*)soap_instantiate___ns1__SelectCashCouponFromCouponBoxByNexonID_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectItemCouponFromCouponBoxByNexonID_:
		return (void*)soap_instantiate___ns1__SelectItemCouponFromCouponBoxByNexonID_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__AddCouponBoxByCouponPinByNexonId_:
		return (void*)soap_instantiate___ns1__AddCouponBoxByCouponPinByNexonId_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckAddCouponBoxByCouponPinByNexonId_:
		return (void*)soap_instantiate___ns1__CheckAddCouponBoxByCouponPinByNexonId_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_:
		return (void*)soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_:
		return (void*)soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_:
		return (void*)soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectCouponBoxByCharacterIDForUser_:
		return (void*)soap_instantiate___ns1__SelectCouponBoxByCharacterIDForUser_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectCouponBoxByAccountIDForUser_:
		return (void*)soap_instantiate___ns1__SelectCouponBoxByAccountIDForUser_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectCouponBoxListByNexonIDForUser_:
		return (void*)soap_instantiate___ns1__SelectCouponBoxListByNexonIDForUser_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectCouponBoxUsedListByNexonIDForUser_:
		return (void*)soap_instantiate___ns1__SelectCouponBoxUsedListByNexonIDForUser_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__GetCouponBoxListCountByNexonIDForUser_:
		return (void*)soap_instantiate___ns1__GetCouponBoxListCountByNexonIDForUser_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__GetCouponBoxUsedListCountByNexonIDForUser_:
		return (void*)soap_instantiate___ns1__GetCouponBoxUsedListCountByNexonIDForUser_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectCouponBoxTargetItemList_:
		return (void*)soap_instantiate___ns1__SelectCouponBoxTargetItemList_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__GetCouponBoxTargetItemListCount_:
		return (void*)soap_instantiate___ns1__GetCouponBoxTargetItemListCount_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckCashCouponFromCouponBox_:
		return (void*)soap_instantiate___ns1__CheckCashCouponFromCouponBox_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__UseCashCouponFromCouponBox_:
		return (void*)soap_instantiate___ns1__UseCashCouponFromCouponBox_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__RollbackCashCouponFromCouponBox_:
		return (void*)soap_instantiate___ns1__RollbackCashCouponFromCouponBox_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckCashCoupon_:
		return (void*)soap_instantiate___ns1__CheckCashCoupon_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__UseCashCoupon_:
		return (void*)soap_instantiate___ns1__UseCashCoupon_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__RollbackCashCoupon_:
		return (void*)soap_instantiate___ns1__RollbackCashCoupon_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__ActivationCashCoupon_:
		return (void*)soap_instantiate___ns1__ActivationCashCoupon_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__ReverseActivationCashCoupon_:
		return (void*)soap_instantiate___ns1__ReverseActivationCashCoupon_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__ReverseDeactivationCashCoupon_:
		return (void*)soap_instantiate___ns1__ReverseDeactivationCashCoupon_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CancelActivationCashCoupon_:
		return (void*)soap_instantiate___ns1__CancelActivationCashCoupon_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckActivationCouponStatus_:
		return (void*)soap_instantiate___ns1__CheckActivationCouponStatus_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_:
		return (void*)soap_instantiate___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_:
		return (void*)soap_instantiate___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountId_:
		return (void*)soap_instantiate___ns1__SelectHoldingCouponCountByAccountId_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckDiscountCouponFromCouponBox_:
		return (void*)soap_instantiate___ns1__CheckDiscountCouponFromCouponBox_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__UseDiscountCouponFromCouponBox_:
		return (void*)soap_instantiate___ns1__UseDiscountCouponFromCouponBox_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__RollbackDiscountCouponFromCouponBox_:
		return (void*)soap_instantiate___ns1__RollbackDiscountCouponFromCouponBox_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckDiscountItemCoupon_:
		return (void*)soap_instantiate___ns1__CheckDiscountItemCoupon_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__UseDiscountItemCoupon_:
		return (void*)soap_instantiate___ns1__UseDiscountItemCoupon_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__RollbackDiscountItemCoupon_:
		return (void*)soap_instantiate___ns1__RollbackDiscountItemCoupon_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckItemCouponFromCouponBox_:
		return (void*)soap_instantiate___ns1__CheckItemCouponFromCouponBox_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__UseItemCouponFromCouponBox_:
		return (void*)soap_instantiate___ns1__UseItemCouponFromCouponBox_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__RollbackItemCouponFromCouponBox_:
		return (void*)soap_instantiate___ns1__RollbackItemCouponFromCouponBox_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckItemCoupon_:
		return (void*)soap_instantiate___ns1__CheckItemCoupon_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__UseItemCoupon_:
		return (void*)soap_instantiate___ns1__UseItemCoupon_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__RollbackItemCoupon_:
		return (void*)soap_instantiate___ns1__RollbackItemCoupon_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__CheckItemCouponOLD_:
		return (void*)soap_instantiate___ns1__CheckItemCouponOLD_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__UseItemCouponOLD_:
		return (void*)soap_instantiate___ns1__UseItemCouponOLD_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__BulkCheck_:
		return (void*)soap_instantiate___ns1__BulkCheck_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__BulkCheckExtend_:
		return (void*)soap_instantiate___ns1__BulkCheckExtend_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__GetUseRestrictInfo_:
		return (void*)soap_instantiate___ns1__GetUseRestrictInfo_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns1__WakeUp_:
		return (void*)soap_instantiate___ns1__WakeUp_(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns2__GetGameAccessToken:
		return (void*)soap_instantiate___ns2__GetGameAccessToken(soap, -1, type, arrayType, n);
	case SOAP_TYPE___ns2__GetGameAccessToken_:
		return (void*)soap_instantiate___ns2__GetGameAccessToken_(soap, -1, type, arrayType, n);
#ifndef WITH_NOGLOBAL
	case SOAP_TYPE_SOAP_ENV__Header:
		return (void*)soap_instantiate_SOAP_ENV__Header(soap, -1, type, arrayType, n);
#endif
#ifndef WITH_NOGLOBAL
	case SOAP_TYPE_SOAP_ENV__Code:
		return (void*)soap_instantiate_SOAP_ENV__Code(soap, -1, type, arrayType, n);
#endif
#ifndef WITH_NOGLOBAL
	case SOAP_TYPE_SOAP_ENV__Detail:
		return (void*)soap_instantiate_SOAP_ENV__Detail(soap, -1, type, arrayType, n);
#endif
#ifndef WITH_NOGLOBAL
	case SOAP_TYPE_SOAP_ENV__Reason:
		return (void*)soap_instantiate_SOAP_ENV__Reason(soap, -1, type, arrayType, n);
#endif
#ifndef WITH_NOGLOBAL
	case SOAP_TYPE_SOAP_ENV__Fault:
		return (void*)soap_instantiate_SOAP_ENV__Fault(soap, -1, type, arrayType, n);
#endif
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__ItemEntity:
		return (void*)soap_instantiate_std__vectorTemplateOfPointerTons1__ItemEntity(soap, -1, type, arrayType, n);
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity:
		return (void*)soap_instantiate_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity(soap, -1, type, arrayType, n);
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity:
		return (void*)soap_instantiate_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity(soap, -1, type, arrayType, n);
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem:
		return (void*)soap_instantiate_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem(soap, -1, type, arrayType, n);
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__CouponBoxItem:
		return (void*)soap_instantiate_std__vectorTemplateOfPointerTons1__CouponBoxItem(soap, -1, type, arrayType, n);
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__ClientCouponBox:
		return (void*)soap_instantiate_std__vectorTemplateOfPointerTons1__ClientCouponBox(soap, -1, type, arrayType, n);
	}
	return NULL;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist *p)
{	switch (p->type)
	{
	case SOAP_TYPE_ns1__ArrayOfClientCouponBox:
		if (p->size < 0)
			SOAP_DELETE((ns1__ArrayOfClientCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((ns1__ArrayOfClientCouponBox*)p->ptr);
		break;
	case SOAP_TYPE_std__string:
		if (p->size < 0)
			SOAP_DELETE((std::string*)p->ptr);
		else
			SOAP_DELETE_ARRAY((std::string*)p->ptr);
		break;
	case SOAP_TYPE_ns1__ClientCouponBox:
		if (p->size < 0)
			SOAP_DELETE((ns1__ClientCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((ns1__ClientCouponBox*)p->ptr);
		break;
	case SOAP_TYPE_ns1__ExtensionDataObject:
		if (p->size < 0)
			SOAP_DELETE((ns1__ExtensionDataObject*)p->ptr);
		else
			SOAP_DELETE_ARRAY((ns1__ExtensionDataObject*)p->ptr);
		break;
	case SOAP_TYPE_ns1__ArrayOfCouponBoxItem:
		if (p->size < 0)
			SOAP_DELETE((ns1__ArrayOfCouponBoxItem*)p->ptr);
		else
			SOAP_DELETE_ARRAY((ns1__ArrayOfCouponBoxItem*)p->ptr);
		break;
	case SOAP_TYPE_ns1__CouponBoxItem:
		if (p->size < 0)
			SOAP_DELETE((ns1__CouponBoxItem*)p->ptr);
		else
			SOAP_DELETE_ARRAY((ns1__CouponBoxItem*)p->ptr);
		break;
	case SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem:
		if (p->size < 0)
			SOAP_DELETE((ns1__ArrayOfCouponBoxTargetItem*)p->ptr);
		else
			SOAP_DELETE_ARRAY((ns1__ArrayOfCouponBoxTargetItem*)p->ptr);
		break;
	case SOAP_TYPE_ns1__CouponBoxTargetItem:
		if (p->size < 0)
			SOAP_DELETE((ns1__CouponBoxTargetItem*)p->ptr);
		else
			SOAP_DELETE_ARRAY((ns1__CouponBoxTargetItem*)p->ptr);
		break;
	case SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity:
		if (p->size < 0)
			SOAP_DELETE((ns1__ArrayOfDiscountAppliableItemInfoEntity*)p->ptr);
		else
			SOAP_DELETE_ARRAY((ns1__ArrayOfDiscountAppliableItemInfoEntity*)p->ptr);
		break;
	case SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity:
		if (p->size < 0)
			SOAP_DELETE((ns1__DiscountAppliableItemInfoEntity*)p->ptr);
		else
			SOAP_DELETE_ARRAY((ns1__DiscountAppliableItemInfoEntity*)p->ptr);
		break;
	case SOAP_TYPE_ns1__HoldingCouponCountEntity:
		if (p->size < 0)
			SOAP_DELETE((ns1__HoldingCouponCountEntity*)p->ptr);
		else
			SOAP_DELETE_ARRAY((ns1__HoldingCouponCountEntity*)p->ptr);
		break;
	case SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity:
		if (p->size < 0)
			SOAP_DELETE((ns1__ArrayOfHoldingCouponCountEntity*)p->ptr);
		else
			SOAP_DELETE_ARRAY((ns1__ArrayOfHoldingCouponCountEntity*)p->ptr);
		break;
	case SOAP_TYPE_ns1__ArrayOfItemEntity:
		if (p->size < 0)
			SOAP_DELETE((ns1__ArrayOfItemEntity*)p->ptr);
		else
			SOAP_DELETE_ARRAY((ns1__ArrayOfItemEntity*)p->ptr);
		break;
	case SOAP_TYPE_ns1__ItemEntity:
		if (p->size < 0)
			SOAP_DELETE((ns1__ItemEntity*)p->ptr);
		else
			SOAP_DELETE_ARRAY((ns1__ItemEntity*)p->ptr);
		break;
	case SOAP_TYPE_ns1__UseRestrictInfoEntity:
		if (p->size < 0)
			SOAP_DELETE((ns1__UseRestrictInfoEntity*)p->ptr);
		else
			SOAP_DELETE_ARRAY((ns1__UseRestrictInfoEntity*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckSameUser:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckSameUser*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckSameUser*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckSameUserResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckSameUserResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckSameUserResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckPasswordByMemberSN:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckPasswordByMemberSN*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckPasswordByMemberSN*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckPasswordByMemberSNResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckPasswordByMemberSNResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckPasswordByMemberSNResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__GetListSchool:
		if (p->size < 0)
			SOAP_DELETE((_ns1__GetListSchool*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__GetListSchool*)p->ptr);
		break;
	case SOAP_TYPE__ns1__GetListSchoolResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__GetListSchoolResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__GetListSchoolResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonID:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectCashCouponFromCouponBoxByNexonID*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectCashCouponFromCouponBoxByNexonID*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonID:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectItemCouponFromCouponBoxByNexonID*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectItemCouponFromCouponBoxByNexonID*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonId:
		if (p->size < 0)
			SOAP_DELETE((_ns1__AddCouponBoxByCouponPinByNexonId*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__AddCouponBoxByCouponPinByNexonId*)p->ptr);
		break;
	case SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonIdResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__AddCouponBoxByCouponPinByNexonIdResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__AddCouponBoxByCouponPinByNexonIdResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonId:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckAddCouponBoxByCouponPinByNexonId*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckAddCouponBoxByCouponPinByNexonId*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUser:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectCouponBoxByCharacterIDForUser*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectCouponBoxByCharacterIDForUser*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUserResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectCouponBoxByCharacterIDForUserResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectCouponBoxByCharacterIDForUserResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUser:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectCouponBoxByAccountIDForUser*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectCouponBoxByAccountIDForUser*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUserResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectCouponBoxByAccountIDForUserResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectCouponBoxByAccountIDForUserResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUser:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectCouponBoxListByNexonIDForUser*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectCouponBoxListByNexonIDForUser*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUserResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectCouponBoxListByNexonIDForUserResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectCouponBoxListByNexonIDForUserResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUser:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectCouponBoxUsedListByNexonIDForUser*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectCouponBoxUsedListByNexonIDForUser*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUser:
		if (p->size < 0)
			SOAP_DELETE((_ns1__GetCouponBoxListCountByNexonIDForUser*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__GetCouponBoxListCountByNexonIDForUser*)p->ptr);
		break;
	case SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUserResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__GetCouponBoxListCountByNexonIDForUserResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__GetCouponBoxListCountByNexonIDForUserResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUser:
		if (p->size < 0)
			SOAP_DELETE((_ns1__GetCouponBoxUsedListCountByNexonIDForUser*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__GetCouponBoxUsedListCountByNexonIDForUser*)p->ptr);
		break;
	case SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxTargetItemList:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectCouponBoxTargetItemList*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectCouponBoxTargetItemList*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectCouponBoxTargetItemListResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectCouponBoxTargetItemListResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectCouponBoxTargetItemListResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__GetCouponBoxTargetItemListCount:
		if (p->size < 0)
			SOAP_DELETE((_ns1__GetCouponBoxTargetItemListCount*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__GetCouponBoxTargetItemListCount*)p->ptr);
		break;
	case SOAP_TYPE__ns1__GetCouponBoxTargetItemListCountResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__GetCouponBoxTargetItemListCountResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__GetCouponBoxTargetItemListCountResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckCashCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckCashCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckCashCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckCashCouponFromCouponBoxResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckCashCouponFromCouponBoxResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckCashCouponFromCouponBoxResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__UseCashCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((_ns1__UseCashCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__UseCashCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE__ns1__UseCashCouponFromCouponBoxResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__UseCashCouponFromCouponBoxResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__UseCashCouponFromCouponBoxResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__RollbackCashCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((_ns1__RollbackCashCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__RollbackCashCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE__ns1__RollbackCashCouponFromCouponBoxResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__RollbackCashCouponFromCouponBoxResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__RollbackCashCouponFromCouponBoxResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckCashCoupon:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckCashCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckCashCoupon*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckCashCouponResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckCashCouponResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckCashCouponResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__UseCashCoupon:
		if (p->size < 0)
			SOAP_DELETE((_ns1__UseCashCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__UseCashCoupon*)p->ptr);
		break;
	case SOAP_TYPE__ns1__UseCashCouponResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__UseCashCouponResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__UseCashCouponResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__RollbackCashCoupon:
		if (p->size < 0)
			SOAP_DELETE((_ns1__RollbackCashCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__RollbackCashCoupon*)p->ptr);
		break;
	case SOAP_TYPE__ns1__RollbackCashCouponResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__RollbackCashCouponResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__RollbackCashCouponResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__ActivationCashCoupon:
		if (p->size < 0)
			SOAP_DELETE((_ns1__ActivationCashCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__ActivationCashCoupon*)p->ptr);
		break;
	case SOAP_TYPE__ns1__ActivationCashCouponResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__ActivationCashCouponResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__ActivationCashCouponResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__ReverseActivationCashCoupon:
		if (p->size < 0)
			SOAP_DELETE((_ns1__ReverseActivationCashCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__ReverseActivationCashCoupon*)p->ptr);
		break;
	case SOAP_TYPE__ns1__ReverseActivationCashCouponResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__ReverseActivationCashCouponResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__ReverseActivationCashCouponResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__ReverseDeactivationCashCoupon:
		if (p->size < 0)
			SOAP_DELETE((_ns1__ReverseDeactivationCashCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__ReverseDeactivationCashCoupon*)p->ptr);
		break;
	case SOAP_TYPE__ns1__ReverseDeactivationCashCouponResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__ReverseDeactivationCashCouponResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__ReverseDeactivationCashCouponResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CancelActivationCashCoupon:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CancelActivationCashCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CancelActivationCashCoupon*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CancelActivationCashCouponResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CancelActivationCashCouponResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CancelActivationCashCouponResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckActivationCouponStatus:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckActivationCouponStatus*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckActivationCouponStatus*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckActivationCouponStatusResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckActivationCouponStatusResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckActivationCouponStatusResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGame:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectAppliableItemCodeForDiscountByAccountByGame*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectAppliableItemCodeForDiscountByAccountByGame*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountId:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectHoldingCouponCountByAccountId*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectHoldingCouponCountByAccountId*)p->ptr);
		break;
	case SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__SelectHoldingCouponCountByAccountIdResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__SelectHoldingCouponCountByAccountIdResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckDiscountCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckDiscountCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBoxResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckDiscountCouponFromCouponBoxResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckDiscountCouponFromCouponBoxResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__UseDiscountCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((_ns1__UseDiscountCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__UseDiscountCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE__ns1__UseDiscountCouponFromCouponBoxResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__UseDiscountCouponFromCouponBoxResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__UseDiscountCouponFromCouponBoxResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((_ns1__RollbackDiscountCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__RollbackDiscountCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBoxResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__RollbackDiscountCouponFromCouponBoxResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__RollbackDiscountCouponFromCouponBoxResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckDiscountItemCoupon:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckDiscountItemCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckDiscountItemCoupon*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckDiscountItemCouponResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckDiscountItemCouponResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckDiscountItemCouponResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__UseDiscountItemCoupon:
		if (p->size < 0)
			SOAP_DELETE((_ns1__UseDiscountItemCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__UseDiscountItemCoupon*)p->ptr);
		break;
	case SOAP_TYPE__ns1__UseDiscountItemCouponResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__UseDiscountItemCouponResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__UseDiscountItemCouponResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__RollbackDiscountItemCoupon:
		if (p->size < 0)
			SOAP_DELETE((_ns1__RollbackDiscountItemCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__RollbackDiscountItemCoupon*)p->ptr);
		break;
	case SOAP_TYPE__ns1__RollbackDiscountItemCouponResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__RollbackDiscountItemCouponResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__RollbackDiscountItemCouponResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckItemCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckItemCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckItemCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckItemCouponFromCouponBoxResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckItemCouponFromCouponBoxResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckItemCouponFromCouponBoxResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__UseItemCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((_ns1__UseItemCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__UseItemCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE__ns1__UseItemCouponFromCouponBoxResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__UseItemCouponFromCouponBoxResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__UseItemCouponFromCouponBoxResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__RollbackItemCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((_ns1__RollbackItemCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__RollbackItemCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE__ns1__RollbackItemCouponFromCouponBoxResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__RollbackItemCouponFromCouponBoxResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__RollbackItemCouponFromCouponBoxResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckItemCoupon:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckItemCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckItemCoupon*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckItemCouponResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckItemCouponResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckItemCouponResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__UseItemCoupon:
		if (p->size < 0)
			SOAP_DELETE((_ns1__UseItemCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__UseItemCoupon*)p->ptr);
		break;
	case SOAP_TYPE__ns1__UseItemCouponResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__UseItemCouponResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__UseItemCouponResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__RollbackItemCoupon:
		if (p->size < 0)
			SOAP_DELETE((_ns1__RollbackItemCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__RollbackItemCoupon*)p->ptr);
		break;
	case SOAP_TYPE__ns1__RollbackItemCouponResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__RollbackItemCouponResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__RollbackItemCouponResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckItemCouponOLD:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckItemCouponOLD*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckItemCouponOLD*)p->ptr);
		break;
	case SOAP_TYPE__ns1__CheckItemCouponOLDResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__CheckItemCouponOLDResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__CheckItemCouponOLDResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__UseItemCouponOLD:
		if (p->size < 0)
			SOAP_DELETE((_ns1__UseItemCouponOLD*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__UseItemCouponOLD*)p->ptr);
		break;
	case SOAP_TYPE__ns1__UseItemCouponOLDResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__UseItemCouponOLDResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__UseItemCouponOLDResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__BulkCheck_dsCouponPin:
		if (p->size < 0)
			SOAP_DELETE((_ns1__BulkCheck_dsCouponPin*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__BulkCheck_dsCouponPin*)p->ptr);
		break;
	case SOAP_TYPE__ns1__BulkCheck:
		if (p->size < 0)
			SOAP_DELETE((_ns1__BulkCheck*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__BulkCheck*)p->ptr);
		break;
	case SOAP_TYPE__ns1__BulkCheckResponse_BulkCheckResult:
		if (p->size < 0)
			SOAP_DELETE((_ns1__BulkCheckResponse_BulkCheckResult*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__BulkCheckResponse_BulkCheckResult*)p->ptr);
		break;
	case SOAP_TYPE__ns1__BulkCheckResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__BulkCheckResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__BulkCheckResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__BulkCheckExtend_dsCouponPin:
		if (p->size < 0)
			SOAP_DELETE((_ns1__BulkCheckExtend_dsCouponPin*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__BulkCheckExtend_dsCouponPin*)p->ptr);
		break;
	case SOAP_TYPE__ns1__BulkCheckExtend:
		if (p->size < 0)
			SOAP_DELETE((_ns1__BulkCheckExtend*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__BulkCheckExtend*)p->ptr);
		break;
	case SOAP_TYPE__ns1__BulkCheckExtendResponse_BulkCheckExtendResult:
		if (p->size < 0)
			SOAP_DELETE((_ns1__BulkCheckExtendResponse_BulkCheckExtendResult*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__BulkCheckExtendResponse_BulkCheckExtendResult*)p->ptr);
		break;
	case SOAP_TYPE__ns1__BulkCheckExtendResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__BulkCheckExtendResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__BulkCheckExtendResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__GetUseRestrictInfo:
		if (p->size < 0)
			SOAP_DELETE((_ns1__GetUseRestrictInfo*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__GetUseRestrictInfo*)p->ptr);
		break;
	case SOAP_TYPE__ns1__GetUseRestrictInfoResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__GetUseRestrictInfoResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__GetUseRestrictInfoResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns1__WakeUp:
		if (p->size < 0)
			SOAP_DELETE((_ns1__WakeUp*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__WakeUp*)p->ptr);
		break;
	case SOAP_TYPE__ns1__WakeUpResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns1__WakeUpResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns1__WakeUpResponse*)p->ptr);
		break;
	case SOAP_TYPE__ns2__GetGameAccessToken:
		if (p->size < 0)
			SOAP_DELETE((_ns2__GetGameAccessToken*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns2__GetGameAccessToken*)p->ptr);
		break;
	case SOAP_TYPE__ns2__GetGameAccessTokenResponse:
		if (p->size < 0)
			SOAP_DELETE((_ns2__GetGameAccessTokenResponse*)p->ptr);
		else
			SOAP_DELETE_ARRAY((_ns2__GetGameAccessTokenResponse*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckSameUser:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckSameUser*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckSameUser*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckPasswordByMemberSN:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckPasswordByMemberSN*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckPasswordByMemberSN*)p->ptr);
		break;
	case SOAP_TYPE___ns1__GetListSchool:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__GetListSchool*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__GetListSchool*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckSameUser_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckSameUser_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckSameUser_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckPasswordByMemberSN_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckPasswordByMemberSN_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckPasswordByMemberSN_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__GetListSchool_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__GetListSchool_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__GetListSchool_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectCashCouponFromCouponBoxByNexonID:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectCashCouponFromCouponBoxByNexonID*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectCashCouponFromCouponBoxByNexonID*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectItemCouponFromCouponBoxByNexonID:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectItemCouponFromCouponBoxByNexonID*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectItemCouponFromCouponBoxByNexonID*)p->ptr);
		break;
	case SOAP_TYPE___ns1__AddCouponBoxByCouponPinByNexonId:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__AddCouponBoxByCouponPinByNexonId*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__AddCouponBoxByCouponPinByNexonId*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckAddCouponBoxByCouponPinByNexonId:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckAddCouponBoxByCouponPinByNexonId*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckAddCouponBoxByCouponPinByNexonId*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxByCharacterIDForUser:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectCouponBoxByCharacterIDForUser*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectCouponBoxByCharacterIDForUser*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxByAccountIDForUser:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectCouponBoxByAccountIDForUser*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectCouponBoxByAccountIDForUser*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxListByNexonIDForUser:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectCouponBoxListByNexonIDForUser*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectCouponBoxListByNexonIDForUser*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxUsedListByNexonIDForUser:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectCouponBoxUsedListByNexonIDForUser*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectCouponBoxUsedListByNexonIDForUser*)p->ptr);
		break;
	case SOAP_TYPE___ns1__GetCouponBoxListCountByNexonIDForUser:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__GetCouponBoxListCountByNexonIDForUser*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__GetCouponBoxListCountByNexonIDForUser*)p->ptr);
		break;
	case SOAP_TYPE___ns1__GetCouponBoxUsedListCountByNexonIDForUser:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxTargetItemList:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectCouponBoxTargetItemList*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectCouponBoxTargetItemList*)p->ptr);
		break;
	case SOAP_TYPE___ns1__GetCouponBoxTargetItemListCount:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__GetCouponBoxTargetItemListCount*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__GetCouponBoxTargetItemListCount*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckCashCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckCashCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckCashCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE___ns1__UseCashCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__UseCashCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__UseCashCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE___ns1__RollbackCashCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__RollbackCashCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__RollbackCashCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckCashCoupon:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckCashCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckCashCoupon*)p->ptr);
		break;
	case SOAP_TYPE___ns1__UseCashCoupon:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__UseCashCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__UseCashCoupon*)p->ptr);
		break;
	case SOAP_TYPE___ns1__RollbackCashCoupon:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__RollbackCashCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__RollbackCashCoupon*)p->ptr);
		break;
	case SOAP_TYPE___ns1__ActivationCashCoupon:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__ActivationCashCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__ActivationCashCoupon*)p->ptr);
		break;
	case SOAP_TYPE___ns1__ReverseActivationCashCoupon:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__ReverseActivationCashCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__ReverseActivationCashCoupon*)p->ptr);
		break;
	case SOAP_TYPE___ns1__ReverseDeactivationCashCoupon:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__ReverseDeactivationCashCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__ReverseDeactivationCashCoupon*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CancelActivationCashCoupon:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CancelActivationCashCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CancelActivationCashCoupon*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckActivationCouponStatus:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckActivationCouponStatus*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckActivationCouponStatus*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectAppliableItemCodeForDiscountByAccountByGame:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountId:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectHoldingCouponCountByAccountId*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectHoldingCouponCountByAccountId*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckDiscountCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckDiscountCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckDiscountCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE___ns1__UseDiscountCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__UseDiscountCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__UseDiscountCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE___ns1__RollbackDiscountCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__RollbackDiscountCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__RollbackDiscountCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckDiscountItemCoupon:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckDiscountItemCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckDiscountItemCoupon*)p->ptr);
		break;
	case SOAP_TYPE___ns1__UseDiscountItemCoupon:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__UseDiscountItemCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__UseDiscountItemCoupon*)p->ptr);
		break;
	case SOAP_TYPE___ns1__RollbackDiscountItemCoupon:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__RollbackDiscountItemCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__RollbackDiscountItemCoupon*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckItemCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckItemCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckItemCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE___ns1__UseItemCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__UseItemCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__UseItemCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE___ns1__RollbackItemCouponFromCouponBox:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__RollbackItemCouponFromCouponBox*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__RollbackItemCouponFromCouponBox*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckItemCoupon:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckItemCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckItemCoupon*)p->ptr);
		break;
	case SOAP_TYPE___ns1__UseItemCoupon:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__UseItemCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__UseItemCoupon*)p->ptr);
		break;
	case SOAP_TYPE___ns1__RollbackItemCoupon:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__RollbackItemCoupon*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__RollbackItemCoupon*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckItemCouponOLD:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckItemCouponOLD*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckItemCouponOLD*)p->ptr);
		break;
	case SOAP_TYPE___ns1__UseItemCouponOLD:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__UseItemCouponOLD*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__UseItemCouponOLD*)p->ptr);
		break;
	case SOAP_TYPE___ns1__BulkCheck:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__BulkCheck*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__BulkCheck*)p->ptr);
		break;
	case SOAP_TYPE___ns1__BulkCheckExtend:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__BulkCheckExtend*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__BulkCheckExtend*)p->ptr);
		break;
	case SOAP_TYPE___ns1__GetUseRestrictInfo:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__GetUseRestrictInfo*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__GetUseRestrictInfo*)p->ptr);
		break;
	case SOAP_TYPE___ns1__WakeUp:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__WakeUp*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__WakeUp*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectCashCouponFromCouponBoxByNexonID_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectCashCouponFromCouponBoxByNexonID_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectCashCouponFromCouponBoxByNexonID_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectItemCouponFromCouponBoxByNexonID_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectItemCouponFromCouponBoxByNexonID_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectItemCouponFromCouponBoxByNexonID_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__AddCouponBoxByCouponPinByNexonId_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__AddCouponBoxByCouponPinByNexonId_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__AddCouponBoxByCouponPinByNexonId_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckAddCouponBoxByCouponPinByNexonId_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxByCharacterIDForUser_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectCouponBoxByCharacterIDForUser_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectCouponBoxByCharacterIDForUser_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxByAccountIDForUser_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectCouponBoxByAccountIDForUser_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectCouponBoxByAccountIDForUser_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxListByNexonIDForUser_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectCouponBoxListByNexonIDForUser_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectCouponBoxListByNexonIDForUser_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxUsedListByNexonIDForUser_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__GetCouponBoxListCountByNexonIDForUser_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__GetCouponBoxListCountByNexonIDForUser_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__GetCouponBoxListCountByNexonIDForUser_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__GetCouponBoxUsedListCountByNexonIDForUser_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectCouponBoxTargetItemList_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectCouponBoxTargetItemList_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectCouponBoxTargetItemList_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__GetCouponBoxTargetItemListCount_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__GetCouponBoxTargetItemListCount_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__GetCouponBoxTargetItemListCount_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckCashCouponFromCouponBox_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckCashCouponFromCouponBox_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckCashCouponFromCouponBox_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__UseCashCouponFromCouponBox_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__UseCashCouponFromCouponBox_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__UseCashCouponFromCouponBox_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__RollbackCashCouponFromCouponBox_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__RollbackCashCouponFromCouponBox_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__RollbackCashCouponFromCouponBox_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckCashCoupon_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckCashCoupon_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckCashCoupon_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__UseCashCoupon_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__UseCashCoupon_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__UseCashCoupon_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__RollbackCashCoupon_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__RollbackCashCoupon_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__RollbackCashCoupon_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__ActivationCashCoupon_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__ActivationCashCoupon_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__ActivationCashCoupon_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__ReverseActivationCashCoupon_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__ReverseActivationCashCoupon_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__ReverseActivationCashCoupon_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__ReverseDeactivationCashCoupon_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__ReverseDeactivationCashCoupon_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__ReverseDeactivationCashCoupon_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CancelActivationCashCoupon_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CancelActivationCashCoupon_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CancelActivationCashCoupon_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckActivationCouponStatus_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckActivationCouponStatus_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckActivationCouponStatus_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountId_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__SelectHoldingCouponCountByAccountId_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__SelectHoldingCouponCountByAccountId_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckDiscountCouponFromCouponBox_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckDiscountCouponFromCouponBox_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckDiscountCouponFromCouponBox_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__UseDiscountCouponFromCouponBox_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__UseDiscountCouponFromCouponBox_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__UseDiscountCouponFromCouponBox_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__RollbackDiscountCouponFromCouponBox_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__RollbackDiscountCouponFromCouponBox_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__RollbackDiscountCouponFromCouponBox_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckDiscountItemCoupon_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckDiscountItemCoupon_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckDiscountItemCoupon_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__UseDiscountItemCoupon_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__UseDiscountItemCoupon_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__UseDiscountItemCoupon_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__RollbackDiscountItemCoupon_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__RollbackDiscountItemCoupon_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__RollbackDiscountItemCoupon_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckItemCouponFromCouponBox_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckItemCouponFromCouponBox_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckItemCouponFromCouponBox_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__UseItemCouponFromCouponBox_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__UseItemCouponFromCouponBox_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__UseItemCouponFromCouponBox_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__RollbackItemCouponFromCouponBox_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__RollbackItemCouponFromCouponBox_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__RollbackItemCouponFromCouponBox_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckItemCoupon_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckItemCoupon_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckItemCoupon_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__UseItemCoupon_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__UseItemCoupon_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__UseItemCoupon_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__RollbackItemCoupon_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__RollbackItemCoupon_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__RollbackItemCoupon_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__CheckItemCouponOLD_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__CheckItemCouponOLD_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__CheckItemCouponOLD_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__UseItemCouponOLD_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__UseItemCouponOLD_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__UseItemCouponOLD_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__BulkCheck_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__BulkCheck_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__BulkCheck_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__BulkCheckExtend_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__BulkCheckExtend_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__BulkCheckExtend_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__GetUseRestrictInfo_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__GetUseRestrictInfo_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__GetUseRestrictInfo_*)p->ptr);
		break;
	case SOAP_TYPE___ns1__WakeUp_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns1__WakeUp_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns1__WakeUp_*)p->ptr);
		break;
	case SOAP_TYPE___ns2__GetGameAccessToken:
		if (p->size < 0)
			SOAP_DELETE((struct __ns2__GetGameAccessToken*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns2__GetGameAccessToken*)p->ptr);
		break;
	case SOAP_TYPE___ns2__GetGameAccessToken_:
		if (p->size < 0)
			SOAP_DELETE((struct __ns2__GetGameAccessToken_*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct __ns2__GetGameAccessToken_*)p->ptr);
		break;
#ifndef WITH_NOGLOBAL
	case SOAP_TYPE_SOAP_ENV__Header:
		if (p->size < 0)
			SOAP_DELETE((struct SOAP_ENV__Header*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct SOAP_ENV__Header*)p->ptr);
		break;
#endif
#ifndef WITH_NOGLOBAL
	case SOAP_TYPE_SOAP_ENV__Code:
		if (p->size < 0)
			SOAP_DELETE((struct SOAP_ENV__Code*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct SOAP_ENV__Code*)p->ptr);
		break;
#endif
#ifndef WITH_NOGLOBAL
	case SOAP_TYPE_SOAP_ENV__Detail:
		if (p->size < 0)
			SOAP_DELETE((struct SOAP_ENV__Detail*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct SOAP_ENV__Detail*)p->ptr);
		break;
#endif
#ifndef WITH_NOGLOBAL
	case SOAP_TYPE_SOAP_ENV__Reason:
		if (p->size < 0)
			SOAP_DELETE((struct SOAP_ENV__Reason*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct SOAP_ENV__Reason*)p->ptr);
		break;
#endif
#ifndef WITH_NOGLOBAL
	case SOAP_TYPE_SOAP_ENV__Fault:
		if (p->size < 0)
			SOAP_DELETE((struct SOAP_ENV__Fault*)p->ptr);
		else
			SOAP_DELETE_ARRAY((struct SOAP_ENV__Fault*)p->ptr);
		break;
#endif
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__ItemEntity:
		if (p->size < 0)
			SOAP_DELETE((std::vector<ns1__ItemEntity * >*)p->ptr);
		else
			SOAP_DELETE_ARRAY((std::vector<ns1__ItemEntity * >*)p->ptr);
		break;
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity:
		if (p->size < 0)
			SOAP_DELETE((std::vector<ns1__HoldingCouponCountEntity * >*)p->ptr);
		else
			SOAP_DELETE_ARRAY((std::vector<ns1__HoldingCouponCountEntity * >*)p->ptr);
		break;
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity:
		if (p->size < 0)
			SOAP_DELETE((std::vector<ns1__DiscountAppliableItemInfoEntity * >*)p->ptr);
		else
			SOAP_DELETE_ARRAY((std::vector<ns1__DiscountAppliableItemInfoEntity * >*)p->ptr);
		break;
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem:
		if (p->size < 0)
			SOAP_DELETE((std::vector<ns1__CouponBoxTargetItem * >*)p->ptr);
		else
			SOAP_DELETE_ARRAY((std::vector<ns1__CouponBoxTargetItem * >*)p->ptr);
		break;
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__CouponBoxItem:
		if (p->size < 0)
			SOAP_DELETE((std::vector<ns1__CouponBoxItem * >*)p->ptr);
		else
			SOAP_DELETE_ARRAY((std::vector<ns1__CouponBoxItem * >*)p->ptr);
		break;
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__ClientCouponBox:
		if (p->size < 0)
			SOAP_DELETE((std::vector<ns1__ClientCouponBox * >*)p->ptr);
		else
			SOAP_DELETE_ARRAY((std::vector<ns1__ClientCouponBox * >*)p->ptr);
		break;
	default:	return SOAP_ERR;
	}
	return SOAP_OK;
}

SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap *soap, const char *id, void *p, int t, size_t n, const char *type, const char *arrayType)
{	return soap_id_enter(soap, id, p, t, n, 0, type, arrayType, soap_instantiate);
}

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap *soap, const char *href, void *p, size_t len, int st, int tt, size_t n, unsigned int k)
{	return soap_id_forward(soap, href, p, len, st, tt, n, k, soap_container_insert);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
#ifdef WIN32
#pragma warning(push)
#pragma warning(disable:4065)
#endif
{
	(void)soap; (void)st; (void)p; (void)len; (void)q; (void)n; /* appease -Wall -Werror */
	switch (tt)
	{
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__ItemEntity:
		DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Container soap_container_insert type=%d in %d location=%p object=%p len=%lu\n", st, tt, p, q, (unsigned long)len));
		(*(std::vector<ns1__ItemEntity * >*)p)[len] = *(ns1__ItemEntity **)q;
		break;
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity:
		DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Container soap_container_insert type=%d in %d location=%p object=%p len=%lu\n", st, tt, p, q, (unsigned long)len));
		(*(std::vector<ns1__HoldingCouponCountEntity * >*)p)[len] = *(ns1__HoldingCouponCountEntity **)q;
		break;
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity:
		DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Container soap_container_insert type=%d in %d location=%p object=%p len=%lu\n", st, tt, p, q, (unsigned long)len));
		(*(std::vector<ns1__DiscountAppliableItemInfoEntity * >*)p)[len] = *(ns1__DiscountAppliableItemInfoEntity **)q;
		break;
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem:
		DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Container soap_container_insert type=%d in %d location=%p object=%p len=%lu\n", st, tt, p, q, (unsigned long)len));
		(*(std::vector<ns1__CouponBoxTargetItem * >*)p)[len] = *(ns1__CouponBoxTargetItem **)q;
		break;
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__CouponBoxItem:
		DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Container soap_container_insert type=%d in %d location=%p object=%p len=%lu\n", st, tt, p, q, (unsigned long)len));
		(*(std::vector<ns1__CouponBoxItem * >*)p)[len] = *(ns1__CouponBoxItem **)q;
		break;
	case SOAP_TYPE_std__vectorTemplateOfPointerTons1__ClientCouponBox:
		DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Container soap_container_insert type=%d in %d location=%p object=%p len=%lu\n", st, tt, p, q, (unsigned long)len));
		(*(std::vector<ns1__ClientCouponBox * >*)p)[len] = *(ns1__ClientCouponBox **)q;
		break;
	default:
		DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Could not insert type=%d in %d\n", st, tt));
	}
#ifdef WIN32
#pragma warning(pop)
#endif
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap *soap, char *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_byte
	*a = SOAP_DEFAULT_byte;
#else
	*a = (char)0;
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap *soap, const char *tag, int id, const char *a, const char *type)
{	(void)soap; (void)type; (void)tag; (void)id;
	return soap_outbyte(soap, tag, id, a, type, SOAP_TYPE_byte);
}

SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap *soap, const char *tag, char *a, const char *type)
{	char *p;
	p = soap_inbyte(soap, tag, a, type, SOAP_TYPE_byte);
	return p;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap *soap, const char *a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_byte);
	if (soap_out_byte(soap, tag?tag:"byte", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap *soap, char *p, const char *tag, const char *type)
{
	if ((p = soap_in_byte(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default_short(struct soap *soap, short *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_short
	*a = SOAP_DEFAULT_short;
#else
	*a = (short)0;
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_short(struct soap *soap, const char *tag, int id, const short *a, const char *type)
{	(void)soap; (void)type; (void)tag; (void)id;
	return soap_outshort(soap, tag, id, a, type, SOAP_TYPE_short);
}

SOAP_FMAC3 short * SOAP_FMAC4 soap_in_short(struct soap *soap, const char *tag, short *a, const char *type)
{	short *p;
	p = soap_inshort(soap, tag, a, type, SOAP_TYPE_short);
	return p;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_short(struct soap *soap, const short *a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_short);
	if (soap_out_short(soap, tag?tag:"short", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 short * SOAP_FMAC4 soap_get_short(struct soap *soap, short *p, const char *tag, const char *type)
{
	if ((p = soap_in_short(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap *soap, int *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_int
	*a = SOAP_DEFAULT_int;
#else
	*a = (int)0;
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap *soap, const char *tag, int id, const int *a, const char *type)
{	(void)soap; (void)type; (void)tag; (void)id;
	return soap_outint(soap, tag, id, a, type, SOAP_TYPE_int);
}

SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap *soap, const char *tag, int *a, const char *type)
{	int *p;
	p = soap_inint(soap, tag, a, type, SOAP_TYPE_int);
	return p;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap *soap, const int *a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_int);
	if (soap_out_int(soap, tag?tag:"int", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap *soap, int *p, const char *tag, const char *type)
{
	if ((p = soap_in_int(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap *soap, LONG64 *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_LONG64
	*a = SOAP_DEFAULT_LONG64;
#else
	*a = (LONG64)0;
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap *soap, const char *tag, int id, const LONG64 *a, const char *type)
{	(void)soap; (void)type; (void)tag; (void)id;
	return soap_outLONG64(soap, tag, id, a, type, SOAP_TYPE_LONG64);
}

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap *soap, const char *tag, LONG64 *a, const char *type)
{	LONG64 *p;
	p = soap_inLONG64(soap, tag, a, type, SOAP_TYPE_LONG64);
	return p;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap *soap, const LONG64 *a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_LONG64);
	if (soap_out_LONG64(soap, tag?tag:"long", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap *soap, LONG64 *p, const char *tag, const char *type)
{
	if ((p = soap_in_LONG64(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap *soap, bool *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_bool
	*a = SOAP_DEFAULT_bool;
#else
	*a = (bool)0;
#endif
}

static const struct soap_code_map soap_codes_bool[] =
{	{ (long)false, "false" },
	{ (long)true, "true" },
	{ 0, NULL }
};

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap *soap, bool n)
{
	(void)soap; /* appease -Wall -Werror */
return soap_code_str(soap_codes_bool, n!=0);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap *soap, const char *tag, int id, const bool *a, const char *type)
{	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_bool), type) || soap_send(soap, soap_bool2s(soap, *a)))
		return soap->error;
	return soap_element_end_out(soap, tag);
}

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap *soap, const char *s, bool *a)
{
	const struct soap_code_map *map;
	if (!s)
		return soap->error;
	map = soap_code(soap_codes_bool, s);
	if (map)
		*a = (bool)(map->code != 0);
	else
	{	long n;
		if (soap_s2long(soap, s, &n) || n < 0 || n > 1)
			return soap->error = SOAP_TYPE;
		*a = (bool)(n != 0);
	}
	return SOAP_OK;
}

SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap *soap, const char *tag, bool *a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	if (*soap->type && soap_match_tag(soap, soap->type, type) && soap_match_tag(soap, soap->type, ":boolean"))
	{	soap->error = SOAP_TYPE;
		return NULL;
	}
	a = (bool *)soap_id_enter(soap, soap->id, a, SOAP_TYPE_bool, sizeof(bool), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	if (soap->body && !*soap->href)
	{	if (!a || soap_s2bool(soap, soap_value(soap), a) || soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (bool *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_bool, 0, sizeof(bool), 0, NULL);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap *soap, const bool *a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_bool);
	if (soap_out_bool(soap, tag?tag:"boolean", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap *soap, bool *p, const char *tag, const char *type)
{
	if ((p = soap_in_bool(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

void _ns1__BulkCheckExtendResponse_BulkCheckExtendResult::soap_default(struct soap *soap)
{
	(void)soap; /* appease -Wall -Werror */
	soap_default__xsd__schema(soap, &this->_ns1__BulkCheckExtendResponse_BulkCheckExtendResult::xsd__schema);
	this->_ns1__BulkCheckExtendResponse_BulkCheckExtendResult::__any = NULL;
}

void _ns1__BulkCheckExtendResponse_BulkCheckExtendResult::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize__xsd__schema(soap, &this->_ns1__BulkCheckExtendResponse_BulkCheckExtendResult::xsd__schema);
#endif
}

int _ns1__BulkCheckExtendResponse_BulkCheckExtendResult::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__BulkCheckExtendResponse_BulkCheckExtendResult(struct soap *soap, const char *tag, int id, const _ns1__BulkCheckExtendResponse_BulkCheckExtendResult *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__BulkCheckExtendResponse_BulkCheckExtendResult), type))
		return soap->error;
	if (a->_ns1__BulkCheckExtendResponse_BulkCheckExtendResult::xsd__schema)
	{	if (soap_out__xsd__schema(soap, "xsd:schema", -1, &a->_ns1__BulkCheckExtendResponse_BulkCheckExtendResult::xsd__schema, ""))
			return soap->error;
	}
	else if (soap_element_nil(soap, "xsd:schema"))
		return soap->error;
	soap_outliteral(soap, "-any", &(a->_ns1__BulkCheckExtendResponse_BulkCheckExtendResult::__any), NULL);
	return soap_element_end_out(soap, tag);
}

void *_ns1__BulkCheckExtendResponse_BulkCheckExtendResult::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__BulkCheckExtendResponse_BulkCheckExtendResult * SOAP_FMAC4 soap_in__ns1__BulkCheckExtendResponse_BulkCheckExtendResult(struct soap *soap, const char *tag, _ns1__BulkCheckExtendResponse_BulkCheckExtendResult *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__BulkCheckExtendResponse_BulkCheckExtendResult *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__BulkCheckExtendResponse_BulkCheckExtendResult, sizeof(_ns1__BulkCheckExtendResponse_BulkCheckExtendResult), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__BulkCheckExtendResponse_BulkCheckExtendResult)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__BulkCheckExtendResponse_BulkCheckExtendResult *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_xsd__schema1 = 1;
	size_t soap_flag___any1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_xsd__schema1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in__xsd__schema(soap, "xsd:schema", &(a->_ns1__BulkCheckExtendResponse_BulkCheckExtendResult::xsd__schema), ""))
				{	soap_flag_xsd__schema1--;
					continue;
				}
			if (soap_flag___any1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_inliteral(soap, "-any", &(a->_ns1__BulkCheckExtendResponse_BulkCheckExtendResult::__any)))
				{	soap_flag___any1--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__BulkCheckExtendResponse_BulkCheckExtendResult *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__BulkCheckExtendResponse_BulkCheckExtendResult, 0, sizeof(_ns1__BulkCheckExtendResponse_BulkCheckExtendResult), 0, soap_copy__ns1__BulkCheckExtendResponse_BulkCheckExtendResult);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_xsd__schema1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__BulkCheckExtendResponse_BulkCheckExtendResult::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__BulkCheckExtendResponse_BulkCheckExtendResult);
	if (this->soap_out(soap, tag?tag:"ns1:BulkCheckExtendResponse-BulkCheckExtendResult", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__BulkCheckExtendResponse_BulkCheckExtendResult::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__BulkCheckExtendResponse_BulkCheckExtendResult * SOAP_FMAC4 soap_get__ns1__BulkCheckExtendResponse_BulkCheckExtendResult(struct soap *soap, _ns1__BulkCheckExtendResponse_BulkCheckExtendResult *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__BulkCheckExtendResponse_BulkCheckExtendResult * SOAP_FMAC2 soap_instantiate__ns1__BulkCheckExtendResponse_BulkCheckExtendResult(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__BulkCheckExtendResponse_BulkCheckExtendResult(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__BulkCheckExtendResponse_BulkCheckExtendResult, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__BulkCheckExtendResponse_BulkCheckExtendResult);
		if (size)
			*size = sizeof(_ns1__BulkCheckExtendResponse_BulkCheckExtendResult);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__BulkCheckExtendResponse_BulkCheckExtendResult, n);
		if (size)
			*size = n * sizeof(_ns1__BulkCheckExtendResponse_BulkCheckExtendResult);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__BulkCheckExtendResponse_BulkCheckExtendResult*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__BulkCheckExtendResponse_BulkCheckExtendResult(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__BulkCheckExtendResponse_BulkCheckExtendResult %p -> %p\n", q, p));
	*(_ns1__BulkCheckExtendResponse_BulkCheckExtendResult*)p = *(_ns1__BulkCheckExtendResponse_BulkCheckExtendResult*)q;
}

void _ns1__BulkCheckExtend_dsCouponPin::soap_default(struct soap *soap)
{
	(void)soap; /* appease -Wall -Werror */
	soap_default__xsd__schema(soap, &this->_ns1__BulkCheckExtend_dsCouponPin::xsd__schema);
	this->_ns1__BulkCheckExtend_dsCouponPin::__any = NULL;
}

void _ns1__BulkCheckExtend_dsCouponPin::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize__xsd__schema(soap, &this->_ns1__BulkCheckExtend_dsCouponPin::xsd__schema);
#endif
}

int _ns1__BulkCheckExtend_dsCouponPin::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__BulkCheckExtend_dsCouponPin(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__BulkCheckExtend_dsCouponPin(struct soap *soap, const char *tag, int id, const _ns1__BulkCheckExtend_dsCouponPin *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__BulkCheckExtend_dsCouponPin), type))
		return soap->error;
	if (a->_ns1__BulkCheckExtend_dsCouponPin::xsd__schema)
	{	if (soap_out__xsd__schema(soap, "xsd:schema", -1, &a->_ns1__BulkCheckExtend_dsCouponPin::xsd__schema, ""))
			return soap->error;
	}
	else if (soap_element_nil(soap, "xsd:schema"))
		return soap->error;
	soap_outliteral(soap, "-any", &(a->_ns1__BulkCheckExtend_dsCouponPin::__any), NULL);
	return soap_element_end_out(soap, tag);
}

void *_ns1__BulkCheckExtend_dsCouponPin::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__BulkCheckExtend_dsCouponPin(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__BulkCheckExtend_dsCouponPin * SOAP_FMAC4 soap_in__ns1__BulkCheckExtend_dsCouponPin(struct soap *soap, const char *tag, _ns1__BulkCheckExtend_dsCouponPin *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__BulkCheckExtend_dsCouponPin *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__BulkCheckExtend_dsCouponPin, sizeof(_ns1__BulkCheckExtend_dsCouponPin), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__BulkCheckExtend_dsCouponPin)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__BulkCheckExtend_dsCouponPin *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_xsd__schema1 = 1;
	size_t soap_flag___any1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_xsd__schema1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in__xsd__schema(soap, "xsd:schema", &(a->_ns1__BulkCheckExtend_dsCouponPin::xsd__schema), ""))
				{	soap_flag_xsd__schema1--;
					continue;
				}
			if (soap_flag___any1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_inliteral(soap, "-any", &(a->_ns1__BulkCheckExtend_dsCouponPin::__any)))
				{	soap_flag___any1--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__BulkCheckExtend_dsCouponPin *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__BulkCheckExtend_dsCouponPin, 0, sizeof(_ns1__BulkCheckExtend_dsCouponPin), 0, soap_copy__ns1__BulkCheckExtend_dsCouponPin);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_xsd__schema1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__BulkCheckExtend_dsCouponPin::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__BulkCheckExtend_dsCouponPin);
	if (this->soap_out(soap, tag?tag:"ns1:BulkCheckExtend-dsCouponPin", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__BulkCheckExtend_dsCouponPin::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__BulkCheckExtend_dsCouponPin(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__BulkCheckExtend_dsCouponPin * SOAP_FMAC4 soap_get__ns1__BulkCheckExtend_dsCouponPin(struct soap *soap, _ns1__BulkCheckExtend_dsCouponPin *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__BulkCheckExtend_dsCouponPin(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__BulkCheckExtend_dsCouponPin * SOAP_FMAC2 soap_instantiate__ns1__BulkCheckExtend_dsCouponPin(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__BulkCheckExtend_dsCouponPin(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__BulkCheckExtend_dsCouponPin, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__BulkCheckExtend_dsCouponPin);
		if (size)
			*size = sizeof(_ns1__BulkCheckExtend_dsCouponPin);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__BulkCheckExtend_dsCouponPin, n);
		if (size)
			*size = n * sizeof(_ns1__BulkCheckExtend_dsCouponPin);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__BulkCheckExtend_dsCouponPin*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__BulkCheckExtend_dsCouponPin(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__BulkCheckExtend_dsCouponPin %p -> %p\n", q, p));
	*(_ns1__BulkCheckExtend_dsCouponPin*)p = *(_ns1__BulkCheckExtend_dsCouponPin*)q;
}

void _ns1__BulkCheckResponse_BulkCheckResult::soap_default(struct soap *soap)
{
	(void)soap; /* appease -Wall -Werror */
	soap_default__xsd__schema(soap, &this->_ns1__BulkCheckResponse_BulkCheckResult::xsd__schema);
	this->_ns1__BulkCheckResponse_BulkCheckResult::__any = NULL;
}

void _ns1__BulkCheckResponse_BulkCheckResult::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize__xsd__schema(soap, &this->_ns1__BulkCheckResponse_BulkCheckResult::xsd__schema);
#endif
}

int _ns1__BulkCheckResponse_BulkCheckResult::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__BulkCheckResponse_BulkCheckResult(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__BulkCheckResponse_BulkCheckResult(struct soap *soap, const char *tag, int id, const _ns1__BulkCheckResponse_BulkCheckResult *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__BulkCheckResponse_BulkCheckResult), type))
		return soap->error;
	if (a->_ns1__BulkCheckResponse_BulkCheckResult::xsd__schema)
	{	if (soap_out__xsd__schema(soap, "xsd:schema", -1, &a->_ns1__BulkCheckResponse_BulkCheckResult::xsd__schema, ""))
			return soap->error;
	}
	else if (soap_element_nil(soap, "xsd:schema"))
		return soap->error;
	soap_outliteral(soap, "-any", &(a->_ns1__BulkCheckResponse_BulkCheckResult::__any), NULL);
	return soap_element_end_out(soap, tag);
}

void *_ns1__BulkCheckResponse_BulkCheckResult::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__BulkCheckResponse_BulkCheckResult(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__BulkCheckResponse_BulkCheckResult * SOAP_FMAC4 soap_in__ns1__BulkCheckResponse_BulkCheckResult(struct soap *soap, const char *tag, _ns1__BulkCheckResponse_BulkCheckResult *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__BulkCheckResponse_BulkCheckResult *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__BulkCheckResponse_BulkCheckResult, sizeof(_ns1__BulkCheckResponse_BulkCheckResult), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__BulkCheckResponse_BulkCheckResult)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__BulkCheckResponse_BulkCheckResult *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_xsd__schema1 = 1;
	size_t soap_flag___any1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_xsd__schema1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in__xsd__schema(soap, "xsd:schema", &(a->_ns1__BulkCheckResponse_BulkCheckResult::xsd__schema), ""))
				{	soap_flag_xsd__schema1--;
					continue;
				}
			if (soap_flag___any1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_inliteral(soap, "-any", &(a->_ns1__BulkCheckResponse_BulkCheckResult::__any)))
				{	soap_flag___any1--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__BulkCheckResponse_BulkCheckResult *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__BulkCheckResponse_BulkCheckResult, 0, sizeof(_ns1__BulkCheckResponse_BulkCheckResult), 0, soap_copy__ns1__BulkCheckResponse_BulkCheckResult);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_xsd__schema1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__BulkCheckResponse_BulkCheckResult::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__BulkCheckResponse_BulkCheckResult);
	if (this->soap_out(soap, tag?tag:"ns1:BulkCheckResponse-BulkCheckResult", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__BulkCheckResponse_BulkCheckResult::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__BulkCheckResponse_BulkCheckResult(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__BulkCheckResponse_BulkCheckResult * SOAP_FMAC4 soap_get__ns1__BulkCheckResponse_BulkCheckResult(struct soap *soap, _ns1__BulkCheckResponse_BulkCheckResult *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__BulkCheckResponse_BulkCheckResult(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__BulkCheckResponse_BulkCheckResult * SOAP_FMAC2 soap_instantiate__ns1__BulkCheckResponse_BulkCheckResult(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__BulkCheckResponse_BulkCheckResult(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__BulkCheckResponse_BulkCheckResult, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__BulkCheckResponse_BulkCheckResult);
		if (size)
			*size = sizeof(_ns1__BulkCheckResponse_BulkCheckResult);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__BulkCheckResponse_BulkCheckResult, n);
		if (size)
			*size = n * sizeof(_ns1__BulkCheckResponse_BulkCheckResult);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__BulkCheckResponse_BulkCheckResult*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__BulkCheckResponse_BulkCheckResult(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__BulkCheckResponse_BulkCheckResult %p -> %p\n", q, p));
	*(_ns1__BulkCheckResponse_BulkCheckResult*)p = *(_ns1__BulkCheckResponse_BulkCheckResult*)q;
}

void _ns1__BulkCheck_dsCouponPin::soap_default(struct soap *soap)
{
	(void)soap; /* appease -Wall -Werror */
	soap_default__xsd__schema(soap, &this->_ns1__BulkCheck_dsCouponPin::xsd__schema);
	this->_ns1__BulkCheck_dsCouponPin::__any = NULL;
}

void _ns1__BulkCheck_dsCouponPin::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize__xsd__schema(soap, &this->_ns1__BulkCheck_dsCouponPin::xsd__schema);
#endif
}

int _ns1__BulkCheck_dsCouponPin::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__BulkCheck_dsCouponPin(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__BulkCheck_dsCouponPin(struct soap *soap, const char *tag, int id, const _ns1__BulkCheck_dsCouponPin *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__BulkCheck_dsCouponPin), type))
		return soap->error;
	if (a->_ns1__BulkCheck_dsCouponPin::xsd__schema)
	{	if (soap_out__xsd__schema(soap, "xsd:schema", -1, &a->_ns1__BulkCheck_dsCouponPin::xsd__schema, ""))
			return soap->error;
	}
	else if (soap_element_nil(soap, "xsd:schema"))
		return soap->error;
	soap_outliteral(soap, "-any", &(a->_ns1__BulkCheck_dsCouponPin::__any), NULL);
	return soap_element_end_out(soap, tag);
}

void *_ns1__BulkCheck_dsCouponPin::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__BulkCheck_dsCouponPin(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__BulkCheck_dsCouponPin * SOAP_FMAC4 soap_in__ns1__BulkCheck_dsCouponPin(struct soap *soap, const char *tag, _ns1__BulkCheck_dsCouponPin *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__BulkCheck_dsCouponPin *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__BulkCheck_dsCouponPin, sizeof(_ns1__BulkCheck_dsCouponPin), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__BulkCheck_dsCouponPin)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__BulkCheck_dsCouponPin *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_xsd__schema1 = 1;
	size_t soap_flag___any1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_xsd__schema1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in__xsd__schema(soap, "xsd:schema", &(a->_ns1__BulkCheck_dsCouponPin::xsd__schema), ""))
				{	soap_flag_xsd__schema1--;
					continue;
				}
			if (soap_flag___any1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_inliteral(soap, "-any", &(a->_ns1__BulkCheck_dsCouponPin::__any)))
				{	soap_flag___any1--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__BulkCheck_dsCouponPin *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__BulkCheck_dsCouponPin, 0, sizeof(_ns1__BulkCheck_dsCouponPin), 0, soap_copy__ns1__BulkCheck_dsCouponPin);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_xsd__schema1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__BulkCheck_dsCouponPin::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__BulkCheck_dsCouponPin);
	if (this->soap_out(soap, tag?tag:"ns1:BulkCheck-dsCouponPin", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__BulkCheck_dsCouponPin::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__BulkCheck_dsCouponPin(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__BulkCheck_dsCouponPin * SOAP_FMAC4 soap_get__ns1__BulkCheck_dsCouponPin(struct soap *soap, _ns1__BulkCheck_dsCouponPin *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__BulkCheck_dsCouponPin(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__BulkCheck_dsCouponPin * SOAP_FMAC2 soap_instantiate__ns1__BulkCheck_dsCouponPin(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__BulkCheck_dsCouponPin(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__BulkCheck_dsCouponPin, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__BulkCheck_dsCouponPin);
		if (size)
			*size = sizeof(_ns1__BulkCheck_dsCouponPin);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__BulkCheck_dsCouponPin, n);
		if (size)
			*size = n * sizeof(_ns1__BulkCheck_dsCouponPin);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__BulkCheck_dsCouponPin*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__BulkCheck_dsCouponPin(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__BulkCheck_dsCouponPin %p -> %p\n", q, p));
	*(_ns1__BulkCheck_dsCouponPin*)p = *(_ns1__BulkCheck_dsCouponPin*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap *soap, std::string *p)
{
	(void)soap; /* appease -Wall -Werror */
	p->erase();
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap *soap, const std::string *a)
{	(void)soap; (void)a; /* appease -Wall -Werror */
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap *soap, const char *tag, int id, const std::string *s, const char *type)
{
	if ((soap->mode & SOAP_C_NILSTRING) && s->empty())
		return soap_element_null(soap, tag, id, type);
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, s, SOAP_TYPE_std__string), type) || soap_string_out(soap, s->c_str(), 0) || soap_element_end_out(soap, tag))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap *soap, const char *tag, std::string *s, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!s)
		s = soap_new_std__string(soap, -1);
	if (soap->null)
		if (s)
			s->erase();
	if (soap->body && !*soap->href)
	{	char *t;
		s = (std::string*)soap_class_id_enter(soap, soap->id, s, SOAP_TYPE_std__string, sizeof(std::string), soap->type, soap->arrayType);
		if (s)
		{	if (!(t = soap_string_in(soap, 1, 0, -1)))
				return NULL;
			s->assign(t);
		}
	}
	else
		s = (std::string*)soap_id_forward(soap, soap->href, soap_class_id_enter(soap, soap->id, s, SOAP_TYPE_std__string, sizeof(std::string), soap->type, soap->arrayType), 0, SOAP_TYPE_std__string, 0, sizeof(std::string), 0, soap_copy_std__string);
	if (soap->body && soap_element_end_in(soap, tag))
		return NULL;
	return s;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap *soap, const std::string *a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_std__string);
	if (soap_out_std__string(soap, tag?tag:"string", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap *soap, std::string *p, const char *tag, const char *type)
{
	if ((p = soap_in_std__string(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_std__string(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_std__string, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(std::string);
		if (size)
			*size = sizeof(std::string);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(std::string, n);
		if (size)
			*size = n * sizeof(std::string);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (std::string*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying std::string %p -> %p\n", q, p));
	*(std::string*)p = *(std::string*)q;
}

void _ns2__GetGameAccessTokenResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns2__GetGameAccessTokenResponse::GetGameAccessTokenResult);
	this->_ns2__GetGameAccessTokenResponse::accessToken = NULL;
	/* transient soap skipped */
}

void _ns2__GetGameAccessTokenResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns2__GetGameAccessTokenResponse::accessToken);
	/* transient soap skipped */
#endif
}

int _ns2__GetGameAccessTokenResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns2__GetGameAccessTokenResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__GetGameAccessTokenResponse(struct soap *soap, const char *tag, int id, const _ns2__GetGameAccessTokenResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns2__GetGameAccessTokenResponse), type))
		return soap->error;
	soap_element_result(soap, "ns2:GetGameAccessTokenResult");
	if (soap_out_int(soap, "ns2:GetGameAccessTokenResult", -1, &(a->_ns2__GetGameAccessTokenResponse::GetGameAccessTokenResult), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns2:accessToken", -1, &(a->_ns2__GetGameAccessTokenResponse::accessToken), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns2__GetGameAccessTokenResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns2__GetGameAccessTokenResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns2__GetGameAccessTokenResponse * SOAP_FMAC4 soap_in__ns2__GetGameAccessTokenResponse(struct soap *soap, const char *tag, _ns2__GetGameAccessTokenResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns2__GetGameAccessTokenResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns2__GetGameAccessTokenResponse, sizeof(_ns2__GetGameAccessTokenResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns2__GetGameAccessTokenResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns2__GetGameAccessTokenResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_GetGameAccessTokenResult1 = 1;
	size_t soap_flag_accessToken1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_GetGameAccessTokenResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns2:GetGameAccessTokenResult", &(a->_ns2__GetGameAccessTokenResponse::GetGameAccessTokenResult), "xsd:int"))
				{	soap_flag_GetGameAccessTokenResult1--;
					continue;
				}
			if (soap_flag_accessToken1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns2:accessToken", &(a->_ns2__GetGameAccessTokenResponse::accessToken), "xsd:string"))
				{	soap_flag_accessToken1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns2:GetGameAccessTokenResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns2__GetGameAccessTokenResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns2__GetGameAccessTokenResponse, 0, sizeof(_ns2__GetGameAccessTokenResponse), 0, soap_copy__ns2__GetGameAccessTokenResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_GetGameAccessTokenResult1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns2__GetGameAccessTokenResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns2__GetGameAccessTokenResponse);
	if (this->soap_out(soap, tag?tag:"ns2:GetGameAccessTokenResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns2__GetGameAccessTokenResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns2__GetGameAccessTokenResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns2__GetGameAccessTokenResponse * SOAP_FMAC4 soap_get__ns2__GetGameAccessTokenResponse(struct soap *soap, _ns2__GetGameAccessTokenResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns2__GetGameAccessTokenResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns2__GetGameAccessTokenResponse * SOAP_FMAC2 soap_instantiate__ns2__GetGameAccessTokenResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns2__GetGameAccessTokenResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns2__GetGameAccessTokenResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns2__GetGameAccessTokenResponse);
		if (size)
			*size = sizeof(_ns2__GetGameAccessTokenResponse);
		((_ns2__GetGameAccessTokenResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns2__GetGameAccessTokenResponse, n);
		if (size)
			*size = n * sizeof(_ns2__GetGameAccessTokenResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns2__GetGameAccessTokenResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns2__GetGameAccessTokenResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__GetGameAccessTokenResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns2__GetGameAccessTokenResponse %p -> %p\n", q, p));
	*(_ns2__GetGameAccessTokenResponse*)p = *(_ns2__GetGameAccessTokenResponse*)q;
}

void _ns2__GetGameAccessToken::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_LONG64(soap, &this->_ns2__GetGameAccessToken::memberSN);
	soap_default_int(soap, &this->_ns2__GetGameAccessToken::gameCode);
	/* transient soap skipped */
}

void _ns2__GetGameAccessToken::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns2__GetGameAccessToken::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns2__GetGameAccessToken(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__GetGameAccessToken(struct soap *soap, const char *tag, int id, const _ns2__GetGameAccessToken *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns2__GetGameAccessToken), type))
		return soap->error;
	if (soap_out_LONG64(soap, "ns2:memberSN", -1, &(a->_ns2__GetGameAccessToken::memberSN), ""))
		return soap->error;
	if (soap_out_int(soap, "ns2:gameCode", -1, &(a->_ns2__GetGameAccessToken::gameCode), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns2__GetGameAccessToken::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns2__GetGameAccessToken(soap, tag, this, type);
}

SOAP_FMAC3 _ns2__GetGameAccessToken * SOAP_FMAC4 soap_in__ns2__GetGameAccessToken(struct soap *soap, const char *tag, _ns2__GetGameAccessToken *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns2__GetGameAccessToken *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns2__GetGameAccessToken, sizeof(_ns2__GetGameAccessToken), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns2__GetGameAccessToken)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns2__GetGameAccessToken *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_memberSN1 = 1;
	size_t soap_flag_gameCode1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_memberSN1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns2:memberSN", &(a->_ns2__GetGameAccessToken::memberSN), "xsd:long"))
				{	soap_flag_memberSN1--;
					continue;
				}
			if (soap_flag_gameCode1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns2:gameCode", &(a->_ns2__GetGameAccessToken::gameCode), "xsd:int"))
				{	soap_flag_gameCode1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns2__GetGameAccessToken *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns2__GetGameAccessToken, 0, sizeof(_ns2__GetGameAccessToken), 0, soap_copy__ns2__GetGameAccessToken);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_memberSN1 > 0 || soap_flag_gameCode1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns2__GetGameAccessToken::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns2__GetGameAccessToken);
	if (this->soap_out(soap, tag?tag:"ns2:GetGameAccessToken", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns2__GetGameAccessToken::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns2__GetGameAccessToken(soap, this, tag, type);
}

SOAP_FMAC3 _ns2__GetGameAccessToken * SOAP_FMAC4 soap_get__ns2__GetGameAccessToken(struct soap *soap, _ns2__GetGameAccessToken *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns2__GetGameAccessToken(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns2__GetGameAccessToken * SOAP_FMAC2 soap_instantiate__ns2__GetGameAccessToken(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns2__GetGameAccessToken(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns2__GetGameAccessToken, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns2__GetGameAccessToken);
		if (size)
			*size = sizeof(_ns2__GetGameAccessToken);
		((_ns2__GetGameAccessToken*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns2__GetGameAccessToken, n);
		if (size)
			*size = n * sizeof(_ns2__GetGameAccessToken);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns2__GetGameAccessToken*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns2__GetGameAccessToken*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__GetGameAccessToken(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns2__GetGameAccessToken %p -> %p\n", q, p));
	*(_ns2__GetGameAccessToken*)p = *(_ns2__GetGameAccessToken*)q;
}

void _ns1__WakeUpResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	/* transient soap skipped */
}

void _ns1__WakeUpResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__WakeUpResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__WakeUpResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__WakeUpResponse(struct soap *soap, const char *tag, int id, const _ns1__WakeUpResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__WakeUpResponse), type))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__WakeUpResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__WakeUpResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__WakeUpResponse * SOAP_FMAC4 soap_in__ns1__WakeUpResponse(struct soap *soap, const char *tag, _ns1__WakeUpResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__WakeUpResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__WakeUpResponse, sizeof(_ns1__WakeUpResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__WakeUpResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__WakeUpResponse *)a->soap_in(soap, tag, type);
		}
	}
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__WakeUpResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__WakeUpResponse, 0, sizeof(_ns1__WakeUpResponse), 0, soap_copy__ns1__WakeUpResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__WakeUpResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__WakeUpResponse);
	if (this->soap_out(soap, tag?tag:"ns1:WakeUpResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__WakeUpResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__WakeUpResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__WakeUpResponse * SOAP_FMAC4 soap_get__ns1__WakeUpResponse(struct soap *soap, _ns1__WakeUpResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__WakeUpResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__WakeUpResponse * SOAP_FMAC2 soap_instantiate__ns1__WakeUpResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__WakeUpResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__WakeUpResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__WakeUpResponse);
		if (size)
			*size = sizeof(_ns1__WakeUpResponse);
		((_ns1__WakeUpResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__WakeUpResponse, n);
		if (size)
			*size = n * sizeof(_ns1__WakeUpResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__WakeUpResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__WakeUpResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__WakeUpResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__WakeUpResponse %p -> %p\n", q, p));
	*(_ns1__WakeUpResponse*)p = *(_ns1__WakeUpResponse*)q;
}

void _ns1__WakeUp::soap_default(struct soap *soap)
{
	this->soap = soap;
	/* transient soap skipped */
}

void _ns1__WakeUp::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__WakeUp::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__WakeUp(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__WakeUp(struct soap *soap, const char *tag, int id, const _ns1__WakeUp *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__WakeUp), type))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__WakeUp::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__WakeUp(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__WakeUp * SOAP_FMAC4 soap_in__ns1__WakeUp(struct soap *soap, const char *tag, _ns1__WakeUp *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__WakeUp *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__WakeUp, sizeof(_ns1__WakeUp), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__WakeUp)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__WakeUp *)a->soap_in(soap, tag, type);
		}
	}
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__WakeUp *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__WakeUp, 0, sizeof(_ns1__WakeUp), 0, soap_copy__ns1__WakeUp);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__WakeUp::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__WakeUp);
	if (this->soap_out(soap, tag?tag:"ns1:WakeUp", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__WakeUp::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__WakeUp(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__WakeUp * SOAP_FMAC4 soap_get__ns1__WakeUp(struct soap *soap, _ns1__WakeUp *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__WakeUp(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__WakeUp * SOAP_FMAC2 soap_instantiate__ns1__WakeUp(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__WakeUp(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__WakeUp, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__WakeUp);
		if (size)
			*size = sizeof(_ns1__WakeUp);
		((_ns1__WakeUp*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__WakeUp, n);
		if (size)
			*size = n * sizeof(_ns1__WakeUp);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__WakeUp*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__WakeUp*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__WakeUp(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__WakeUp %p -> %p\n", q, p));
	*(_ns1__WakeUp*)p = *(_ns1__WakeUp*)q;
}

void _ns1__GetUseRestrictInfoResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__GetUseRestrictInfoResponse::GetUseRestrictInfoResult = NULL;
	/* transient soap skipped */
}

void _ns1__GetUseRestrictInfoResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__UseRestrictInfoEntity(soap, &this->_ns1__GetUseRestrictInfoResponse::GetUseRestrictInfoResult);
	/* transient soap skipped */
#endif
}

int _ns1__GetUseRestrictInfoResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__GetUseRestrictInfoResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetUseRestrictInfoResponse(struct soap *soap, const char *tag, int id, const _ns1__GetUseRestrictInfoResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__GetUseRestrictInfoResponse), type))
		return soap->error;
	if (a->GetUseRestrictInfoResult)
		soap_element_result(soap, "ns1:GetUseRestrictInfoResult");
	if (soap_out_PointerTons1__UseRestrictInfoEntity(soap, "ns1:GetUseRestrictInfoResult", -1, &(a->_ns1__GetUseRestrictInfoResponse::GetUseRestrictInfoResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__GetUseRestrictInfoResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__GetUseRestrictInfoResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__GetUseRestrictInfoResponse * SOAP_FMAC4 soap_in__ns1__GetUseRestrictInfoResponse(struct soap *soap, const char *tag, _ns1__GetUseRestrictInfoResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__GetUseRestrictInfoResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__GetUseRestrictInfoResponse, sizeof(_ns1__GetUseRestrictInfoResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__GetUseRestrictInfoResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__GetUseRestrictInfoResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_GetUseRestrictInfoResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_GetUseRestrictInfoResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__UseRestrictInfoEntity(soap, "ns1:GetUseRestrictInfoResult", &(a->_ns1__GetUseRestrictInfoResponse::GetUseRestrictInfoResult), "ns1:UseRestrictInfoEntity"))
				{	soap_flag_GetUseRestrictInfoResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:GetUseRestrictInfoResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__GetUseRestrictInfoResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__GetUseRestrictInfoResponse, 0, sizeof(_ns1__GetUseRestrictInfoResponse), 0, soap_copy__ns1__GetUseRestrictInfoResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__GetUseRestrictInfoResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__GetUseRestrictInfoResponse);
	if (this->soap_out(soap, tag?tag:"ns1:GetUseRestrictInfoResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__GetUseRestrictInfoResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__GetUseRestrictInfoResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__GetUseRestrictInfoResponse * SOAP_FMAC4 soap_get__ns1__GetUseRestrictInfoResponse(struct soap *soap, _ns1__GetUseRestrictInfoResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__GetUseRestrictInfoResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__GetUseRestrictInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetUseRestrictInfoResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__GetUseRestrictInfoResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__GetUseRestrictInfoResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__GetUseRestrictInfoResponse);
		if (size)
			*size = sizeof(_ns1__GetUseRestrictInfoResponse);
		((_ns1__GetUseRestrictInfoResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__GetUseRestrictInfoResponse, n);
		if (size)
			*size = n * sizeof(_ns1__GetUseRestrictInfoResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__GetUseRestrictInfoResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__GetUseRestrictInfoResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetUseRestrictInfoResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__GetUseRestrictInfoResponse %p -> %p\n", q, p));
	*(_ns1__GetUseRestrictInfoResponse*)p = *(_ns1__GetUseRestrictInfoResponse*)q;
}

void _ns1__GetUseRestrictInfo::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__GetUseRestrictInfo::couponPin = NULL;
	this->_ns1__GetUseRestrictInfo::nxUserId = NULL;
	/* transient soap skipped */
}

void _ns1__GetUseRestrictInfo::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__GetUseRestrictInfo::couponPin);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__GetUseRestrictInfo::nxUserId);
	/* transient soap skipped */
#endif
}

int _ns1__GetUseRestrictInfo::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__GetUseRestrictInfo(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetUseRestrictInfo(struct soap *soap, const char *tag, int id, const _ns1__GetUseRestrictInfo *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__GetUseRestrictInfo), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponPin", -1, &(a->_ns1__GetUseRestrictInfo::couponPin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxUserId", -1, &(a->_ns1__GetUseRestrictInfo::nxUserId), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__GetUseRestrictInfo::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__GetUseRestrictInfo(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__GetUseRestrictInfo * SOAP_FMAC4 soap_in__ns1__GetUseRestrictInfo(struct soap *soap, const char *tag, _ns1__GetUseRestrictInfo *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__GetUseRestrictInfo *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__GetUseRestrictInfo, sizeof(_ns1__GetUseRestrictInfo), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__GetUseRestrictInfo)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__GetUseRestrictInfo *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_couponPin1 = 1;
	size_t soap_flag_nxUserId1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_couponPin1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponPin", &(a->_ns1__GetUseRestrictInfo::couponPin), "xsd:string"))
				{	soap_flag_couponPin1--;
					continue;
				}
			if (soap_flag_nxUserId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxUserId", &(a->_ns1__GetUseRestrictInfo::nxUserId), "xsd:string"))
				{	soap_flag_nxUserId1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__GetUseRestrictInfo *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__GetUseRestrictInfo, 0, sizeof(_ns1__GetUseRestrictInfo), 0, soap_copy__ns1__GetUseRestrictInfo);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__GetUseRestrictInfo::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__GetUseRestrictInfo);
	if (this->soap_out(soap, tag?tag:"ns1:GetUseRestrictInfo", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__GetUseRestrictInfo::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__GetUseRestrictInfo(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__GetUseRestrictInfo * SOAP_FMAC4 soap_get__ns1__GetUseRestrictInfo(struct soap *soap, _ns1__GetUseRestrictInfo *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__GetUseRestrictInfo(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__GetUseRestrictInfo * SOAP_FMAC2 soap_instantiate__ns1__GetUseRestrictInfo(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__GetUseRestrictInfo(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__GetUseRestrictInfo, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__GetUseRestrictInfo);
		if (size)
			*size = sizeof(_ns1__GetUseRestrictInfo);
		((_ns1__GetUseRestrictInfo*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__GetUseRestrictInfo, n);
		if (size)
			*size = n * sizeof(_ns1__GetUseRestrictInfo);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__GetUseRestrictInfo*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__GetUseRestrictInfo*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetUseRestrictInfo(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__GetUseRestrictInfo %p -> %p\n", q, p));
	*(_ns1__GetUseRestrictInfo*)p = *(_ns1__GetUseRestrictInfo*)q;
}

void _ns1__BulkCheckExtendResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__BulkCheckExtendResponse::BulkCheckExtendResult = NULL;
	/* transient soap skipped */
}

void _ns1__BulkCheckExtendResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, &this->_ns1__BulkCheckExtendResponse::BulkCheckExtendResult);
	/* transient soap skipped */
#endif
}

int _ns1__BulkCheckExtendResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__BulkCheckExtendResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__BulkCheckExtendResponse(struct soap *soap, const char *tag, int id, const _ns1__BulkCheckExtendResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__BulkCheckExtendResponse), type))
		return soap->error;
	if (a->BulkCheckExtendResult)
		soap_element_result(soap, "ns1:BulkCheckExtendResult");
	if (soap_out_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, "ns1:BulkCheckExtendResult", -1, &(a->_ns1__BulkCheckExtendResponse::BulkCheckExtendResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__BulkCheckExtendResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__BulkCheckExtendResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__BulkCheckExtendResponse * SOAP_FMAC4 soap_in__ns1__BulkCheckExtendResponse(struct soap *soap, const char *tag, _ns1__BulkCheckExtendResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__BulkCheckExtendResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__BulkCheckExtendResponse, sizeof(_ns1__BulkCheckExtendResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__BulkCheckExtendResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__BulkCheckExtendResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_BulkCheckExtendResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_BulkCheckExtendResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, "ns1:BulkCheckExtendResult", &(a->_ns1__BulkCheckExtendResponse::BulkCheckExtendResult), ""))
				{	soap_flag_BulkCheckExtendResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:BulkCheckExtendResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__BulkCheckExtendResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__BulkCheckExtendResponse, 0, sizeof(_ns1__BulkCheckExtendResponse), 0, soap_copy__ns1__BulkCheckExtendResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__BulkCheckExtendResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__BulkCheckExtendResponse);
	if (this->soap_out(soap, tag?tag:"ns1:BulkCheckExtendResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__BulkCheckExtendResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__BulkCheckExtendResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__BulkCheckExtendResponse * SOAP_FMAC4 soap_get__ns1__BulkCheckExtendResponse(struct soap *soap, _ns1__BulkCheckExtendResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__BulkCheckExtendResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__BulkCheckExtendResponse * SOAP_FMAC2 soap_instantiate__ns1__BulkCheckExtendResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__BulkCheckExtendResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__BulkCheckExtendResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__BulkCheckExtendResponse);
		if (size)
			*size = sizeof(_ns1__BulkCheckExtendResponse);
		((_ns1__BulkCheckExtendResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__BulkCheckExtendResponse, n);
		if (size)
			*size = n * sizeof(_ns1__BulkCheckExtendResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__BulkCheckExtendResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__BulkCheckExtendResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__BulkCheckExtendResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__BulkCheckExtendResponse %p -> %p\n", q, p));
	*(_ns1__BulkCheckExtendResponse*)p = *(_ns1__BulkCheckExtendResponse*)q;
}

void _ns1__BulkCheckExtend::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__BulkCheckExtend::dsCouponPin = NULL;
	/* transient soap skipped */
}

void _ns1__BulkCheckExtend::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__BulkCheckExtend_dsCouponPin(soap, &this->_ns1__BulkCheckExtend::dsCouponPin);
	/* transient soap skipped */
#endif
}

int _ns1__BulkCheckExtend::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__BulkCheckExtend(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__BulkCheckExtend(struct soap *soap, const char *tag, int id, const _ns1__BulkCheckExtend *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__BulkCheckExtend), type))
		return soap->error;
	if (soap_out_PointerTo_ns1__BulkCheckExtend_dsCouponPin(soap, "ns1:dsCouponPin", -1, &(a->_ns1__BulkCheckExtend::dsCouponPin), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__BulkCheckExtend::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__BulkCheckExtend(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__BulkCheckExtend * SOAP_FMAC4 soap_in__ns1__BulkCheckExtend(struct soap *soap, const char *tag, _ns1__BulkCheckExtend *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__BulkCheckExtend *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__BulkCheckExtend, sizeof(_ns1__BulkCheckExtend), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__BulkCheckExtend)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__BulkCheckExtend *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_dsCouponPin1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_dsCouponPin1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__BulkCheckExtend_dsCouponPin(soap, "ns1:dsCouponPin", &(a->_ns1__BulkCheckExtend::dsCouponPin), ""))
				{	soap_flag_dsCouponPin1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__BulkCheckExtend *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__BulkCheckExtend, 0, sizeof(_ns1__BulkCheckExtend), 0, soap_copy__ns1__BulkCheckExtend);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__BulkCheckExtend::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__BulkCheckExtend);
	if (this->soap_out(soap, tag?tag:"ns1:BulkCheckExtend", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__BulkCheckExtend::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__BulkCheckExtend(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__BulkCheckExtend * SOAP_FMAC4 soap_get__ns1__BulkCheckExtend(struct soap *soap, _ns1__BulkCheckExtend *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__BulkCheckExtend(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__BulkCheckExtend * SOAP_FMAC2 soap_instantiate__ns1__BulkCheckExtend(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__BulkCheckExtend(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__BulkCheckExtend, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__BulkCheckExtend);
		if (size)
			*size = sizeof(_ns1__BulkCheckExtend);
		((_ns1__BulkCheckExtend*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__BulkCheckExtend, n);
		if (size)
			*size = n * sizeof(_ns1__BulkCheckExtend);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__BulkCheckExtend*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__BulkCheckExtend*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__BulkCheckExtend(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__BulkCheckExtend %p -> %p\n", q, p));
	*(_ns1__BulkCheckExtend*)p = *(_ns1__BulkCheckExtend*)q;
}

void _ns1__BulkCheckResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__BulkCheckResponse::BulkCheckResult = NULL;
	/* transient soap skipped */
}

void _ns1__BulkCheckResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__BulkCheckResponse_BulkCheckResult(soap, &this->_ns1__BulkCheckResponse::BulkCheckResult);
	/* transient soap skipped */
#endif
}

int _ns1__BulkCheckResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__BulkCheckResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__BulkCheckResponse(struct soap *soap, const char *tag, int id, const _ns1__BulkCheckResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__BulkCheckResponse), type))
		return soap->error;
	if (a->BulkCheckResult)
		soap_element_result(soap, "ns1:BulkCheckResult");
	if (soap_out_PointerTo_ns1__BulkCheckResponse_BulkCheckResult(soap, "ns1:BulkCheckResult", -1, &(a->_ns1__BulkCheckResponse::BulkCheckResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__BulkCheckResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__BulkCheckResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__BulkCheckResponse * SOAP_FMAC4 soap_in__ns1__BulkCheckResponse(struct soap *soap, const char *tag, _ns1__BulkCheckResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__BulkCheckResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__BulkCheckResponse, sizeof(_ns1__BulkCheckResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__BulkCheckResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__BulkCheckResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_BulkCheckResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_BulkCheckResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__BulkCheckResponse_BulkCheckResult(soap, "ns1:BulkCheckResult", &(a->_ns1__BulkCheckResponse::BulkCheckResult), ""))
				{	soap_flag_BulkCheckResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:BulkCheckResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__BulkCheckResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__BulkCheckResponse, 0, sizeof(_ns1__BulkCheckResponse), 0, soap_copy__ns1__BulkCheckResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__BulkCheckResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__BulkCheckResponse);
	if (this->soap_out(soap, tag?tag:"ns1:BulkCheckResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__BulkCheckResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__BulkCheckResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__BulkCheckResponse * SOAP_FMAC4 soap_get__ns1__BulkCheckResponse(struct soap *soap, _ns1__BulkCheckResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__BulkCheckResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__BulkCheckResponse * SOAP_FMAC2 soap_instantiate__ns1__BulkCheckResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__BulkCheckResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__BulkCheckResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__BulkCheckResponse);
		if (size)
			*size = sizeof(_ns1__BulkCheckResponse);
		((_ns1__BulkCheckResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__BulkCheckResponse, n);
		if (size)
			*size = n * sizeof(_ns1__BulkCheckResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__BulkCheckResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__BulkCheckResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__BulkCheckResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__BulkCheckResponse %p -> %p\n", q, p));
	*(_ns1__BulkCheckResponse*)p = *(_ns1__BulkCheckResponse*)q;
}

void _ns1__BulkCheck::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__BulkCheck::dsCouponPin = NULL;
	/* transient soap skipped */
}

void _ns1__BulkCheck::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__BulkCheck_dsCouponPin(soap, &this->_ns1__BulkCheck::dsCouponPin);
	/* transient soap skipped */
#endif
}

int _ns1__BulkCheck::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__BulkCheck(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__BulkCheck(struct soap *soap, const char *tag, int id, const _ns1__BulkCheck *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__BulkCheck), type))
		return soap->error;
	if (soap_out_PointerTo_ns1__BulkCheck_dsCouponPin(soap, "ns1:dsCouponPin", -1, &(a->_ns1__BulkCheck::dsCouponPin), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__BulkCheck::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__BulkCheck(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__BulkCheck * SOAP_FMAC4 soap_in__ns1__BulkCheck(struct soap *soap, const char *tag, _ns1__BulkCheck *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__BulkCheck *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__BulkCheck, sizeof(_ns1__BulkCheck), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__BulkCheck)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__BulkCheck *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_dsCouponPin1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_dsCouponPin1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__BulkCheck_dsCouponPin(soap, "ns1:dsCouponPin", &(a->_ns1__BulkCheck::dsCouponPin), ""))
				{	soap_flag_dsCouponPin1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__BulkCheck *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__BulkCheck, 0, sizeof(_ns1__BulkCheck), 0, soap_copy__ns1__BulkCheck);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__BulkCheck::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__BulkCheck);
	if (this->soap_out(soap, tag?tag:"ns1:BulkCheck", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__BulkCheck::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__BulkCheck(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__BulkCheck * SOAP_FMAC4 soap_get__ns1__BulkCheck(struct soap *soap, _ns1__BulkCheck *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__BulkCheck(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__BulkCheck * SOAP_FMAC2 soap_instantiate__ns1__BulkCheck(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__BulkCheck(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__BulkCheck, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__BulkCheck);
		if (size)
			*size = sizeof(_ns1__BulkCheck);
		((_ns1__BulkCheck*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__BulkCheck, n);
		if (size)
			*size = n * sizeof(_ns1__BulkCheck);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__BulkCheck*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__BulkCheck*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__BulkCheck(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__BulkCheck %p -> %p\n", q, p));
	*(_ns1__BulkCheck*)p = *(_ns1__BulkCheck*)q;
}

void _ns1__UseItemCouponOLDResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__UseItemCouponOLDResponse::UseItemCouponOLDResult);
	soap_default_int(soap, &this->_ns1__UseItemCouponOLDResponse::outContractDetailNo);
	/* transient soap skipped */
}

void _ns1__UseItemCouponOLDResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__UseItemCouponOLDResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__UseItemCouponOLDResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UseItemCouponOLDResponse(struct soap *soap, const char *tag, int id, const _ns1__UseItemCouponOLDResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__UseItemCouponOLDResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:UseItemCouponOLDResult");
	if (soap_out_int(soap, "ns1:UseItemCouponOLDResult", -1, &(a->_ns1__UseItemCouponOLDResponse::UseItemCouponOLDResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outContractDetailNo", -1, &(a->_ns1__UseItemCouponOLDResponse::outContractDetailNo), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__UseItemCouponOLDResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__UseItemCouponOLDResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__UseItemCouponOLDResponse * SOAP_FMAC4 soap_in__ns1__UseItemCouponOLDResponse(struct soap *soap, const char *tag, _ns1__UseItemCouponOLDResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__UseItemCouponOLDResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__UseItemCouponOLDResponse, sizeof(_ns1__UseItemCouponOLDResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__UseItemCouponOLDResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__UseItemCouponOLDResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_UseItemCouponOLDResult1 = 1;
	size_t soap_flag_outContractDetailNo1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_UseItemCouponOLDResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:UseItemCouponOLDResult", &(a->_ns1__UseItemCouponOLDResponse::UseItemCouponOLDResult), "xsd:int"))
				{	soap_flag_UseItemCouponOLDResult1--;
					continue;
				}
			if (soap_flag_outContractDetailNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outContractDetailNo", &(a->_ns1__UseItemCouponOLDResponse::outContractDetailNo), "xsd:int"))
				{	soap_flag_outContractDetailNo1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:UseItemCouponOLDResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__UseItemCouponOLDResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__UseItemCouponOLDResponse, 0, sizeof(_ns1__UseItemCouponOLDResponse), 0, soap_copy__ns1__UseItemCouponOLDResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_UseItemCouponOLDResult1 > 0 || soap_flag_outContractDetailNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__UseItemCouponOLDResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__UseItemCouponOLDResponse);
	if (this->soap_out(soap, tag?tag:"ns1:UseItemCouponOLDResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__UseItemCouponOLDResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__UseItemCouponOLDResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__UseItemCouponOLDResponse * SOAP_FMAC4 soap_get__ns1__UseItemCouponOLDResponse(struct soap *soap, _ns1__UseItemCouponOLDResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__UseItemCouponOLDResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__UseItemCouponOLDResponse * SOAP_FMAC2 soap_instantiate__ns1__UseItemCouponOLDResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__UseItemCouponOLDResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__UseItemCouponOLDResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__UseItemCouponOLDResponse);
		if (size)
			*size = sizeof(_ns1__UseItemCouponOLDResponse);
		((_ns1__UseItemCouponOLDResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__UseItemCouponOLDResponse, n);
		if (size)
			*size = n * sizeof(_ns1__UseItemCouponOLDResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__UseItemCouponOLDResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__UseItemCouponOLDResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UseItemCouponOLDResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__UseItemCouponOLDResponse %p -> %p\n", q, p));
	*(_ns1__UseItemCouponOLDResponse*)p = *(_ns1__UseItemCouponOLDResponse*)q;
}

void _ns1__UseItemCouponOLD::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__UseItemCouponOLD::couponPin = NULL;
	this->_ns1__UseItemCouponOLD::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__UseItemCouponOLD::isCafe);
	/* transient soap skipped */
}

void _ns1__UseItemCouponOLD::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseItemCouponOLD::couponPin);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseItemCouponOLD::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__UseItemCouponOLD::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__UseItemCouponOLD(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UseItemCouponOLD(struct soap *soap, const char *tag, int id, const _ns1__UseItemCouponOLD *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__UseItemCouponOLD), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponPin", -1, &(a->_ns1__UseItemCouponOLD::couponPin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__UseItemCouponOLD::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__UseItemCouponOLD::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__UseItemCouponOLD::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__UseItemCouponOLD(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__UseItemCouponOLD * SOAP_FMAC4 soap_in__ns1__UseItemCouponOLD(struct soap *soap, const char *tag, _ns1__UseItemCouponOLD *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__UseItemCouponOLD *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__UseItemCouponOLD, sizeof(_ns1__UseItemCouponOLD), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__UseItemCouponOLD)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__UseItemCouponOLD *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_couponPin1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_couponPin1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponPin", &(a->_ns1__UseItemCouponOLD::couponPin), "xsd:string"))
				{	soap_flag_couponPin1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__UseItemCouponOLD::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__UseItemCouponOLD::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__UseItemCouponOLD *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__UseItemCouponOLD, 0, sizeof(_ns1__UseItemCouponOLD), 0, soap_copy__ns1__UseItemCouponOLD);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__UseItemCouponOLD::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__UseItemCouponOLD);
	if (this->soap_out(soap, tag?tag:"ns1:UseItemCouponOLD", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__UseItemCouponOLD::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__UseItemCouponOLD(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__UseItemCouponOLD * SOAP_FMAC4 soap_get__ns1__UseItemCouponOLD(struct soap *soap, _ns1__UseItemCouponOLD *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__UseItemCouponOLD(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__UseItemCouponOLD * SOAP_FMAC2 soap_instantiate__ns1__UseItemCouponOLD(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__UseItemCouponOLD(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__UseItemCouponOLD, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__UseItemCouponOLD);
		if (size)
			*size = sizeof(_ns1__UseItemCouponOLD);
		((_ns1__UseItemCouponOLD*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__UseItemCouponOLD, n);
		if (size)
			*size = n * sizeof(_ns1__UseItemCouponOLD);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__UseItemCouponOLD*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__UseItemCouponOLD*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UseItemCouponOLD(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__UseItemCouponOLD %p -> %p\n", q, p));
	*(_ns1__UseItemCouponOLD*)p = *(_ns1__UseItemCouponOLD*)q;
}

void _ns1__CheckItemCouponOLDResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckItemCouponOLDResponse::CheckItemCouponOLDResult);
	soap_default_int(soap, &this->_ns1__CheckItemCouponOLDResponse::outContractDetailNo);
	/* transient soap skipped */
}

void _ns1__CheckItemCouponOLDResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__CheckItemCouponOLDResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckItemCouponOLDResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckItemCouponOLDResponse(struct soap *soap, const char *tag, int id, const _ns1__CheckItemCouponOLDResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckItemCouponOLDResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:CheckItemCouponOLDResult");
	if (soap_out_int(soap, "ns1:CheckItemCouponOLDResult", -1, &(a->_ns1__CheckItemCouponOLDResponse::CheckItemCouponOLDResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outContractDetailNo", -1, &(a->_ns1__CheckItemCouponOLDResponse::outContractDetailNo), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckItemCouponOLDResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckItemCouponOLDResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponOLDResponse * SOAP_FMAC4 soap_in__ns1__CheckItemCouponOLDResponse(struct soap *soap, const char *tag, _ns1__CheckItemCouponOLDResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckItemCouponOLDResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckItemCouponOLDResponse, sizeof(_ns1__CheckItemCouponOLDResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckItemCouponOLDResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckItemCouponOLDResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_CheckItemCouponOLDResult1 = 1;
	size_t soap_flag_outContractDetailNo1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_CheckItemCouponOLDResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:CheckItemCouponOLDResult", &(a->_ns1__CheckItemCouponOLDResponse::CheckItemCouponOLDResult), "xsd:int"))
				{	soap_flag_CheckItemCouponOLDResult1--;
					continue;
				}
			if (soap_flag_outContractDetailNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outContractDetailNo", &(a->_ns1__CheckItemCouponOLDResponse::outContractDetailNo), "xsd:int"))
				{	soap_flag_outContractDetailNo1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:CheckItemCouponOLDResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckItemCouponOLDResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckItemCouponOLDResponse, 0, sizeof(_ns1__CheckItemCouponOLDResponse), 0, soap_copy__ns1__CheckItemCouponOLDResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_CheckItemCouponOLDResult1 > 0 || soap_flag_outContractDetailNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckItemCouponOLDResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckItemCouponOLDResponse);
	if (this->soap_out(soap, tag?tag:"ns1:CheckItemCouponOLDResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckItemCouponOLDResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckItemCouponOLDResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponOLDResponse * SOAP_FMAC4 soap_get__ns1__CheckItemCouponOLDResponse(struct soap *soap, _ns1__CheckItemCouponOLDResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckItemCouponOLDResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckItemCouponOLDResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckItemCouponOLDResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckItemCouponOLDResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckItemCouponOLDResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckItemCouponOLDResponse);
		if (size)
			*size = sizeof(_ns1__CheckItemCouponOLDResponse);
		((_ns1__CheckItemCouponOLDResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckItemCouponOLDResponse, n);
		if (size)
			*size = n * sizeof(_ns1__CheckItemCouponOLDResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckItemCouponOLDResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckItemCouponOLDResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckItemCouponOLDResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckItemCouponOLDResponse %p -> %p\n", q, p));
	*(_ns1__CheckItemCouponOLDResponse*)p = *(_ns1__CheckItemCouponOLDResponse*)q;
}

void _ns1__CheckItemCouponOLD::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__CheckItemCouponOLD::couponPin = NULL;
	this->_ns1__CheckItemCouponOLD::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__CheckItemCouponOLD::isCafe);
	/* transient soap skipped */
}

void _ns1__CheckItemCouponOLD::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckItemCouponOLD::couponPin);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckItemCouponOLD::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__CheckItemCouponOLD::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckItemCouponOLD(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckItemCouponOLD(struct soap *soap, const char *tag, int id, const _ns1__CheckItemCouponOLD *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckItemCouponOLD), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponPin", -1, &(a->_ns1__CheckItemCouponOLD::couponPin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__CheckItemCouponOLD::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__CheckItemCouponOLD::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckItemCouponOLD::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckItemCouponOLD(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponOLD * SOAP_FMAC4 soap_in__ns1__CheckItemCouponOLD(struct soap *soap, const char *tag, _ns1__CheckItemCouponOLD *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckItemCouponOLD *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckItemCouponOLD, sizeof(_ns1__CheckItemCouponOLD), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckItemCouponOLD)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckItemCouponOLD *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_couponPin1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_couponPin1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponPin", &(a->_ns1__CheckItemCouponOLD::couponPin), "xsd:string"))
				{	soap_flag_couponPin1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__CheckItemCouponOLD::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__CheckItemCouponOLD::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckItemCouponOLD *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckItemCouponOLD, 0, sizeof(_ns1__CheckItemCouponOLD), 0, soap_copy__ns1__CheckItemCouponOLD);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckItemCouponOLD::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckItemCouponOLD);
	if (this->soap_out(soap, tag?tag:"ns1:CheckItemCouponOLD", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckItemCouponOLD::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckItemCouponOLD(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponOLD * SOAP_FMAC4 soap_get__ns1__CheckItemCouponOLD(struct soap *soap, _ns1__CheckItemCouponOLD *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckItemCouponOLD(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckItemCouponOLD * SOAP_FMAC2 soap_instantiate__ns1__CheckItemCouponOLD(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckItemCouponOLD(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckItemCouponOLD, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckItemCouponOLD);
		if (size)
			*size = sizeof(_ns1__CheckItemCouponOLD);
		((_ns1__CheckItemCouponOLD*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckItemCouponOLD, n);
		if (size)
			*size = n * sizeof(_ns1__CheckItemCouponOLD);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckItemCouponOLD*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckItemCouponOLD*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckItemCouponOLD(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckItemCouponOLD %p -> %p\n", q, p));
	*(_ns1__CheckItemCouponOLD*)p = *(_ns1__CheckItemCouponOLD*)q;
}

void _ns1__RollbackItemCouponResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__RollbackItemCouponResponse::RollbackItemCouponResult);
	soap_default_int(soap, &this->_ns1__RollbackItemCouponResponse::outApprovalNo);
	this->_ns1__RollbackItemCouponResponse::outApprovalDatetime = NULL;
	/* transient soap skipped */
}

void _ns1__RollbackItemCouponResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackItemCouponResponse::outApprovalDatetime);
	/* transient soap skipped */
#endif
}

int _ns1__RollbackItemCouponResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__RollbackItemCouponResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RollbackItemCouponResponse(struct soap *soap, const char *tag, int id, const _ns1__RollbackItemCouponResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__RollbackItemCouponResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:RollbackItemCouponResult");
	if (soap_out_int(soap, "ns1:RollbackItemCouponResult", -1, &(a->_ns1__RollbackItemCouponResponse::RollbackItemCouponResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__RollbackItemCouponResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__RollbackItemCouponResponse::outApprovalDatetime), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__RollbackItemCouponResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__RollbackItemCouponResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__RollbackItemCouponResponse * SOAP_FMAC4 soap_in__ns1__RollbackItemCouponResponse(struct soap *soap, const char *tag, _ns1__RollbackItemCouponResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__RollbackItemCouponResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__RollbackItemCouponResponse, sizeof(_ns1__RollbackItemCouponResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__RollbackItemCouponResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__RollbackItemCouponResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_RollbackItemCouponResult1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_RollbackItemCouponResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:RollbackItemCouponResult", &(a->_ns1__RollbackItemCouponResponse::RollbackItemCouponResult), "xsd:int"))
				{	soap_flag_RollbackItemCouponResult1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__RollbackItemCouponResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__RollbackItemCouponResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:RollbackItemCouponResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__RollbackItemCouponResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__RollbackItemCouponResponse, 0, sizeof(_ns1__RollbackItemCouponResponse), 0, soap_copy__ns1__RollbackItemCouponResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_RollbackItemCouponResult1 > 0 || soap_flag_outApprovalNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__RollbackItemCouponResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__RollbackItemCouponResponse);
	if (this->soap_out(soap, tag?tag:"ns1:RollbackItemCouponResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__RollbackItemCouponResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__RollbackItemCouponResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__RollbackItemCouponResponse * SOAP_FMAC4 soap_get__ns1__RollbackItemCouponResponse(struct soap *soap, _ns1__RollbackItemCouponResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__RollbackItemCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__RollbackItemCouponResponse * SOAP_FMAC2 soap_instantiate__ns1__RollbackItemCouponResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__RollbackItemCouponResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__RollbackItemCouponResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__RollbackItemCouponResponse);
		if (size)
			*size = sizeof(_ns1__RollbackItemCouponResponse);
		((_ns1__RollbackItemCouponResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__RollbackItemCouponResponse, n);
		if (size)
			*size = n * sizeof(_ns1__RollbackItemCouponResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__RollbackItemCouponResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__RollbackItemCouponResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RollbackItemCouponResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__RollbackItemCouponResponse %p -> %p\n", q, p));
	*(_ns1__RollbackItemCouponResponse*)p = *(_ns1__RollbackItemCouponResponse*)q;
}

void _ns1__RollbackItemCoupon::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__RollbackItemCoupon::sourceApprovalNo);
	this->_ns1__RollbackItemCoupon::orderId = NULL;
	this->_ns1__RollbackItemCoupon::sourceOrderId = NULL;
	this->_ns1__RollbackItemCoupon::orderDateTime = NULL;
	this->_ns1__RollbackItemCoupon::couponPin = NULL;
	this->_ns1__RollbackItemCoupon::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__RollbackItemCoupon::oidUser);
	this->_ns1__RollbackItemCoupon::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__RollbackItemCoupon::isCafe);
	/* transient soap skipped */
}

void _ns1__RollbackItemCoupon::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackItemCoupon::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackItemCoupon::sourceOrderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackItemCoupon::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackItemCoupon::couponPin);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackItemCoupon::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackItemCoupon::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__RollbackItemCoupon::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__RollbackItemCoupon(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RollbackItemCoupon(struct soap *soap, const char *tag, int id, const _ns1__RollbackItemCoupon *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__RollbackItemCoupon), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:sourceApprovalNo", -1, &(a->_ns1__RollbackItemCoupon::sourceApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__RollbackItemCoupon::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:sourceOrderId", -1, &(a->_ns1__RollbackItemCoupon::sourceOrderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__RollbackItemCoupon::orderDateTime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponPin", -1, &(a->_ns1__RollbackItemCoupon::couponPin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__RollbackItemCoupon::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__RollbackItemCoupon::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__RollbackItemCoupon::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__RollbackItemCoupon::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__RollbackItemCoupon::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__RollbackItemCoupon(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__RollbackItemCoupon * SOAP_FMAC4 soap_in__ns1__RollbackItemCoupon(struct soap *soap, const char *tag, _ns1__RollbackItemCoupon *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__RollbackItemCoupon *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__RollbackItemCoupon, sizeof(_ns1__RollbackItemCoupon), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__RollbackItemCoupon)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__RollbackItemCoupon *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_sourceApprovalNo1 = 1;
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_sourceOrderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponPin1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_sourceApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:sourceApprovalNo", &(a->_ns1__RollbackItemCoupon::sourceApprovalNo), "xsd:int"))
				{	soap_flag_sourceApprovalNo1--;
					continue;
				}
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__RollbackItemCoupon::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_sourceOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:sourceOrderId", &(a->_ns1__RollbackItemCoupon::sourceOrderId), "xsd:string"))
				{	soap_flag_sourceOrderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__RollbackItemCoupon::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponPin1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponPin", &(a->_ns1__RollbackItemCoupon::couponPin), "xsd:string"))
				{	soap_flag_couponPin1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__RollbackItemCoupon::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__RollbackItemCoupon::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__RollbackItemCoupon::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__RollbackItemCoupon::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__RollbackItemCoupon *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__RollbackItemCoupon, 0, sizeof(_ns1__RollbackItemCoupon), 0, soap_copy__ns1__RollbackItemCoupon);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_sourceApprovalNo1 > 0 || soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__RollbackItemCoupon::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__RollbackItemCoupon);
	if (this->soap_out(soap, tag?tag:"ns1:RollbackItemCoupon", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__RollbackItemCoupon::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__RollbackItemCoupon(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__RollbackItemCoupon * SOAP_FMAC4 soap_get__ns1__RollbackItemCoupon(struct soap *soap, _ns1__RollbackItemCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__RollbackItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__RollbackItemCoupon * SOAP_FMAC2 soap_instantiate__ns1__RollbackItemCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__RollbackItemCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__RollbackItemCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__RollbackItemCoupon);
		if (size)
			*size = sizeof(_ns1__RollbackItemCoupon);
		((_ns1__RollbackItemCoupon*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__RollbackItemCoupon, n);
		if (size)
			*size = n * sizeof(_ns1__RollbackItemCoupon);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__RollbackItemCoupon*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__RollbackItemCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RollbackItemCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__RollbackItemCoupon %p -> %p\n", q, p));
	*(_ns1__RollbackItemCoupon*)p = *(_ns1__RollbackItemCoupon*)q;
}

void _ns1__UseItemCouponResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__UseItemCouponResponse::UseItemCouponResult);
	soap_default_int(soap, &this->_ns1__UseItemCouponResponse::outApprovalNo);
	this->_ns1__UseItemCouponResponse::outApprovalDatetime = NULL;
	soap_default_int(soap, &this->_ns1__UseItemCouponResponse::outContractDetailNo);
	this->_ns1__UseItemCouponResponse::outItemList = NULL;
	/* transient soap skipped */
}

void _ns1__UseItemCouponResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseItemCouponResponse::outApprovalDatetime);
	soap_serialize_PointerTons1__ArrayOfItemEntity(soap, &this->_ns1__UseItemCouponResponse::outItemList);
	/* transient soap skipped */
#endif
}

int _ns1__UseItemCouponResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__UseItemCouponResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UseItemCouponResponse(struct soap *soap, const char *tag, int id, const _ns1__UseItemCouponResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__UseItemCouponResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:UseItemCouponResult");
	if (soap_out_int(soap, "ns1:UseItemCouponResult", -1, &(a->_ns1__UseItemCouponResponse::UseItemCouponResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__UseItemCouponResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__UseItemCouponResponse::outApprovalDatetime), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outContractDetailNo", -1, &(a->_ns1__UseItemCouponResponse::outContractDetailNo), ""))
		return soap->error;
	if (soap_out_PointerTons1__ArrayOfItemEntity(soap, "ns1:outItemList", -1, &(a->_ns1__UseItemCouponResponse::outItemList), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__UseItemCouponResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__UseItemCouponResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__UseItemCouponResponse * SOAP_FMAC4 soap_in__ns1__UseItemCouponResponse(struct soap *soap, const char *tag, _ns1__UseItemCouponResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__UseItemCouponResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__UseItemCouponResponse, sizeof(_ns1__UseItemCouponResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__UseItemCouponResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__UseItemCouponResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_UseItemCouponResult1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	size_t soap_flag_outContractDetailNo1 = 1;
	size_t soap_flag_outItemList1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_UseItemCouponResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:UseItemCouponResult", &(a->_ns1__UseItemCouponResponse::UseItemCouponResult), "xsd:int"))
				{	soap_flag_UseItemCouponResult1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__UseItemCouponResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__UseItemCouponResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			if (soap_flag_outContractDetailNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outContractDetailNo", &(a->_ns1__UseItemCouponResponse::outContractDetailNo), "xsd:int"))
				{	soap_flag_outContractDetailNo1--;
					continue;
				}
			if (soap_flag_outItemList1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfItemEntity(soap, "ns1:outItemList", &(a->_ns1__UseItemCouponResponse::outItemList), "ns1:ArrayOfItemEntity"))
				{	soap_flag_outItemList1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:UseItemCouponResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__UseItemCouponResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__UseItemCouponResponse, 0, sizeof(_ns1__UseItemCouponResponse), 0, soap_copy__ns1__UseItemCouponResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_UseItemCouponResult1 > 0 || soap_flag_outApprovalNo1 > 0 || soap_flag_outContractDetailNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__UseItemCouponResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__UseItemCouponResponse);
	if (this->soap_out(soap, tag?tag:"ns1:UseItemCouponResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__UseItemCouponResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__UseItemCouponResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__UseItemCouponResponse * SOAP_FMAC4 soap_get__ns1__UseItemCouponResponse(struct soap *soap, _ns1__UseItemCouponResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__UseItemCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__UseItemCouponResponse * SOAP_FMAC2 soap_instantiate__ns1__UseItemCouponResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__UseItemCouponResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__UseItemCouponResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__UseItemCouponResponse);
		if (size)
			*size = sizeof(_ns1__UseItemCouponResponse);
		((_ns1__UseItemCouponResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__UseItemCouponResponse, n);
		if (size)
			*size = n * sizeof(_ns1__UseItemCouponResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__UseItemCouponResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__UseItemCouponResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UseItemCouponResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__UseItemCouponResponse %p -> %p\n", q, p));
	*(_ns1__UseItemCouponResponse*)p = *(_ns1__UseItemCouponResponse*)q;
}

void _ns1__UseItemCoupon::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__UseItemCoupon::orderId = NULL;
	this->_ns1__UseItemCoupon::orderDateTime = NULL;
	this->_ns1__UseItemCoupon::couponPin = NULL;
	this->_ns1__UseItemCoupon::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__UseItemCoupon::oidUser);
	this->_ns1__UseItemCoupon::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__UseItemCoupon::isCafe);
	/* transient soap skipped */
}

void _ns1__UseItemCoupon::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseItemCoupon::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseItemCoupon::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseItemCoupon::couponPin);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseItemCoupon::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseItemCoupon::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__UseItemCoupon::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__UseItemCoupon(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UseItemCoupon(struct soap *soap, const char *tag, int id, const _ns1__UseItemCoupon *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__UseItemCoupon), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__UseItemCoupon::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__UseItemCoupon::orderDateTime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponPin", -1, &(a->_ns1__UseItemCoupon::couponPin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__UseItemCoupon::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__UseItemCoupon::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__UseItemCoupon::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__UseItemCoupon::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__UseItemCoupon::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__UseItemCoupon(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__UseItemCoupon * SOAP_FMAC4 soap_in__ns1__UseItemCoupon(struct soap *soap, const char *tag, _ns1__UseItemCoupon *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__UseItemCoupon *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__UseItemCoupon, sizeof(_ns1__UseItemCoupon), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__UseItemCoupon)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__UseItemCoupon *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponPin1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__UseItemCoupon::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__UseItemCoupon::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponPin1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponPin", &(a->_ns1__UseItemCoupon::couponPin), "xsd:string"))
				{	soap_flag_couponPin1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__UseItemCoupon::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__UseItemCoupon::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__UseItemCoupon::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__UseItemCoupon::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__UseItemCoupon *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__UseItemCoupon, 0, sizeof(_ns1__UseItemCoupon), 0, soap_copy__ns1__UseItemCoupon);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__UseItemCoupon::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__UseItemCoupon);
	if (this->soap_out(soap, tag?tag:"ns1:UseItemCoupon", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__UseItemCoupon::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__UseItemCoupon(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__UseItemCoupon * SOAP_FMAC4 soap_get__ns1__UseItemCoupon(struct soap *soap, _ns1__UseItemCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__UseItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__UseItemCoupon * SOAP_FMAC2 soap_instantiate__ns1__UseItemCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__UseItemCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__UseItemCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__UseItemCoupon);
		if (size)
			*size = sizeof(_ns1__UseItemCoupon);
		((_ns1__UseItemCoupon*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__UseItemCoupon, n);
		if (size)
			*size = n * sizeof(_ns1__UseItemCoupon);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__UseItemCoupon*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__UseItemCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UseItemCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__UseItemCoupon %p -> %p\n", q, p));
	*(_ns1__UseItemCoupon*)p = *(_ns1__UseItemCoupon*)q;
}

void _ns1__CheckItemCouponResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckItemCouponResponse::CheckItemCouponResult);
	soap_default_int(soap, &this->_ns1__CheckItemCouponResponse::outContractDetailNo);
	this->_ns1__CheckItemCouponResponse::outItemList = NULL;
	/* transient soap skipped */
}

void _ns1__CheckItemCouponResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ArrayOfItemEntity(soap, &this->_ns1__CheckItemCouponResponse::outItemList);
	/* transient soap skipped */
#endif
}

int _ns1__CheckItemCouponResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckItemCouponResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckItemCouponResponse(struct soap *soap, const char *tag, int id, const _ns1__CheckItemCouponResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckItemCouponResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:CheckItemCouponResult");
	if (soap_out_int(soap, "ns1:CheckItemCouponResult", -1, &(a->_ns1__CheckItemCouponResponse::CheckItemCouponResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outContractDetailNo", -1, &(a->_ns1__CheckItemCouponResponse::outContractDetailNo), ""))
		return soap->error;
	if (soap_out_PointerTons1__ArrayOfItemEntity(soap, "ns1:outItemList", -1, &(a->_ns1__CheckItemCouponResponse::outItemList), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckItemCouponResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckItemCouponResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponResponse * SOAP_FMAC4 soap_in__ns1__CheckItemCouponResponse(struct soap *soap, const char *tag, _ns1__CheckItemCouponResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckItemCouponResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckItemCouponResponse, sizeof(_ns1__CheckItemCouponResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckItemCouponResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckItemCouponResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_CheckItemCouponResult1 = 1;
	size_t soap_flag_outContractDetailNo1 = 1;
	size_t soap_flag_outItemList1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_CheckItemCouponResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:CheckItemCouponResult", &(a->_ns1__CheckItemCouponResponse::CheckItemCouponResult), "xsd:int"))
				{	soap_flag_CheckItemCouponResult1--;
					continue;
				}
			if (soap_flag_outContractDetailNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outContractDetailNo", &(a->_ns1__CheckItemCouponResponse::outContractDetailNo), "xsd:int"))
				{	soap_flag_outContractDetailNo1--;
					continue;
				}
			if (soap_flag_outItemList1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfItemEntity(soap, "ns1:outItemList", &(a->_ns1__CheckItemCouponResponse::outItemList), "ns1:ArrayOfItemEntity"))
				{	soap_flag_outItemList1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:CheckItemCouponResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckItemCouponResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckItemCouponResponse, 0, sizeof(_ns1__CheckItemCouponResponse), 0, soap_copy__ns1__CheckItemCouponResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_CheckItemCouponResult1 > 0 || soap_flag_outContractDetailNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckItemCouponResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckItemCouponResponse);
	if (this->soap_out(soap, tag?tag:"ns1:CheckItemCouponResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckItemCouponResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckItemCouponResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponResponse * SOAP_FMAC4 soap_get__ns1__CheckItemCouponResponse(struct soap *soap, _ns1__CheckItemCouponResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckItemCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckItemCouponResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckItemCouponResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckItemCouponResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckItemCouponResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckItemCouponResponse);
		if (size)
			*size = sizeof(_ns1__CheckItemCouponResponse);
		((_ns1__CheckItemCouponResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckItemCouponResponse, n);
		if (size)
			*size = n * sizeof(_ns1__CheckItemCouponResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckItemCouponResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckItemCouponResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckItemCouponResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckItemCouponResponse %p -> %p\n", q, p));
	*(_ns1__CheckItemCouponResponse*)p = *(_ns1__CheckItemCouponResponse*)q;
}

void _ns1__CheckItemCoupon::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__CheckItemCoupon::couponPin = NULL;
	this->_ns1__CheckItemCoupon::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__CheckItemCoupon::oidUser);
	this->_ns1__CheckItemCoupon::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__CheckItemCoupon::isCafe);
	/* transient soap skipped */
}

void _ns1__CheckItemCoupon::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckItemCoupon::couponPin);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckItemCoupon::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckItemCoupon::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__CheckItemCoupon::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckItemCoupon(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckItemCoupon(struct soap *soap, const char *tag, int id, const _ns1__CheckItemCoupon *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckItemCoupon), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponPin", -1, &(a->_ns1__CheckItemCoupon::couponPin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__CheckItemCoupon::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__CheckItemCoupon::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__CheckItemCoupon::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__CheckItemCoupon::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckItemCoupon::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckItemCoupon(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckItemCoupon * SOAP_FMAC4 soap_in__ns1__CheckItemCoupon(struct soap *soap, const char *tag, _ns1__CheckItemCoupon *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckItemCoupon *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckItemCoupon, sizeof(_ns1__CheckItemCoupon), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckItemCoupon)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckItemCoupon *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_couponPin1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_couponPin1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponPin", &(a->_ns1__CheckItemCoupon::couponPin), "xsd:string"))
				{	soap_flag_couponPin1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__CheckItemCoupon::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__CheckItemCoupon::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__CheckItemCoupon::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__CheckItemCoupon::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckItemCoupon *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckItemCoupon, 0, sizeof(_ns1__CheckItemCoupon), 0, soap_copy__ns1__CheckItemCoupon);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckItemCoupon::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckItemCoupon);
	if (this->soap_out(soap, tag?tag:"ns1:CheckItemCoupon", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckItemCoupon::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckItemCoupon(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckItemCoupon * SOAP_FMAC4 soap_get__ns1__CheckItemCoupon(struct soap *soap, _ns1__CheckItemCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckItemCoupon * SOAP_FMAC2 soap_instantiate__ns1__CheckItemCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckItemCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckItemCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckItemCoupon);
		if (size)
			*size = sizeof(_ns1__CheckItemCoupon);
		((_ns1__CheckItemCoupon*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckItemCoupon, n);
		if (size)
			*size = n * sizeof(_ns1__CheckItemCoupon);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckItemCoupon*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckItemCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckItemCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckItemCoupon %p -> %p\n", q, p));
	*(_ns1__CheckItemCoupon*)p = *(_ns1__CheckItemCoupon*)q;
}

void _ns1__RollbackItemCouponFromCouponBoxResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__RollbackItemCouponFromCouponBoxResponse::RollbackItemCouponFromCouponBoxResult);
	soap_default_int(soap, &this->_ns1__RollbackItemCouponFromCouponBoxResponse::outApprovalNo);
	this->_ns1__RollbackItemCouponFromCouponBoxResponse::outApprovalDatetime = NULL;
	/* transient soap skipped */
}

void _ns1__RollbackItemCouponFromCouponBoxResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackItemCouponFromCouponBoxResponse::outApprovalDatetime);
	/* transient soap skipped */
#endif
}

int _ns1__RollbackItemCouponFromCouponBoxResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__RollbackItemCouponFromCouponBoxResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RollbackItemCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, const _ns1__RollbackItemCouponFromCouponBoxResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBoxResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:RollbackItemCouponFromCouponBoxResult");
	if (soap_out_int(soap, "ns1:RollbackItemCouponFromCouponBoxResult", -1, &(a->_ns1__RollbackItemCouponFromCouponBoxResponse::RollbackItemCouponFromCouponBoxResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__RollbackItemCouponFromCouponBoxResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__RollbackItemCouponFromCouponBoxResponse::outApprovalDatetime), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__RollbackItemCouponFromCouponBoxResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__RollbackItemCouponFromCouponBoxResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__RollbackItemCouponFromCouponBoxResponse * SOAP_FMAC4 soap_in__ns1__RollbackItemCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__RollbackItemCouponFromCouponBoxResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__RollbackItemCouponFromCouponBoxResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBoxResponse, sizeof(_ns1__RollbackItemCouponFromCouponBoxResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__RollbackItemCouponFromCouponBoxResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__RollbackItemCouponFromCouponBoxResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_RollbackItemCouponFromCouponBoxResult1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_RollbackItemCouponFromCouponBoxResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:RollbackItemCouponFromCouponBoxResult", &(a->_ns1__RollbackItemCouponFromCouponBoxResponse::RollbackItemCouponFromCouponBoxResult), "xsd:int"))
				{	soap_flag_RollbackItemCouponFromCouponBoxResult1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__RollbackItemCouponFromCouponBoxResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__RollbackItemCouponFromCouponBoxResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:RollbackItemCouponFromCouponBoxResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__RollbackItemCouponFromCouponBoxResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBoxResponse, 0, sizeof(_ns1__RollbackItemCouponFromCouponBoxResponse), 0, soap_copy__ns1__RollbackItemCouponFromCouponBoxResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_RollbackItemCouponFromCouponBoxResult1 > 0 || soap_flag_outApprovalNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__RollbackItemCouponFromCouponBoxResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBoxResponse);
	if (this->soap_out(soap, tag?tag:"ns1:RollbackItemCouponFromCouponBoxResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__RollbackItemCouponFromCouponBoxResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__RollbackItemCouponFromCouponBoxResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__RollbackItemCouponFromCouponBoxResponse * SOAP_FMAC4 soap_get__ns1__RollbackItemCouponFromCouponBoxResponse(struct soap *soap, _ns1__RollbackItemCouponFromCouponBoxResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__RollbackItemCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__RollbackItemCouponFromCouponBoxResponse * SOAP_FMAC2 soap_instantiate__ns1__RollbackItemCouponFromCouponBoxResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__RollbackItemCouponFromCouponBoxResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBoxResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__RollbackItemCouponFromCouponBoxResponse);
		if (size)
			*size = sizeof(_ns1__RollbackItemCouponFromCouponBoxResponse);
		((_ns1__RollbackItemCouponFromCouponBoxResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__RollbackItemCouponFromCouponBoxResponse, n);
		if (size)
			*size = n * sizeof(_ns1__RollbackItemCouponFromCouponBoxResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__RollbackItemCouponFromCouponBoxResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__RollbackItemCouponFromCouponBoxResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RollbackItemCouponFromCouponBoxResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__RollbackItemCouponFromCouponBoxResponse %p -> %p\n", q, p));
	*(_ns1__RollbackItemCouponFromCouponBoxResponse*)p = *(_ns1__RollbackItemCouponFromCouponBoxResponse*)q;
}

void _ns1__RollbackItemCouponFromCouponBox::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__RollbackItemCouponFromCouponBox::sourceApprovalNo);
	this->_ns1__RollbackItemCouponFromCouponBox::orderId = NULL;
	this->_ns1__RollbackItemCouponFromCouponBox::sourceOrderId = NULL;
	this->_ns1__RollbackItemCouponFromCouponBox::orderDateTime = NULL;
	soap_default_int(soap, &this->_ns1__RollbackItemCouponFromCouponBox::couponCardNo);
	this->_ns1__RollbackItemCouponFromCouponBox::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__RollbackItemCouponFromCouponBox::oidUser);
	this->_ns1__RollbackItemCouponFromCouponBox::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__RollbackItemCouponFromCouponBox::isCafe);
	/* transient soap skipped */
}

void _ns1__RollbackItemCouponFromCouponBox::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackItemCouponFromCouponBox::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackItemCouponFromCouponBox::sourceOrderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackItemCouponFromCouponBox::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackItemCouponFromCouponBox::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackItemCouponFromCouponBox::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__RollbackItemCouponFromCouponBox::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__RollbackItemCouponFromCouponBox(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RollbackItemCouponFromCouponBox(struct soap *soap, const char *tag, int id, const _ns1__RollbackItemCouponFromCouponBox *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBox), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:sourceApprovalNo", -1, &(a->_ns1__RollbackItemCouponFromCouponBox::sourceApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__RollbackItemCouponFromCouponBox::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:sourceOrderId", -1, &(a->_ns1__RollbackItemCouponFromCouponBox::sourceOrderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__RollbackItemCouponFromCouponBox::orderDateTime), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:couponCardNo", -1, &(a->_ns1__RollbackItemCouponFromCouponBox::couponCardNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__RollbackItemCouponFromCouponBox::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__RollbackItemCouponFromCouponBox::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__RollbackItemCouponFromCouponBox::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__RollbackItemCouponFromCouponBox::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__RollbackItemCouponFromCouponBox::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__RollbackItemCouponFromCouponBox(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__RollbackItemCouponFromCouponBox * SOAP_FMAC4 soap_in__ns1__RollbackItemCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__RollbackItemCouponFromCouponBox *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__RollbackItemCouponFromCouponBox *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBox, sizeof(_ns1__RollbackItemCouponFromCouponBox), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__RollbackItemCouponFromCouponBox)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__RollbackItemCouponFromCouponBox *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_sourceApprovalNo1 = 1;
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_sourceOrderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponCardNo1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_sourceApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:sourceApprovalNo", &(a->_ns1__RollbackItemCouponFromCouponBox::sourceApprovalNo), "xsd:int"))
				{	soap_flag_sourceApprovalNo1--;
					continue;
				}
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__RollbackItemCouponFromCouponBox::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_sourceOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:sourceOrderId", &(a->_ns1__RollbackItemCouponFromCouponBox::sourceOrderId), "xsd:string"))
				{	soap_flag_sourceOrderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__RollbackItemCouponFromCouponBox::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponCardNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:couponCardNo", &(a->_ns1__RollbackItemCouponFromCouponBox::couponCardNo), "xsd:int"))
				{	soap_flag_couponCardNo1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__RollbackItemCouponFromCouponBox::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__RollbackItemCouponFromCouponBox::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__RollbackItemCouponFromCouponBox::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__RollbackItemCouponFromCouponBox::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__RollbackItemCouponFromCouponBox *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBox, 0, sizeof(_ns1__RollbackItemCouponFromCouponBox), 0, soap_copy__ns1__RollbackItemCouponFromCouponBox);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_sourceApprovalNo1 > 0 || soap_flag_couponCardNo1 > 0 || soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__RollbackItemCouponFromCouponBox::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBox);
	if (this->soap_out(soap, tag?tag:"ns1:RollbackItemCouponFromCouponBox", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__RollbackItemCouponFromCouponBox::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__RollbackItemCouponFromCouponBox(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__RollbackItemCouponFromCouponBox * SOAP_FMAC4 soap_get__ns1__RollbackItemCouponFromCouponBox(struct soap *soap, _ns1__RollbackItemCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__RollbackItemCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__RollbackItemCouponFromCouponBox * SOAP_FMAC2 soap_instantiate__ns1__RollbackItemCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__RollbackItemCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__RollbackItemCouponFromCouponBox);
		if (size)
			*size = sizeof(_ns1__RollbackItemCouponFromCouponBox);
		((_ns1__RollbackItemCouponFromCouponBox*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__RollbackItemCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(_ns1__RollbackItemCouponFromCouponBox);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__RollbackItemCouponFromCouponBox*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__RollbackItemCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RollbackItemCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__RollbackItemCouponFromCouponBox %p -> %p\n", q, p));
	*(_ns1__RollbackItemCouponFromCouponBox*)p = *(_ns1__RollbackItemCouponFromCouponBox*)q;
}

void _ns1__UseItemCouponFromCouponBoxResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__UseItemCouponFromCouponBoxResponse::UseItemCouponFromCouponBoxResult);
	soap_default_int(soap, &this->_ns1__UseItemCouponFromCouponBoxResponse::outApprovalNo);
	this->_ns1__UseItemCouponFromCouponBoxResponse::outApprovalDatetime = NULL;
	soap_default_int(soap, &this->_ns1__UseItemCouponFromCouponBoxResponse::outContractDetailNo);
	this->_ns1__UseItemCouponFromCouponBoxResponse::outItemList = NULL;
	/* transient soap skipped */
}

void _ns1__UseItemCouponFromCouponBoxResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseItemCouponFromCouponBoxResponse::outApprovalDatetime);
	soap_serialize_PointerTons1__ArrayOfItemEntity(soap, &this->_ns1__UseItemCouponFromCouponBoxResponse::outItemList);
	/* transient soap skipped */
#endif
}

int _ns1__UseItemCouponFromCouponBoxResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__UseItemCouponFromCouponBoxResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UseItemCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, const _ns1__UseItemCouponFromCouponBoxResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__UseItemCouponFromCouponBoxResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:UseItemCouponFromCouponBoxResult");
	if (soap_out_int(soap, "ns1:UseItemCouponFromCouponBoxResult", -1, &(a->_ns1__UseItemCouponFromCouponBoxResponse::UseItemCouponFromCouponBoxResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__UseItemCouponFromCouponBoxResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__UseItemCouponFromCouponBoxResponse::outApprovalDatetime), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outContractDetailNo", -1, &(a->_ns1__UseItemCouponFromCouponBoxResponse::outContractDetailNo), ""))
		return soap->error;
	if (soap_out_PointerTons1__ArrayOfItemEntity(soap, "ns1:outItemList", -1, &(a->_ns1__UseItemCouponFromCouponBoxResponse::outItemList), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__UseItemCouponFromCouponBoxResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__UseItemCouponFromCouponBoxResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__UseItemCouponFromCouponBoxResponse * SOAP_FMAC4 soap_in__ns1__UseItemCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__UseItemCouponFromCouponBoxResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__UseItemCouponFromCouponBoxResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__UseItemCouponFromCouponBoxResponse, sizeof(_ns1__UseItemCouponFromCouponBoxResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__UseItemCouponFromCouponBoxResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__UseItemCouponFromCouponBoxResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_UseItemCouponFromCouponBoxResult1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	size_t soap_flag_outContractDetailNo1 = 1;
	size_t soap_flag_outItemList1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_UseItemCouponFromCouponBoxResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:UseItemCouponFromCouponBoxResult", &(a->_ns1__UseItemCouponFromCouponBoxResponse::UseItemCouponFromCouponBoxResult), "xsd:int"))
				{	soap_flag_UseItemCouponFromCouponBoxResult1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__UseItemCouponFromCouponBoxResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__UseItemCouponFromCouponBoxResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			if (soap_flag_outContractDetailNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outContractDetailNo", &(a->_ns1__UseItemCouponFromCouponBoxResponse::outContractDetailNo), "xsd:int"))
				{	soap_flag_outContractDetailNo1--;
					continue;
				}
			if (soap_flag_outItemList1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfItemEntity(soap, "ns1:outItemList", &(a->_ns1__UseItemCouponFromCouponBoxResponse::outItemList), "ns1:ArrayOfItemEntity"))
				{	soap_flag_outItemList1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:UseItemCouponFromCouponBoxResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__UseItemCouponFromCouponBoxResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__UseItemCouponFromCouponBoxResponse, 0, sizeof(_ns1__UseItemCouponFromCouponBoxResponse), 0, soap_copy__ns1__UseItemCouponFromCouponBoxResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_UseItemCouponFromCouponBoxResult1 > 0 || soap_flag_outApprovalNo1 > 0 || soap_flag_outContractDetailNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__UseItemCouponFromCouponBoxResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__UseItemCouponFromCouponBoxResponse);
	if (this->soap_out(soap, tag?tag:"ns1:UseItemCouponFromCouponBoxResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__UseItemCouponFromCouponBoxResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__UseItemCouponFromCouponBoxResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__UseItemCouponFromCouponBoxResponse * SOAP_FMAC4 soap_get__ns1__UseItemCouponFromCouponBoxResponse(struct soap *soap, _ns1__UseItemCouponFromCouponBoxResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__UseItemCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__UseItemCouponFromCouponBoxResponse * SOAP_FMAC2 soap_instantiate__ns1__UseItemCouponFromCouponBoxResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__UseItemCouponFromCouponBoxResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__UseItemCouponFromCouponBoxResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__UseItemCouponFromCouponBoxResponse);
		if (size)
			*size = sizeof(_ns1__UseItemCouponFromCouponBoxResponse);
		((_ns1__UseItemCouponFromCouponBoxResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__UseItemCouponFromCouponBoxResponse, n);
		if (size)
			*size = n * sizeof(_ns1__UseItemCouponFromCouponBoxResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__UseItemCouponFromCouponBoxResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__UseItemCouponFromCouponBoxResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UseItemCouponFromCouponBoxResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__UseItemCouponFromCouponBoxResponse %p -> %p\n", q, p));
	*(_ns1__UseItemCouponFromCouponBoxResponse*)p = *(_ns1__UseItemCouponFromCouponBoxResponse*)q;
}

void _ns1__UseItemCouponFromCouponBox::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__UseItemCouponFromCouponBox::orderId = NULL;
	this->_ns1__UseItemCouponFromCouponBox::orderDateTime = NULL;
	soap_default_int(soap, &this->_ns1__UseItemCouponFromCouponBox::couponCardNo);
	this->_ns1__UseItemCouponFromCouponBox::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__UseItemCouponFromCouponBox::oidUser);
	this->_ns1__UseItemCouponFromCouponBox::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__UseItemCouponFromCouponBox::isCafe);
	/* transient soap skipped */
}

void _ns1__UseItemCouponFromCouponBox::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseItemCouponFromCouponBox::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseItemCouponFromCouponBox::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseItemCouponFromCouponBox::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseItemCouponFromCouponBox::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__UseItemCouponFromCouponBox::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__UseItemCouponFromCouponBox(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UseItemCouponFromCouponBox(struct soap *soap, const char *tag, int id, const _ns1__UseItemCouponFromCouponBox *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__UseItemCouponFromCouponBox), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__UseItemCouponFromCouponBox::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__UseItemCouponFromCouponBox::orderDateTime), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:couponCardNo", -1, &(a->_ns1__UseItemCouponFromCouponBox::couponCardNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__UseItemCouponFromCouponBox::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__UseItemCouponFromCouponBox::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__UseItemCouponFromCouponBox::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__UseItemCouponFromCouponBox::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__UseItemCouponFromCouponBox::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__UseItemCouponFromCouponBox(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__UseItemCouponFromCouponBox * SOAP_FMAC4 soap_in__ns1__UseItemCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__UseItemCouponFromCouponBox *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__UseItemCouponFromCouponBox *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__UseItemCouponFromCouponBox, sizeof(_ns1__UseItemCouponFromCouponBox), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__UseItemCouponFromCouponBox)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__UseItemCouponFromCouponBox *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponCardNo1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__UseItemCouponFromCouponBox::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__UseItemCouponFromCouponBox::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponCardNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:couponCardNo", &(a->_ns1__UseItemCouponFromCouponBox::couponCardNo), "xsd:int"))
				{	soap_flag_couponCardNo1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__UseItemCouponFromCouponBox::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__UseItemCouponFromCouponBox::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__UseItemCouponFromCouponBox::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__UseItemCouponFromCouponBox::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__UseItemCouponFromCouponBox *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__UseItemCouponFromCouponBox, 0, sizeof(_ns1__UseItemCouponFromCouponBox), 0, soap_copy__ns1__UseItemCouponFromCouponBox);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_couponCardNo1 > 0 || soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__UseItemCouponFromCouponBox::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__UseItemCouponFromCouponBox);
	if (this->soap_out(soap, tag?tag:"ns1:UseItemCouponFromCouponBox", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__UseItemCouponFromCouponBox::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__UseItemCouponFromCouponBox(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__UseItemCouponFromCouponBox * SOAP_FMAC4 soap_get__ns1__UseItemCouponFromCouponBox(struct soap *soap, _ns1__UseItemCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__UseItemCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__UseItemCouponFromCouponBox * SOAP_FMAC2 soap_instantiate__ns1__UseItemCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__UseItemCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__UseItemCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__UseItemCouponFromCouponBox);
		if (size)
			*size = sizeof(_ns1__UseItemCouponFromCouponBox);
		((_ns1__UseItemCouponFromCouponBox*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__UseItemCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(_ns1__UseItemCouponFromCouponBox);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__UseItemCouponFromCouponBox*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__UseItemCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UseItemCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__UseItemCouponFromCouponBox %p -> %p\n", q, p));
	*(_ns1__UseItemCouponFromCouponBox*)p = *(_ns1__UseItemCouponFromCouponBox*)q;
}

void _ns1__CheckItemCouponFromCouponBoxResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckItemCouponFromCouponBoxResponse::CheckItemCouponFromCouponBoxResult);
	soap_default_int(soap, &this->_ns1__CheckItemCouponFromCouponBoxResponse::outContractDetailNo);
	this->_ns1__CheckItemCouponFromCouponBoxResponse::outItemList = NULL;
	/* transient soap skipped */
}

void _ns1__CheckItemCouponFromCouponBoxResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ArrayOfItemEntity(soap, &this->_ns1__CheckItemCouponFromCouponBoxResponse::outItemList);
	/* transient soap skipped */
#endif
}

int _ns1__CheckItemCouponFromCouponBoxResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckItemCouponFromCouponBoxResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckItemCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, const _ns1__CheckItemCouponFromCouponBoxResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckItemCouponFromCouponBoxResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:CheckItemCouponFromCouponBoxResult");
	if (soap_out_int(soap, "ns1:CheckItemCouponFromCouponBoxResult", -1, &(a->_ns1__CheckItemCouponFromCouponBoxResponse::CheckItemCouponFromCouponBoxResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outContractDetailNo", -1, &(a->_ns1__CheckItemCouponFromCouponBoxResponse::outContractDetailNo), ""))
		return soap->error;
	if (soap_out_PointerTons1__ArrayOfItemEntity(soap, "ns1:outItemList", -1, &(a->_ns1__CheckItemCouponFromCouponBoxResponse::outItemList), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckItemCouponFromCouponBoxResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckItemCouponFromCouponBoxResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponFromCouponBoxResponse * SOAP_FMAC4 soap_in__ns1__CheckItemCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__CheckItemCouponFromCouponBoxResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckItemCouponFromCouponBoxResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckItemCouponFromCouponBoxResponse, sizeof(_ns1__CheckItemCouponFromCouponBoxResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckItemCouponFromCouponBoxResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckItemCouponFromCouponBoxResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_CheckItemCouponFromCouponBoxResult1 = 1;
	size_t soap_flag_outContractDetailNo1 = 1;
	size_t soap_flag_outItemList1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_CheckItemCouponFromCouponBoxResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:CheckItemCouponFromCouponBoxResult", &(a->_ns1__CheckItemCouponFromCouponBoxResponse::CheckItemCouponFromCouponBoxResult), "xsd:int"))
				{	soap_flag_CheckItemCouponFromCouponBoxResult1--;
					continue;
				}
			if (soap_flag_outContractDetailNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outContractDetailNo", &(a->_ns1__CheckItemCouponFromCouponBoxResponse::outContractDetailNo), "xsd:int"))
				{	soap_flag_outContractDetailNo1--;
					continue;
				}
			if (soap_flag_outItemList1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfItemEntity(soap, "ns1:outItemList", &(a->_ns1__CheckItemCouponFromCouponBoxResponse::outItemList), "ns1:ArrayOfItemEntity"))
				{	soap_flag_outItemList1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:CheckItemCouponFromCouponBoxResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckItemCouponFromCouponBoxResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckItemCouponFromCouponBoxResponse, 0, sizeof(_ns1__CheckItemCouponFromCouponBoxResponse), 0, soap_copy__ns1__CheckItemCouponFromCouponBoxResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_CheckItemCouponFromCouponBoxResult1 > 0 || soap_flag_outContractDetailNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckItemCouponFromCouponBoxResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckItemCouponFromCouponBoxResponse);
	if (this->soap_out(soap, tag?tag:"ns1:CheckItemCouponFromCouponBoxResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckItemCouponFromCouponBoxResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckItemCouponFromCouponBoxResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponFromCouponBoxResponse * SOAP_FMAC4 soap_get__ns1__CheckItemCouponFromCouponBoxResponse(struct soap *soap, _ns1__CheckItemCouponFromCouponBoxResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckItemCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckItemCouponFromCouponBoxResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckItemCouponFromCouponBoxResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckItemCouponFromCouponBoxResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckItemCouponFromCouponBoxResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckItemCouponFromCouponBoxResponse);
		if (size)
			*size = sizeof(_ns1__CheckItemCouponFromCouponBoxResponse);
		((_ns1__CheckItemCouponFromCouponBoxResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckItemCouponFromCouponBoxResponse, n);
		if (size)
			*size = n * sizeof(_ns1__CheckItemCouponFromCouponBoxResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckItemCouponFromCouponBoxResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckItemCouponFromCouponBoxResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckItemCouponFromCouponBoxResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckItemCouponFromCouponBoxResponse %p -> %p\n", q, p));
	*(_ns1__CheckItemCouponFromCouponBoxResponse*)p = *(_ns1__CheckItemCouponFromCouponBoxResponse*)q;
}

void _ns1__CheckItemCouponFromCouponBox::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckItemCouponFromCouponBox::couponCardNo);
	this->_ns1__CheckItemCouponFromCouponBox::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__CheckItemCouponFromCouponBox::oidUser);
	this->_ns1__CheckItemCouponFromCouponBox::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__CheckItemCouponFromCouponBox::isCafe);
	/* transient soap skipped */
}

void _ns1__CheckItemCouponFromCouponBox::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckItemCouponFromCouponBox::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckItemCouponFromCouponBox::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__CheckItemCouponFromCouponBox::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckItemCouponFromCouponBox(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckItemCouponFromCouponBox(struct soap *soap, const char *tag, int id, const _ns1__CheckItemCouponFromCouponBox *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckItemCouponFromCouponBox), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:couponCardNo", -1, &(a->_ns1__CheckItemCouponFromCouponBox::couponCardNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__CheckItemCouponFromCouponBox::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__CheckItemCouponFromCouponBox::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__CheckItemCouponFromCouponBox::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__CheckItemCouponFromCouponBox::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckItemCouponFromCouponBox::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckItemCouponFromCouponBox(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponFromCouponBox * SOAP_FMAC4 soap_in__ns1__CheckItemCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__CheckItemCouponFromCouponBox *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckItemCouponFromCouponBox *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckItemCouponFromCouponBox, sizeof(_ns1__CheckItemCouponFromCouponBox), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckItemCouponFromCouponBox)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckItemCouponFromCouponBox *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_couponCardNo1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_couponCardNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:couponCardNo", &(a->_ns1__CheckItemCouponFromCouponBox::couponCardNo), "xsd:int"))
				{	soap_flag_couponCardNo1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__CheckItemCouponFromCouponBox::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__CheckItemCouponFromCouponBox::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__CheckItemCouponFromCouponBox::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__CheckItemCouponFromCouponBox::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckItemCouponFromCouponBox *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckItemCouponFromCouponBox, 0, sizeof(_ns1__CheckItemCouponFromCouponBox), 0, soap_copy__ns1__CheckItemCouponFromCouponBox);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_couponCardNo1 > 0 || soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckItemCouponFromCouponBox::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckItemCouponFromCouponBox);
	if (this->soap_out(soap, tag?tag:"ns1:CheckItemCouponFromCouponBox", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckItemCouponFromCouponBox::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckItemCouponFromCouponBox(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponFromCouponBox * SOAP_FMAC4 soap_get__ns1__CheckItemCouponFromCouponBox(struct soap *soap, _ns1__CheckItemCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckItemCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckItemCouponFromCouponBox * SOAP_FMAC2 soap_instantiate__ns1__CheckItemCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckItemCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckItemCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckItemCouponFromCouponBox);
		if (size)
			*size = sizeof(_ns1__CheckItemCouponFromCouponBox);
		((_ns1__CheckItemCouponFromCouponBox*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckItemCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(_ns1__CheckItemCouponFromCouponBox);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckItemCouponFromCouponBox*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckItemCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckItemCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckItemCouponFromCouponBox %p -> %p\n", q, p));
	*(_ns1__CheckItemCouponFromCouponBox*)p = *(_ns1__CheckItemCouponFromCouponBox*)q;
}

void _ns1__RollbackDiscountItemCouponResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__RollbackDiscountItemCouponResponse::RollbackDiscountItemCouponResult);
	soap_default_int(soap, &this->_ns1__RollbackDiscountItemCouponResponse::outApprovalNo);
	this->_ns1__RollbackDiscountItemCouponResponse::outApprovalDatetime = NULL;
	/* transient soap skipped */
}

void _ns1__RollbackDiscountItemCouponResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackDiscountItemCouponResponse::outApprovalDatetime);
	/* transient soap skipped */
#endif
}

int _ns1__RollbackDiscountItemCouponResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__RollbackDiscountItemCouponResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RollbackDiscountItemCouponResponse(struct soap *soap, const char *tag, int id, const _ns1__RollbackDiscountItemCouponResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__RollbackDiscountItemCouponResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:RollbackDiscountItemCouponResult");
	if (soap_out_int(soap, "ns1:RollbackDiscountItemCouponResult", -1, &(a->_ns1__RollbackDiscountItemCouponResponse::RollbackDiscountItemCouponResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__RollbackDiscountItemCouponResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__RollbackDiscountItemCouponResponse::outApprovalDatetime), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__RollbackDiscountItemCouponResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__RollbackDiscountItemCouponResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__RollbackDiscountItemCouponResponse * SOAP_FMAC4 soap_in__ns1__RollbackDiscountItemCouponResponse(struct soap *soap, const char *tag, _ns1__RollbackDiscountItemCouponResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__RollbackDiscountItemCouponResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__RollbackDiscountItemCouponResponse, sizeof(_ns1__RollbackDiscountItemCouponResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__RollbackDiscountItemCouponResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__RollbackDiscountItemCouponResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_RollbackDiscountItemCouponResult1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_RollbackDiscountItemCouponResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:RollbackDiscountItemCouponResult", &(a->_ns1__RollbackDiscountItemCouponResponse::RollbackDiscountItemCouponResult), "xsd:int"))
				{	soap_flag_RollbackDiscountItemCouponResult1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__RollbackDiscountItemCouponResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__RollbackDiscountItemCouponResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:RollbackDiscountItemCouponResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__RollbackDiscountItemCouponResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__RollbackDiscountItemCouponResponse, 0, sizeof(_ns1__RollbackDiscountItemCouponResponse), 0, soap_copy__ns1__RollbackDiscountItemCouponResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_RollbackDiscountItemCouponResult1 > 0 || soap_flag_outApprovalNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__RollbackDiscountItemCouponResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__RollbackDiscountItemCouponResponse);
	if (this->soap_out(soap, tag?tag:"ns1:RollbackDiscountItemCouponResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__RollbackDiscountItemCouponResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__RollbackDiscountItemCouponResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__RollbackDiscountItemCouponResponse * SOAP_FMAC4 soap_get__ns1__RollbackDiscountItemCouponResponse(struct soap *soap, _ns1__RollbackDiscountItemCouponResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__RollbackDiscountItemCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__RollbackDiscountItemCouponResponse * SOAP_FMAC2 soap_instantiate__ns1__RollbackDiscountItemCouponResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__RollbackDiscountItemCouponResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__RollbackDiscountItemCouponResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__RollbackDiscountItemCouponResponse);
		if (size)
			*size = sizeof(_ns1__RollbackDiscountItemCouponResponse);
		((_ns1__RollbackDiscountItemCouponResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__RollbackDiscountItemCouponResponse, n);
		if (size)
			*size = n * sizeof(_ns1__RollbackDiscountItemCouponResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__RollbackDiscountItemCouponResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__RollbackDiscountItemCouponResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RollbackDiscountItemCouponResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__RollbackDiscountItemCouponResponse %p -> %p\n", q, p));
	*(_ns1__RollbackDiscountItemCouponResponse*)p = *(_ns1__RollbackDiscountItemCouponResponse*)q;
}

void _ns1__RollbackDiscountItemCoupon::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__RollbackDiscountItemCoupon::sourceApprovalNo);
	this->_ns1__RollbackDiscountItemCoupon::orderId = NULL;
	this->_ns1__RollbackDiscountItemCoupon::sourceOrderId = NULL;
	this->_ns1__RollbackDiscountItemCoupon::orderDateTime = NULL;
	this->_ns1__RollbackDiscountItemCoupon::couponPin = NULL;
	this->_ns1__RollbackDiscountItemCoupon::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__RollbackDiscountItemCoupon::oidUser);
	this->_ns1__RollbackDiscountItemCoupon::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__RollbackDiscountItemCoupon::isCafe);
	/* transient soap skipped */
}

void _ns1__RollbackDiscountItemCoupon::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackDiscountItemCoupon::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackDiscountItemCoupon::sourceOrderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackDiscountItemCoupon::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackDiscountItemCoupon::couponPin);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackDiscountItemCoupon::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackDiscountItemCoupon::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__RollbackDiscountItemCoupon::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__RollbackDiscountItemCoupon(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RollbackDiscountItemCoupon(struct soap *soap, const char *tag, int id, const _ns1__RollbackDiscountItemCoupon *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__RollbackDiscountItemCoupon), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:sourceApprovalNo", -1, &(a->_ns1__RollbackDiscountItemCoupon::sourceApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__RollbackDiscountItemCoupon::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:sourceOrderId", -1, &(a->_ns1__RollbackDiscountItemCoupon::sourceOrderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__RollbackDiscountItemCoupon::orderDateTime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponPin", -1, &(a->_ns1__RollbackDiscountItemCoupon::couponPin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__RollbackDiscountItemCoupon::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__RollbackDiscountItemCoupon::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__RollbackDiscountItemCoupon::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__RollbackDiscountItemCoupon::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__RollbackDiscountItemCoupon::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__RollbackDiscountItemCoupon(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__RollbackDiscountItemCoupon * SOAP_FMAC4 soap_in__ns1__RollbackDiscountItemCoupon(struct soap *soap, const char *tag, _ns1__RollbackDiscountItemCoupon *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__RollbackDiscountItemCoupon *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__RollbackDiscountItemCoupon, sizeof(_ns1__RollbackDiscountItemCoupon), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__RollbackDiscountItemCoupon)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__RollbackDiscountItemCoupon *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_sourceApprovalNo1 = 1;
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_sourceOrderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponPin1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_sourceApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:sourceApprovalNo", &(a->_ns1__RollbackDiscountItemCoupon::sourceApprovalNo), "xsd:int"))
				{	soap_flag_sourceApprovalNo1--;
					continue;
				}
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__RollbackDiscountItemCoupon::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_sourceOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:sourceOrderId", &(a->_ns1__RollbackDiscountItemCoupon::sourceOrderId), "xsd:string"))
				{	soap_flag_sourceOrderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__RollbackDiscountItemCoupon::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponPin1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponPin", &(a->_ns1__RollbackDiscountItemCoupon::couponPin), "xsd:string"))
				{	soap_flag_couponPin1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__RollbackDiscountItemCoupon::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__RollbackDiscountItemCoupon::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__RollbackDiscountItemCoupon::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__RollbackDiscountItemCoupon::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__RollbackDiscountItemCoupon *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__RollbackDiscountItemCoupon, 0, sizeof(_ns1__RollbackDiscountItemCoupon), 0, soap_copy__ns1__RollbackDiscountItemCoupon);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_sourceApprovalNo1 > 0 || soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__RollbackDiscountItemCoupon::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__RollbackDiscountItemCoupon);
	if (this->soap_out(soap, tag?tag:"ns1:RollbackDiscountItemCoupon", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__RollbackDiscountItemCoupon::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__RollbackDiscountItemCoupon(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__RollbackDiscountItemCoupon * SOAP_FMAC4 soap_get__ns1__RollbackDiscountItemCoupon(struct soap *soap, _ns1__RollbackDiscountItemCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__RollbackDiscountItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__RollbackDiscountItemCoupon * SOAP_FMAC2 soap_instantiate__ns1__RollbackDiscountItemCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__RollbackDiscountItemCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__RollbackDiscountItemCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__RollbackDiscountItemCoupon);
		if (size)
			*size = sizeof(_ns1__RollbackDiscountItemCoupon);
		((_ns1__RollbackDiscountItemCoupon*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__RollbackDiscountItemCoupon, n);
		if (size)
			*size = n * sizeof(_ns1__RollbackDiscountItemCoupon);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__RollbackDiscountItemCoupon*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__RollbackDiscountItemCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RollbackDiscountItemCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__RollbackDiscountItemCoupon %p -> %p\n", q, p));
	*(_ns1__RollbackDiscountItemCoupon*)p = *(_ns1__RollbackDiscountItemCoupon*)q;
}

void _ns1__UseDiscountItemCouponResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__UseDiscountItemCouponResponse::UseDiscountItemCouponResult);
	soap_default_int(soap, &this->_ns1__UseDiscountItemCouponResponse::outApprovalNo);
	this->_ns1__UseDiscountItemCouponResponse::outApprovalDatetime = NULL;
	soap_default_int(soap, &this->_ns1__UseDiscountItemCouponResponse::outContractDetailNo);
	soap_default_int(soap, &this->_ns1__UseDiscountItemCouponResponse::outItemPriceDiscount);
	/* transient soap skipped */
}

void _ns1__UseDiscountItemCouponResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseDiscountItemCouponResponse::outApprovalDatetime);
	/* transient soap skipped */
#endif
}

int _ns1__UseDiscountItemCouponResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__UseDiscountItemCouponResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UseDiscountItemCouponResponse(struct soap *soap, const char *tag, int id, const _ns1__UseDiscountItemCouponResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__UseDiscountItemCouponResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:UseDiscountItemCouponResult");
	if (soap_out_int(soap, "ns1:UseDiscountItemCouponResult", -1, &(a->_ns1__UseDiscountItemCouponResponse::UseDiscountItemCouponResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__UseDiscountItemCouponResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__UseDiscountItemCouponResponse::outApprovalDatetime), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outContractDetailNo", -1, &(a->_ns1__UseDiscountItemCouponResponse::outContractDetailNo), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outItemPriceDiscount", -1, &(a->_ns1__UseDiscountItemCouponResponse::outItemPriceDiscount), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__UseDiscountItemCouponResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__UseDiscountItemCouponResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__UseDiscountItemCouponResponse * SOAP_FMAC4 soap_in__ns1__UseDiscountItemCouponResponse(struct soap *soap, const char *tag, _ns1__UseDiscountItemCouponResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__UseDiscountItemCouponResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__UseDiscountItemCouponResponse, sizeof(_ns1__UseDiscountItemCouponResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__UseDiscountItemCouponResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__UseDiscountItemCouponResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_UseDiscountItemCouponResult1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	size_t soap_flag_outContractDetailNo1 = 1;
	size_t soap_flag_outItemPriceDiscount1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_UseDiscountItemCouponResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:UseDiscountItemCouponResult", &(a->_ns1__UseDiscountItemCouponResponse::UseDiscountItemCouponResult), "xsd:int"))
				{	soap_flag_UseDiscountItemCouponResult1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__UseDiscountItemCouponResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__UseDiscountItemCouponResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			if (soap_flag_outContractDetailNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outContractDetailNo", &(a->_ns1__UseDiscountItemCouponResponse::outContractDetailNo), "xsd:int"))
				{	soap_flag_outContractDetailNo1--;
					continue;
				}
			if (soap_flag_outItemPriceDiscount1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outItemPriceDiscount", &(a->_ns1__UseDiscountItemCouponResponse::outItemPriceDiscount), "xsd:int"))
				{	soap_flag_outItemPriceDiscount1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:UseDiscountItemCouponResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__UseDiscountItemCouponResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__UseDiscountItemCouponResponse, 0, sizeof(_ns1__UseDiscountItemCouponResponse), 0, soap_copy__ns1__UseDiscountItemCouponResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_UseDiscountItemCouponResult1 > 0 || soap_flag_outApprovalNo1 > 0 || soap_flag_outContractDetailNo1 > 0 || soap_flag_outItemPriceDiscount1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__UseDiscountItemCouponResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__UseDiscountItemCouponResponse);
	if (this->soap_out(soap, tag?tag:"ns1:UseDiscountItemCouponResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__UseDiscountItemCouponResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__UseDiscountItemCouponResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__UseDiscountItemCouponResponse * SOAP_FMAC4 soap_get__ns1__UseDiscountItemCouponResponse(struct soap *soap, _ns1__UseDiscountItemCouponResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__UseDiscountItemCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__UseDiscountItemCouponResponse * SOAP_FMAC2 soap_instantiate__ns1__UseDiscountItemCouponResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__UseDiscountItemCouponResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__UseDiscountItemCouponResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__UseDiscountItemCouponResponse);
		if (size)
			*size = sizeof(_ns1__UseDiscountItemCouponResponse);
		((_ns1__UseDiscountItemCouponResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__UseDiscountItemCouponResponse, n);
		if (size)
			*size = n * sizeof(_ns1__UseDiscountItemCouponResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__UseDiscountItemCouponResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__UseDiscountItemCouponResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UseDiscountItemCouponResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__UseDiscountItemCouponResponse %p -> %p\n", q, p));
	*(_ns1__UseDiscountItemCouponResponse*)p = *(_ns1__UseDiscountItemCouponResponse*)q;
}

void _ns1__UseDiscountItemCoupon::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__UseDiscountItemCoupon::orderId = NULL;
	this->_ns1__UseDiscountItemCoupon::orderDateTime = NULL;
	this->_ns1__UseDiscountItemCoupon::couponPin = NULL;
	this->_ns1__UseDiscountItemCoupon::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__UseDiscountItemCoupon::oidUser);
	this->_ns1__UseDiscountItemCoupon::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__UseDiscountItemCoupon::isCafe);
	soap_default_int(soap, &this->_ns1__UseDiscountItemCoupon::itemPriceOrigin);
	this->_ns1__UseDiscountItemCoupon::itemCode = NULL;
	/* transient soap skipped */
}

void _ns1__UseDiscountItemCoupon::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseDiscountItemCoupon::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseDiscountItemCoupon::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseDiscountItemCoupon::couponPin);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseDiscountItemCoupon::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseDiscountItemCoupon::nxId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseDiscountItemCoupon::itemCode);
	/* transient soap skipped */
#endif
}

int _ns1__UseDiscountItemCoupon::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__UseDiscountItemCoupon(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UseDiscountItemCoupon(struct soap *soap, const char *tag, int id, const _ns1__UseDiscountItemCoupon *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__UseDiscountItemCoupon), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__UseDiscountItemCoupon::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__UseDiscountItemCoupon::orderDateTime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponPin", -1, &(a->_ns1__UseDiscountItemCoupon::couponPin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__UseDiscountItemCoupon::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__UseDiscountItemCoupon::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__UseDiscountItemCoupon::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__UseDiscountItemCoupon::isCafe), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:itemPriceOrigin", -1, &(a->_ns1__UseDiscountItemCoupon::itemPriceOrigin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:itemCode", -1, &(a->_ns1__UseDiscountItemCoupon::itemCode), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__UseDiscountItemCoupon::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__UseDiscountItemCoupon(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__UseDiscountItemCoupon * SOAP_FMAC4 soap_in__ns1__UseDiscountItemCoupon(struct soap *soap, const char *tag, _ns1__UseDiscountItemCoupon *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__UseDiscountItemCoupon *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__UseDiscountItemCoupon, sizeof(_ns1__UseDiscountItemCoupon), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__UseDiscountItemCoupon)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__UseDiscountItemCoupon *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponPin1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	size_t soap_flag_itemPriceOrigin1 = 1;
	size_t soap_flag_itemCode1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__UseDiscountItemCoupon::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__UseDiscountItemCoupon::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponPin1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponPin", &(a->_ns1__UseDiscountItemCoupon::couponPin), "xsd:string"))
				{	soap_flag_couponPin1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__UseDiscountItemCoupon::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__UseDiscountItemCoupon::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__UseDiscountItemCoupon::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__UseDiscountItemCoupon::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			if (soap_flag_itemPriceOrigin1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:itemPriceOrigin", &(a->_ns1__UseDiscountItemCoupon::itemPriceOrigin), "xsd:int"))
				{	soap_flag_itemPriceOrigin1--;
					continue;
				}
			if (soap_flag_itemCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:itemCode", &(a->_ns1__UseDiscountItemCoupon::itemCode), "xsd:string"))
				{	soap_flag_itemCode1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__UseDiscountItemCoupon *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__UseDiscountItemCoupon, 0, sizeof(_ns1__UseDiscountItemCoupon), 0, soap_copy__ns1__UseDiscountItemCoupon);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0 || soap_flag_itemPriceOrigin1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__UseDiscountItemCoupon::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__UseDiscountItemCoupon);
	if (this->soap_out(soap, tag?tag:"ns1:UseDiscountItemCoupon", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__UseDiscountItemCoupon::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__UseDiscountItemCoupon(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__UseDiscountItemCoupon * SOAP_FMAC4 soap_get__ns1__UseDiscountItemCoupon(struct soap *soap, _ns1__UseDiscountItemCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__UseDiscountItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__UseDiscountItemCoupon * SOAP_FMAC2 soap_instantiate__ns1__UseDiscountItemCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__UseDiscountItemCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__UseDiscountItemCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__UseDiscountItemCoupon);
		if (size)
			*size = sizeof(_ns1__UseDiscountItemCoupon);
		((_ns1__UseDiscountItemCoupon*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__UseDiscountItemCoupon, n);
		if (size)
			*size = n * sizeof(_ns1__UseDiscountItemCoupon);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__UseDiscountItemCoupon*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__UseDiscountItemCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UseDiscountItemCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__UseDiscountItemCoupon %p -> %p\n", q, p));
	*(_ns1__UseDiscountItemCoupon*)p = *(_ns1__UseDiscountItemCoupon*)q;
}

void _ns1__CheckDiscountItemCouponResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckDiscountItemCouponResponse::CheckDiscountItemCouponResult);
	soap_default_int(soap, &this->_ns1__CheckDiscountItemCouponResponse::outContractDetailNo);
	soap_default_int(soap, &this->_ns1__CheckDiscountItemCouponResponse::outItemPriceDiscount);
	/* transient soap skipped */
}

void _ns1__CheckDiscountItemCouponResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__CheckDiscountItemCouponResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckDiscountItemCouponResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckDiscountItemCouponResponse(struct soap *soap, const char *tag, int id, const _ns1__CheckDiscountItemCouponResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckDiscountItemCouponResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:CheckDiscountItemCouponResult");
	if (soap_out_int(soap, "ns1:CheckDiscountItemCouponResult", -1, &(a->_ns1__CheckDiscountItemCouponResponse::CheckDiscountItemCouponResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outContractDetailNo", -1, &(a->_ns1__CheckDiscountItemCouponResponse::outContractDetailNo), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outItemPriceDiscount", -1, &(a->_ns1__CheckDiscountItemCouponResponse::outItemPriceDiscount), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckDiscountItemCouponResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckDiscountItemCouponResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckDiscountItemCouponResponse * SOAP_FMAC4 soap_in__ns1__CheckDiscountItemCouponResponse(struct soap *soap, const char *tag, _ns1__CheckDiscountItemCouponResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckDiscountItemCouponResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckDiscountItemCouponResponse, sizeof(_ns1__CheckDiscountItemCouponResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckDiscountItemCouponResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckDiscountItemCouponResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_CheckDiscountItemCouponResult1 = 1;
	size_t soap_flag_outContractDetailNo1 = 1;
	size_t soap_flag_outItemPriceDiscount1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_CheckDiscountItemCouponResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:CheckDiscountItemCouponResult", &(a->_ns1__CheckDiscountItemCouponResponse::CheckDiscountItemCouponResult), "xsd:int"))
				{	soap_flag_CheckDiscountItemCouponResult1--;
					continue;
				}
			if (soap_flag_outContractDetailNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outContractDetailNo", &(a->_ns1__CheckDiscountItemCouponResponse::outContractDetailNo), "xsd:int"))
				{	soap_flag_outContractDetailNo1--;
					continue;
				}
			if (soap_flag_outItemPriceDiscount1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outItemPriceDiscount", &(a->_ns1__CheckDiscountItemCouponResponse::outItemPriceDiscount), "xsd:int"))
				{	soap_flag_outItemPriceDiscount1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:CheckDiscountItemCouponResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckDiscountItemCouponResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckDiscountItemCouponResponse, 0, sizeof(_ns1__CheckDiscountItemCouponResponse), 0, soap_copy__ns1__CheckDiscountItemCouponResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_CheckDiscountItemCouponResult1 > 0 || soap_flag_outContractDetailNo1 > 0 || soap_flag_outItemPriceDiscount1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckDiscountItemCouponResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckDiscountItemCouponResponse);
	if (this->soap_out(soap, tag?tag:"ns1:CheckDiscountItemCouponResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckDiscountItemCouponResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckDiscountItemCouponResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckDiscountItemCouponResponse * SOAP_FMAC4 soap_get__ns1__CheckDiscountItemCouponResponse(struct soap *soap, _ns1__CheckDiscountItemCouponResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckDiscountItemCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckDiscountItemCouponResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckDiscountItemCouponResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckDiscountItemCouponResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckDiscountItemCouponResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckDiscountItemCouponResponse);
		if (size)
			*size = sizeof(_ns1__CheckDiscountItemCouponResponse);
		((_ns1__CheckDiscountItemCouponResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckDiscountItemCouponResponse, n);
		if (size)
			*size = n * sizeof(_ns1__CheckDiscountItemCouponResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckDiscountItemCouponResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckDiscountItemCouponResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckDiscountItemCouponResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckDiscountItemCouponResponse %p -> %p\n", q, p));
	*(_ns1__CheckDiscountItemCouponResponse*)p = *(_ns1__CheckDiscountItemCouponResponse*)q;
}

void _ns1__CheckDiscountItemCoupon::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__CheckDiscountItemCoupon::couponPin = NULL;
	this->_ns1__CheckDiscountItemCoupon::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__CheckDiscountItemCoupon::oidUser);
	this->_ns1__CheckDiscountItemCoupon::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__CheckDiscountItemCoupon::isCafe);
	soap_default_int(soap, &this->_ns1__CheckDiscountItemCoupon::itemPriceOrigin);
	this->_ns1__CheckDiscountItemCoupon::itemCode = NULL;
	/* transient soap skipped */
}

void _ns1__CheckDiscountItemCoupon::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckDiscountItemCoupon::couponPin);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckDiscountItemCoupon::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckDiscountItemCoupon::nxId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckDiscountItemCoupon::itemCode);
	/* transient soap skipped */
#endif
}

int _ns1__CheckDiscountItemCoupon::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckDiscountItemCoupon(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckDiscountItemCoupon(struct soap *soap, const char *tag, int id, const _ns1__CheckDiscountItemCoupon *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckDiscountItemCoupon), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponPin", -1, &(a->_ns1__CheckDiscountItemCoupon::couponPin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__CheckDiscountItemCoupon::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__CheckDiscountItemCoupon::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__CheckDiscountItemCoupon::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__CheckDiscountItemCoupon::isCafe), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:itemPriceOrigin", -1, &(a->_ns1__CheckDiscountItemCoupon::itemPriceOrigin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:itemCode", -1, &(a->_ns1__CheckDiscountItemCoupon::itemCode), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckDiscountItemCoupon::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckDiscountItemCoupon(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckDiscountItemCoupon * SOAP_FMAC4 soap_in__ns1__CheckDiscountItemCoupon(struct soap *soap, const char *tag, _ns1__CheckDiscountItemCoupon *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckDiscountItemCoupon *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckDiscountItemCoupon, sizeof(_ns1__CheckDiscountItemCoupon), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckDiscountItemCoupon)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckDiscountItemCoupon *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_couponPin1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	size_t soap_flag_itemPriceOrigin1 = 1;
	size_t soap_flag_itemCode1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_couponPin1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponPin", &(a->_ns1__CheckDiscountItemCoupon::couponPin), "xsd:string"))
				{	soap_flag_couponPin1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__CheckDiscountItemCoupon::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__CheckDiscountItemCoupon::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__CheckDiscountItemCoupon::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__CheckDiscountItemCoupon::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			if (soap_flag_itemPriceOrigin1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:itemPriceOrigin", &(a->_ns1__CheckDiscountItemCoupon::itemPriceOrigin), "xsd:int"))
				{	soap_flag_itemPriceOrigin1--;
					continue;
				}
			if (soap_flag_itemCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:itemCode", &(a->_ns1__CheckDiscountItemCoupon::itemCode), "xsd:string"))
				{	soap_flag_itemCode1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckDiscountItemCoupon *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckDiscountItemCoupon, 0, sizeof(_ns1__CheckDiscountItemCoupon), 0, soap_copy__ns1__CheckDiscountItemCoupon);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0 || soap_flag_itemPriceOrigin1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckDiscountItemCoupon::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckDiscountItemCoupon);
	if (this->soap_out(soap, tag?tag:"ns1:CheckDiscountItemCoupon", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckDiscountItemCoupon::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckDiscountItemCoupon(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckDiscountItemCoupon * SOAP_FMAC4 soap_get__ns1__CheckDiscountItemCoupon(struct soap *soap, _ns1__CheckDiscountItemCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckDiscountItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckDiscountItemCoupon * SOAP_FMAC2 soap_instantiate__ns1__CheckDiscountItemCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckDiscountItemCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckDiscountItemCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckDiscountItemCoupon);
		if (size)
			*size = sizeof(_ns1__CheckDiscountItemCoupon);
		((_ns1__CheckDiscountItemCoupon*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckDiscountItemCoupon, n);
		if (size)
			*size = n * sizeof(_ns1__CheckDiscountItemCoupon);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckDiscountItemCoupon*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckDiscountItemCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckDiscountItemCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckDiscountItemCoupon %p -> %p\n", q, p));
	*(_ns1__CheckDiscountItemCoupon*)p = *(_ns1__CheckDiscountItemCoupon*)q;
}

void _ns1__RollbackDiscountCouponFromCouponBoxResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__RollbackDiscountCouponFromCouponBoxResponse::RollbackDiscountCouponFromCouponBoxResult);
	soap_default_int(soap, &this->_ns1__RollbackDiscountCouponFromCouponBoxResponse::outApprovalNo);
	this->_ns1__RollbackDiscountCouponFromCouponBoxResponse::outApprovalDatetime = NULL;
	/* transient soap skipped */
}

void _ns1__RollbackDiscountCouponFromCouponBoxResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackDiscountCouponFromCouponBoxResponse::outApprovalDatetime);
	/* transient soap skipped */
#endif
}

int _ns1__RollbackDiscountCouponFromCouponBoxResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__RollbackDiscountCouponFromCouponBoxResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RollbackDiscountCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, const _ns1__RollbackDiscountCouponFromCouponBoxResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBoxResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:RollbackDiscountCouponFromCouponBoxResult");
	if (soap_out_int(soap, "ns1:RollbackDiscountCouponFromCouponBoxResult", -1, &(a->_ns1__RollbackDiscountCouponFromCouponBoxResponse::RollbackDiscountCouponFromCouponBoxResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__RollbackDiscountCouponFromCouponBoxResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__RollbackDiscountCouponFromCouponBoxResponse::outApprovalDatetime), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__RollbackDiscountCouponFromCouponBoxResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__RollbackDiscountCouponFromCouponBoxResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__RollbackDiscountCouponFromCouponBoxResponse * SOAP_FMAC4 soap_in__ns1__RollbackDiscountCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__RollbackDiscountCouponFromCouponBoxResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__RollbackDiscountCouponFromCouponBoxResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBoxResponse, sizeof(_ns1__RollbackDiscountCouponFromCouponBoxResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBoxResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__RollbackDiscountCouponFromCouponBoxResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_RollbackDiscountCouponFromCouponBoxResult1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_RollbackDiscountCouponFromCouponBoxResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:RollbackDiscountCouponFromCouponBoxResult", &(a->_ns1__RollbackDiscountCouponFromCouponBoxResponse::RollbackDiscountCouponFromCouponBoxResult), "xsd:int"))
				{	soap_flag_RollbackDiscountCouponFromCouponBoxResult1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__RollbackDiscountCouponFromCouponBoxResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__RollbackDiscountCouponFromCouponBoxResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:RollbackDiscountCouponFromCouponBoxResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__RollbackDiscountCouponFromCouponBoxResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBoxResponse, 0, sizeof(_ns1__RollbackDiscountCouponFromCouponBoxResponse), 0, soap_copy__ns1__RollbackDiscountCouponFromCouponBoxResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_RollbackDiscountCouponFromCouponBoxResult1 > 0 || soap_flag_outApprovalNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__RollbackDiscountCouponFromCouponBoxResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBoxResponse);
	if (this->soap_out(soap, tag?tag:"ns1:RollbackDiscountCouponFromCouponBoxResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__RollbackDiscountCouponFromCouponBoxResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__RollbackDiscountCouponFromCouponBoxResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__RollbackDiscountCouponFromCouponBoxResponse * SOAP_FMAC4 soap_get__ns1__RollbackDiscountCouponFromCouponBoxResponse(struct soap *soap, _ns1__RollbackDiscountCouponFromCouponBoxResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__RollbackDiscountCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__RollbackDiscountCouponFromCouponBoxResponse * SOAP_FMAC2 soap_instantiate__ns1__RollbackDiscountCouponFromCouponBoxResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__RollbackDiscountCouponFromCouponBoxResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBoxResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__RollbackDiscountCouponFromCouponBoxResponse);
		if (size)
			*size = sizeof(_ns1__RollbackDiscountCouponFromCouponBoxResponse);
		((_ns1__RollbackDiscountCouponFromCouponBoxResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__RollbackDiscountCouponFromCouponBoxResponse, n);
		if (size)
			*size = n * sizeof(_ns1__RollbackDiscountCouponFromCouponBoxResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__RollbackDiscountCouponFromCouponBoxResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__RollbackDiscountCouponFromCouponBoxResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RollbackDiscountCouponFromCouponBoxResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__RollbackDiscountCouponFromCouponBoxResponse %p -> %p\n", q, p));
	*(_ns1__RollbackDiscountCouponFromCouponBoxResponse*)p = *(_ns1__RollbackDiscountCouponFromCouponBoxResponse*)q;
}

void _ns1__RollbackDiscountCouponFromCouponBox::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__RollbackDiscountCouponFromCouponBox::sourceApprovalNo);
	this->_ns1__RollbackDiscountCouponFromCouponBox::orderId = NULL;
	this->_ns1__RollbackDiscountCouponFromCouponBox::sourceOrderId = NULL;
	this->_ns1__RollbackDiscountCouponFromCouponBox::orderDateTime = NULL;
	soap_default_int(soap, &this->_ns1__RollbackDiscountCouponFromCouponBox::couponCardNo);
	this->_ns1__RollbackDiscountCouponFromCouponBox::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__RollbackDiscountCouponFromCouponBox::oidUser);
	this->_ns1__RollbackDiscountCouponFromCouponBox::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__RollbackDiscountCouponFromCouponBox::isCafe);
	/* transient soap skipped */
}

void _ns1__RollbackDiscountCouponFromCouponBox::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackDiscountCouponFromCouponBox::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackDiscountCouponFromCouponBox::sourceOrderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackDiscountCouponFromCouponBox::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackDiscountCouponFromCouponBox::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackDiscountCouponFromCouponBox::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__RollbackDiscountCouponFromCouponBox::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__RollbackDiscountCouponFromCouponBox(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, const char *tag, int id, const _ns1__RollbackDiscountCouponFromCouponBox *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBox), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:sourceApprovalNo", -1, &(a->_ns1__RollbackDiscountCouponFromCouponBox::sourceApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__RollbackDiscountCouponFromCouponBox::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:sourceOrderId", -1, &(a->_ns1__RollbackDiscountCouponFromCouponBox::sourceOrderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__RollbackDiscountCouponFromCouponBox::orderDateTime), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:couponCardNo", -1, &(a->_ns1__RollbackDiscountCouponFromCouponBox::couponCardNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__RollbackDiscountCouponFromCouponBox::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__RollbackDiscountCouponFromCouponBox::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__RollbackDiscountCouponFromCouponBox::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__RollbackDiscountCouponFromCouponBox::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__RollbackDiscountCouponFromCouponBox::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__RollbackDiscountCouponFromCouponBox(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__RollbackDiscountCouponFromCouponBox * SOAP_FMAC4 soap_in__ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__RollbackDiscountCouponFromCouponBox *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__RollbackDiscountCouponFromCouponBox *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBox, sizeof(_ns1__RollbackDiscountCouponFromCouponBox), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBox)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__RollbackDiscountCouponFromCouponBox *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_sourceApprovalNo1 = 1;
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_sourceOrderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponCardNo1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_sourceApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:sourceApprovalNo", &(a->_ns1__RollbackDiscountCouponFromCouponBox::sourceApprovalNo), "xsd:int"))
				{	soap_flag_sourceApprovalNo1--;
					continue;
				}
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__RollbackDiscountCouponFromCouponBox::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_sourceOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:sourceOrderId", &(a->_ns1__RollbackDiscountCouponFromCouponBox::sourceOrderId), "xsd:string"))
				{	soap_flag_sourceOrderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__RollbackDiscountCouponFromCouponBox::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponCardNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:couponCardNo", &(a->_ns1__RollbackDiscountCouponFromCouponBox::couponCardNo), "xsd:int"))
				{	soap_flag_couponCardNo1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__RollbackDiscountCouponFromCouponBox::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__RollbackDiscountCouponFromCouponBox::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__RollbackDiscountCouponFromCouponBox::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__RollbackDiscountCouponFromCouponBox::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__RollbackDiscountCouponFromCouponBox *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBox, 0, sizeof(_ns1__RollbackDiscountCouponFromCouponBox), 0, soap_copy__ns1__RollbackDiscountCouponFromCouponBox);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_sourceApprovalNo1 > 0 || soap_flag_couponCardNo1 > 0 || soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__RollbackDiscountCouponFromCouponBox::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBox);
	if (this->soap_out(soap, tag?tag:"ns1:RollbackDiscountCouponFromCouponBox", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__RollbackDiscountCouponFromCouponBox::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__RollbackDiscountCouponFromCouponBox(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__RollbackDiscountCouponFromCouponBox * SOAP_FMAC4 soap_get__ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, _ns1__RollbackDiscountCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__RollbackDiscountCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__RollbackDiscountCouponFromCouponBox * SOAP_FMAC2 soap_instantiate__ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__RollbackDiscountCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__RollbackDiscountCouponFromCouponBox);
		if (size)
			*size = sizeof(_ns1__RollbackDiscountCouponFromCouponBox);
		((_ns1__RollbackDiscountCouponFromCouponBox*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__RollbackDiscountCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(_ns1__RollbackDiscountCouponFromCouponBox);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__RollbackDiscountCouponFromCouponBox*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__RollbackDiscountCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__RollbackDiscountCouponFromCouponBox %p -> %p\n", q, p));
	*(_ns1__RollbackDiscountCouponFromCouponBox*)p = *(_ns1__RollbackDiscountCouponFromCouponBox*)q;
}

void _ns1__UseDiscountCouponFromCouponBoxResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__UseDiscountCouponFromCouponBoxResponse::UseDiscountCouponFromCouponBoxResult);
	soap_default_int(soap, &this->_ns1__UseDiscountCouponFromCouponBoxResponse::outApprovalNo);
	this->_ns1__UseDiscountCouponFromCouponBoxResponse::outApprovalDatetime = NULL;
	soap_default_int(soap, &this->_ns1__UseDiscountCouponFromCouponBoxResponse::outContractDetailNo);
	soap_default_int(soap, &this->_ns1__UseDiscountCouponFromCouponBoxResponse::outItemPriceDiscount);
	/* transient soap skipped */
}

void _ns1__UseDiscountCouponFromCouponBoxResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseDiscountCouponFromCouponBoxResponse::outApprovalDatetime);
	/* transient soap skipped */
#endif
}

int _ns1__UseDiscountCouponFromCouponBoxResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__UseDiscountCouponFromCouponBoxResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UseDiscountCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, const _ns1__UseDiscountCouponFromCouponBoxResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBoxResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:UseDiscountCouponFromCouponBoxResult");
	if (soap_out_int(soap, "ns1:UseDiscountCouponFromCouponBoxResult", -1, &(a->_ns1__UseDiscountCouponFromCouponBoxResponse::UseDiscountCouponFromCouponBoxResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__UseDiscountCouponFromCouponBoxResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__UseDiscountCouponFromCouponBoxResponse::outApprovalDatetime), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outContractDetailNo", -1, &(a->_ns1__UseDiscountCouponFromCouponBoxResponse::outContractDetailNo), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outItemPriceDiscount", -1, &(a->_ns1__UseDiscountCouponFromCouponBoxResponse::outItemPriceDiscount), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__UseDiscountCouponFromCouponBoxResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__UseDiscountCouponFromCouponBoxResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__UseDiscountCouponFromCouponBoxResponse * SOAP_FMAC4 soap_in__ns1__UseDiscountCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__UseDiscountCouponFromCouponBoxResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__UseDiscountCouponFromCouponBoxResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBoxResponse, sizeof(_ns1__UseDiscountCouponFromCouponBoxResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__UseDiscountCouponFromCouponBoxResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__UseDiscountCouponFromCouponBoxResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_UseDiscountCouponFromCouponBoxResult1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	size_t soap_flag_outContractDetailNo1 = 1;
	size_t soap_flag_outItemPriceDiscount1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_UseDiscountCouponFromCouponBoxResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:UseDiscountCouponFromCouponBoxResult", &(a->_ns1__UseDiscountCouponFromCouponBoxResponse::UseDiscountCouponFromCouponBoxResult), "xsd:int"))
				{	soap_flag_UseDiscountCouponFromCouponBoxResult1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__UseDiscountCouponFromCouponBoxResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__UseDiscountCouponFromCouponBoxResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			if (soap_flag_outContractDetailNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outContractDetailNo", &(a->_ns1__UseDiscountCouponFromCouponBoxResponse::outContractDetailNo), "xsd:int"))
				{	soap_flag_outContractDetailNo1--;
					continue;
				}
			if (soap_flag_outItemPriceDiscount1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outItemPriceDiscount", &(a->_ns1__UseDiscountCouponFromCouponBoxResponse::outItemPriceDiscount), "xsd:int"))
				{	soap_flag_outItemPriceDiscount1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:UseDiscountCouponFromCouponBoxResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__UseDiscountCouponFromCouponBoxResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBoxResponse, 0, sizeof(_ns1__UseDiscountCouponFromCouponBoxResponse), 0, soap_copy__ns1__UseDiscountCouponFromCouponBoxResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_UseDiscountCouponFromCouponBoxResult1 > 0 || soap_flag_outApprovalNo1 > 0 || soap_flag_outContractDetailNo1 > 0 || soap_flag_outItemPriceDiscount1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__UseDiscountCouponFromCouponBoxResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBoxResponse);
	if (this->soap_out(soap, tag?tag:"ns1:UseDiscountCouponFromCouponBoxResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__UseDiscountCouponFromCouponBoxResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__UseDiscountCouponFromCouponBoxResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__UseDiscountCouponFromCouponBoxResponse * SOAP_FMAC4 soap_get__ns1__UseDiscountCouponFromCouponBoxResponse(struct soap *soap, _ns1__UseDiscountCouponFromCouponBoxResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__UseDiscountCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__UseDiscountCouponFromCouponBoxResponse * SOAP_FMAC2 soap_instantiate__ns1__UseDiscountCouponFromCouponBoxResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__UseDiscountCouponFromCouponBoxResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBoxResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__UseDiscountCouponFromCouponBoxResponse);
		if (size)
			*size = sizeof(_ns1__UseDiscountCouponFromCouponBoxResponse);
		((_ns1__UseDiscountCouponFromCouponBoxResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__UseDiscountCouponFromCouponBoxResponse, n);
		if (size)
			*size = n * sizeof(_ns1__UseDiscountCouponFromCouponBoxResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__UseDiscountCouponFromCouponBoxResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__UseDiscountCouponFromCouponBoxResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UseDiscountCouponFromCouponBoxResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__UseDiscountCouponFromCouponBoxResponse %p -> %p\n", q, p));
	*(_ns1__UseDiscountCouponFromCouponBoxResponse*)p = *(_ns1__UseDiscountCouponFromCouponBoxResponse*)q;
}

void _ns1__UseDiscountCouponFromCouponBox::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__UseDiscountCouponFromCouponBox::orderId = NULL;
	this->_ns1__UseDiscountCouponFromCouponBox::orderDateTime = NULL;
	soap_default_int(soap, &this->_ns1__UseDiscountCouponFromCouponBox::couponCardNo);
	this->_ns1__UseDiscountCouponFromCouponBox::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__UseDiscountCouponFromCouponBox::oidUser);
	this->_ns1__UseDiscountCouponFromCouponBox::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__UseDiscountCouponFromCouponBox::isCafe);
	soap_default_int(soap, &this->_ns1__UseDiscountCouponFromCouponBox::itemPriceOrigin);
	this->_ns1__UseDiscountCouponFromCouponBox::itemCode = NULL;
	/* transient soap skipped */
}

void _ns1__UseDiscountCouponFromCouponBox::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseDiscountCouponFromCouponBox::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseDiscountCouponFromCouponBox::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseDiscountCouponFromCouponBox::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseDiscountCouponFromCouponBox::nxId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseDiscountCouponFromCouponBox::itemCode);
	/* transient soap skipped */
#endif
}

int _ns1__UseDiscountCouponFromCouponBox::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__UseDiscountCouponFromCouponBox(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UseDiscountCouponFromCouponBox(struct soap *soap, const char *tag, int id, const _ns1__UseDiscountCouponFromCouponBox *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBox), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__UseDiscountCouponFromCouponBox::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__UseDiscountCouponFromCouponBox::orderDateTime), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:couponCardNo", -1, &(a->_ns1__UseDiscountCouponFromCouponBox::couponCardNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__UseDiscountCouponFromCouponBox::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__UseDiscountCouponFromCouponBox::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__UseDiscountCouponFromCouponBox::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__UseDiscountCouponFromCouponBox::isCafe), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:itemPriceOrigin", -1, &(a->_ns1__UseDiscountCouponFromCouponBox::itemPriceOrigin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:itemCode", -1, &(a->_ns1__UseDiscountCouponFromCouponBox::itemCode), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__UseDiscountCouponFromCouponBox::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__UseDiscountCouponFromCouponBox(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__UseDiscountCouponFromCouponBox * SOAP_FMAC4 soap_in__ns1__UseDiscountCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__UseDiscountCouponFromCouponBox *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__UseDiscountCouponFromCouponBox *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBox, sizeof(_ns1__UseDiscountCouponFromCouponBox), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__UseDiscountCouponFromCouponBox)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__UseDiscountCouponFromCouponBox *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponCardNo1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	size_t soap_flag_itemPriceOrigin1 = 1;
	size_t soap_flag_itemCode1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__UseDiscountCouponFromCouponBox::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__UseDiscountCouponFromCouponBox::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponCardNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:couponCardNo", &(a->_ns1__UseDiscountCouponFromCouponBox::couponCardNo), "xsd:int"))
				{	soap_flag_couponCardNo1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__UseDiscountCouponFromCouponBox::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__UseDiscountCouponFromCouponBox::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__UseDiscountCouponFromCouponBox::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__UseDiscountCouponFromCouponBox::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			if (soap_flag_itemPriceOrigin1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:itemPriceOrigin", &(a->_ns1__UseDiscountCouponFromCouponBox::itemPriceOrigin), "xsd:int"))
				{	soap_flag_itemPriceOrigin1--;
					continue;
				}
			if (soap_flag_itemCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:itemCode", &(a->_ns1__UseDiscountCouponFromCouponBox::itemCode), "xsd:string"))
				{	soap_flag_itemCode1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__UseDiscountCouponFromCouponBox *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBox, 0, sizeof(_ns1__UseDiscountCouponFromCouponBox), 0, soap_copy__ns1__UseDiscountCouponFromCouponBox);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_couponCardNo1 > 0 || soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0 || soap_flag_itemPriceOrigin1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__UseDiscountCouponFromCouponBox::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBox);
	if (this->soap_out(soap, tag?tag:"ns1:UseDiscountCouponFromCouponBox", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__UseDiscountCouponFromCouponBox::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__UseDiscountCouponFromCouponBox(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__UseDiscountCouponFromCouponBox * SOAP_FMAC4 soap_get__ns1__UseDiscountCouponFromCouponBox(struct soap *soap, _ns1__UseDiscountCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__UseDiscountCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__UseDiscountCouponFromCouponBox * SOAP_FMAC2 soap_instantiate__ns1__UseDiscountCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__UseDiscountCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__UseDiscountCouponFromCouponBox);
		if (size)
			*size = sizeof(_ns1__UseDiscountCouponFromCouponBox);
		((_ns1__UseDiscountCouponFromCouponBox*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__UseDiscountCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(_ns1__UseDiscountCouponFromCouponBox);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__UseDiscountCouponFromCouponBox*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__UseDiscountCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UseDiscountCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__UseDiscountCouponFromCouponBox %p -> %p\n", q, p));
	*(_ns1__UseDiscountCouponFromCouponBox*)p = *(_ns1__UseDiscountCouponFromCouponBox*)q;
}

void _ns1__CheckDiscountCouponFromCouponBoxResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckDiscountCouponFromCouponBoxResponse::CheckDiscountCouponFromCouponBoxResult);
	soap_default_int(soap, &this->_ns1__CheckDiscountCouponFromCouponBoxResponse::outContractDetailNo);
	soap_default_int(soap, &this->_ns1__CheckDiscountCouponFromCouponBoxResponse::outItemPriceDiscount);
	/* transient soap skipped */
}

void _ns1__CheckDiscountCouponFromCouponBoxResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__CheckDiscountCouponFromCouponBoxResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckDiscountCouponFromCouponBoxResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckDiscountCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, const _ns1__CheckDiscountCouponFromCouponBoxResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBoxResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:CheckDiscountCouponFromCouponBoxResult");
	if (soap_out_int(soap, "ns1:CheckDiscountCouponFromCouponBoxResult", -1, &(a->_ns1__CheckDiscountCouponFromCouponBoxResponse::CheckDiscountCouponFromCouponBoxResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outContractDetailNo", -1, &(a->_ns1__CheckDiscountCouponFromCouponBoxResponse::outContractDetailNo), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outItemPriceDiscount", -1, &(a->_ns1__CheckDiscountCouponFromCouponBoxResponse::outItemPriceDiscount), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckDiscountCouponFromCouponBoxResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckDiscountCouponFromCouponBoxResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckDiscountCouponFromCouponBoxResponse * SOAP_FMAC4 soap_in__ns1__CheckDiscountCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__CheckDiscountCouponFromCouponBoxResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckDiscountCouponFromCouponBoxResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBoxResponse, sizeof(_ns1__CheckDiscountCouponFromCouponBoxResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBoxResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckDiscountCouponFromCouponBoxResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_CheckDiscountCouponFromCouponBoxResult1 = 1;
	size_t soap_flag_outContractDetailNo1 = 1;
	size_t soap_flag_outItemPriceDiscount1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_CheckDiscountCouponFromCouponBoxResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:CheckDiscountCouponFromCouponBoxResult", &(a->_ns1__CheckDiscountCouponFromCouponBoxResponse::CheckDiscountCouponFromCouponBoxResult), "xsd:int"))
				{	soap_flag_CheckDiscountCouponFromCouponBoxResult1--;
					continue;
				}
			if (soap_flag_outContractDetailNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outContractDetailNo", &(a->_ns1__CheckDiscountCouponFromCouponBoxResponse::outContractDetailNo), "xsd:int"))
				{	soap_flag_outContractDetailNo1--;
					continue;
				}
			if (soap_flag_outItemPriceDiscount1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outItemPriceDiscount", &(a->_ns1__CheckDiscountCouponFromCouponBoxResponse::outItemPriceDiscount), "xsd:int"))
				{	soap_flag_outItemPriceDiscount1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:CheckDiscountCouponFromCouponBoxResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckDiscountCouponFromCouponBoxResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBoxResponse, 0, sizeof(_ns1__CheckDiscountCouponFromCouponBoxResponse), 0, soap_copy__ns1__CheckDiscountCouponFromCouponBoxResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_CheckDiscountCouponFromCouponBoxResult1 > 0 || soap_flag_outContractDetailNo1 > 0 || soap_flag_outItemPriceDiscount1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckDiscountCouponFromCouponBoxResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBoxResponse);
	if (this->soap_out(soap, tag?tag:"ns1:CheckDiscountCouponFromCouponBoxResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckDiscountCouponFromCouponBoxResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckDiscountCouponFromCouponBoxResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckDiscountCouponFromCouponBoxResponse * SOAP_FMAC4 soap_get__ns1__CheckDiscountCouponFromCouponBoxResponse(struct soap *soap, _ns1__CheckDiscountCouponFromCouponBoxResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckDiscountCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckDiscountCouponFromCouponBoxResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckDiscountCouponFromCouponBoxResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckDiscountCouponFromCouponBoxResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBoxResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckDiscountCouponFromCouponBoxResponse);
		if (size)
			*size = sizeof(_ns1__CheckDiscountCouponFromCouponBoxResponse);
		((_ns1__CheckDiscountCouponFromCouponBoxResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckDiscountCouponFromCouponBoxResponse, n);
		if (size)
			*size = n * sizeof(_ns1__CheckDiscountCouponFromCouponBoxResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckDiscountCouponFromCouponBoxResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckDiscountCouponFromCouponBoxResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckDiscountCouponFromCouponBoxResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckDiscountCouponFromCouponBoxResponse %p -> %p\n", q, p));
	*(_ns1__CheckDiscountCouponFromCouponBoxResponse*)p = *(_ns1__CheckDiscountCouponFromCouponBoxResponse*)q;
}

void _ns1__CheckDiscountCouponFromCouponBox::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckDiscountCouponFromCouponBox::couponCardNo);
	this->_ns1__CheckDiscountCouponFromCouponBox::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__CheckDiscountCouponFromCouponBox::oidUser);
	this->_ns1__CheckDiscountCouponFromCouponBox::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__CheckDiscountCouponFromCouponBox::isCafe);
	soap_default_int(soap, &this->_ns1__CheckDiscountCouponFromCouponBox::itemPriceOrigin);
	this->_ns1__CheckDiscountCouponFromCouponBox::itemCode = NULL;
	/* transient soap skipped */
}

void _ns1__CheckDiscountCouponFromCouponBox::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckDiscountCouponFromCouponBox::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckDiscountCouponFromCouponBox::nxId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckDiscountCouponFromCouponBox::itemCode);
	/* transient soap skipped */
#endif
}

int _ns1__CheckDiscountCouponFromCouponBox::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckDiscountCouponFromCouponBox(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, const char *tag, int id, const _ns1__CheckDiscountCouponFromCouponBox *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBox), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:couponCardNo", -1, &(a->_ns1__CheckDiscountCouponFromCouponBox::couponCardNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__CheckDiscountCouponFromCouponBox::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__CheckDiscountCouponFromCouponBox::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__CheckDiscountCouponFromCouponBox::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__CheckDiscountCouponFromCouponBox::isCafe), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:itemPriceOrigin", -1, &(a->_ns1__CheckDiscountCouponFromCouponBox::itemPriceOrigin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:itemCode", -1, &(a->_ns1__CheckDiscountCouponFromCouponBox::itemCode), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckDiscountCouponFromCouponBox::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckDiscountCouponFromCouponBox(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckDiscountCouponFromCouponBox * SOAP_FMAC4 soap_in__ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__CheckDiscountCouponFromCouponBox *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckDiscountCouponFromCouponBox *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBox, sizeof(_ns1__CheckDiscountCouponFromCouponBox), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBox)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckDiscountCouponFromCouponBox *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_couponCardNo1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	size_t soap_flag_itemPriceOrigin1 = 1;
	size_t soap_flag_itemCode1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_couponCardNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:couponCardNo", &(a->_ns1__CheckDiscountCouponFromCouponBox::couponCardNo), "xsd:int"))
				{	soap_flag_couponCardNo1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__CheckDiscountCouponFromCouponBox::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__CheckDiscountCouponFromCouponBox::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__CheckDiscountCouponFromCouponBox::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__CheckDiscountCouponFromCouponBox::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			if (soap_flag_itemPriceOrigin1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:itemPriceOrigin", &(a->_ns1__CheckDiscountCouponFromCouponBox::itemPriceOrigin), "xsd:int"))
				{	soap_flag_itemPriceOrigin1--;
					continue;
				}
			if (soap_flag_itemCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:itemCode", &(a->_ns1__CheckDiscountCouponFromCouponBox::itemCode), "xsd:string"))
				{	soap_flag_itemCode1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckDiscountCouponFromCouponBox *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBox, 0, sizeof(_ns1__CheckDiscountCouponFromCouponBox), 0, soap_copy__ns1__CheckDiscountCouponFromCouponBox);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_couponCardNo1 > 0 || soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0 || soap_flag_itemPriceOrigin1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckDiscountCouponFromCouponBox::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBox);
	if (this->soap_out(soap, tag?tag:"ns1:CheckDiscountCouponFromCouponBox", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckDiscountCouponFromCouponBox::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckDiscountCouponFromCouponBox(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckDiscountCouponFromCouponBox * SOAP_FMAC4 soap_get__ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, _ns1__CheckDiscountCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckDiscountCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckDiscountCouponFromCouponBox * SOAP_FMAC2 soap_instantiate__ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckDiscountCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckDiscountCouponFromCouponBox);
		if (size)
			*size = sizeof(_ns1__CheckDiscountCouponFromCouponBox);
		((_ns1__CheckDiscountCouponFromCouponBox*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckDiscountCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(_ns1__CheckDiscountCouponFromCouponBox);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckDiscountCouponFromCouponBox*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckDiscountCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckDiscountCouponFromCouponBox %p -> %p\n", q, p));
	*(_ns1__CheckDiscountCouponFromCouponBox*)p = *(_ns1__CheckDiscountCouponFromCouponBox*)q;
}

void _ns1__SelectHoldingCouponCountByAccountIdResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectHoldingCouponCountByAccountIdResponse::SelectHoldingCouponCountByAccountIdResult = NULL;
	/* transient soap skipped */
}

void _ns1__SelectHoldingCouponCountByAccountIdResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ArrayOfHoldingCouponCountEntity(soap, &this->_ns1__SelectHoldingCouponCountByAccountIdResponse::SelectHoldingCouponCountByAccountIdResult);
	/* transient soap skipped */
#endif
}

int _ns1__SelectHoldingCouponCountByAccountIdResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectHoldingCouponCountByAccountIdResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectHoldingCouponCountByAccountIdResponse(struct soap *soap, const char *tag, int id, const _ns1__SelectHoldingCouponCountByAccountIdResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdResponse), type))
		return soap->error;
	if (a->SelectHoldingCouponCountByAccountIdResult)
		soap_element_result(soap, "ns1:SelectHoldingCouponCountByAccountIdResult");
	if (soap_out_PointerTons1__ArrayOfHoldingCouponCountEntity(soap, "ns1:SelectHoldingCouponCountByAccountIdResult", -1, &(a->_ns1__SelectHoldingCouponCountByAccountIdResponse::SelectHoldingCouponCountByAccountIdResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectHoldingCouponCountByAccountIdResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectHoldingCouponCountByAccountIdResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountIdResponse * SOAP_FMAC4 soap_in__ns1__SelectHoldingCouponCountByAccountIdResponse(struct soap *soap, const char *tag, _ns1__SelectHoldingCouponCountByAccountIdResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectHoldingCouponCountByAccountIdResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdResponse, sizeof(_ns1__SelectHoldingCouponCountByAccountIdResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectHoldingCouponCountByAccountIdResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_SelectHoldingCouponCountByAccountIdResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SelectHoldingCouponCountByAccountIdResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfHoldingCouponCountEntity(soap, "ns1:SelectHoldingCouponCountByAccountIdResult", &(a->_ns1__SelectHoldingCouponCountByAccountIdResponse::SelectHoldingCouponCountByAccountIdResult), "ns1:ArrayOfHoldingCouponCountEntity"))
				{	soap_flag_SelectHoldingCouponCountByAccountIdResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:SelectHoldingCouponCountByAccountIdResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectHoldingCouponCountByAccountIdResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdResponse, 0, sizeof(_ns1__SelectHoldingCouponCountByAccountIdResponse), 0, soap_copy__ns1__SelectHoldingCouponCountByAccountIdResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectHoldingCouponCountByAccountIdResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdResponse);
	if (this->soap_out(soap, tag?tag:"ns1:SelectHoldingCouponCountByAccountIdResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectHoldingCouponCountByAccountIdResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectHoldingCouponCountByAccountIdResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountIdResponse * SOAP_FMAC4 soap_get__ns1__SelectHoldingCouponCountByAccountIdResponse(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountIdResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectHoldingCouponCountByAccountIdResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectHoldingCouponCountByAccountIdResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectHoldingCouponCountByAccountIdResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectHoldingCouponCountByAccountIdResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectHoldingCouponCountByAccountIdResponse);
		if (size)
			*size = sizeof(_ns1__SelectHoldingCouponCountByAccountIdResponse);
		((_ns1__SelectHoldingCouponCountByAccountIdResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectHoldingCouponCountByAccountIdResponse, n);
		if (size)
			*size = n * sizeof(_ns1__SelectHoldingCouponCountByAccountIdResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectHoldingCouponCountByAccountIdResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectHoldingCouponCountByAccountIdResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectHoldingCouponCountByAccountIdResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectHoldingCouponCountByAccountIdResponse %p -> %p\n", q, p));
	*(_ns1__SelectHoldingCouponCountByAccountIdResponse*)p = *(_ns1__SelectHoldingCouponCountByAccountIdResponse*)q;
}

void _ns1__SelectHoldingCouponCountByAccountId::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectHoldingCouponCountByAccountId::accountId = NULL;
	/* transient soap skipped */
}

void _ns1__SelectHoldingCouponCountByAccountId::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectHoldingCouponCountByAccountId::accountId);
	/* transient soap skipped */
#endif
}

int _ns1__SelectHoldingCouponCountByAccountId::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectHoldingCouponCountByAccountId(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, const char *tag, int id, const _ns1__SelectHoldingCouponCountByAccountId *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountId), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:accountId", -1, &(a->_ns1__SelectHoldingCouponCountByAccountId::accountId), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectHoldingCouponCountByAccountId::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectHoldingCouponCountByAccountId(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountId * SOAP_FMAC4 soap_in__ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, const char *tag, _ns1__SelectHoldingCouponCountByAccountId *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectHoldingCouponCountByAccountId *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountId, sizeof(_ns1__SelectHoldingCouponCountByAccountId), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountId)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectHoldingCouponCountByAccountId *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_accountId1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_accountId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:accountId", &(a->_ns1__SelectHoldingCouponCountByAccountId::accountId), "xsd:string"))
				{	soap_flag_accountId1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectHoldingCouponCountByAccountId *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountId, 0, sizeof(_ns1__SelectHoldingCouponCountByAccountId), 0, soap_copy__ns1__SelectHoldingCouponCountByAccountId);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectHoldingCouponCountByAccountId::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountId);
	if (this->soap_out(soap, tag?tag:"ns1:SelectHoldingCouponCountByAccountId", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectHoldingCouponCountByAccountId::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectHoldingCouponCountByAccountId(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountId * SOAP_FMAC4 soap_get__ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountId *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectHoldingCouponCountByAccountId(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectHoldingCouponCountByAccountId * SOAP_FMAC2 soap_instantiate__ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectHoldingCouponCountByAccountId(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountId, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectHoldingCouponCountByAccountId);
		if (size)
			*size = sizeof(_ns1__SelectHoldingCouponCountByAccountId);
		((_ns1__SelectHoldingCouponCountByAccountId*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectHoldingCouponCountByAccountId, n);
		if (size)
			*size = n * sizeof(_ns1__SelectHoldingCouponCountByAccountId);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectHoldingCouponCountByAccountId*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectHoldingCouponCountByAccountId*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectHoldingCouponCountByAccountId %p -> %p\n", q, p));
	*(_ns1__SelectHoldingCouponCountByAccountId*)p = *(_ns1__SelectHoldingCouponCountByAccountId*)q;
}

void _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse::SelectHoldingCouponCountByAccountIdByGameServiceCodeResult = NULL;
	/* transient soap skipped */
}

void _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__HoldingCouponCountEntity(soap, &this->_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse::SelectHoldingCouponCountByAccountIdByGameServiceCodeResult);
	/* transient soap skipped */
#endif
}

int _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(struct soap *soap, const char *tag, int id, const _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse), type))
		return soap->error;
	if (a->SelectHoldingCouponCountByAccountIdByGameServiceCodeResult)
		soap_element_result(soap, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCodeResult");
	if (soap_out_PointerTons1__HoldingCouponCountEntity(soap, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCodeResult", -1, &(a->_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse::SelectHoldingCouponCountByAccountIdByGameServiceCodeResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse * SOAP_FMAC4 soap_in__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(struct soap *soap, const char *tag, _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse, sizeof(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_SelectHoldingCouponCountByAccountIdByGameServiceCodeResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SelectHoldingCouponCountByAccountIdByGameServiceCodeResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__HoldingCouponCountEntity(soap, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCodeResult", &(a->_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse::SelectHoldingCouponCountByAccountIdByGameServiceCodeResult), "ns1:HoldingCouponCountEntity"))
				{	soap_flag_SelectHoldingCouponCountByAccountIdByGameServiceCodeResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCodeResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse, 0, sizeof(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse), 0, soap_copy__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse);
	if (this->soap_out(soap, tag?tag:"ns1:SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse * SOAP_FMAC4 soap_get__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse);
		if (size)
			*size = sizeof(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse);
		((_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse, n);
		if (size)
			*size = n * sizeof(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse %p -> %p\n", q, p));
	*(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse*)p = *(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse*)q;
}

void _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode::accountId = NULL;
	this->_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode::gameServiceCode = NULL;
	/* transient soap skipped */
}

void _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode::accountId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode::gameServiceCode);
	/* transient soap skipped */
#endif
}

int _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, const char *tag, int id, const _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:accountId", -1, &(a->_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode::accountId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:gameServiceCode", -1, &(a->_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode::gameServiceCode), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode * SOAP_FMAC4 soap_in__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, const char *tag, _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode, sizeof(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_accountId1 = 1;
	size_t soap_flag_gameServiceCode1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_accountId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:accountId", &(a->_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode::accountId), "xsd:string"))
				{	soap_flag_accountId1--;
					continue;
				}
			if (soap_flag_gameServiceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:gameServiceCode", &(a->_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode::gameServiceCode), "xsd:string"))
				{	soap_flag_gameServiceCode1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode, 0, sizeof(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode), 0, soap_copy__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode);
	if (this->soap_out(soap, tag?tag:"ns1:SelectHoldingCouponCountByAccountIdByGameServiceCode", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode * SOAP_FMAC4 soap_get__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode * SOAP_FMAC2 soap_instantiate__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode);
		if (size)
			*size = sizeof(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode);
		((_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode, n);
		if (size)
			*size = n * sizeof(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode %p -> %p\n", q, p));
	*(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode*)p = *(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode*)q;
}

void _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse::SelectAppliableItemCodeForDiscountByAccountByGameResult = NULL;
	/* transient soap skipped */
}

void _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity(soap, &this->_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse::SelectAppliableItemCodeForDiscountByAccountByGameResult);
	/* transient soap skipped */
#endif
}

int _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(struct soap *soap, const char *tag, int id, const _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse), type))
		return soap->error;
	if (a->SelectAppliableItemCodeForDiscountByAccountByGameResult)
		soap_element_result(soap, "ns1:SelectAppliableItemCodeForDiscountByAccountByGameResult");
	if (soap_out_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity(soap, "ns1:SelectAppliableItemCodeForDiscountByAccountByGameResult", -1, &(a->_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse::SelectAppliableItemCodeForDiscountByAccountByGameResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse * SOAP_FMAC4 soap_in__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(struct soap *soap, const char *tag, _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse, sizeof(_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_SelectAppliableItemCodeForDiscountByAccountByGameResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SelectAppliableItemCodeForDiscountByAccountByGameResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity(soap, "ns1:SelectAppliableItemCodeForDiscountByAccountByGameResult", &(a->_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse::SelectAppliableItemCodeForDiscountByAccountByGameResult), "ns1:ArrayOfDiscountAppliableItemInfoEntity"))
				{	soap_flag_SelectAppliableItemCodeForDiscountByAccountByGameResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:SelectAppliableItemCodeForDiscountByAccountByGameResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse, 0, sizeof(_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse), 0, soap_copy__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse);
	if (this->soap_out(soap, tag?tag:"ns1:SelectAppliableItemCodeForDiscountByAccountByGameResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse * SOAP_FMAC4 soap_get__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(struct soap *soap, _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse);
		if (size)
			*size = sizeof(_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse);
		((_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse, n);
		if (size)
			*size = n * sizeof(_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse %p -> %p\n", q, p));
	*(_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse*)p = *(_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse*)q;
}

void _ns1__SelectAppliableItemCodeForDiscountByAccountByGame::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectAppliableItemCodeForDiscountByAccountByGame::accountId = NULL;
	this->_ns1__SelectAppliableItemCodeForDiscountByAccountByGame::gameServiceCode = NULL;
	/* transient soap skipped */
}

void _ns1__SelectAppliableItemCodeForDiscountByAccountByGame::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectAppliableItemCodeForDiscountByAccountByGame::accountId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectAppliableItemCodeForDiscountByAccountByGame::gameServiceCode);
	/* transient soap skipped */
#endif
}

int _ns1__SelectAppliableItemCodeForDiscountByAccountByGame::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, const char *tag, int id, const _ns1__SelectAppliableItemCodeForDiscountByAccountByGame *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGame), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:accountId", -1, &(a->_ns1__SelectAppliableItemCodeForDiscountByAccountByGame::accountId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:gameServiceCode", -1, &(a->_ns1__SelectAppliableItemCodeForDiscountByAccountByGame::gameServiceCode), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectAppliableItemCodeForDiscountByAccountByGame::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectAppliableItemCodeForDiscountByAccountByGame * SOAP_FMAC4 soap_in__ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, const char *tag, _ns1__SelectAppliableItemCodeForDiscountByAccountByGame *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectAppliableItemCodeForDiscountByAccountByGame *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGame, sizeof(_ns1__SelectAppliableItemCodeForDiscountByAccountByGame), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGame)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectAppliableItemCodeForDiscountByAccountByGame *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_accountId1 = 1;
	size_t soap_flag_gameServiceCode1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_accountId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:accountId", &(a->_ns1__SelectAppliableItemCodeForDiscountByAccountByGame::accountId), "xsd:string"))
				{	soap_flag_accountId1--;
					continue;
				}
			if (soap_flag_gameServiceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:gameServiceCode", &(a->_ns1__SelectAppliableItemCodeForDiscountByAccountByGame::gameServiceCode), "xsd:string"))
				{	soap_flag_gameServiceCode1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectAppliableItemCodeForDiscountByAccountByGame *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGame, 0, sizeof(_ns1__SelectAppliableItemCodeForDiscountByAccountByGame), 0, soap_copy__ns1__SelectAppliableItemCodeForDiscountByAccountByGame);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectAppliableItemCodeForDiscountByAccountByGame::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGame);
	if (this->soap_out(soap, tag?tag:"ns1:SelectAppliableItemCodeForDiscountByAccountByGame", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectAppliableItemCodeForDiscountByAccountByGame::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectAppliableItemCodeForDiscountByAccountByGame * SOAP_FMAC4 soap_get__ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, _ns1__SelectAppliableItemCodeForDiscountByAccountByGame *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectAppliableItemCodeForDiscountByAccountByGame * SOAP_FMAC2 soap_instantiate__ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectAppliableItemCodeForDiscountByAccountByGame(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGame, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectAppliableItemCodeForDiscountByAccountByGame);
		if (size)
			*size = sizeof(_ns1__SelectAppliableItemCodeForDiscountByAccountByGame);
		((_ns1__SelectAppliableItemCodeForDiscountByAccountByGame*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectAppliableItemCodeForDiscountByAccountByGame, n);
		if (size)
			*size = n * sizeof(_ns1__SelectAppliableItemCodeForDiscountByAccountByGame);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectAppliableItemCodeForDiscountByAccountByGame*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectAppliableItemCodeForDiscountByAccountByGame*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectAppliableItemCodeForDiscountByAccountByGame %p -> %p\n", q, p));
	*(_ns1__SelectAppliableItemCodeForDiscountByAccountByGame*)p = *(_ns1__SelectAppliableItemCodeForDiscountByAccountByGame*)q;
}

void _ns1__CheckActivationCouponStatusResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckActivationCouponStatusResponse::CheckActivationCouponStatusResult);
	soap_default_bool(soap, &this->_ns1__CheckActivationCouponStatusResponse::outActivated);
	/* transient soap skipped */
}

void _ns1__CheckActivationCouponStatusResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__CheckActivationCouponStatusResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckActivationCouponStatusResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckActivationCouponStatusResponse(struct soap *soap, const char *tag, int id, const _ns1__CheckActivationCouponStatusResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckActivationCouponStatusResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:CheckActivationCouponStatusResult");
	if (soap_out_int(soap, "ns1:CheckActivationCouponStatusResult", -1, &(a->_ns1__CheckActivationCouponStatusResponse::CheckActivationCouponStatusResult), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:outActivated", -1, &(a->_ns1__CheckActivationCouponStatusResponse::outActivated), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckActivationCouponStatusResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckActivationCouponStatusResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckActivationCouponStatusResponse * SOAP_FMAC4 soap_in__ns1__CheckActivationCouponStatusResponse(struct soap *soap, const char *tag, _ns1__CheckActivationCouponStatusResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckActivationCouponStatusResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckActivationCouponStatusResponse, sizeof(_ns1__CheckActivationCouponStatusResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckActivationCouponStatusResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckActivationCouponStatusResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_CheckActivationCouponStatusResult1 = 1;
	size_t soap_flag_outActivated1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_CheckActivationCouponStatusResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:CheckActivationCouponStatusResult", &(a->_ns1__CheckActivationCouponStatusResponse::CheckActivationCouponStatusResult), "xsd:int"))
				{	soap_flag_CheckActivationCouponStatusResult1--;
					continue;
				}
			if (soap_flag_outActivated1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:outActivated", &(a->_ns1__CheckActivationCouponStatusResponse::outActivated), "xsd:boolean"))
				{	soap_flag_outActivated1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:CheckActivationCouponStatusResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckActivationCouponStatusResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckActivationCouponStatusResponse, 0, sizeof(_ns1__CheckActivationCouponStatusResponse), 0, soap_copy__ns1__CheckActivationCouponStatusResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_CheckActivationCouponStatusResult1 > 0 || soap_flag_outActivated1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckActivationCouponStatusResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckActivationCouponStatusResponse);
	if (this->soap_out(soap, tag?tag:"ns1:CheckActivationCouponStatusResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckActivationCouponStatusResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckActivationCouponStatusResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckActivationCouponStatusResponse * SOAP_FMAC4 soap_get__ns1__CheckActivationCouponStatusResponse(struct soap *soap, _ns1__CheckActivationCouponStatusResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckActivationCouponStatusResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckActivationCouponStatusResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckActivationCouponStatusResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckActivationCouponStatusResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckActivationCouponStatusResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckActivationCouponStatusResponse);
		if (size)
			*size = sizeof(_ns1__CheckActivationCouponStatusResponse);
		((_ns1__CheckActivationCouponStatusResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckActivationCouponStatusResponse, n);
		if (size)
			*size = n * sizeof(_ns1__CheckActivationCouponStatusResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckActivationCouponStatusResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckActivationCouponStatusResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckActivationCouponStatusResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckActivationCouponStatusResponse %p -> %p\n", q, p));
	*(_ns1__CheckActivationCouponStatusResponse*)p = *(_ns1__CheckActivationCouponStatusResponse*)q;
}

void _ns1__CheckActivationCouponStatus::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__CheckActivationCouponStatus::couponData = NULL;
	soap_default_LONG64(soap, &this->_ns1__CheckActivationCouponStatus::checkSum);
	soap_default_LONG64(soap, &this->_ns1__CheckActivationCouponStatus::key);
	soap_default_int(soap, &this->_ns1__CheckActivationCouponStatus::partyID);
	/* transient soap skipped */
}

void _ns1__CheckActivationCouponStatus::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckActivationCouponStatus::couponData);
	/* transient soap skipped */
#endif
}

int _ns1__CheckActivationCouponStatus::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckActivationCouponStatus(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckActivationCouponStatus(struct soap *soap, const char *tag, int id, const _ns1__CheckActivationCouponStatus *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckActivationCouponStatus), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponData", -1, &(a->_ns1__CheckActivationCouponStatus::couponData), ""))
		return soap->error;
	if (soap_out_LONG64(soap, "ns1:checkSum", -1, &(a->_ns1__CheckActivationCouponStatus::checkSum), ""))
		return soap->error;
	if (soap_out_LONG64(soap, "ns1:key", -1, &(a->_ns1__CheckActivationCouponStatus::key), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:partyID", -1, &(a->_ns1__CheckActivationCouponStatus::partyID), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckActivationCouponStatus::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckActivationCouponStatus(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckActivationCouponStatus * SOAP_FMAC4 soap_in__ns1__CheckActivationCouponStatus(struct soap *soap, const char *tag, _ns1__CheckActivationCouponStatus *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckActivationCouponStatus *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckActivationCouponStatus, sizeof(_ns1__CheckActivationCouponStatus), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckActivationCouponStatus)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckActivationCouponStatus *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_couponData1 = 1;
	size_t soap_flag_checkSum1 = 1;
	size_t soap_flag_key1 = 1;
	size_t soap_flag_partyID1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_couponData1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponData", &(a->_ns1__CheckActivationCouponStatus::couponData), "xsd:string"))
				{	soap_flag_couponData1--;
					continue;
				}
			if (soap_flag_checkSum1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns1:checkSum", &(a->_ns1__CheckActivationCouponStatus::checkSum), "xsd:long"))
				{	soap_flag_checkSum1--;
					continue;
				}
			if (soap_flag_key1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns1:key", &(a->_ns1__CheckActivationCouponStatus::key), "xsd:long"))
				{	soap_flag_key1--;
					continue;
				}
			if (soap_flag_partyID1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:partyID", &(a->_ns1__CheckActivationCouponStatus::partyID), "xsd:int"))
				{	soap_flag_partyID1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckActivationCouponStatus *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckActivationCouponStatus, 0, sizeof(_ns1__CheckActivationCouponStatus), 0, soap_copy__ns1__CheckActivationCouponStatus);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_checkSum1 > 0 || soap_flag_key1 > 0 || soap_flag_partyID1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckActivationCouponStatus::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckActivationCouponStatus);
	if (this->soap_out(soap, tag?tag:"ns1:CheckActivationCouponStatus", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckActivationCouponStatus::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckActivationCouponStatus(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckActivationCouponStatus * SOAP_FMAC4 soap_get__ns1__CheckActivationCouponStatus(struct soap *soap, _ns1__CheckActivationCouponStatus *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckActivationCouponStatus(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckActivationCouponStatus * SOAP_FMAC2 soap_instantiate__ns1__CheckActivationCouponStatus(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckActivationCouponStatus(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckActivationCouponStatus, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckActivationCouponStatus);
		if (size)
			*size = sizeof(_ns1__CheckActivationCouponStatus);
		((_ns1__CheckActivationCouponStatus*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckActivationCouponStatus, n);
		if (size)
			*size = n * sizeof(_ns1__CheckActivationCouponStatus);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckActivationCouponStatus*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckActivationCouponStatus*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckActivationCouponStatus(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckActivationCouponStatus %p -> %p\n", q, p));
	*(_ns1__CheckActivationCouponStatus*)p = *(_ns1__CheckActivationCouponStatus*)q;
}

void _ns1__CancelActivationCashCouponResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CancelActivationCashCouponResponse::CancelActivationCashCouponResult);
	soap_default_int(soap, &this->_ns1__CancelActivationCashCouponResponse::outCouponPinStatus);
	soap_default_int(soap, &this->_ns1__CancelActivationCashCouponResponse::outApprovalNo);
	this->_ns1__CancelActivationCashCouponResponse::outApprovalDatetime = NULL;
	this->_ns1__CancelActivationCashCouponResponse::outOrderId = NULL;
	/* transient soap skipped */
}

void _ns1__CancelActivationCashCouponResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CancelActivationCashCouponResponse::outApprovalDatetime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CancelActivationCashCouponResponse::outOrderId);
	/* transient soap skipped */
#endif
}

int _ns1__CancelActivationCashCouponResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CancelActivationCashCouponResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CancelActivationCashCouponResponse(struct soap *soap, const char *tag, int id, const _ns1__CancelActivationCashCouponResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CancelActivationCashCouponResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:CancelActivationCashCouponResult");
	if (soap_out_int(soap, "ns1:CancelActivationCashCouponResult", -1, &(a->_ns1__CancelActivationCashCouponResponse::CancelActivationCashCouponResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outCouponPinStatus", -1, &(a->_ns1__CancelActivationCashCouponResponse::outCouponPinStatus), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__CancelActivationCashCouponResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__CancelActivationCashCouponResponse::outApprovalDatetime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outOrderId", -1, &(a->_ns1__CancelActivationCashCouponResponse::outOrderId), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CancelActivationCashCouponResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CancelActivationCashCouponResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CancelActivationCashCouponResponse * SOAP_FMAC4 soap_in__ns1__CancelActivationCashCouponResponse(struct soap *soap, const char *tag, _ns1__CancelActivationCashCouponResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CancelActivationCashCouponResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CancelActivationCashCouponResponse, sizeof(_ns1__CancelActivationCashCouponResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CancelActivationCashCouponResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CancelActivationCashCouponResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_CancelActivationCashCouponResult1 = 1;
	size_t soap_flag_outCouponPinStatus1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	size_t soap_flag_outOrderId1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_CancelActivationCashCouponResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:CancelActivationCashCouponResult", &(a->_ns1__CancelActivationCashCouponResponse::CancelActivationCashCouponResult), "xsd:int"))
				{	soap_flag_CancelActivationCashCouponResult1--;
					continue;
				}
			if (soap_flag_outCouponPinStatus1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outCouponPinStatus", &(a->_ns1__CancelActivationCashCouponResponse::outCouponPinStatus), "xsd:int"))
				{	soap_flag_outCouponPinStatus1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__CancelActivationCashCouponResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__CancelActivationCashCouponResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			if (soap_flag_outOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outOrderId", &(a->_ns1__CancelActivationCashCouponResponse::outOrderId), "xsd:string"))
				{	soap_flag_outOrderId1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:CancelActivationCashCouponResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CancelActivationCashCouponResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CancelActivationCashCouponResponse, 0, sizeof(_ns1__CancelActivationCashCouponResponse), 0, soap_copy__ns1__CancelActivationCashCouponResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_CancelActivationCashCouponResult1 > 0 || soap_flag_outCouponPinStatus1 > 0 || soap_flag_outApprovalNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CancelActivationCashCouponResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CancelActivationCashCouponResponse);
	if (this->soap_out(soap, tag?tag:"ns1:CancelActivationCashCouponResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CancelActivationCashCouponResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CancelActivationCashCouponResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CancelActivationCashCouponResponse * SOAP_FMAC4 soap_get__ns1__CancelActivationCashCouponResponse(struct soap *soap, _ns1__CancelActivationCashCouponResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CancelActivationCashCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CancelActivationCashCouponResponse * SOAP_FMAC2 soap_instantiate__ns1__CancelActivationCashCouponResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CancelActivationCashCouponResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CancelActivationCashCouponResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CancelActivationCashCouponResponse);
		if (size)
			*size = sizeof(_ns1__CancelActivationCashCouponResponse);
		((_ns1__CancelActivationCashCouponResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CancelActivationCashCouponResponse, n);
		if (size)
			*size = n * sizeof(_ns1__CancelActivationCashCouponResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CancelActivationCashCouponResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CancelActivationCashCouponResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CancelActivationCashCouponResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CancelActivationCashCouponResponse %p -> %p\n", q, p));
	*(_ns1__CancelActivationCashCouponResponse*)p = *(_ns1__CancelActivationCashCouponResponse*)q;
}

void _ns1__CancelActivationCashCoupon::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CancelActivationCashCoupon::sourceApprovalNo);
	this->_ns1__CancelActivationCashCoupon::orderId = NULL;
	this->_ns1__CancelActivationCashCoupon::sourceOrderId = NULL;
	this->_ns1__CancelActivationCashCoupon::orderDateTime = NULL;
	this->_ns1__CancelActivationCashCoupon::couponData = NULL;
	soap_default_LONG64(soap, &this->_ns1__CancelActivationCashCoupon::checkSum);
	soap_default_LONG64(soap, &this->_ns1__CancelActivationCashCoupon::key);
	soap_default_int(soap, &this->_ns1__CancelActivationCashCoupon::partyID);
	/* transient soap skipped */
}

void _ns1__CancelActivationCashCoupon::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CancelActivationCashCoupon::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CancelActivationCashCoupon::sourceOrderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CancelActivationCashCoupon::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CancelActivationCashCoupon::couponData);
	/* transient soap skipped */
#endif
}

int _ns1__CancelActivationCashCoupon::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CancelActivationCashCoupon(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CancelActivationCashCoupon(struct soap *soap, const char *tag, int id, const _ns1__CancelActivationCashCoupon *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CancelActivationCashCoupon), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:sourceApprovalNo", -1, &(a->_ns1__CancelActivationCashCoupon::sourceApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__CancelActivationCashCoupon::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:sourceOrderId", -1, &(a->_ns1__CancelActivationCashCoupon::sourceOrderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__CancelActivationCashCoupon::orderDateTime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponData", -1, &(a->_ns1__CancelActivationCashCoupon::couponData), ""))
		return soap->error;
	if (soap_out_LONG64(soap, "ns1:checkSum", -1, &(a->_ns1__CancelActivationCashCoupon::checkSum), ""))
		return soap->error;
	if (soap_out_LONG64(soap, "ns1:key", -1, &(a->_ns1__CancelActivationCashCoupon::key), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:partyID", -1, &(a->_ns1__CancelActivationCashCoupon::partyID), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CancelActivationCashCoupon::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CancelActivationCashCoupon(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CancelActivationCashCoupon * SOAP_FMAC4 soap_in__ns1__CancelActivationCashCoupon(struct soap *soap, const char *tag, _ns1__CancelActivationCashCoupon *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CancelActivationCashCoupon *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CancelActivationCashCoupon, sizeof(_ns1__CancelActivationCashCoupon), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CancelActivationCashCoupon)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CancelActivationCashCoupon *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_sourceApprovalNo1 = 1;
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_sourceOrderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponData1 = 1;
	size_t soap_flag_checkSum1 = 1;
	size_t soap_flag_key1 = 1;
	size_t soap_flag_partyID1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_sourceApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:sourceApprovalNo", &(a->_ns1__CancelActivationCashCoupon::sourceApprovalNo), "xsd:int"))
				{	soap_flag_sourceApprovalNo1--;
					continue;
				}
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__CancelActivationCashCoupon::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_sourceOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:sourceOrderId", &(a->_ns1__CancelActivationCashCoupon::sourceOrderId), "xsd:string"))
				{	soap_flag_sourceOrderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__CancelActivationCashCoupon::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponData1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponData", &(a->_ns1__CancelActivationCashCoupon::couponData), "xsd:string"))
				{	soap_flag_couponData1--;
					continue;
				}
			if (soap_flag_checkSum1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns1:checkSum", &(a->_ns1__CancelActivationCashCoupon::checkSum), "xsd:long"))
				{	soap_flag_checkSum1--;
					continue;
				}
			if (soap_flag_key1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns1:key", &(a->_ns1__CancelActivationCashCoupon::key), "xsd:long"))
				{	soap_flag_key1--;
					continue;
				}
			if (soap_flag_partyID1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:partyID", &(a->_ns1__CancelActivationCashCoupon::partyID), "xsd:int"))
				{	soap_flag_partyID1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CancelActivationCashCoupon *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CancelActivationCashCoupon, 0, sizeof(_ns1__CancelActivationCashCoupon), 0, soap_copy__ns1__CancelActivationCashCoupon);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_sourceApprovalNo1 > 0 || soap_flag_checkSum1 > 0 || soap_flag_key1 > 0 || soap_flag_partyID1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CancelActivationCashCoupon::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CancelActivationCashCoupon);
	if (this->soap_out(soap, tag?tag:"ns1:CancelActivationCashCoupon", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CancelActivationCashCoupon::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CancelActivationCashCoupon(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CancelActivationCashCoupon * SOAP_FMAC4 soap_get__ns1__CancelActivationCashCoupon(struct soap *soap, _ns1__CancelActivationCashCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CancelActivationCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CancelActivationCashCoupon * SOAP_FMAC2 soap_instantiate__ns1__CancelActivationCashCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CancelActivationCashCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CancelActivationCashCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CancelActivationCashCoupon);
		if (size)
			*size = sizeof(_ns1__CancelActivationCashCoupon);
		((_ns1__CancelActivationCashCoupon*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CancelActivationCashCoupon, n);
		if (size)
			*size = n * sizeof(_ns1__CancelActivationCashCoupon);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CancelActivationCashCoupon*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CancelActivationCashCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CancelActivationCashCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CancelActivationCashCoupon %p -> %p\n", q, p));
	*(_ns1__CancelActivationCashCoupon*)p = *(_ns1__CancelActivationCashCoupon*)q;
}

void _ns1__ReverseDeactivationCashCouponResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__ReverseDeactivationCashCouponResponse::ReverseDeactivationCashCouponResult);
	soap_default_int(soap, &this->_ns1__ReverseDeactivationCashCouponResponse::outCouponPinStatus);
	soap_default_int(soap, &this->_ns1__ReverseDeactivationCashCouponResponse::outSourceApprovalNo);
	soap_default_int(soap, &this->_ns1__ReverseDeactivationCashCouponResponse::outApprovalNo);
	this->_ns1__ReverseDeactivationCashCouponResponse::outApprovalDatetime = NULL;
	this->_ns1__ReverseDeactivationCashCouponResponse::outOrderId = NULL;
	/* transient soap skipped */
}

void _ns1__ReverseDeactivationCashCouponResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ReverseDeactivationCashCouponResponse::outApprovalDatetime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ReverseDeactivationCashCouponResponse::outOrderId);
	/* transient soap skipped */
#endif
}

int _ns1__ReverseDeactivationCashCouponResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__ReverseDeactivationCashCouponResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ReverseDeactivationCashCouponResponse(struct soap *soap, const char *tag, int id, const _ns1__ReverseDeactivationCashCouponResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__ReverseDeactivationCashCouponResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:ReverseDeactivationCashCouponResult");
	if (soap_out_int(soap, "ns1:ReverseDeactivationCashCouponResult", -1, &(a->_ns1__ReverseDeactivationCashCouponResponse::ReverseDeactivationCashCouponResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outCouponPinStatus", -1, &(a->_ns1__ReverseDeactivationCashCouponResponse::outCouponPinStatus), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outSourceApprovalNo", -1, &(a->_ns1__ReverseDeactivationCashCouponResponse::outSourceApprovalNo), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__ReverseDeactivationCashCouponResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__ReverseDeactivationCashCouponResponse::outApprovalDatetime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outOrderId", -1, &(a->_ns1__ReverseDeactivationCashCouponResponse::outOrderId), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__ReverseDeactivationCashCouponResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__ReverseDeactivationCashCouponResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__ReverseDeactivationCashCouponResponse * SOAP_FMAC4 soap_in__ns1__ReverseDeactivationCashCouponResponse(struct soap *soap, const char *tag, _ns1__ReverseDeactivationCashCouponResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__ReverseDeactivationCashCouponResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__ReverseDeactivationCashCouponResponse, sizeof(_ns1__ReverseDeactivationCashCouponResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__ReverseDeactivationCashCouponResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__ReverseDeactivationCashCouponResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_ReverseDeactivationCashCouponResult1 = 1;
	size_t soap_flag_outCouponPinStatus1 = 1;
	size_t soap_flag_outSourceApprovalNo1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	size_t soap_flag_outOrderId1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ReverseDeactivationCashCouponResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:ReverseDeactivationCashCouponResult", &(a->_ns1__ReverseDeactivationCashCouponResponse::ReverseDeactivationCashCouponResult), "xsd:int"))
				{	soap_flag_ReverseDeactivationCashCouponResult1--;
					continue;
				}
			if (soap_flag_outCouponPinStatus1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outCouponPinStatus", &(a->_ns1__ReverseDeactivationCashCouponResponse::outCouponPinStatus), "xsd:int"))
				{	soap_flag_outCouponPinStatus1--;
					continue;
				}
			if (soap_flag_outSourceApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outSourceApprovalNo", &(a->_ns1__ReverseDeactivationCashCouponResponse::outSourceApprovalNo), "xsd:int"))
				{	soap_flag_outSourceApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__ReverseDeactivationCashCouponResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__ReverseDeactivationCashCouponResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			if (soap_flag_outOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outOrderId", &(a->_ns1__ReverseDeactivationCashCouponResponse::outOrderId), "xsd:string"))
				{	soap_flag_outOrderId1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:ReverseDeactivationCashCouponResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__ReverseDeactivationCashCouponResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__ReverseDeactivationCashCouponResponse, 0, sizeof(_ns1__ReverseDeactivationCashCouponResponse), 0, soap_copy__ns1__ReverseDeactivationCashCouponResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_ReverseDeactivationCashCouponResult1 > 0 || soap_flag_outCouponPinStatus1 > 0 || soap_flag_outSourceApprovalNo1 > 0 || soap_flag_outApprovalNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__ReverseDeactivationCashCouponResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__ReverseDeactivationCashCouponResponse);
	if (this->soap_out(soap, tag?tag:"ns1:ReverseDeactivationCashCouponResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__ReverseDeactivationCashCouponResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__ReverseDeactivationCashCouponResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__ReverseDeactivationCashCouponResponse * SOAP_FMAC4 soap_get__ns1__ReverseDeactivationCashCouponResponse(struct soap *soap, _ns1__ReverseDeactivationCashCouponResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__ReverseDeactivationCashCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__ReverseDeactivationCashCouponResponse * SOAP_FMAC2 soap_instantiate__ns1__ReverseDeactivationCashCouponResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__ReverseDeactivationCashCouponResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__ReverseDeactivationCashCouponResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__ReverseDeactivationCashCouponResponse);
		if (size)
			*size = sizeof(_ns1__ReverseDeactivationCashCouponResponse);
		((_ns1__ReverseDeactivationCashCouponResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__ReverseDeactivationCashCouponResponse, n);
		if (size)
			*size = n * sizeof(_ns1__ReverseDeactivationCashCouponResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__ReverseDeactivationCashCouponResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__ReverseDeactivationCashCouponResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__ReverseDeactivationCashCouponResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__ReverseDeactivationCashCouponResponse %p -> %p\n", q, p));
	*(_ns1__ReverseDeactivationCashCouponResponse*)p = *(_ns1__ReverseDeactivationCashCouponResponse*)q;
}

void _ns1__ReverseDeactivationCashCoupon::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__ReverseDeactivationCashCoupon::orderId = NULL;
	this->_ns1__ReverseDeactivationCashCoupon::sourceOrderId = NULL;
	this->_ns1__ReverseDeactivationCashCoupon::orderDateTime = NULL;
	this->_ns1__ReverseDeactivationCashCoupon::couponData = NULL;
	soap_default_LONG64(soap, &this->_ns1__ReverseDeactivationCashCoupon::checkSum);
	soap_default_LONG64(soap, &this->_ns1__ReverseDeactivationCashCoupon::key);
	soap_default_int(soap, &this->_ns1__ReverseDeactivationCashCoupon::partyID);
	/* transient soap skipped */
}

void _ns1__ReverseDeactivationCashCoupon::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ReverseDeactivationCashCoupon::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ReverseDeactivationCashCoupon::sourceOrderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ReverseDeactivationCashCoupon::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ReverseDeactivationCashCoupon::couponData);
	/* transient soap skipped */
#endif
}

int _ns1__ReverseDeactivationCashCoupon::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__ReverseDeactivationCashCoupon(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ReverseDeactivationCashCoupon(struct soap *soap, const char *tag, int id, const _ns1__ReverseDeactivationCashCoupon *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__ReverseDeactivationCashCoupon), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__ReverseDeactivationCashCoupon::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:sourceOrderId", -1, &(a->_ns1__ReverseDeactivationCashCoupon::sourceOrderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__ReverseDeactivationCashCoupon::orderDateTime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponData", -1, &(a->_ns1__ReverseDeactivationCashCoupon::couponData), ""))
		return soap->error;
	if (soap_out_LONG64(soap, "ns1:checkSum", -1, &(a->_ns1__ReverseDeactivationCashCoupon::checkSum), ""))
		return soap->error;
	if (soap_out_LONG64(soap, "ns1:key", -1, &(a->_ns1__ReverseDeactivationCashCoupon::key), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:partyID", -1, &(a->_ns1__ReverseDeactivationCashCoupon::partyID), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__ReverseDeactivationCashCoupon::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__ReverseDeactivationCashCoupon(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__ReverseDeactivationCashCoupon * SOAP_FMAC4 soap_in__ns1__ReverseDeactivationCashCoupon(struct soap *soap, const char *tag, _ns1__ReverseDeactivationCashCoupon *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__ReverseDeactivationCashCoupon *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__ReverseDeactivationCashCoupon, sizeof(_ns1__ReverseDeactivationCashCoupon), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__ReverseDeactivationCashCoupon)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__ReverseDeactivationCashCoupon *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_sourceOrderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponData1 = 1;
	size_t soap_flag_checkSum1 = 1;
	size_t soap_flag_key1 = 1;
	size_t soap_flag_partyID1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__ReverseDeactivationCashCoupon::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_sourceOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:sourceOrderId", &(a->_ns1__ReverseDeactivationCashCoupon::sourceOrderId), "xsd:string"))
				{	soap_flag_sourceOrderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__ReverseDeactivationCashCoupon::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponData1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponData", &(a->_ns1__ReverseDeactivationCashCoupon::couponData), "xsd:string"))
				{	soap_flag_couponData1--;
					continue;
				}
			if (soap_flag_checkSum1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns1:checkSum", &(a->_ns1__ReverseDeactivationCashCoupon::checkSum), "xsd:long"))
				{	soap_flag_checkSum1--;
					continue;
				}
			if (soap_flag_key1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns1:key", &(a->_ns1__ReverseDeactivationCashCoupon::key), "xsd:long"))
				{	soap_flag_key1--;
					continue;
				}
			if (soap_flag_partyID1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:partyID", &(a->_ns1__ReverseDeactivationCashCoupon::partyID), "xsd:int"))
				{	soap_flag_partyID1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__ReverseDeactivationCashCoupon *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__ReverseDeactivationCashCoupon, 0, sizeof(_ns1__ReverseDeactivationCashCoupon), 0, soap_copy__ns1__ReverseDeactivationCashCoupon);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_checkSum1 > 0 || soap_flag_key1 > 0 || soap_flag_partyID1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__ReverseDeactivationCashCoupon::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__ReverseDeactivationCashCoupon);
	if (this->soap_out(soap, tag?tag:"ns1:ReverseDeactivationCashCoupon", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__ReverseDeactivationCashCoupon::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__ReverseDeactivationCashCoupon(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__ReverseDeactivationCashCoupon * SOAP_FMAC4 soap_get__ns1__ReverseDeactivationCashCoupon(struct soap *soap, _ns1__ReverseDeactivationCashCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__ReverseDeactivationCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__ReverseDeactivationCashCoupon * SOAP_FMAC2 soap_instantiate__ns1__ReverseDeactivationCashCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__ReverseDeactivationCashCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__ReverseDeactivationCashCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__ReverseDeactivationCashCoupon);
		if (size)
			*size = sizeof(_ns1__ReverseDeactivationCashCoupon);
		((_ns1__ReverseDeactivationCashCoupon*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__ReverseDeactivationCashCoupon, n);
		if (size)
			*size = n * sizeof(_ns1__ReverseDeactivationCashCoupon);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__ReverseDeactivationCashCoupon*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__ReverseDeactivationCashCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__ReverseDeactivationCashCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__ReverseDeactivationCashCoupon %p -> %p\n", q, p));
	*(_ns1__ReverseDeactivationCashCoupon*)p = *(_ns1__ReverseDeactivationCashCoupon*)q;
}

void _ns1__ReverseActivationCashCouponResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__ReverseActivationCashCouponResponse::ReverseActivationCashCouponResult);
	soap_default_int(soap, &this->_ns1__ReverseActivationCashCouponResponse::outCouponPinStatus);
	soap_default_int(soap, &this->_ns1__ReverseActivationCashCouponResponse::outSourceApprovalNo);
	soap_default_int(soap, &this->_ns1__ReverseActivationCashCouponResponse::outApprovalNo);
	this->_ns1__ReverseActivationCashCouponResponse::outApprovalDatetime = NULL;
	this->_ns1__ReverseActivationCashCouponResponse::outOrderId = NULL;
	/* transient soap skipped */
}

void _ns1__ReverseActivationCashCouponResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ReverseActivationCashCouponResponse::outApprovalDatetime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ReverseActivationCashCouponResponse::outOrderId);
	/* transient soap skipped */
#endif
}

int _ns1__ReverseActivationCashCouponResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__ReverseActivationCashCouponResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ReverseActivationCashCouponResponse(struct soap *soap, const char *tag, int id, const _ns1__ReverseActivationCashCouponResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__ReverseActivationCashCouponResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:ReverseActivationCashCouponResult");
	if (soap_out_int(soap, "ns1:ReverseActivationCashCouponResult", -1, &(a->_ns1__ReverseActivationCashCouponResponse::ReverseActivationCashCouponResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outCouponPinStatus", -1, &(a->_ns1__ReverseActivationCashCouponResponse::outCouponPinStatus), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outSourceApprovalNo", -1, &(a->_ns1__ReverseActivationCashCouponResponse::outSourceApprovalNo), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__ReverseActivationCashCouponResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__ReverseActivationCashCouponResponse::outApprovalDatetime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outOrderId", -1, &(a->_ns1__ReverseActivationCashCouponResponse::outOrderId), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__ReverseActivationCashCouponResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__ReverseActivationCashCouponResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__ReverseActivationCashCouponResponse * SOAP_FMAC4 soap_in__ns1__ReverseActivationCashCouponResponse(struct soap *soap, const char *tag, _ns1__ReverseActivationCashCouponResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__ReverseActivationCashCouponResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__ReverseActivationCashCouponResponse, sizeof(_ns1__ReverseActivationCashCouponResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__ReverseActivationCashCouponResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__ReverseActivationCashCouponResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_ReverseActivationCashCouponResult1 = 1;
	size_t soap_flag_outCouponPinStatus1 = 1;
	size_t soap_flag_outSourceApprovalNo1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	size_t soap_flag_outOrderId1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ReverseActivationCashCouponResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:ReverseActivationCashCouponResult", &(a->_ns1__ReverseActivationCashCouponResponse::ReverseActivationCashCouponResult), "xsd:int"))
				{	soap_flag_ReverseActivationCashCouponResult1--;
					continue;
				}
			if (soap_flag_outCouponPinStatus1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outCouponPinStatus", &(a->_ns1__ReverseActivationCashCouponResponse::outCouponPinStatus), "xsd:int"))
				{	soap_flag_outCouponPinStatus1--;
					continue;
				}
			if (soap_flag_outSourceApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outSourceApprovalNo", &(a->_ns1__ReverseActivationCashCouponResponse::outSourceApprovalNo), "xsd:int"))
				{	soap_flag_outSourceApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__ReverseActivationCashCouponResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__ReverseActivationCashCouponResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			if (soap_flag_outOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outOrderId", &(a->_ns1__ReverseActivationCashCouponResponse::outOrderId), "xsd:string"))
				{	soap_flag_outOrderId1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:ReverseActivationCashCouponResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__ReverseActivationCashCouponResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__ReverseActivationCashCouponResponse, 0, sizeof(_ns1__ReverseActivationCashCouponResponse), 0, soap_copy__ns1__ReverseActivationCashCouponResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_ReverseActivationCashCouponResult1 > 0 || soap_flag_outCouponPinStatus1 > 0 || soap_flag_outSourceApprovalNo1 > 0 || soap_flag_outApprovalNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__ReverseActivationCashCouponResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__ReverseActivationCashCouponResponse);
	if (this->soap_out(soap, tag?tag:"ns1:ReverseActivationCashCouponResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__ReverseActivationCashCouponResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__ReverseActivationCashCouponResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__ReverseActivationCashCouponResponse * SOAP_FMAC4 soap_get__ns1__ReverseActivationCashCouponResponse(struct soap *soap, _ns1__ReverseActivationCashCouponResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__ReverseActivationCashCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__ReverseActivationCashCouponResponse * SOAP_FMAC2 soap_instantiate__ns1__ReverseActivationCashCouponResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__ReverseActivationCashCouponResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__ReverseActivationCashCouponResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__ReverseActivationCashCouponResponse);
		if (size)
			*size = sizeof(_ns1__ReverseActivationCashCouponResponse);
		((_ns1__ReverseActivationCashCouponResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__ReverseActivationCashCouponResponse, n);
		if (size)
			*size = n * sizeof(_ns1__ReverseActivationCashCouponResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__ReverseActivationCashCouponResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__ReverseActivationCashCouponResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__ReverseActivationCashCouponResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__ReverseActivationCashCouponResponse %p -> %p\n", q, p));
	*(_ns1__ReverseActivationCashCouponResponse*)p = *(_ns1__ReverseActivationCashCouponResponse*)q;
}

void _ns1__ReverseActivationCashCoupon::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__ReverseActivationCashCoupon::orderId = NULL;
	this->_ns1__ReverseActivationCashCoupon::sourceOrderId = NULL;
	this->_ns1__ReverseActivationCashCoupon::orderDateTime = NULL;
	this->_ns1__ReverseActivationCashCoupon::couponData = NULL;
	soap_default_LONG64(soap, &this->_ns1__ReverseActivationCashCoupon::checkSum);
	soap_default_LONG64(soap, &this->_ns1__ReverseActivationCashCoupon::key);
	soap_default_int(soap, &this->_ns1__ReverseActivationCashCoupon::partyID);
	/* transient soap skipped */
}

void _ns1__ReverseActivationCashCoupon::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ReverseActivationCashCoupon::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ReverseActivationCashCoupon::sourceOrderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ReverseActivationCashCoupon::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ReverseActivationCashCoupon::couponData);
	/* transient soap skipped */
#endif
}

int _ns1__ReverseActivationCashCoupon::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__ReverseActivationCashCoupon(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ReverseActivationCashCoupon(struct soap *soap, const char *tag, int id, const _ns1__ReverseActivationCashCoupon *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__ReverseActivationCashCoupon), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__ReverseActivationCashCoupon::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:sourceOrderId", -1, &(a->_ns1__ReverseActivationCashCoupon::sourceOrderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__ReverseActivationCashCoupon::orderDateTime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponData", -1, &(a->_ns1__ReverseActivationCashCoupon::couponData), ""))
		return soap->error;
	if (soap_out_LONG64(soap, "ns1:checkSum", -1, &(a->_ns1__ReverseActivationCashCoupon::checkSum), ""))
		return soap->error;
	if (soap_out_LONG64(soap, "ns1:key", -1, &(a->_ns1__ReverseActivationCashCoupon::key), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:partyID", -1, &(a->_ns1__ReverseActivationCashCoupon::partyID), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__ReverseActivationCashCoupon::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__ReverseActivationCashCoupon(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__ReverseActivationCashCoupon * SOAP_FMAC4 soap_in__ns1__ReverseActivationCashCoupon(struct soap *soap, const char *tag, _ns1__ReverseActivationCashCoupon *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__ReverseActivationCashCoupon *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__ReverseActivationCashCoupon, sizeof(_ns1__ReverseActivationCashCoupon), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__ReverseActivationCashCoupon)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__ReverseActivationCashCoupon *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_sourceOrderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponData1 = 1;
	size_t soap_flag_checkSum1 = 1;
	size_t soap_flag_key1 = 1;
	size_t soap_flag_partyID1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__ReverseActivationCashCoupon::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_sourceOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:sourceOrderId", &(a->_ns1__ReverseActivationCashCoupon::sourceOrderId), "xsd:string"))
				{	soap_flag_sourceOrderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__ReverseActivationCashCoupon::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponData1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponData", &(a->_ns1__ReverseActivationCashCoupon::couponData), "xsd:string"))
				{	soap_flag_couponData1--;
					continue;
				}
			if (soap_flag_checkSum1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns1:checkSum", &(a->_ns1__ReverseActivationCashCoupon::checkSum), "xsd:long"))
				{	soap_flag_checkSum1--;
					continue;
				}
			if (soap_flag_key1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns1:key", &(a->_ns1__ReverseActivationCashCoupon::key), "xsd:long"))
				{	soap_flag_key1--;
					continue;
				}
			if (soap_flag_partyID1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:partyID", &(a->_ns1__ReverseActivationCashCoupon::partyID), "xsd:int"))
				{	soap_flag_partyID1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__ReverseActivationCashCoupon *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__ReverseActivationCashCoupon, 0, sizeof(_ns1__ReverseActivationCashCoupon), 0, soap_copy__ns1__ReverseActivationCashCoupon);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_checkSum1 > 0 || soap_flag_key1 > 0 || soap_flag_partyID1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__ReverseActivationCashCoupon::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__ReverseActivationCashCoupon);
	if (this->soap_out(soap, tag?tag:"ns1:ReverseActivationCashCoupon", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__ReverseActivationCashCoupon::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__ReverseActivationCashCoupon(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__ReverseActivationCashCoupon * SOAP_FMAC4 soap_get__ns1__ReverseActivationCashCoupon(struct soap *soap, _ns1__ReverseActivationCashCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__ReverseActivationCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__ReverseActivationCashCoupon * SOAP_FMAC2 soap_instantiate__ns1__ReverseActivationCashCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__ReverseActivationCashCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__ReverseActivationCashCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__ReverseActivationCashCoupon);
		if (size)
			*size = sizeof(_ns1__ReverseActivationCashCoupon);
		((_ns1__ReverseActivationCashCoupon*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__ReverseActivationCashCoupon, n);
		if (size)
			*size = n * sizeof(_ns1__ReverseActivationCashCoupon);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__ReverseActivationCashCoupon*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__ReverseActivationCashCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__ReverseActivationCashCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__ReverseActivationCashCoupon %p -> %p\n", q, p));
	*(_ns1__ReverseActivationCashCoupon*)p = *(_ns1__ReverseActivationCashCoupon*)q;
}

void _ns1__ActivationCashCouponResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__ActivationCashCouponResponse::ActivationCashCouponResult);
	soap_default_int(soap, &this->_ns1__ActivationCashCouponResponse::outCouponPinStatus);
	soap_default_int(soap, &this->_ns1__ActivationCashCouponResponse::outApprovalNo);
	this->_ns1__ActivationCashCouponResponse::outApprovalDatetime = NULL;
	this->_ns1__ActivationCashCouponResponse::outOrderId = NULL;
	/* transient soap skipped */
}

void _ns1__ActivationCashCouponResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ActivationCashCouponResponse::outApprovalDatetime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ActivationCashCouponResponse::outOrderId);
	/* transient soap skipped */
#endif
}

int _ns1__ActivationCashCouponResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__ActivationCashCouponResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ActivationCashCouponResponse(struct soap *soap, const char *tag, int id, const _ns1__ActivationCashCouponResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__ActivationCashCouponResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:ActivationCashCouponResult");
	if (soap_out_int(soap, "ns1:ActivationCashCouponResult", -1, &(a->_ns1__ActivationCashCouponResponse::ActivationCashCouponResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outCouponPinStatus", -1, &(a->_ns1__ActivationCashCouponResponse::outCouponPinStatus), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__ActivationCashCouponResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__ActivationCashCouponResponse::outApprovalDatetime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outOrderId", -1, &(a->_ns1__ActivationCashCouponResponse::outOrderId), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__ActivationCashCouponResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__ActivationCashCouponResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__ActivationCashCouponResponse * SOAP_FMAC4 soap_in__ns1__ActivationCashCouponResponse(struct soap *soap, const char *tag, _ns1__ActivationCashCouponResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__ActivationCashCouponResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__ActivationCashCouponResponse, sizeof(_ns1__ActivationCashCouponResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__ActivationCashCouponResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__ActivationCashCouponResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_ActivationCashCouponResult1 = 1;
	size_t soap_flag_outCouponPinStatus1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	size_t soap_flag_outOrderId1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ActivationCashCouponResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:ActivationCashCouponResult", &(a->_ns1__ActivationCashCouponResponse::ActivationCashCouponResult), "xsd:int"))
				{	soap_flag_ActivationCashCouponResult1--;
					continue;
				}
			if (soap_flag_outCouponPinStatus1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outCouponPinStatus", &(a->_ns1__ActivationCashCouponResponse::outCouponPinStatus), "xsd:int"))
				{	soap_flag_outCouponPinStatus1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__ActivationCashCouponResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__ActivationCashCouponResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			if (soap_flag_outOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outOrderId", &(a->_ns1__ActivationCashCouponResponse::outOrderId), "xsd:string"))
				{	soap_flag_outOrderId1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:ActivationCashCouponResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__ActivationCashCouponResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__ActivationCashCouponResponse, 0, sizeof(_ns1__ActivationCashCouponResponse), 0, soap_copy__ns1__ActivationCashCouponResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_ActivationCashCouponResult1 > 0 || soap_flag_outCouponPinStatus1 > 0 || soap_flag_outApprovalNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__ActivationCashCouponResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__ActivationCashCouponResponse);
	if (this->soap_out(soap, tag?tag:"ns1:ActivationCashCouponResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__ActivationCashCouponResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__ActivationCashCouponResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__ActivationCashCouponResponse * SOAP_FMAC4 soap_get__ns1__ActivationCashCouponResponse(struct soap *soap, _ns1__ActivationCashCouponResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__ActivationCashCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__ActivationCashCouponResponse * SOAP_FMAC2 soap_instantiate__ns1__ActivationCashCouponResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__ActivationCashCouponResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__ActivationCashCouponResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__ActivationCashCouponResponse);
		if (size)
			*size = sizeof(_ns1__ActivationCashCouponResponse);
		((_ns1__ActivationCashCouponResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__ActivationCashCouponResponse, n);
		if (size)
			*size = n * sizeof(_ns1__ActivationCashCouponResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__ActivationCashCouponResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__ActivationCashCouponResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__ActivationCashCouponResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__ActivationCashCouponResponse %p -> %p\n", q, p));
	*(_ns1__ActivationCashCouponResponse*)p = *(_ns1__ActivationCashCouponResponse*)q;
}

void _ns1__ActivationCashCoupon::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__ActivationCashCoupon::orderId = NULL;
	this->_ns1__ActivationCashCoupon::orderDateTime = NULL;
	this->_ns1__ActivationCashCoupon::couponData = NULL;
	soap_default_LONG64(soap, &this->_ns1__ActivationCashCoupon::checkSum);
	soap_default_LONG64(soap, &this->_ns1__ActivationCashCoupon::key);
	soap_default_int(soap, &this->_ns1__ActivationCashCoupon::partyID);
	/* transient soap skipped */
}

void _ns1__ActivationCashCoupon::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ActivationCashCoupon::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ActivationCashCoupon::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__ActivationCashCoupon::couponData);
	/* transient soap skipped */
#endif
}

int _ns1__ActivationCashCoupon::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__ActivationCashCoupon(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ActivationCashCoupon(struct soap *soap, const char *tag, int id, const _ns1__ActivationCashCoupon *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__ActivationCashCoupon), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__ActivationCashCoupon::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__ActivationCashCoupon::orderDateTime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponData", -1, &(a->_ns1__ActivationCashCoupon::couponData), ""))
		return soap->error;
	if (soap_out_LONG64(soap, "ns1:checkSum", -1, &(a->_ns1__ActivationCashCoupon::checkSum), ""))
		return soap->error;
	if (soap_out_LONG64(soap, "ns1:key", -1, &(a->_ns1__ActivationCashCoupon::key), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:partyID", -1, &(a->_ns1__ActivationCashCoupon::partyID), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__ActivationCashCoupon::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__ActivationCashCoupon(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__ActivationCashCoupon * SOAP_FMAC4 soap_in__ns1__ActivationCashCoupon(struct soap *soap, const char *tag, _ns1__ActivationCashCoupon *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__ActivationCashCoupon *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__ActivationCashCoupon, sizeof(_ns1__ActivationCashCoupon), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__ActivationCashCoupon)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__ActivationCashCoupon *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponData1 = 1;
	size_t soap_flag_checkSum1 = 1;
	size_t soap_flag_key1 = 1;
	size_t soap_flag_partyID1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__ActivationCashCoupon::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__ActivationCashCoupon::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponData1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponData", &(a->_ns1__ActivationCashCoupon::couponData), "xsd:string"))
				{	soap_flag_couponData1--;
					continue;
				}
			if (soap_flag_checkSum1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns1:checkSum", &(a->_ns1__ActivationCashCoupon::checkSum), "xsd:long"))
				{	soap_flag_checkSum1--;
					continue;
				}
			if (soap_flag_key1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns1:key", &(a->_ns1__ActivationCashCoupon::key), "xsd:long"))
				{	soap_flag_key1--;
					continue;
				}
			if (soap_flag_partyID1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:partyID", &(a->_ns1__ActivationCashCoupon::partyID), "xsd:int"))
				{	soap_flag_partyID1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__ActivationCashCoupon *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__ActivationCashCoupon, 0, sizeof(_ns1__ActivationCashCoupon), 0, soap_copy__ns1__ActivationCashCoupon);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_checkSum1 > 0 || soap_flag_key1 > 0 || soap_flag_partyID1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__ActivationCashCoupon::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__ActivationCashCoupon);
	if (this->soap_out(soap, tag?tag:"ns1:ActivationCashCoupon", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__ActivationCashCoupon::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__ActivationCashCoupon(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__ActivationCashCoupon * SOAP_FMAC4 soap_get__ns1__ActivationCashCoupon(struct soap *soap, _ns1__ActivationCashCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__ActivationCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__ActivationCashCoupon * SOAP_FMAC2 soap_instantiate__ns1__ActivationCashCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__ActivationCashCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__ActivationCashCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__ActivationCashCoupon);
		if (size)
			*size = sizeof(_ns1__ActivationCashCoupon);
		((_ns1__ActivationCashCoupon*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__ActivationCashCoupon, n);
		if (size)
			*size = n * sizeof(_ns1__ActivationCashCoupon);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__ActivationCashCoupon*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__ActivationCashCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__ActivationCashCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__ActivationCashCoupon %p -> %p\n", q, p));
	*(_ns1__ActivationCashCoupon*)p = *(_ns1__ActivationCashCoupon*)q;
}

void _ns1__RollbackCashCouponResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__RollbackCashCouponResponse::RollbackCashCouponResult);
	soap_default_int(soap, &this->_ns1__RollbackCashCouponResponse::outApprovalNo);
	this->_ns1__RollbackCashCouponResponse::outApprovalDatetime = NULL;
	/* transient soap skipped */
}

void _ns1__RollbackCashCouponResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackCashCouponResponse::outApprovalDatetime);
	/* transient soap skipped */
#endif
}

int _ns1__RollbackCashCouponResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__RollbackCashCouponResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RollbackCashCouponResponse(struct soap *soap, const char *tag, int id, const _ns1__RollbackCashCouponResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__RollbackCashCouponResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:RollbackCashCouponResult");
	if (soap_out_int(soap, "ns1:RollbackCashCouponResult", -1, &(a->_ns1__RollbackCashCouponResponse::RollbackCashCouponResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__RollbackCashCouponResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__RollbackCashCouponResponse::outApprovalDatetime), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__RollbackCashCouponResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__RollbackCashCouponResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__RollbackCashCouponResponse * SOAP_FMAC4 soap_in__ns1__RollbackCashCouponResponse(struct soap *soap, const char *tag, _ns1__RollbackCashCouponResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__RollbackCashCouponResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__RollbackCashCouponResponse, sizeof(_ns1__RollbackCashCouponResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__RollbackCashCouponResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__RollbackCashCouponResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_RollbackCashCouponResult1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_RollbackCashCouponResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:RollbackCashCouponResult", &(a->_ns1__RollbackCashCouponResponse::RollbackCashCouponResult), "xsd:int"))
				{	soap_flag_RollbackCashCouponResult1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__RollbackCashCouponResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__RollbackCashCouponResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:RollbackCashCouponResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__RollbackCashCouponResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__RollbackCashCouponResponse, 0, sizeof(_ns1__RollbackCashCouponResponse), 0, soap_copy__ns1__RollbackCashCouponResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_RollbackCashCouponResult1 > 0 || soap_flag_outApprovalNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__RollbackCashCouponResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__RollbackCashCouponResponse);
	if (this->soap_out(soap, tag?tag:"ns1:RollbackCashCouponResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__RollbackCashCouponResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__RollbackCashCouponResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__RollbackCashCouponResponse * SOAP_FMAC4 soap_get__ns1__RollbackCashCouponResponse(struct soap *soap, _ns1__RollbackCashCouponResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__RollbackCashCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__RollbackCashCouponResponse * SOAP_FMAC2 soap_instantiate__ns1__RollbackCashCouponResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__RollbackCashCouponResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__RollbackCashCouponResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__RollbackCashCouponResponse);
		if (size)
			*size = sizeof(_ns1__RollbackCashCouponResponse);
		((_ns1__RollbackCashCouponResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__RollbackCashCouponResponse, n);
		if (size)
			*size = n * sizeof(_ns1__RollbackCashCouponResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__RollbackCashCouponResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__RollbackCashCouponResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RollbackCashCouponResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__RollbackCashCouponResponse %p -> %p\n", q, p));
	*(_ns1__RollbackCashCouponResponse*)p = *(_ns1__RollbackCashCouponResponse*)q;
}

void _ns1__RollbackCashCoupon::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__RollbackCashCoupon::sourceApprovalNo);
	this->_ns1__RollbackCashCoupon::orderId = NULL;
	this->_ns1__RollbackCashCoupon::sourceOrderId = NULL;
	this->_ns1__RollbackCashCoupon::orderDateTime = NULL;
	this->_ns1__RollbackCashCoupon::couponPin = NULL;
	this->_ns1__RollbackCashCoupon::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__RollbackCashCoupon::oidUser);
	this->_ns1__RollbackCashCoupon::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__RollbackCashCoupon::isCafe);
	/* transient soap skipped */
}

void _ns1__RollbackCashCoupon::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackCashCoupon::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackCashCoupon::sourceOrderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackCashCoupon::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackCashCoupon::couponPin);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackCashCoupon::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackCashCoupon::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__RollbackCashCoupon::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__RollbackCashCoupon(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RollbackCashCoupon(struct soap *soap, const char *tag, int id, const _ns1__RollbackCashCoupon *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__RollbackCashCoupon), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:sourceApprovalNo", -1, &(a->_ns1__RollbackCashCoupon::sourceApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__RollbackCashCoupon::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:sourceOrderId", -1, &(a->_ns1__RollbackCashCoupon::sourceOrderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__RollbackCashCoupon::orderDateTime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponPin", -1, &(a->_ns1__RollbackCashCoupon::couponPin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__RollbackCashCoupon::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__RollbackCashCoupon::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__RollbackCashCoupon::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__RollbackCashCoupon::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__RollbackCashCoupon::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__RollbackCashCoupon(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__RollbackCashCoupon * SOAP_FMAC4 soap_in__ns1__RollbackCashCoupon(struct soap *soap, const char *tag, _ns1__RollbackCashCoupon *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__RollbackCashCoupon *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__RollbackCashCoupon, sizeof(_ns1__RollbackCashCoupon), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__RollbackCashCoupon)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__RollbackCashCoupon *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_sourceApprovalNo1 = 1;
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_sourceOrderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponPin1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_sourceApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:sourceApprovalNo", &(a->_ns1__RollbackCashCoupon::sourceApprovalNo), "xsd:int"))
				{	soap_flag_sourceApprovalNo1--;
					continue;
				}
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__RollbackCashCoupon::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_sourceOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:sourceOrderId", &(a->_ns1__RollbackCashCoupon::sourceOrderId), "xsd:string"))
				{	soap_flag_sourceOrderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__RollbackCashCoupon::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponPin1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponPin", &(a->_ns1__RollbackCashCoupon::couponPin), "xsd:string"))
				{	soap_flag_couponPin1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__RollbackCashCoupon::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__RollbackCashCoupon::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__RollbackCashCoupon::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__RollbackCashCoupon::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__RollbackCashCoupon *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__RollbackCashCoupon, 0, sizeof(_ns1__RollbackCashCoupon), 0, soap_copy__ns1__RollbackCashCoupon);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_sourceApprovalNo1 > 0 || soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__RollbackCashCoupon::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__RollbackCashCoupon);
	if (this->soap_out(soap, tag?tag:"ns1:RollbackCashCoupon", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__RollbackCashCoupon::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__RollbackCashCoupon(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__RollbackCashCoupon * SOAP_FMAC4 soap_get__ns1__RollbackCashCoupon(struct soap *soap, _ns1__RollbackCashCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__RollbackCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__RollbackCashCoupon * SOAP_FMAC2 soap_instantiate__ns1__RollbackCashCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__RollbackCashCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__RollbackCashCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__RollbackCashCoupon);
		if (size)
			*size = sizeof(_ns1__RollbackCashCoupon);
		((_ns1__RollbackCashCoupon*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__RollbackCashCoupon, n);
		if (size)
			*size = n * sizeof(_ns1__RollbackCashCoupon);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__RollbackCashCoupon*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__RollbackCashCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RollbackCashCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__RollbackCashCoupon %p -> %p\n", q, p));
	*(_ns1__RollbackCashCoupon*)p = *(_ns1__RollbackCashCoupon*)q;
}

void _ns1__UseCashCouponResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__UseCashCouponResponse::UseCashCouponResult);
	soap_default_int(soap, &this->_ns1__UseCashCouponResponse::outApprovalNo);
	this->_ns1__UseCashCouponResponse::outApprovalDatetime = NULL;
	soap_default_int(soap, &this->_ns1__UseCashCouponResponse::outConvertCash);
	soap_default_short(soap, &this->_ns1__UseCashCouponResponse::outChargeType);
	this->_ns1__UseCashCouponResponse::outOrderId = NULL;
	/* transient soap skipped */
}

void _ns1__UseCashCouponResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseCashCouponResponse::outApprovalDatetime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseCashCouponResponse::outOrderId);
	/* transient soap skipped */
#endif
}

int _ns1__UseCashCouponResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__UseCashCouponResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UseCashCouponResponse(struct soap *soap, const char *tag, int id, const _ns1__UseCashCouponResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__UseCashCouponResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:UseCashCouponResult");
	if (soap_out_int(soap, "ns1:UseCashCouponResult", -1, &(a->_ns1__UseCashCouponResponse::UseCashCouponResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__UseCashCouponResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__UseCashCouponResponse::outApprovalDatetime), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outConvertCash", -1, &(a->_ns1__UseCashCouponResponse::outConvertCash), ""))
		return soap->error;
	if (soap_out_short(soap, "ns1:outChargeType", -1, &(a->_ns1__UseCashCouponResponse::outChargeType), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outOrderId", -1, &(a->_ns1__UseCashCouponResponse::outOrderId), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__UseCashCouponResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__UseCashCouponResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__UseCashCouponResponse * SOAP_FMAC4 soap_in__ns1__UseCashCouponResponse(struct soap *soap, const char *tag, _ns1__UseCashCouponResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__UseCashCouponResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__UseCashCouponResponse, sizeof(_ns1__UseCashCouponResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__UseCashCouponResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__UseCashCouponResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_UseCashCouponResult1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	size_t soap_flag_outConvertCash1 = 1;
	size_t soap_flag_outChargeType1 = 1;
	size_t soap_flag_outOrderId1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_UseCashCouponResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:UseCashCouponResult", &(a->_ns1__UseCashCouponResponse::UseCashCouponResult), "xsd:int"))
				{	soap_flag_UseCashCouponResult1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__UseCashCouponResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__UseCashCouponResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			if (soap_flag_outConvertCash1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outConvertCash", &(a->_ns1__UseCashCouponResponse::outConvertCash), "xsd:int"))
				{	soap_flag_outConvertCash1--;
					continue;
				}
			if (soap_flag_outChargeType1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_short(soap, "ns1:outChargeType", &(a->_ns1__UseCashCouponResponse::outChargeType), "xsd:short"))
				{	soap_flag_outChargeType1--;
					continue;
				}
			if (soap_flag_outOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outOrderId", &(a->_ns1__UseCashCouponResponse::outOrderId), "xsd:string"))
				{	soap_flag_outOrderId1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:UseCashCouponResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__UseCashCouponResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__UseCashCouponResponse, 0, sizeof(_ns1__UseCashCouponResponse), 0, soap_copy__ns1__UseCashCouponResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_UseCashCouponResult1 > 0 || soap_flag_outApprovalNo1 > 0 || soap_flag_outConvertCash1 > 0 || soap_flag_outChargeType1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__UseCashCouponResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__UseCashCouponResponse);
	if (this->soap_out(soap, tag?tag:"ns1:UseCashCouponResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__UseCashCouponResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__UseCashCouponResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__UseCashCouponResponse * SOAP_FMAC4 soap_get__ns1__UseCashCouponResponse(struct soap *soap, _ns1__UseCashCouponResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__UseCashCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__UseCashCouponResponse * SOAP_FMAC2 soap_instantiate__ns1__UseCashCouponResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__UseCashCouponResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__UseCashCouponResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__UseCashCouponResponse);
		if (size)
			*size = sizeof(_ns1__UseCashCouponResponse);
		((_ns1__UseCashCouponResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__UseCashCouponResponse, n);
		if (size)
			*size = n * sizeof(_ns1__UseCashCouponResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__UseCashCouponResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__UseCashCouponResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UseCashCouponResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__UseCashCouponResponse %p -> %p\n", q, p));
	*(_ns1__UseCashCouponResponse*)p = *(_ns1__UseCashCouponResponse*)q;
}

void _ns1__UseCashCoupon::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__UseCashCoupon::orderId = NULL;
	this->_ns1__UseCashCoupon::orderDateTime = NULL;
	this->_ns1__UseCashCoupon::couponPin = NULL;
	this->_ns1__UseCashCoupon::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__UseCashCoupon::oidUser);
	this->_ns1__UseCashCoupon::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__UseCashCoupon::isCafe);
	/* transient soap skipped */
}

void _ns1__UseCashCoupon::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseCashCoupon::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseCashCoupon::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseCashCoupon::couponPin);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseCashCoupon::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseCashCoupon::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__UseCashCoupon::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__UseCashCoupon(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UseCashCoupon(struct soap *soap, const char *tag, int id, const _ns1__UseCashCoupon *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__UseCashCoupon), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__UseCashCoupon::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__UseCashCoupon::orderDateTime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponPin", -1, &(a->_ns1__UseCashCoupon::couponPin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__UseCashCoupon::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__UseCashCoupon::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__UseCashCoupon::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__UseCashCoupon::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__UseCashCoupon::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__UseCashCoupon(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__UseCashCoupon * SOAP_FMAC4 soap_in__ns1__UseCashCoupon(struct soap *soap, const char *tag, _ns1__UseCashCoupon *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__UseCashCoupon *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__UseCashCoupon, sizeof(_ns1__UseCashCoupon), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__UseCashCoupon)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__UseCashCoupon *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponPin1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__UseCashCoupon::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__UseCashCoupon::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponPin1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponPin", &(a->_ns1__UseCashCoupon::couponPin), "xsd:string"))
				{	soap_flag_couponPin1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__UseCashCoupon::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__UseCashCoupon::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__UseCashCoupon::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__UseCashCoupon::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__UseCashCoupon *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__UseCashCoupon, 0, sizeof(_ns1__UseCashCoupon), 0, soap_copy__ns1__UseCashCoupon);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__UseCashCoupon::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__UseCashCoupon);
	if (this->soap_out(soap, tag?tag:"ns1:UseCashCoupon", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__UseCashCoupon::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__UseCashCoupon(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__UseCashCoupon * SOAP_FMAC4 soap_get__ns1__UseCashCoupon(struct soap *soap, _ns1__UseCashCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__UseCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__UseCashCoupon * SOAP_FMAC2 soap_instantiate__ns1__UseCashCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__UseCashCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__UseCashCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__UseCashCoupon);
		if (size)
			*size = sizeof(_ns1__UseCashCoupon);
		((_ns1__UseCashCoupon*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__UseCashCoupon, n);
		if (size)
			*size = n * sizeof(_ns1__UseCashCoupon);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__UseCashCoupon*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__UseCashCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UseCashCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__UseCashCoupon %p -> %p\n", q, p));
	*(_ns1__UseCashCoupon*)p = *(_ns1__UseCashCoupon*)q;
}

void _ns1__CheckCashCouponResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckCashCouponResponse::CheckCashCouponResult);
	soap_default_int(soap, &this->_ns1__CheckCashCouponResponse::outConvertCash);
	soap_default_short(soap, &this->_ns1__CheckCashCouponResponse::outChargeType);
	/* transient soap skipped */
}

void _ns1__CheckCashCouponResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__CheckCashCouponResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckCashCouponResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckCashCouponResponse(struct soap *soap, const char *tag, int id, const _ns1__CheckCashCouponResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckCashCouponResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:CheckCashCouponResult");
	if (soap_out_int(soap, "ns1:CheckCashCouponResult", -1, &(a->_ns1__CheckCashCouponResponse::CheckCashCouponResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outConvertCash", -1, &(a->_ns1__CheckCashCouponResponse::outConvertCash), ""))
		return soap->error;
	if (soap_out_short(soap, "ns1:outChargeType", -1, &(a->_ns1__CheckCashCouponResponse::outChargeType), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckCashCouponResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckCashCouponResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckCashCouponResponse * SOAP_FMAC4 soap_in__ns1__CheckCashCouponResponse(struct soap *soap, const char *tag, _ns1__CheckCashCouponResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckCashCouponResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckCashCouponResponse, sizeof(_ns1__CheckCashCouponResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckCashCouponResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckCashCouponResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_CheckCashCouponResult1 = 1;
	size_t soap_flag_outConvertCash1 = 1;
	size_t soap_flag_outChargeType1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_CheckCashCouponResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:CheckCashCouponResult", &(a->_ns1__CheckCashCouponResponse::CheckCashCouponResult), "xsd:int"))
				{	soap_flag_CheckCashCouponResult1--;
					continue;
				}
			if (soap_flag_outConvertCash1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outConvertCash", &(a->_ns1__CheckCashCouponResponse::outConvertCash), "xsd:int"))
				{	soap_flag_outConvertCash1--;
					continue;
				}
			if (soap_flag_outChargeType1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_short(soap, "ns1:outChargeType", &(a->_ns1__CheckCashCouponResponse::outChargeType), "xsd:short"))
				{	soap_flag_outChargeType1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:CheckCashCouponResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckCashCouponResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckCashCouponResponse, 0, sizeof(_ns1__CheckCashCouponResponse), 0, soap_copy__ns1__CheckCashCouponResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_CheckCashCouponResult1 > 0 || soap_flag_outConvertCash1 > 0 || soap_flag_outChargeType1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckCashCouponResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckCashCouponResponse);
	if (this->soap_out(soap, tag?tag:"ns1:CheckCashCouponResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckCashCouponResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckCashCouponResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckCashCouponResponse * SOAP_FMAC4 soap_get__ns1__CheckCashCouponResponse(struct soap *soap, _ns1__CheckCashCouponResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckCashCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckCashCouponResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckCashCouponResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckCashCouponResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckCashCouponResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckCashCouponResponse);
		if (size)
			*size = sizeof(_ns1__CheckCashCouponResponse);
		((_ns1__CheckCashCouponResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckCashCouponResponse, n);
		if (size)
			*size = n * sizeof(_ns1__CheckCashCouponResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckCashCouponResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckCashCouponResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckCashCouponResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckCashCouponResponse %p -> %p\n", q, p));
	*(_ns1__CheckCashCouponResponse*)p = *(_ns1__CheckCashCouponResponse*)q;
}

void _ns1__CheckCashCoupon::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__CheckCashCoupon::couponPin = NULL;
	this->_ns1__CheckCashCoupon::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__CheckCashCoupon::oidUser);
	this->_ns1__CheckCashCoupon::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__CheckCashCoupon::isCafe);
	/* transient soap skipped */
}

void _ns1__CheckCashCoupon::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckCashCoupon::couponPin);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckCashCoupon::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckCashCoupon::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__CheckCashCoupon::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckCashCoupon(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckCashCoupon(struct soap *soap, const char *tag, int id, const _ns1__CheckCashCoupon *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckCashCoupon), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponPin", -1, &(a->_ns1__CheckCashCoupon::couponPin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__CheckCashCoupon::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__CheckCashCoupon::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__CheckCashCoupon::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__CheckCashCoupon::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckCashCoupon::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckCashCoupon(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckCashCoupon * SOAP_FMAC4 soap_in__ns1__CheckCashCoupon(struct soap *soap, const char *tag, _ns1__CheckCashCoupon *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckCashCoupon *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckCashCoupon, sizeof(_ns1__CheckCashCoupon), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckCashCoupon)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckCashCoupon *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_couponPin1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_couponPin1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponPin", &(a->_ns1__CheckCashCoupon::couponPin), "xsd:string"))
				{	soap_flag_couponPin1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__CheckCashCoupon::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__CheckCashCoupon::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__CheckCashCoupon::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__CheckCashCoupon::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckCashCoupon *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckCashCoupon, 0, sizeof(_ns1__CheckCashCoupon), 0, soap_copy__ns1__CheckCashCoupon);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckCashCoupon::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckCashCoupon);
	if (this->soap_out(soap, tag?tag:"ns1:CheckCashCoupon", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckCashCoupon::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckCashCoupon(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckCashCoupon * SOAP_FMAC4 soap_get__ns1__CheckCashCoupon(struct soap *soap, _ns1__CheckCashCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckCashCoupon * SOAP_FMAC2 soap_instantiate__ns1__CheckCashCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckCashCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckCashCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckCashCoupon);
		if (size)
			*size = sizeof(_ns1__CheckCashCoupon);
		((_ns1__CheckCashCoupon*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckCashCoupon, n);
		if (size)
			*size = n * sizeof(_ns1__CheckCashCoupon);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckCashCoupon*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckCashCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckCashCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckCashCoupon %p -> %p\n", q, p));
	*(_ns1__CheckCashCoupon*)p = *(_ns1__CheckCashCoupon*)q;
}

void _ns1__RollbackCashCouponFromCouponBoxResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__RollbackCashCouponFromCouponBoxResponse::RollbackCashCouponFromCouponBoxResult);
	soap_default_int(soap, &this->_ns1__RollbackCashCouponFromCouponBoxResponse::outApprovalNo);
	this->_ns1__RollbackCashCouponFromCouponBoxResponse::outApprovalDatetime = NULL;
	/* transient soap skipped */
}

void _ns1__RollbackCashCouponFromCouponBoxResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackCashCouponFromCouponBoxResponse::outApprovalDatetime);
	/* transient soap skipped */
#endif
}

int _ns1__RollbackCashCouponFromCouponBoxResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__RollbackCashCouponFromCouponBoxResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RollbackCashCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, const _ns1__RollbackCashCouponFromCouponBoxResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBoxResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:RollbackCashCouponFromCouponBoxResult");
	if (soap_out_int(soap, "ns1:RollbackCashCouponFromCouponBoxResult", -1, &(a->_ns1__RollbackCashCouponFromCouponBoxResponse::RollbackCashCouponFromCouponBoxResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__RollbackCashCouponFromCouponBoxResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__RollbackCashCouponFromCouponBoxResponse::outApprovalDatetime), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__RollbackCashCouponFromCouponBoxResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__RollbackCashCouponFromCouponBoxResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__RollbackCashCouponFromCouponBoxResponse * SOAP_FMAC4 soap_in__ns1__RollbackCashCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__RollbackCashCouponFromCouponBoxResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__RollbackCashCouponFromCouponBoxResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBoxResponse, sizeof(_ns1__RollbackCashCouponFromCouponBoxResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__RollbackCashCouponFromCouponBoxResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__RollbackCashCouponFromCouponBoxResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_RollbackCashCouponFromCouponBoxResult1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_RollbackCashCouponFromCouponBoxResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:RollbackCashCouponFromCouponBoxResult", &(a->_ns1__RollbackCashCouponFromCouponBoxResponse::RollbackCashCouponFromCouponBoxResult), "xsd:int"))
				{	soap_flag_RollbackCashCouponFromCouponBoxResult1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__RollbackCashCouponFromCouponBoxResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__RollbackCashCouponFromCouponBoxResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:RollbackCashCouponFromCouponBoxResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__RollbackCashCouponFromCouponBoxResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBoxResponse, 0, sizeof(_ns1__RollbackCashCouponFromCouponBoxResponse), 0, soap_copy__ns1__RollbackCashCouponFromCouponBoxResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_RollbackCashCouponFromCouponBoxResult1 > 0 || soap_flag_outApprovalNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__RollbackCashCouponFromCouponBoxResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBoxResponse);
	if (this->soap_out(soap, tag?tag:"ns1:RollbackCashCouponFromCouponBoxResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__RollbackCashCouponFromCouponBoxResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__RollbackCashCouponFromCouponBoxResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__RollbackCashCouponFromCouponBoxResponse * SOAP_FMAC4 soap_get__ns1__RollbackCashCouponFromCouponBoxResponse(struct soap *soap, _ns1__RollbackCashCouponFromCouponBoxResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__RollbackCashCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__RollbackCashCouponFromCouponBoxResponse * SOAP_FMAC2 soap_instantiate__ns1__RollbackCashCouponFromCouponBoxResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__RollbackCashCouponFromCouponBoxResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBoxResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__RollbackCashCouponFromCouponBoxResponse);
		if (size)
			*size = sizeof(_ns1__RollbackCashCouponFromCouponBoxResponse);
		((_ns1__RollbackCashCouponFromCouponBoxResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__RollbackCashCouponFromCouponBoxResponse, n);
		if (size)
			*size = n * sizeof(_ns1__RollbackCashCouponFromCouponBoxResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__RollbackCashCouponFromCouponBoxResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__RollbackCashCouponFromCouponBoxResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RollbackCashCouponFromCouponBoxResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__RollbackCashCouponFromCouponBoxResponse %p -> %p\n", q, p));
	*(_ns1__RollbackCashCouponFromCouponBoxResponse*)p = *(_ns1__RollbackCashCouponFromCouponBoxResponse*)q;
}

void _ns1__RollbackCashCouponFromCouponBox::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__RollbackCashCouponFromCouponBox::sourceApprovalNo);
	this->_ns1__RollbackCashCouponFromCouponBox::orderId = NULL;
	this->_ns1__RollbackCashCouponFromCouponBox::sourceOrderId = NULL;
	this->_ns1__RollbackCashCouponFromCouponBox::orderDateTime = NULL;
	soap_default_int(soap, &this->_ns1__RollbackCashCouponFromCouponBox::couponCardNo);
	this->_ns1__RollbackCashCouponFromCouponBox::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__RollbackCashCouponFromCouponBox::oidUser);
	this->_ns1__RollbackCashCouponFromCouponBox::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__RollbackCashCouponFromCouponBox::isCafe);
	/* transient soap skipped */
}

void _ns1__RollbackCashCouponFromCouponBox::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackCashCouponFromCouponBox::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackCashCouponFromCouponBox::sourceOrderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackCashCouponFromCouponBox::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackCashCouponFromCouponBox::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__RollbackCashCouponFromCouponBox::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__RollbackCashCouponFromCouponBox::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__RollbackCashCouponFromCouponBox(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RollbackCashCouponFromCouponBox(struct soap *soap, const char *tag, int id, const _ns1__RollbackCashCouponFromCouponBox *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBox), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:sourceApprovalNo", -1, &(a->_ns1__RollbackCashCouponFromCouponBox::sourceApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__RollbackCashCouponFromCouponBox::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:sourceOrderId", -1, &(a->_ns1__RollbackCashCouponFromCouponBox::sourceOrderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__RollbackCashCouponFromCouponBox::orderDateTime), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:couponCardNo", -1, &(a->_ns1__RollbackCashCouponFromCouponBox::couponCardNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__RollbackCashCouponFromCouponBox::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__RollbackCashCouponFromCouponBox::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__RollbackCashCouponFromCouponBox::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__RollbackCashCouponFromCouponBox::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__RollbackCashCouponFromCouponBox::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__RollbackCashCouponFromCouponBox(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__RollbackCashCouponFromCouponBox * SOAP_FMAC4 soap_in__ns1__RollbackCashCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__RollbackCashCouponFromCouponBox *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__RollbackCashCouponFromCouponBox *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBox, sizeof(_ns1__RollbackCashCouponFromCouponBox), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__RollbackCashCouponFromCouponBox)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__RollbackCashCouponFromCouponBox *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_sourceApprovalNo1 = 1;
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_sourceOrderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponCardNo1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_sourceApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:sourceApprovalNo", &(a->_ns1__RollbackCashCouponFromCouponBox::sourceApprovalNo), "xsd:int"))
				{	soap_flag_sourceApprovalNo1--;
					continue;
				}
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__RollbackCashCouponFromCouponBox::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_sourceOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:sourceOrderId", &(a->_ns1__RollbackCashCouponFromCouponBox::sourceOrderId), "xsd:string"))
				{	soap_flag_sourceOrderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__RollbackCashCouponFromCouponBox::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponCardNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:couponCardNo", &(a->_ns1__RollbackCashCouponFromCouponBox::couponCardNo), "xsd:int"))
				{	soap_flag_couponCardNo1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__RollbackCashCouponFromCouponBox::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__RollbackCashCouponFromCouponBox::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__RollbackCashCouponFromCouponBox::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__RollbackCashCouponFromCouponBox::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__RollbackCashCouponFromCouponBox *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBox, 0, sizeof(_ns1__RollbackCashCouponFromCouponBox), 0, soap_copy__ns1__RollbackCashCouponFromCouponBox);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_sourceApprovalNo1 > 0 || soap_flag_couponCardNo1 > 0 || soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__RollbackCashCouponFromCouponBox::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBox);
	if (this->soap_out(soap, tag?tag:"ns1:RollbackCashCouponFromCouponBox", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__RollbackCashCouponFromCouponBox::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__RollbackCashCouponFromCouponBox(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__RollbackCashCouponFromCouponBox * SOAP_FMAC4 soap_get__ns1__RollbackCashCouponFromCouponBox(struct soap *soap, _ns1__RollbackCashCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__RollbackCashCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__RollbackCashCouponFromCouponBox * SOAP_FMAC2 soap_instantiate__ns1__RollbackCashCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__RollbackCashCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__RollbackCashCouponFromCouponBox);
		if (size)
			*size = sizeof(_ns1__RollbackCashCouponFromCouponBox);
		((_ns1__RollbackCashCouponFromCouponBox*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__RollbackCashCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(_ns1__RollbackCashCouponFromCouponBox);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__RollbackCashCouponFromCouponBox*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__RollbackCashCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RollbackCashCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__RollbackCashCouponFromCouponBox %p -> %p\n", q, p));
	*(_ns1__RollbackCashCouponFromCouponBox*)p = *(_ns1__RollbackCashCouponFromCouponBox*)q;
}

void _ns1__UseCashCouponFromCouponBoxResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__UseCashCouponFromCouponBoxResponse::UseCashCouponFromCouponBoxResult);
	soap_default_int(soap, &this->_ns1__UseCashCouponFromCouponBoxResponse::outApprovalNo);
	this->_ns1__UseCashCouponFromCouponBoxResponse::outApprovalDatetime = NULL;
	soap_default_int(soap, &this->_ns1__UseCashCouponFromCouponBoxResponse::outConvertCash);
	soap_default_short(soap, &this->_ns1__UseCashCouponFromCouponBoxResponse::outChargeType);
	this->_ns1__UseCashCouponFromCouponBoxResponse::outOrderId = NULL;
	/* transient soap skipped */
}

void _ns1__UseCashCouponFromCouponBoxResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseCashCouponFromCouponBoxResponse::outApprovalDatetime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseCashCouponFromCouponBoxResponse::outOrderId);
	/* transient soap skipped */
#endif
}

int _ns1__UseCashCouponFromCouponBoxResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__UseCashCouponFromCouponBoxResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UseCashCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, const _ns1__UseCashCouponFromCouponBoxResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__UseCashCouponFromCouponBoxResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:UseCashCouponFromCouponBoxResult");
	if (soap_out_int(soap, "ns1:UseCashCouponFromCouponBoxResult", -1, &(a->_ns1__UseCashCouponFromCouponBoxResponse::UseCashCouponFromCouponBoxResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outApprovalNo", -1, &(a->_ns1__UseCashCouponFromCouponBoxResponse::outApprovalNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outApprovalDatetime", -1, &(a->_ns1__UseCashCouponFromCouponBoxResponse::outApprovalDatetime), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outConvertCash", -1, &(a->_ns1__UseCashCouponFromCouponBoxResponse::outConvertCash), ""))
		return soap->error;
	if (soap_out_short(soap, "ns1:outChargeType", -1, &(a->_ns1__UseCashCouponFromCouponBoxResponse::outChargeType), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:outOrderId", -1, &(a->_ns1__UseCashCouponFromCouponBoxResponse::outOrderId), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__UseCashCouponFromCouponBoxResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__UseCashCouponFromCouponBoxResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__UseCashCouponFromCouponBoxResponse * SOAP_FMAC4 soap_in__ns1__UseCashCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__UseCashCouponFromCouponBoxResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__UseCashCouponFromCouponBoxResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__UseCashCouponFromCouponBoxResponse, sizeof(_ns1__UseCashCouponFromCouponBoxResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__UseCashCouponFromCouponBoxResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__UseCashCouponFromCouponBoxResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_UseCashCouponFromCouponBoxResult1 = 1;
	size_t soap_flag_outApprovalNo1 = 1;
	size_t soap_flag_outApprovalDatetime1 = 1;
	size_t soap_flag_outConvertCash1 = 1;
	size_t soap_flag_outChargeType1 = 1;
	size_t soap_flag_outOrderId1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_UseCashCouponFromCouponBoxResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:UseCashCouponFromCouponBoxResult", &(a->_ns1__UseCashCouponFromCouponBoxResponse::UseCashCouponFromCouponBoxResult), "xsd:int"))
				{	soap_flag_UseCashCouponFromCouponBoxResult1--;
					continue;
				}
			if (soap_flag_outApprovalNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outApprovalNo", &(a->_ns1__UseCashCouponFromCouponBoxResponse::outApprovalNo), "xsd:int"))
				{	soap_flag_outApprovalNo1--;
					continue;
				}
			if (soap_flag_outApprovalDatetime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outApprovalDatetime", &(a->_ns1__UseCashCouponFromCouponBoxResponse::outApprovalDatetime), "xsd:string"))
				{	soap_flag_outApprovalDatetime1--;
					continue;
				}
			if (soap_flag_outConvertCash1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outConvertCash", &(a->_ns1__UseCashCouponFromCouponBoxResponse::outConvertCash), "xsd:int"))
				{	soap_flag_outConvertCash1--;
					continue;
				}
			if (soap_flag_outChargeType1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_short(soap, "ns1:outChargeType", &(a->_ns1__UseCashCouponFromCouponBoxResponse::outChargeType), "xsd:short"))
				{	soap_flag_outChargeType1--;
					continue;
				}
			if (soap_flag_outOrderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:outOrderId", &(a->_ns1__UseCashCouponFromCouponBoxResponse::outOrderId), "xsd:string"))
				{	soap_flag_outOrderId1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:UseCashCouponFromCouponBoxResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__UseCashCouponFromCouponBoxResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__UseCashCouponFromCouponBoxResponse, 0, sizeof(_ns1__UseCashCouponFromCouponBoxResponse), 0, soap_copy__ns1__UseCashCouponFromCouponBoxResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_UseCashCouponFromCouponBoxResult1 > 0 || soap_flag_outApprovalNo1 > 0 || soap_flag_outConvertCash1 > 0 || soap_flag_outChargeType1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__UseCashCouponFromCouponBoxResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__UseCashCouponFromCouponBoxResponse);
	if (this->soap_out(soap, tag?tag:"ns1:UseCashCouponFromCouponBoxResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__UseCashCouponFromCouponBoxResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__UseCashCouponFromCouponBoxResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__UseCashCouponFromCouponBoxResponse * SOAP_FMAC4 soap_get__ns1__UseCashCouponFromCouponBoxResponse(struct soap *soap, _ns1__UseCashCouponFromCouponBoxResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__UseCashCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__UseCashCouponFromCouponBoxResponse * SOAP_FMAC2 soap_instantiate__ns1__UseCashCouponFromCouponBoxResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__UseCashCouponFromCouponBoxResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__UseCashCouponFromCouponBoxResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__UseCashCouponFromCouponBoxResponse);
		if (size)
			*size = sizeof(_ns1__UseCashCouponFromCouponBoxResponse);
		((_ns1__UseCashCouponFromCouponBoxResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__UseCashCouponFromCouponBoxResponse, n);
		if (size)
			*size = n * sizeof(_ns1__UseCashCouponFromCouponBoxResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__UseCashCouponFromCouponBoxResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__UseCashCouponFromCouponBoxResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UseCashCouponFromCouponBoxResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__UseCashCouponFromCouponBoxResponse %p -> %p\n", q, p));
	*(_ns1__UseCashCouponFromCouponBoxResponse*)p = *(_ns1__UseCashCouponFromCouponBoxResponse*)q;
}

void _ns1__UseCashCouponFromCouponBox::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__UseCashCouponFromCouponBox::orderId = NULL;
	this->_ns1__UseCashCouponFromCouponBox::orderDateTime = NULL;
	soap_default_int(soap, &this->_ns1__UseCashCouponFromCouponBox::couponCardNo);
	this->_ns1__UseCashCouponFromCouponBox::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__UseCashCouponFromCouponBox::oidUser);
	this->_ns1__UseCashCouponFromCouponBox::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__UseCashCouponFromCouponBox::isCafe);
	/* transient soap skipped */
}

void _ns1__UseCashCouponFromCouponBox::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseCashCouponFromCouponBox::orderId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseCashCouponFromCouponBox::orderDateTime);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseCashCouponFromCouponBox::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__UseCashCouponFromCouponBox::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__UseCashCouponFromCouponBox::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__UseCashCouponFromCouponBox(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UseCashCouponFromCouponBox(struct soap *soap, const char *tag, int id, const _ns1__UseCashCouponFromCouponBox *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__UseCashCouponFromCouponBox), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderId", -1, &(a->_ns1__UseCashCouponFromCouponBox::orderId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:orderDateTime", -1, &(a->_ns1__UseCashCouponFromCouponBox::orderDateTime), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:couponCardNo", -1, &(a->_ns1__UseCashCouponFromCouponBox::couponCardNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__UseCashCouponFromCouponBox::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__UseCashCouponFromCouponBox::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__UseCashCouponFromCouponBox::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__UseCashCouponFromCouponBox::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__UseCashCouponFromCouponBox::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__UseCashCouponFromCouponBox(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__UseCashCouponFromCouponBox * SOAP_FMAC4 soap_in__ns1__UseCashCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__UseCashCouponFromCouponBox *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__UseCashCouponFromCouponBox *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__UseCashCouponFromCouponBox, sizeof(_ns1__UseCashCouponFromCouponBox), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__UseCashCouponFromCouponBox)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__UseCashCouponFromCouponBox *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_orderId1 = 1;
	size_t soap_flag_orderDateTime1 = 1;
	size_t soap_flag_couponCardNo1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_orderId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderId", &(a->_ns1__UseCashCouponFromCouponBox::orderId), "xsd:string"))
				{	soap_flag_orderId1--;
					continue;
				}
			if (soap_flag_orderDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:orderDateTime", &(a->_ns1__UseCashCouponFromCouponBox::orderDateTime), "xsd:string"))
				{	soap_flag_orderDateTime1--;
					continue;
				}
			if (soap_flag_couponCardNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:couponCardNo", &(a->_ns1__UseCashCouponFromCouponBox::couponCardNo), "xsd:int"))
				{	soap_flag_couponCardNo1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__UseCashCouponFromCouponBox::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__UseCashCouponFromCouponBox::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__UseCashCouponFromCouponBox::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__UseCashCouponFromCouponBox::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__UseCashCouponFromCouponBox *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__UseCashCouponFromCouponBox, 0, sizeof(_ns1__UseCashCouponFromCouponBox), 0, soap_copy__ns1__UseCashCouponFromCouponBox);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_couponCardNo1 > 0 || soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__UseCashCouponFromCouponBox::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__UseCashCouponFromCouponBox);
	if (this->soap_out(soap, tag?tag:"ns1:UseCashCouponFromCouponBox", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__UseCashCouponFromCouponBox::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__UseCashCouponFromCouponBox(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__UseCashCouponFromCouponBox * SOAP_FMAC4 soap_get__ns1__UseCashCouponFromCouponBox(struct soap *soap, _ns1__UseCashCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__UseCashCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__UseCashCouponFromCouponBox * SOAP_FMAC2 soap_instantiate__ns1__UseCashCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__UseCashCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__UseCashCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__UseCashCouponFromCouponBox);
		if (size)
			*size = sizeof(_ns1__UseCashCouponFromCouponBox);
		((_ns1__UseCashCouponFromCouponBox*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__UseCashCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(_ns1__UseCashCouponFromCouponBox);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__UseCashCouponFromCouponBox*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__UseCashCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UseCashCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__UseCashCouponFromCouponBox %p -> %p\n", q, p));
	*(_ns1__UseCashCouponFromCouponBox*)p = *(_ns1__UseCashCouponFromCouponBox*)q;
}

void _ns1__CheckCashCouponFromCouponBoxResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckCashCouponFromCouponBoxResponse::CheckCashCouponFromCouponBoxResult);
	soap_default_int(soap, &this->_ns1__CheckCashCouponFromCouponBoxResponse::outConvertCash);
	soap_default_short(soap, &this->_ns1__CheckCashCouponFromCouponBoxResponse::outChargeType);
	/* transient soap skipped */
}

void _ns1__CheckCashCouponFromCouponBoxResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__CheckCashCouponFromCouponBoxResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckCashCouponFromCouponBoxResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckCashCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, const _ns1__CheckCashCouponFromCouponBoxResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckCashCouponFromCouponBoxResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:CheckCashCouponFromCouponBoxResult");
	if (soap_out_int(soap, "ns1:CheckCashCouponFromCouponBoxResult", -1, &(a->_ns1__CheckCashCouponFromCouponBoxResponse::CheckCashCouponFromCouponBoxResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outConvertCash", -1, &(a->_ns1__CheckCashCouponFromCouponBoxResponse::outConvertCash), ""))
		return soap->error;
	if (soap_out_short(soap, "ns1:outChargeType", -1, &(a->_ns1__CheckCashCouponFromCouponBoxResponse::outChargeType), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckCashCouponFromCouponBoxResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckCashCouponFromCouponBoxResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckCashCouponFromCouponBoxResponse * SOAP_FMAC4 soap_in__ns1__CheckCashCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__CheckCashCouponFromCouponBoxResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckCashCouponFromCouponBoxResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckCashCouponFromCouponBoxResponse, sizeof(_ns1__CheckCashCouponFromCouponBoxResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckCashCouponFromCouponBoxResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckCashCouponFromCouponBoxResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_CheckCashCouponFromCouponBoxResult1 = 1;
	size_t soap_flag_outConvertCash1 = 1;
	size_t soap_flag_outChargeType1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_CheckCashCouponFromCouponBoxResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:CheckCashCouponFromCouponBoxResult", &(a->_ns1__CheckCashCouponFromCouponBoxResponse::CheckCashCouponFromCouponBoxResult), "xsd:int"))
				{	soap_flag_CheckCashCouponFromCouponBoxResult1--;
					continue;
				}
			if (soap_flag_outConvertCash1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outConvertCash", &(a->_ns1__CheckCashCouponFromCouponBoxResponse::outConvertCash), "xsd:int"))
				{	soap_flag_outConvertCash1--;
					continue;
				}
			if (soap_flag_outChargeType1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_short(soap, "ns1:outChargeType", &(a->_ns1__CheckCashCouponFromCouponBoxResponse::outChargeType), "xsd:short"))
				{	soap_flag_outChargeType1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:CheckCashCouponFromCouponBoxResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckCashCouponFromCouponBoxResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckCashCouponFromCouponBoxResponse, 0, sizeof(_ns1__CheckCashCouponFromCouponBoxResponse), 0, soap_copy__ns1__CheckCashCouponFromCouponBoxResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_CheckCashCouponFromCouponBoxResult1 > 0 || soap_flag_outConvertCash1 > 0 || soap_flag_outChargeType1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckCashCouponFromCouponBoxResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckCashCouponFromCouponBoxResponse);
	if (this->soap_out(soap, tag?tag:"ns1:CheckCashCouponFromCouponBoxResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckCashCouponFromCouponBoxResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckCashCouponFromCouponBoxResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckCashCouponFromCouponBoxResponse * SOAP_FMAC4 soap_get__ns1__CheckCashCouponFromCouponBoxResponse(struct soap *soap, _ns1__CheckCashCouponFromCouponBoxResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckCashCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckCashCouponFromCouponBoxResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckCashCouponFromCouponBoxResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckCashCouponFromCouponBoxResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckCashCouponFromCouponBoxResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckCashCouponFromCouponBoxResponse);
		if (size)
			*size = sizeof(_ns1__CheckCashCouponFromCouponBoxResponse);
		((_ns1__CheckCashCouponFromCouponBoxResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckCashCouponFromCouponBoxResponse, n);
		if (size)
			*size = n * sizeof(_ns1__CheckCashCouponFromCouponBoxResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckCashCouponFromCouponBoxResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckCashCouponFromCouponBoxResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckCashCouponFromCouponBoxResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckCashCouponFromCouponBoxResponse %p -> %p\n", q, p));
	*(_ns1__CheckCashCouponFromCouponBoxResponse*)p = *(_ns1__CheckCashCouponFromCouponBoxResponse*)q;
}

void _ns1__CheckCashCouponFromCouponBox::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckCashCouponFromCouponBox::couponCardNo);
	this->_ns1__CheckCashCouponFromCouponBox::ipAddress = NULL;
	soap_default_int(soap, &this->_ns1__CheckCashCouponFromCouponBox::oidUser);
	this->_ns1__CheckCashCouponFromCouponBox::nxId = NULL;
	soap_default_bool(soap, &this->_ns1__CheckCashCouponFromCouponBox::isCafe);
	/* transient soap skipped */
}

void _ns1__CheckCashCouponFromCouponBox::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckCashCouponFromCouponBox::ipAddress);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckCashCouponFromCouponBox::nxId);
	/* transient soap skipped */
#endif
}

int _ns1__CheckCashCouponFromCouponBox::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckCashCouponFromCouponBox(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckCashCouponFromCouponBox(struct soap *soap, const char *tag, int id, const _ns1__CheckCashCouponFromCouponBox *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckCashCouponFromCouponBox), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:couponCardNo", -1, &(a->_ns1__CheckCashCouponFromCouponBox::couponCardNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ipAddress", -1, &(a->_ns1__CheckCashCouponFromCouponBox::ipAddress), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:oidUser", -1, &(a->_ns1__CheckCashCouponFromCouponBox::oidUser), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nxId", -1, &(a->_ns1__CheckCashCouponFromCouponBox::nxId), ""))
		return soap->error;
	if (soap_out_bool(soap, "ns1:isCafe", -1, &(a->_ns1__CheckCashCouponFromCouponBox::isCafe), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckCashCouponFromCouponBox::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckCashCouponFromCouponBox(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckCashCouponFromCouponBox * SOAP_FMAC4 soap_in__ns1__CheckCashCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__CheckCashCouponFromCouponBox *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckCashCouponFromCouponBox *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckCashCouponFromCouponBox, sizeof(_ns1__CheckCashCouponFromCouponBox), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckCashCouponFromCouponBox)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckCashCouponFromCouponBox *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_couponCardNo1 = 1;
	size_t soap_flag_ipAddress1 = 1;
	size_t soap_flag_oidUser1 = 1;
	size_t soap_flag_nxId1 = 1;
	size_t soap_flag_isCafe1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_couponCardNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:couponCardNo", &(a->_ns1__CheckCashCouponFromCouponBox::couponCardNo), "xsd:int"))
				{	soap_flag_couponCardNo1--;
					continue;
				}
			if (soap_flag_ipAddress1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ipAddress", &(a->_ns1__CheckCashCouponFromCouponBox::ipAddress), "xsd:string"))
				{	soap_flag_ipAddress1--;
					continue;
				}
			if (soap_flag_oidUser1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:oidUser", &(a->_ns1__CheckCashCouponFromCouponBox::oidUser), "xsd:int"))
				{	soap_flag_oidUser1--;
					continue;
				}
			if (soap_flag_nxId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nxId", &(a->_ns1__CheckCashCouponFromCouponBox::nxId), "xsd:string"))
				{	soap_flag_nxId1--;
					continue;
				}
			if (soap_flag_isCafe1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_bool(soap, "ns1:isCafe", &(a->_ns1__CheckCashCouponFromCouponBox::isCafe), "xsd:boolean"))
				{	soap_flag_isCafe1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckCashCouponFromCouponBox *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckCashCouponFromCouponBox, 0, sizeof(_ns1__CheckCashCouponFromCouponBox), 0, soap_copy__ns1__CheckCashCouponFromCouponBox);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_couponCardNo1 > 0 || soap_flag_oidUser1 > 0 || soap_flag_isCafe1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckCashCouponFromCouponBox::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckCashCouponFromCouponBox);
	if (this->soap_out(soap, tag?tag:"ns1:CheckCashCouponFromCouponBox", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckCashCouponFromCouponBox::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckCashCouponFromCouponBox(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckCashCouponFromCouponBox * SOAP_FMAC4 soap_get__ns1__CheckCashCouponFromCouponBox(struct soap *soap, _ns1__CheckCashCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckCashCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckCashCouponFromCouponBox * SOAP_FMAC2 soap_instantiate__ns1__CheckCashCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckCashCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckCashCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckCashCouponFromCouponBox);
		if (size)
			*size = sizeof(_ns1__CheckCashCouponFromCouponBox);
		((_ns1__CheckCashCouponFromCouponBox*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckCashCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(_ns1__CheckCashCouponFromCouponBox);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckCashCouponFromCouponBox*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckCashCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckCashCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckCashCouponFromCouponBox %p -> %p\n", q, p));
	*(_ns1__CheckCashCouponFromCouponBox*)p = *(_ns1__CheckCashCouponFromCouponBox*)q;
}

void _ns1__GetCouponBoxTargetItemListCountResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__GetCouponBoxTargetItemListCountResponse::GetCouponBoxTargetItemListCountResult);
	/* transient soap skipped */
}

void _ns1__GetCouponBoxTargetItemListCountResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__GetCouponBoxTargetItemListCountResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__GetCouponBoxTargetItemListCountResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetCouponBoxTargetItemListCountResponse(struct soap *soap, const char *tag, int id, const _ns1__GetCouponBoxTargetItemListCountResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCountResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:GetCouponBoxTargetItemListCountResult");
	if (soap_out_int(soap, "ns1:GetCouponBoxTargetItemListCountResult", -1, &(a->_ns1__GetCouponBoxTargetItemListCountResponse::GetCouponBoxTargetItemListCountResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__GetCouponBoxTargetItemListCountResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__GetCouponBoxTargetItemListCountResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxTargetItemListCountResponse * SOAP_FMAC4 soap_in__ns1__GetCouponBoxTargetItemListCountResponse(struct soap *soap, const char *tag, _ns1__GetCouponBoxTargetItemListCountResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__GetCouponBoxTargetItemListCountResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCountResponse, sizeof(_ns1__GetCouponBoxTargetItemListCountResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__GetCouponBoxTargetItemListCountResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__GetCouponBoxTargetItemListCountResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_GetCouponBoxTargetItemListCountResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_GetCouponBoxTargetItemListCountResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:GetCouponBoxTargetItemListCountResult", &(a->_ns1__GetCouponBoxTargetItemListCountResponse::GetCouponBoxTargetItemListCountResult), "xsd:int"))
				{	soap_flag_GetCouponBoxTargetItemListCountResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:GetCouponBoxTargetItemListCountResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__GetCouponBoxTargetItemListCountResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCountResponse, 0, sizeof(_ns1__GetCouponBoxTargetItemListCountResponse), 0, soap_copy__ns1__GetCouponBoxTargetItemListCountResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_GetCouponBoxTargetItemListCountResult1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__GetCouponBoxTargetItemListCountResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCountResponse);
	if (this->soap_out(soap, tag?tag:"ns1:GetCouponBoxTargetItemListCountResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__GetCouponBoxTargetItemListCountResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__GetCouponBoxTargetItemListCountResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxTargetItemListCountResponse * SOAP_FMAC4 soap_get__ns1__GetCouponBoxTargetItemListCountResponse(struct soap *soap, _ns1__GetCouponBoxTargetItemListCountResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__GetCouponBoxTargetItemListCountResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__GetCouponBoxTargetItemListCountResponse * SOAP_FMAC2 soap_instantiate__ns1__GetCouponBoxTargetItemListCountResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__GetCouponBoxTargetItemListCountResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCountResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__GetCouponBoxTargetItemListCountResponse);
		if (size)
			*size = sizeof(_ns1__GetCouponBoxTargetItemListCountResponse);
		((_ns1__GetCouponBoxTargetItemListCountResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__GetCouponBoxTargetItemListCountResponse, n);
		if (size)
			*size = n * sizeof(_ns1__GetCouponBoxTargetItemListCountResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__GetCouponBoxTargetItemListCountResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__GetCouponBoxTargetItemListCountResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetCouponBoxTargetItemListCountResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__GetCouponBoxTargetItemListCountResponse %p -> %p\n", q, p));
	*(_ns1__GetCouponBoxTargetItemListCountResponse*)p = *(_ns1__GetCouponBoxTargetItemListCountResponse*)q;
}

void _ns1__GetCouponBoxTargetItemListCount::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__GetCouponBoxTargetItemListCount::couponCardNo);
	/* transient soap skipped */
}

void _ns1__GetCouponBoxTargetItemListCount::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__GetCouponBoxTargetItemListCount::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__GetCouponBoxTargetItemListCount(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetCouponBoxTargetItemListCount(struct soap *soap, const char *tag, int id, const _ns1__GetCouponBoxTargetItemListCount *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCount), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:couponCardNo", -1, &(a->_ns1__GetCouponBoxTargetItemListCount::couponCardNo), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__GetCouponBoxTargetItemListCount::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__GetCouponBoxTargetItemListCount(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxTargetItemListCount * SOAP_FMAC4 soap_in__ns1__GetCouponBoxTargetItemListCount(struct soap *soap, const char *tag, _ns1__GetCouponBoxTargetItemListCount *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__GetCouponBoxTargetItemListCount *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCount, sizeof(_ns1__GetCouponBoxTargetItemListCount), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__GetCouponBoxTargetItemListCount)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__GetCouponBoxTargetItemListCount *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_couponCardNo1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_couponCardNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:couponCardNo", &(a->_ns1__GetCouponBoxTargetItemListCount::couponCardNo), "xsd:int"))
				{	soap_flag_couponCardNo1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__GetCouponBoxTargetItemListCount *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCount, 0, sizeof(_ns1__GetCouponBoxTargetItemListCount), 0, soap_copy__ns1__GetCouponBoxTargetItemListCount);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_couponCardNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__GetCouponBoxTargetItemListCount::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCount);
	if (this->soap_out(soap, tag?tag:"ns1:GetCouponBoxTargetItemListCount", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__GetCouponBoxTargetItemListCount::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__GetCouponBoxTargetItemListCount(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxTargetItemListCount * SOAP_FMAC4 soap_get__ns1__GetCouponBoxTargetItemListCount(struct soap *soap, _ns1__GetCouponBoxTargetItemListCount *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__GetCouponBoxTargetItemListCount(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__GetCouponBoxTargetItemListCount * SOAP_FMAC2 soap_instantiate__ns1__GetCouponBoxTargetItemListCount(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__GetCouponBoxTargetItemListCount(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCount, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__GetCouponBoxTargetItemListCount);
		if (size)
			*size = sizeof(_ns1__GetCouponBoxTargetItemListCount);
		((_ns1__GetCouponBoxTargetItemListCount*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__GetCouponBoxTargetItemListCount, n);
		if (size)
			*size = n * sizeof(_ns1__GetCouponBoxTargetItemListCount);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__GetCouponBoxTargetItemListCount*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__GetCouponBoxTargetItemListCount*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetCouponBoxTargetItemListCount(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__GetCouponBoxTargetItemListCount %p -> %p\n", q, p));
	*(_ns1__GetCouponBoxTargetItemListCount*)p = *(_ns1__GetCouponBoxTargetItemListCount*)q;
}

void _ns1__SelectCouponBoxTargetItemListResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectCouponBoxTargetItemListResponse::SelectCouponBoxTargetItemListResult = NULL;
	/* transient soap skipped */
}

void _ns1__SelectCouponBoxTargetItemListResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ArrayOfCouponBoxTargetItem(soap, &this->_ns1__SelectCouponBoxTargetItemListResponse::SelectCouponBoxTargetItemListResult);
	/* transient soap skipped */
#endif
}

int _ns1__SelectCouponBoxTargetItemListResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectCouponBoxTargetItemListResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectCouponBoxTargetItemListResponse(struct soap *soap, const char *tag, int id, const _ns1__SelectCouponBoxTargetItemListResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectCouponBoxTargetItemListResponse), type))
		return soap->error;
	if (a->SelectCouponBoxTargetItemListResult)
		soap_element_result(soap, "ns1:SelectCouponBoxTargetItemListResult");
	if (soap_out_PointerTons1__ArrayOfCouponBoxTargetItem(soap, "ns1:SelectCouponBoxTargetItemListResult", -1, &(a->_ns1__SelectCouponBoxTargetItemListResponse::SelectCouponBoxTargetItemListResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectCouponBoxTargetItemListResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectCouponBoxTargetItemListResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxTargetItemListResponse * SOAP_FMAC4 soap_in__ns1__SelectCouponBoxTargetItemListResponse(struct soap *soap, const char *tag, _ns1__SelectCouponBoxTargetItemListResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectCouponBoxTargetItemListResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectCouponBoxTargetItemListResponse, sizeof(_ns1__SelectCouponBoxTargetItemListResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectCouponBoxTargetItemListResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectCouponBoxTargetItemListResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_SelectCouponBoxTargetItemListResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SelectCouponBoxTargetItemListResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfCouponBoxTargetItem(soap, "ns1:SelectCouponBoxTargetItemListResult", &(a->_ns1__SelectCouponBoxTargetItemListResponse::SelectCouponBoxTargetItemListResult), "ns1:ArrayOfCouponBoxTargetItem"))
				{	soap_flag_SelectCouponBoxTargetItemListResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:SelectCouponBoxTargetItemListResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectCouponBoxTargetItemListResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectCouponBoxTargetItemListResponse, 0, sizeof(_ns1__SelectCouponBoxTargetItemListResponse), 0, soap_copy__ns1__SelectCouponBoxTargetItemListResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectCouponBoxTargetItemListResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectCouponBoxTargetItemListResponse);
	if (this->soap_out(soap, tag?tag:"ns1:SelectCouponBoxTargetItemListResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectCouponBoxTargetItemListResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectCouponBoxTargetItemListResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxTargetItemListResponse * SOAP_FMAC4 soap_get__ns1__SelectCouponBoxTargetItemListResponse(struct soap *soap, _ns1__SelectCouponBoxTargetItemListResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectCouponBoxTargetItemListResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectCouponBoxTargetItemListResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectCouponBoxTargetItemListResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectCouponBoxTargetItemListResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectCouponBoxTargetItemListResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectCouponBoxTargetItemListResponse);
		if (size)
			*size = sizeof(_ns1__SelectCouponBoxTargetItemListResponse);
		((_ns1__SelectCouponBoxTargetItemListResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectCouponBoxTargetItemListResponse, n);
		if (size)
			*size = n * sizeof(_ns1__SelectCouponBoxTargetItemListResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectCouponBoxTargetItemListResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectCouponBoxTargetItemListResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectCouponBoxTargetItemListResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectCouponBoxTargetItemListResponse %p -> %p\n", q, p));
	*(_ns1__SelectCouponBoxTargetItemListResponse*)p = *(_ns1__SelectCouponBoxTargetItemListResponse*)q;
}

void _ns1__SelectCouponBoxTargetItemList::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__SelectCouponBoxTargetItemList::couponCardNo);
	soap_default_int(soap, &this->_ns1__SelectCouponBoxTargetItemList::startRowIndex);
	soap_default_int(soap, &this->_ns1__SelectCouponBoxTargetItemList::maximumRows);
	/* transient soap skipped */
}

void _ns1__SelectCouponBoxTargetItemList::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__SelectCouponBoxTargetItemList::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectCouponBoxTargetItemList(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectCouponBoxTargetItemList(struct soap *soap, const char *tag, int id, const _ns1__SelectCouponBoxTargetItemList *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectCouponBoxTargetItemList), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:couponCardNo", -1, &(a->_ns1__SelectCouponBoxTargetItemList::couponCardNo), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:startRowIndex", -1, &(a->_ns1__SelectCouponBoxTargetItemList::startRowIndex), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:maximumRows", -1, &(a->_ns1__SelectCouponBoxTargetItemList::maximumRows), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectCouponBoxTargetItemList::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectCouponBoxTargetItemList(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxTargetItemList * SOAP_FMAC4 soap_in__ns1__SelectCouponBoxTargetItemList(struct soap *soap, const char *tag, _ns1__SelectCouponBoxTargetItemList *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectCouponBoxTargetItemList *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectCouponBoxTargetItemList, sizeof(_ns1__SelectCouponBoxTargetItemList), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectCouponBoxTargetItemList)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectCouponBoxTargetItemList *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_couponCardNo1 = 1;
	size_t soap_flag_startRowIndex1 = 1;
	size_t soap_flag_maximumRows1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_couponCardNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:couponCardNo", &(a->_ns1__SelectCouponBoxTargetItemList::couponCardNo), "xsd:int"))
				{	soap_flag_couponCardNo1--;
					continue;
				}
			if (soap_flag_startRowIndex1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:startRowIndex", &(a->_ns1__SelectCouponBoxTargetItemList::startRowIndex), "xsd:int"))
				{	soap_flag_startRowIndex1--;
					continue;
				}
			if (soap_flag_maximumRows1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:maximumRows", &(a->_ns1__SelectCouponBoxTargetItemList::maximumRows), "xsd:int"))
				{	soap_flag_maximumRows1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectCouponBoxTargetItemList *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectCouponBoxTargetItemList, 0, sizeof(_ns1__SelectCouponBoxTargetItemList), 0, soap_copy__ns1__SelectCouponBoxTargetItemList);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_couponCardNo1 > 0 || soap_flag_startRowIndex1 > 0 || soap_flag_maximumRows1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__SelectCouponBoxTargetItemList::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectCouponBoxTargetItemList);
	if (this->soap_out(soap, tag?tag:"ns1:SelectCouponBoxTargetItemList", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectCouponBoxTargetItemList::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectCouponBoxTargetItemList(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxTargetItemList * SOAP_FMAC4 soap_get__ns1__SelectCouponBoxTargetItemList(struct soap *soap, _ns1__SelectCouponBoxTargetItemList *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectCouponBoxTargetItemList(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectCouponBoxTargetItemList * SOAP_FMAC2 soap_instantiate__ns1__SelectCouponBoxTargetItemList(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectCouponBoxTargetItemList(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectCouponBoxTargetItemList, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectCouponBoxTargetItemList);
		if (size)
			*size = sizeof(_ns1__SelectCouponBoxTargetItemList);
		((_ns1__SelectCouponBoxTargetItemList*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectCouponBoxTargetItemList, n);
		if (size)
			*size = n * sizeof(_ns1__SelectCouponBoxTargetItemList);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectCouponBoxTargetItemList*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectCouponBoxTargetItemList*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectCouponBoxTargetItemList(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectCouponBoxTargetItemList %p -> %p\n", q, p));
	*(_ns1__SelectCouponBoxTargetItemList*)p = *(_ns1__SelectCouponBoxTargetItemList*)q;
}

void _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse::GetCouponBoxUsedListCountByNexonIDForUserResult);
	/* transient soap skipped */
}

void _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(struct soap *soap, const char *tag, int id, const _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:GetCouponBoxUsedListCountByNexonIDForUserResult");
	if (soap_out_int(soap, "ns1:GetCouponBoxUsedListCountByNexonIDForUserResult", -1, &(a->_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse::GetCouponBoxUsedListCountByNexonIDForUserResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse * SOAP_FMAC4 soap_in__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(struct soap *soap, const char *tag, _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse, sizeof(_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_GetCouponBoxUsedListCountByNexonIDForUserResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_GetCouponBoxUsedListCountByNexonIDForUserResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:GetCouponBoxUsedListCountByNexonIDForUserResult", &(a->_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse::GetCouponBoxUsedListCountByNexonIDForUserResult), "xsd:int"))
				{	soap_flag_GetCouponBoxUsedListCountByNexonIDForUserResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:GetCouponBoxUsedListCountByNexonIDForUserResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse, 0, sizeof(_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse), 0, soap_copy__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_GetCouponBoxUsedListCountByNexonIDForUserResult1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse);
	if (this->soap_out(soap, tag?tag:"ns1:GetCouponBoxUsedListCountByNexonIDForUserResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse * SOAP_FMAC4 soap_get__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(struct soap *soap, _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse * SOAP_FMAC2 soap_instantiate__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse);
		if (size)
			*size = sizeof(_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse);
		((_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse, n);
		if (size)
			*size = n * sizeof(_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse %p -> %p\n", q, p));
	*(_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse*)p = *(_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse*)q;
}

void _ns1__GetCouponBoxUsedListCountByNexonIDForUser::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__GetCouponBoxUsedListCountByNexonIDForUser::nexonID = NULL;
	this->_ns1__GetCouponBoxUsedListCountByNexonIDForUser::serviceCode = NULL;
	soap_default_short(soap, &this->_ns1__GetCouponBoxUsedListCountByNexonIDForUser::couponboxType);
	/* transient soap skipped */
}

void _ns1__GetCouponBoxUsedListCountByNexonIDForUser::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__GetCouponBoxUsedListCountByNexonIDForUser::nexonID);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__GetCouponBoxUsedListCountByNexonIDForUser::serviceCode);
	/* transient soap skipped */
#endif
}

int _ns1__GetCouponBoxUsedListCountByNexonIDForUser::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, const char *tag, int id, const _ns1__GetCouponBoxUsedListCountByNexonIDForUser *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUser), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nexonID", -1, &(a->_ns1__GetCouponBoxUsedListCountByNexonIDForUser::nexonID), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:serviceCode", -1, &(a->_ns1__GetCouponBoxUsedListCountByNexonIDForUser::serviceCode), ""))
		return soap->error;
	if (soap_out_short(soap, "ns1:couponboxType", -1, &(a->_ns1__GetCouponBoxUsedListCountByNexonIDForUser::couponboxType), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__GetCouponBoxUsedListCountByNexonIDForUser::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxUsedListCountByNexonIDForUser * SOAP_FMAC4 soap_in__ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, const char *tag, _ns1__GetCouponBoxUsedListCountByNexonIDForUser *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__GetCouponBoxUsedListCountByNexonIDForUser *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUser, sizeof(_ns1__GetCouponBoxUsedListCountByNexonIDForUser), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUser)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__GetCouponBoxUsedListCountByNexonIDForUser *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_nexonID1 = 1;
	size_t soap_flag_serviceCode1 = 1;
	size_t soap_flag_couponboxType1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_nexonID1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nexonID", &(a->_ns1__GetCouponBoxUsedListCountByNexonIDForUser::nexonID), "xsd:string"))
				{	soap_flag_nexonID1--;
					continue;
				}
			if (soap_flag_serviceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:serviceCode", &(a->_ns1__GetCouponBoxUsedListCountByNexonIDForUser::serviceCode), "xsd:string"))
				{	soap_flag_serviceCode1--;
					continue;
				}
			if (soap_flag_couponboxType1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_short(soap, "ns1:couponboxType", &(a->_ns1__GetCouponBoxUsedListCountByNexonIDForUser::couponboxType), "xsd:short"))
				{	soap_flag_couponboxType1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__GetCouponBoxUsedListCountByNexonIDForUser *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUser, 0, sizeof(_ns1__GetCouponBoxUsedListCountByNexonIDForUser), 0, soap_copy__ns1__GetCouponBoxUsedListCountByNexonIDForUser);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_couponboxType1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__GetCouponBoxUsedListCountByNexonIDForUser::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUser);
	if (this->soap_out(soap, tag?tag:"ns1:GetCouponBoxUsedListCountByNexonIDForUser", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__GetCouponBoxUsedListCountByNexonIDForUser::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxUsedListCountByNexonIDForUser * SOAP_FMAC4 soap_get__ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, _ns1__GetCouponBoxUsedListCountByNexonIDForUser *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__GetCouponBoxUsedListCountByNexonIDForUser * SOAP_FMAC2 soap_instantiate__ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__GetCouponBoxUsedListCountByNexonIDForUser(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUser, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__GetCouponBoxUsedListCountByNexonIDForUser);
		if (size)
			*size = sizeof(_ns1__GetCouponBoxUsedListCountByNexonIDForUser);
		((_ns1__GetCouponBoxUsedListCountByNexonIDForUser*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__GetCouponBoxUsedListCountByNexonIDForUser, n);
		if (size)
			*size = n * sizeof(_ns1__GetCouponBoxUsedListCountByNexonIDForUser);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__GetCouponBoxUsedListCountByNexonIDForUser*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__GetCouponBoxUsedListCountByNexonIDForUser*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__GetCouponBoxUsedListCountByNexonIDForUser %p -> %p\n", q, p));
	*(_ns1__GetCouponBoxUsedListCountByNexonIDForUser*)p = *(_ns1__GetCouponBoxUsedListCountByNexonIDForUser*)q;
}

void _ns1__GetCouponBoxListCountByNexonIDForUserResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__GetCouponBoxListCountByNexonIDForUserResponse::GetCouponBoxListCountByNexonIDForUserResult);
	/* transient soap skipped */
}

void _ns1__GetCouponBoxListCountByNexonIDForUserResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__GetCouponBoxListCountByNexonIDForUserResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__GetCouponBoxListCountByNexonIDForUserResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetCouponBoxListCountByNexonIDForUserResponse(struct soap *soap, const char *tag, int id, const _ns1__GetCouponBoxListCountByNexonIDForUserResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUserResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:GetCouponBoxListCountByNexonIDForUserResult");
	if (soap_out_int(soap, "ns1:GetCouponBoxListCountByNexonIDForUserResult", -1, &(a->_ns1__GetCouponBoxListCountByNexonIDForUserResponse::GetCouponBoxListCountByNexonIDForUserResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__GetCouponBoxListCountByNexonIDForUserResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__GetCouponBoxListCountByNexonIDForUserResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxListCountByNexonIDForUserResponse * SOAP_FMAC4 soap_in__ns1__GetCouponBoxListCountByNexonIDForUserResponse(struct soap *soap, const char *tag, _ns1__GetCouponBoxListCountByNexonIDForUserResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__GetCouponBoxListCountByNexonIDForUserResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUserResponse, sizeof(_ns1__GetCouponBoxListCountByNexonIDForUserResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUserResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__GetCouponBoxListCountByNexonIDForUserResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_GetCouponBoxListCountByNexonIDForUserResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_GetCouponBoxListCountByNexonIDForUserResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:GetCouponBoxListCountByNexonIDForUserResult", &(a->_ns1__GetCouponBoxListCountByNexonIDForUserResponse::GetCouponBoxListCountByNexonIDForUserResult), "xsd:int"))
				{	soap_flag_GetCouponBoxListCountByNexonIDForUserResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:GetCouponBoxListCountByNexonIDForUserResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__GetCouponBoxListCountByNexonIDForUserResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUserResponse, 0, sizeof(_ns1__GetCouponBoxListCountByNexonIDForUserResponse), 0, soap_copy__ns1__GetCouponBoxListCountByNexonIDForUserResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_GetCouponBoxListCountByNexonIDForUserResult1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__GetCouponBoxListCountByNexonIDForUserResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUserResponse);
	if (this->soap_out(soap, tag?tag:"ns1:GetCouponBoxListCountByNexonIDForUserResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__GetCouponBoxListCountByNexonIDForUserResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__GetCouponBoxListCountByNexonIDForUserResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxListCountByNexonIDForUserResponse * SOAP_FMAC4 soap_get__ns1__GetCouponBoxListCountByNexonIDForUserResponse(struct soap *soap, _ns1__GetCouponBoxListCountByNexonIDForUserResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__GetCouponBoxListCountByNexonIDForUserResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__GetCouponBoxListCountByNexonIDForUserResponse * SOAP_FMAC2 soap_instantiate__ns1__GetCouponBoxListCountByNexonIDForUserResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__GetCouponBoxListCountByNexonIDForUserResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUserResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__GetCouponBoxListCountByNexonIDForUserResponse);
		if (size)
			*size = sizeof(_ns1__GetCouponBoxListCountByNexonIDForUserResponse);
		((_ns1__GetCouponBoxListCountByNexonIDForUserResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__GetCouponBoxListCountByNexonIDForUserResponse, n);
		if (size)
			*size = n * sizeof(_ns1__GetCouponBoxListCountByNexonIDForUserResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__GetCouponBoxListCountByNexonIDForUserResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__GetCouponBoxListCountByNexonIDForUserResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetCouponBoxListCountByNexonIDForUserResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__GetCouponBoxListCountByNexonIDForUserResponse %p -> %p\n", q, p));
	*(_ns1__GetCouponBoxListCountByNexonIDForUserResponse*)p = *(_ns1__GetCouponBoxListCountByNexonIDForUserResponse*)q;
}

void _ns1__GetCouponBoxListCountByNexonIDForUser::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__GetCouponBoxListCountByNexonIDForUser::nexonID = NULL;
	this->_ns1__GetCouponBoxListCountByNexonIDForUser::serviceCode = NULL;
	soap_default_short(soap, &this->_ns1__GetCouponBoxListCountByNexonIDForUser::couponboxType);
	/* transient soap skipped */
}

void _ns1__GetCouponBoxListCountByNexonIDForUser::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__GetCouponBoxListCountByNexonIDForUser::nexonID);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__GetCouponBoxListCountByNexonIDForUser::serviceCode);
	/* transient soap skipped */
#endif
}

int _ns1__GetCouponBoxListCountByNexonIDForUser::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__GetCouponBoxListCountByNexonIDForUser(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, const char *tag, int id, const _ns1__GetCouponBoxListCountByNexonIDForUser *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUser), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nexonID", -1, &(a->_ns1__GetCouponBoxListCountByNexonIDForUser::nexonID), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:serviceCode", -1, &(a->_ns1__GetCouponBoxListCountByNexonIDForUser::serviceCode), ""))
		return soap->error;
	if (soap_out_short(soap, "ns1:couponboxType", -1, &(a->_ns1__GetCouponBoxListCountByNexonIDForUser::couponboxType), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__GetCouponBoxListCountByNexonIDForUser::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__GetCouponBoxListCountByNexonIDForUser(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxListCountByNexonIDForUser * SOAP_FMAC4 soap_in__ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, const char *tag, _ns1__GetCouponBoxListCountByNexonIDForUser *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__GetCouponBoxListCountByNexonIDForUser *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUser, sizeof(_ns1__GetCouponBoxListCountByNexonIDForUser), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUser)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__GetCouponBoxListCountByNexonIDForUser *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_nexonID1 = 1;
	size_t soap_flag_serviceCode1 = 1;
	size_t soap_flag_couponboxType1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_nexonID1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nexonID", &(a->_ns1__GetCouponBoxListCountByNexonIDForUser::nexonID), "xsd:string"))
				{	soap_flag_nexonID1--;
					continue;
				}
			if (soap_flag_serviceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:serviceCode", &(a->_ns1__GetCouponBoxListCountByNexonIDForUser::serviceCode), "xsd:string"))
				{	soap_flag_serviceCode1--;
					continue;
				}
			if (soap_flag_couponboxType1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_short(soap, "ns1:couponboxType", &(a->_ns1__GetCouponBoxListCountByNexonIDForUser::couponboxType), "xsd:short"))
				{	soap_flag_couponboxType1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__GetCouponBoxListCountByNexonIDForUser *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUser, 0, sizeof(_ns1__GetCouponBoxListCountByNexonIDForUser), 0, soap_copy__ns1__GetCouponBoxListCountByNexonIDForUser);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_couponboxType1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__GetCouponBoxListCountByNexonIDForUser::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUser);
	if (this->soap_out(soap, tag?tag:"ns1:GetCouponBoxListCountByNexonIDForUser", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__GetCouponBoxListCountByNexonIDForUser::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__GetCouponBoxListCountByNexonIDForUser(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxListCountByNexonIDForUser * SOAP_FMAC4 soap_get__ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, _ns1__GetCouponBoxListCountByNexonIDForUser *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__GetCouponBoxListCountByNexonIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__GetCouponBoxListCountByNexonIDForUser * SOAP_FMAC2 soap_instantiate__ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__GetCouponBoxListCountByNexonIDForUser(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUser, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__GetCouponBoxListCountByNexonIDForUser);
		if (size)
			*size = sizeof(_ns1__GetCouponBoxListCountByNexonIDForUser);
		((_ns1__GetCouponBoxListCountByNexonIDForUser*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__GetCouponBoxListCountByNexonIDForUser, n);
		if (size)
			*size = n * sizeof(_ns1__GetCouponBoxListCountByNexonIDForUser);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__GetCouponBoxListCountByNexonIDForUser*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__GetCouponBoxListCountByNexonIDForUser*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__GetCouponBoxListCountByNexonIDForUser %p -> %p\n", q, p));
	*(_ns1__GetCouponBoxListCountByNexonIDForUser*)p = *(_ns1__GetCouponBoxListCountByNexonIDForUser*)q;
}

void _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse::SelectCouponBoxUsedListByNexonIDForUserResult = NULL;
	/* transient soap skipped */
}

void _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ArrayOfClientCouponBox(soap, &this->_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse::SelectCouponBoxUsedListByNexonIDForUserResult);
	/* transient soap skipped */
#endif
}

int _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(struct soap *soap, const char *tag, int id, const _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse), type))
		return soap->error;
	if (a->SelectCouponBoxUsedListByNexonIDForUserResult)
		soap_element_result(soap, "ns1:SelectCouponBoxUsedListByNexonIDForUserResult");
	if (soap_out_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectCouponBoxUsedListByNexonIDForUserResult", -1, &(a->_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse::SelectCouponBoxUsedListByNexonIDForUserResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse * SOAP_FMAC4 soap_in__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(struct soap *soap, const char *tag, _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse, sizeof(_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_SelectCouponBoxUsedListByNexonIDForUserResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SelectCouponBoxUsedListByNexonIDForUserResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectCouponBoxUsedListByNexonIDForUserResult", &(a->_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse::SelectCouponBoxUsedListByNexonIDForUserResult), "ns1:ArrayOfClientCouponBox"))
				{	soap_flag_SelectCouponBoxUsedListByNexonIDForUserResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:SelectCouponBoxUsedListByNexonIDForUserResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse, 0, sizeof(_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse), 0, soap_copy__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse);
	if (this->soap_out(soap, tag?tag:"ns1:SelectCouponBoxUsedListByNexonIDForUserResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse * SOAP_FMAC4 soap_get__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse);
		if (size)
			*size = sizeof(_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse);
		((_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse, n);
		if (size)
			*size = n * sizeof(_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse %p -> %p\n", q, p));
	*(_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse*)p = *(_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse*)q;
}

void _ns1__SelectCouponBoxUsedListByNexonIDForUser::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectCouponBoxUsedListByNexonIDForUser::nexonID = NULL;
	this->_ns1__SelectCouponBoxUsedListByNexonIDForUser::serviceCode = NULL;
	soap_default_int(soap, &this->_ns1__SelectCouponBoxUsedListByNexonIDForUser::startRowIndex);
	soap_default_int(soap, &this->_ns1__SelectCouponBoxUsedListByNexonIDForUser::maximumRows);
	soap_default_short(soap, &this->_ns1__SelectCouponBoxUsedListByNexonIDForUser::couponboxType);
	/* transient soap skipped */
}

void _ns1__SelectCouponBoxUsedListByNexonIDForUser::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectCouponBoxUsedListByNexonIDForUser::nexonID);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectCouponBoxUsedListByNexonIDForUser::serviceCode);
	/* transient soap skipped */
#endif
}

int _ns1__SelectCouponBoxUsedListByNexonIDForUser::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, const char *tag, int id, const _ns1__SelectCouponBoxUsedListByNexonIDForUser *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUser), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nexonID", -1, &(a->_ns1__SelectCouponBoxUsedListByNexonIDForUser::nexonID), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:serviceCode", -1, &(a->_ns1__SelectCouponBoxUsedListByNexonIDForUser::serviceCode), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:startRowIndex", -1, &(a->_ns1__SelectCouponBoxUsedListByNexonIDForUser::startRowIndex), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:maximumRows", -1, &(a->_ns1__SelectCouponBoxUsedListByNexonIDForUser::maximumRows), ""))
		return soap->error;
	if (soap_out_short(soap, "ns1:couponboxType", -1, &(a->_ns1__SelectCouponBoxUsedListByNexonIDForUser::couponboxType), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectCouponBoxUsedListByNexonIDForUser::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxUsedListByNexonIDForUser * SOAP_FMAC4 soap_in__ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, const char *tag, _ns1__SelectCouponBoxUsedListByNexonIDForUser *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectCouponBoxUsedListByNexonIDForUser *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUser, sizeof(_ns1__SelectCouponBoxUsedListByNexonIDForUser), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUser)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectCouponBoxUsedListByNexonIDForUser *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_nexonID1 = 1;
	size_t soap_flag_serviceCode1 = 1;
	size_t soap_flag_startRowIndex1 = 1;
	size_t soap_flag_maximumRows1 = 1;
	size_t soap_flag_couponboxType1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_nexonID1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nexonID", &(a->_ns1__SelectCouponBoxUsedListByNexonIDForUser::nexonID), "xsd:string"))
				{	soap_flag_nexonID1--;
					continue;
				}
			if (soap_flag_serviceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:serviceCode", &(a->_ns1__SelectCouponBoxUsedListByNexonIDForUser::serviceCode), "xsd:string"))
				{	soap_flag_serviceCode1--;
					continue;
				}
			if (soap_flag_startRowIndex1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:startRowIndex", &(a->_ns1__SelectCouponBoxUsedListByNexonIDForUser::startRowIndex), "xsd:int"))
				{	soap_flag_startRowIndex1--;
					continue;
				}
			if (soap_flag_maximumRows1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:maximumRows", &(a->_ns1__SelectCouponBoxUsedListByNexonIDForUser::maximumRows), "xsd:int"))
				{	soap_flag_maximumRows1--;
					continue;
				}
			if (soap_flag_couponboxType1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_short(soap, "ns1:couponboxType", &(a->_ns1__SelectCouponBoxUsedListByNexonIDForUser::couponboxType), "xsd:short"))
				{	soap_flag_couponboxType1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectCouponBoxUsedListByNexonIDForUser *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUser, 0, sizeof(_ns1__SelectCouponBoxUsedListByNexonIDForUser), 0, soap_copy__ns1__SelectCouponBoxUsedListByNexonIDForUser);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_startRowIndex1 > 0 || soap_flag_maximumRows1 > 0 || soap_flag_couponboxType1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__SelectCouponBoxUsedListByNexonIDForUser::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUser);
	if (this->soap_out(soap, tag?tag:"ns1:SelectCouponBoxUsedListByNexonIDForUser", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectCouponBoxUsedListByNexonIDForUser::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxUsedListByNexonIDForUser * SOAP_FMAC4 soap_get__ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, _ns1__SelectCouponBoxUsedListByNexonIDForUser *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectCouponBoxUsedListByNexonIDForUser * SOAP_FMAC2 soap_instantiate__ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectCouponBoxUsedListByNexonIDForUser(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUser, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectCouponBoxUsedListByNexonIDForUser);
		if (size)
			*size = sizeof(_ns1__SelectCouponBoxUsedListByNexonIDForUser);
		((_ns1__SelectCouponBoxUsedListByNexonIDForUser*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectCouponBoxUsedListByNexonIDForUser, n);
		if (size)
			*size = n * sizeof(_ns1__SelectCouponBoxUsedListByNexonIDForUser);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectCouponBoxUsedListByNexonIDForUser*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectCouponBoxUsedListByNexonIDForUser*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectCouponBoxUsedListByNexonIDForUser %p -> %p\n", q, p));
	*(_ns1__SelectCouponBoxUsedListByNexonIDForUser*)p = *(_ns1__SelectCouponBoxUsedListByNexonIDForUser*)q;
}

void _ns1__SelectCouponBoxListByNexonIDForUserResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectCouponBoxListByNexonIDForUserResponse::SelectCouponBoxListByNexonIDForUserResult = NULL;
	/* transient soap skipped */
}

void _ns1__SelectCouponBoxListByNexonIDForUserResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ArrayOfClientCouponBox(soap, &this->_ns1__SelectCouponBoxListByNexonIDForUserResponse::SelectCouponBoxListByNexonIDForUserResult);
	/* transient soap skipped */
#endif
}

int _ns1__SelectCouponBoxListByNexonIDForUserResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectCouponBoxListByNexonIDForUserResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectCouponBoxListByNexonIDForUserResponse(struct soap *soap, const char *tag, int id, const _ns1__SelectCouponBoxListByNexonIDForUserResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUserResponse), type))
		return soap->error;
	if (a->SelectCouponBoxListByNexonIDForUserResult)
		soap_element_result(soap, "ns1:SelectCouponBoxListByNexonIDForUserResult");
	if (soap_out_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectCouponBoxListByNexonIDForUserResult", -1, &(a->_ns1__SelectCouponBoxListByNexonIDForUserResponse::SelectCouponBoxListByNexonIDForUserResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectCouponBoxListByNexonIDForUserResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectCouponBoxListByNexonIDForUserResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxListByNexonIDForUserResponse * SOAP_FMAC4 soap_in__ns1__SelectCouponBoxListByNexonIDForUserResponse(struct soap *soap, const char *tag, _ns1__SelectCouponBoxListByNexonIDForUserResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectCouponBoxListByNexonIDForUserResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUserResponse, sizeof(_ns1__SelectCouponBoxListByNexonIDForUserResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUserResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectCouponBoxListByNexonIDForUserResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_SelectCouponBoxListByNexonIDForUserResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SelectCouponBoxListByNexonIDForUserResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectCouponBoxListByNexonIDForUserResult", &(a->_ns1__SelectCouponBoxListByNexonIDForUserResponse::SelectCouponBoxListByNexonIDForUserResult), "ns1:ArrayOfClientCouponBox"))
				{	soap_flag_SelectCouponBoxListByNexonIDForUserResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:SelectCouponBoxListByNexonIDForUserResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectCouponBoxListByNexonIDForUserResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUserResponse, 0, sizeof(_ns1__SelectCouponBoxListByNexonIDForUserResponse), 0, soap_copy__ns1__SelectCouponBoxListByNexonIDForUserResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectCouponBoxListByNexonIDForUserResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUserResponse);
	if (this->soap_out(soap, tag?tag:"ns1:SelectCouponBoxListByNexonIDForUserResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectCouponBoxListByNexonIDForUserResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectCouponBoxListByNexonIDForUserResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxListByNexonIDForUserResponse * SOAP_FMAC4 soap_get__ns1__SelectCouponBoxListByNexonIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxListByNexonIDForUserResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectCouponBoxListByNexonIDForUserResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectCouponBoxListByNexonIDForUserResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectCouponBoxListByNexonIDForUserResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectCouponBoxListByNexonIDForUserResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUserResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectCouponBoxListByNexonIDForUserResponse);
		if (size)
			*size = sizeof(_ns1__SelectCouponBoxListByNexonIDForUserResponse);
		((_ns1__SelectCouponBoxListByNexonIDForUserResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectCouponBoxListByNexonIDForUserResponse, n);
		if (size)
			*size = n * sizeof(_ns1__SelectCouponBoxListByNexonIDForUserResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectCouponBoxListByNexonIDForUserResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectCouponBoxListByNexonIDForUserResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectCouponBoxListByNexonIDForUserResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectCouponBoxListByNexonIDForUserResponse %p -> %p\n", q, p));
	*(_ns1__SelectCouponBoxListByNexonIDForUserResponse*)p = *(_ns1__SelectCouponBoxListByNexonIDForUserResponse*)q;
}

void _ns1__SelectCouponBoxListByNexonIDForUser::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectCouponBoxListByNexonIDForUser::nexonID = NULL;
	this->_ns1__SelectCouponBoxListByNexonIDForUser::serviceCode = NULL;
	soap_default_int(soap, &this->_ns1__SelectCouponBoxListByNexonIDForUser::startRowIndex);
	soap_default_int(soap, &this->_ns1__SelectCouponBoxListByNexonIDForUser::maximumRows);
	soap_default_short(soap, &this->_ns1__SelectCouponBoxListByNexonIDForUser::couponboxType);
	/* transient soap skipped */
}

void _ns1__SelectCouponBoxListByNexonIDForUser::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectCouponBoxListByNexonIDForUser::nexonID);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectCouponBoxListByNexonIDForUser::serviceCode);
	/* transient soap skipped */
#endif
}

int _ns1__SelectCouponBoxListByNexonIDForUser::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectCouponBoxListByNexonIDForUser(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, const char *tag, int id, const _ns1__SelectCouponBoxListByNexonIDForUser *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUser), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nexonID", -1, &(a->_ns1__SelectCouponBoxListByNexonIDForUser::nexonID), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:serviceCode", -1, &(a->_ns1__SelectCouponBoxListByNexonIDForUser::serviceCode), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:startRowIndex", -1, &(a->_ns1__SelectCouponBoxListByNexonIDForUser::startRowIndex), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:maximumRows", -1, &(a->_ns1__SelectCouponBoxListByNexonIDForUser::maximumRows), ""))
		return soap->error;
	if (soap_out_short(soap, "ns1:couponboxType", -1, &(a->_ns1__SelectCouponBoxListByNexonIDForUser::couponboxType), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectCouponBoxListByNexonIDForUser::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectCouponBoxListByNexonIDForUser(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxListByNexonIDForUser * SOAP_FMAC4 soap_in__ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, const char *tag, _ns1__SelectCouponBoxListByNexonIDForUser *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectCouponBoxListByNexonIDForUser *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUser, sizeof(_ns1__SelectCouponBoxListByNexonIDForUser), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUser)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectCouponBoxListByNexonIDForUser *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_nexonID1 = 1;
	size_t soap_flag_serviceCode1 = 1;
	size_t soap_flag_startRowIndex1 = 1;
	size_t soap_flag_maximumRows1 = 1;
	size_t soap_flag_couponboxType1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_nexonID1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nexonID", &(a->_ns1__SelectCouponBoxListByNexonIDForUser::nexonID), "xsd:string"))
				{	soap_flag_nexonID1--;
					continue;
				}
			if (soap_flag_serviceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:serviceCode", &(a->_ns1__SelectCouponBoxListByNexonIDForUser::serviceCode), "xsd:string"))
				{	soap_flag_serviceCode1--;
					continue;
				}
			if (soap_flag_startRowIndex1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:startRowIndex", &(a->_ns1__SelectCouponBoxListByNexonIDForUser::startRowIndex), "xsd:int"))
				{	soap_flag_startRowIndex1--;
					continue;
				}
			if (soap_flag_maximumRows1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:maximumRows", &(a->_ns1__SelectCouponBoxListByNexonIDForUser::maximumRows), "xsd:int"))
				{	soap_flag_maximumRows1--;
					continue;
				}
			if (soap_flag_couponboxType1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_short(soap, "ns1:couponboxType", &(a->_ns1__SelectCouponBoxListByNexonIDForUser::couponboxType), "xsd:short"))
				{	soap_flag_couponboxType1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectCouponBoxListByNexonIDForUser *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUser, 0, sizeof(_ns1__SelectCouponBoxListByNexonIDForUser), 0, soap_copy__ns1__SelectCouponBoxListByNexonIDForUser);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_startRowIndex1 > 0 || soap_flag_maximumRows1 > 0 || soap_flag_couponboxType1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__SelectCouponBoxListByNexonIDForUser::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUser);
	if (this->soap_out(soap, tag?tag:"ns1:SelectCouponBoxListByNexonIDForUser", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectCouponBoxListByNexonIDForUser::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectCouponBoxListByNexonIDForUser(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxListByNexonIDForUser * SOAP_FMAC4 soap_get__ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, _ns1__SelectCouponBoxListByNexonIDForUser *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectCouponBoxListByNexonIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectCouponBoxListByNexonIDForUser * SOAP_FMAC2 soap_instantiate__ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectCouponBoxListByNexonIDForUser(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUser, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectCouponBoxListByNexonIDForUser);
		if (size)
			*size = sizeof(_ns1__SelectCouponBoxListByNexonIDForUser);
		((_ns1__SelectCouponBoxListByNexonIDForUser*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectCouponBoxListByNexonIDForUser, n);
		if (size)
			*size = n * sizeof(_ns1__SelectCouponBoxListByNexonIDForUser);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectCouponBoxListByNexonIDForUser*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectCouponBoxListByNexonIDForUser*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectCouponBoxListByNexonIDForUser %p -> %p\n", q, p));
	*(_ns1__SelectCouponBoxListByNexonIDForUser*)p = *(_ns1__SelectCouponBoxListByNexonIDForUser*)q;
}

void _ns1__SelectCouponBoxByAccountIDForUserResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectCouponBoxByAccountIDForUserResponse::SelectCouponBoxByAccountIDForUserResult = NULL;
	/* transient soap skipped */
}

void _ns1__SelectCouponBoxByAccountIDForUserResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ArrayOfClientCouponBox(soap, &this->_ns1__SelectCouponBoxByAccountIDForUserResponse::SelectCouponBoxByAccountIDForUserResult);
	/* transient soap skipped */
#endif
}

int _ns1__SelectCouponBoxByAccountIDForUserResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectCouponBoxByAccountIDForUserResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectCouponBoxByAccountIDForUserResponse(struct soap *soap, const char *tag, int id, const _ns1__SelectCouponBoxByAccountIDForUserResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUserResponse), type))
		return soap->error;
	if (a->SelectCouponBoxByAccountIDForUserResult)
		soap_element_result(soap, "ns1:SelectCouponBoxByAccountIDForUserResult");
	if (soap_out_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectCouponBoxByAccountIDForUserResult", -1, &(a->_ns1__SelectCouponBoxByAccountIDForUserResponse::SelectCouponBoxByAccountIDForUserResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectCouponBoxByAccountIDForUserResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectCouponBoxByAccountIDForUserResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByAccountIDForUserResponse * SOAP_FMAC4 soap_in__ns1__SelectCouponBoxByAccountIDForUserResponse(struct soap *soap, const char *tag, _ns1__SelectCouponBoxByAccountIDForUserResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectCouponBoxByAccountIDForUserResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUserResponse, sizeof(_ns1__SelectCouponBoxByAccountIDForUserResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUserResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectCouponBoxByAccountIDForUserResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_SelectCouponBoxByAccountIDForUserResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SelectCouponBoxByAccountIDForUserResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectCouponBoxByAccountIDForUserResult", &(a->_ns1__SelectCouponBoxByAccountIDForUserResponse::SelectCouponBoxByAccountIDForUserResult), "ns1:ArrayOfClientCouponBox"))
				{	soap_flag_SelectCouponBoxByAccountIDForUserResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:SelectCouponBoxByAccountIDForUserResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectCouponBoxByAccountIDForUserResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUserResponse, 0, sizeof(_ns1__SelectCouponBoxByAccountIDForUserResponse), 0, soap_copy__ns1__SelectCouponBoxByAccountIDForUserResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectCouponBoxByAccountIDForUserResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUserResponse);
	if (this->soap_out(soap, tag?tag:"ns1:SelectCouponBoxByAccountIDForUserResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectCouponBoxByAccountIDForUserResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectCouponBoxByAccountIDForUserResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByAccountIDForUserResponse * SOAP_FMAC4 soap_get__ns1__SelectCouponBoxByAccountIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxByAccountIDForUserResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectCouponBoxByAccountIDForUserResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectCouponBoxByAccountIDForUserResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectCouponBoxByAccountIDForUserResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectCouponBoxByAccountIDForUserResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUserResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectCouponBoxByAccountIDForUserResponse);
		if (size)
			*size = sizeof(_ns1__SelectCouponBoxByAccountIDForUserResponse);
		((_ns1__SelectCouponBoxByAccountIDForUserResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectCouponBoxByAccountIDForUserResponse, n);
		if (size)
			*size = n * sizeof(_ns1__SelectCouponBoxByAccountIDForUserResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectCouponBoxByAccountIDForUserResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectCouponBoxByAccountIDForUserResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectCouponBoxByAccountIDForUserResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectCouponBoxByAccountIDForUserResponse %p -> %p\n", q, p));
	*(_ns1__SelectCouponBoxByAccountIDForUserResponse*)p = *(_ns1__SelectCouponBoxByAccountIDForUserResponse*)q;
}

void _ns1__SelectCouponBoxByAccountIDForUser::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectCouponBoxByAccountIDForUser::accountId = NULL;
	/* transient soap skipped */
}

void _ns1__SelectCouponBoxByAccountIDForUser::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectCouponBoxByAccountIDForUser::accountId);
	/* transient soap skipped */
#endif
}

int _ns1__SelectCouponBoxByAccountIDForUser::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectCouponBoxByAccountIDForUser(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, const char *tag, int id, const _ns1__SelectCouponBoxByAccountIDForUser *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUser), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:accountId", -1, &(a->_ns1__SelectCouponBoxByAccountIDForUser::accountId), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectCouponBoxByAccountIDForUser::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectCouponBoxByAccountIDForUser(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByAccountIDForUser * SOAP_FMAC4 soap_in__ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, const char *tag, _ns1__SelectCouponBoxByAccountIDForUser *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectCouponBoxByAccountIDForUser *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUser, sizeof(_ns1__SelectCouponBoxByAccountIDForUser), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUser)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectCouponBoxByAccountIDForUser *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_accountId1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_accountId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:accountId", &(a->_ns1__SelectCouponBoxByAccountIDForUser::accountId), "xsd:string"))
				{	soap_flag_accountId1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectCouponBoxByAccountIDForUser *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUser, 0, sizeof(_ns1__SelectCouponBoxByAccountIDForUser), 0, soap_copy__ns1__SelectCouponBoxByAccountIDForUser);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectCouponBoxByAccountIDForUser::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUser);
	if (this->soap_out(soap, tag?tag:"ns1:SelectCouponBoxByAccountIDForUser", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectCouponBoxByAccountIDForUser::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectCouponBoxByAccountIDForUser(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByAccountIDForUser * SOAP_FMAC4 soap_get__ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, _ns1__SelectCouponBoxByAccountIDForUser *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectCouponBoxByAccountIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectCouponBoxByAccountIDForUser * SOAP_FMAC2 soap_instantiate__ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectCouponBoxByAccountIDForUser(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUser, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectCouponBoxByAccountIDForUser);
		if (size)
			*size = sizeof(_ns1__SelectCouponBoxByAccountIDForUser);
		((_ns1__SelectCouponBoxByAccountIDForUser*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectCouponBoxByAccountIDForUser, n);
		if (size)
			*size = n * sizeof(_ns1__SelectCouponBoxByAccountIDForUser);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectCouponBoxByAccountIDForUser*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectCouponBoxByAccountIDForUser*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectCouponBoxByAccountIDForUser %p -> %p\n", q, p));
	*(_ns1__SelectCouponBoxByAccountIDForUser*)p = *(_ns1__SelectCouponBoxByAccountIDForUser*)q;
}

void _ns1__SelectCouponBoxByCharacterIDForUserResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectCouponBoxByCharacterIDForUserResponse::SelectCouponBoxByCharacterIDForUserResult = NULL;
	/* transient soap skipped */
}

void _ns1__SelectCouponBoxByCharacterIDForUserResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ArrayOfClientCouponBox(soap, &this->_ns1__SelectCouponBoxByCharacterIDForUserResponse::SelectCouponBoxByCharacterIDForUserResult);
	/* transient soap skipped */
#endif
}

int _ns1__SelectCouponBoxByCharacterIDForUserResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectCouponBoxByCharacterIDForUserResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectCouponBoxByCharacterIDForUserResponse(struct soap *soap, const char *tag, int id, const _ns1__SelectCouponBoxByCharacterIDForUserResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUserResponse), type))
		return soap->error;
	if (a->SelectCouponBoxByCharacterIDForUserResult)
		soap_element_result(soap, "ns1:SelectCouponBoxByCharacterIDForUserResult");
	if (soap_out_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectCouponBoxByCharacterIDForUserResult", -1, &(a->_ns1__SelectCouponBoxByCharacterIDForUserResponse::SelectCouponBoxByCharacterIDForUserResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectCouponBoxByCharacterIDForUserResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectCouponBoxByCharacterIDForUserResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByCharacterIDForUserResponse * SOAP_FMAC4 soap_in__ns1__SelectCouponBoxByCharacterIDForUserResponse(struct soap *soap, const char *tag, _ns1__SelectCouponBoxByCharacterIDForUserResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectCouponBoxByCharacterIDForUserResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUserResponse, sizeof(_ns1__SelectCouponBoxByCharacterIDForUserResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUserResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectCouponBoxByCharacterIDForUserResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_SelectCouponBoxByCharacterIDForUserResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SelectCouponBoxByCharacterIDForUserResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectCouponBoxByCharacterIDForUserResult", &(a->_ns1__SelectCouponBoxByCharacterIDForUserResponse::SelectCouponBoxByCharacterIDForUserResult), "ns1:ArrayOfClientCouponBox"))
				{	soap_flag_SelectCouponBoxByCharacterIDForUserResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:SelectCouponBoxByCharacterIDForUserResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectCouponBoxByCharacterIDForUserResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUserResponse, 0, sizeof(_ns1__SelectCouponBoxByCharacterIDForUserResponse), 0, soap_copy__ns1__SelectCouponBoxByCharacterIDForUserResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectCouponBoxByCharacterIDForUserResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUserResponse);
	if (this->soap_out(soap, tag?tag:"ns1:SelectCouponBoxByCharacterIDForUserResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectCouponBoxByCharacterIDForUserResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectCouponBoxByCharacterIDForUserResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByCharacterIDForUserResponse * SOAP_FMAC4 soap_get__ns1__SelectCouponBoxByCharacterIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxByCharacterIDForUserResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectCouponBoxByCharacterIDForUserResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectCouponBoxByCharacterIDForUserResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectCouponBoxByCharacterIDForUserResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectCouponBoxByCharacterIDForUserResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUserResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectCouponBoxByCharacterIDForUserResponse);
		if (size)
			*size = sizeof(_ns1__SelectCouponBoxByCharacterIDForUserResponse);
		((_ns1__SelectCouponBoxByCharacterIDForUserResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectCouponBoxByCharacterIDForUserResponse, n);
		if (size)
			*size = n * sizeof(_ns1__SelectCouponBoxByCharacterIDForUserResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectCouponBoxByCharacterIDForUserResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectCouponBoxByCharacterIDForUserResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectCouponBoxByCharacterIDForUserResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectCouponBoxByCharacterIDForUserResponse %p -> %p\n", q, p));
	*(_ns1__SelectCouponBoxByCharacterIDForUserResponse*)p = *(_ns1__SelectCouponBoxByCharacterIDForUserResponse*)q;
}

void _ns1__SelectCouponBoxByCharacterIDForUser::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectCouponBoxByCharacterIDForUser::serviceCode = NULL;
	soap_default_int(soap, &this->_ns1__SelectCouponBoxByCharacterIDForUser::domainNo);
	this->_ns1__SelectCouponBoxByCharacterIDForUser::characterId = NULL;
	/* transient soap skipped */
}

void _ns1__SelectCouponBoxByCharacterIDForUser::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectCouponBoxByCharacterIDForUser::serviceCode);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectCouponBoxByCharacterIDForUser::characterId);
	/* transient soap skipped */
#endif
}

int _ns1__SelectCouponBoxByCharacterIDForUser::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectCouponBoxByCharacterIDForUser(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, const char *tag, int id, const _ns1__SelectCouponBoxByCharacterIDForUser *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUser), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:serviceCode", -1, &(a->_ns1__SelectCouponBoxByCharacterIDForUser::serviceCode), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:domainNo", -1, &(a->_ns1__SelectCouponBoxByCharacterIDForUser::domainNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:characterId", -1, &(a->_ns1__SelectCouponBoxByCharacterIDForUser::characterId), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectCouponBoxByCharacterIDForUser::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectCouponBoxByCharacterIDForUser(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByCharacterIDForUser * SOAP_FMAC4 soap_in__ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, const char *tag, _ns1__SelectCouponBoxByCharacterIDForUser *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectCouponBoxByCharacterIDForUser *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUser, sizeof(_ns1__SelectCouponBoxByCharacterIDForUser), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUser)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectCouponBoxByCharacterIDForUser *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_serviceCode1 = 1;
	size_t soap_flag_domainNo1 = 1;
	size_t soap_flag_characterId1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_serviceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:serviceCode", &(a->_ns1__SelectCouponBoxByCharacterIDForUser::serviceCode), "xsd:string"))
				{	soap_flag_serviceCode1--;
					continue;
				}
			if (soap_flag_domainNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:domainNo", &(a->_ns1__SelectCouponBoxByCharacterIDForUser::domainNo), "xsd:int"))
				{	soap_flag_domainNo1--;
					continue;
				}
			if (soap_flag_characterId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:characterId", &(a->_ns1__SelectCouponBoxByCharacterIDForUser::characterId), "xsd:string"))
				{	soap_flag_characterId1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectCouponBoxByCharacterIDForUser *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUser, 0, sizeof(_ns1__SelectCouponBoxByCharacterIDForUser), 0, soap_copy__ns1__SelectCouponBoxByCharacterIDForUser);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_domainNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__SelectCouponBoxByCharacterIDForUser::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUser);
	if (this->soap_out(soap, tag?tag:"ns1:SelectCouponBoxByCharacterIDForUser", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectCouponBoxByCharacterIDForUser::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectCouponBoxByCharacterIDForUser(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByCharacterIDForUser * SOAP_FMAC4 soap_get__ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, _ns1__SelectCouponBoxByCharacterIDForUser *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectCouponBoxByCharacterIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectCouponBoxByCharacterIDForUser * SOAP_FMAC2 soap_instantiate__ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectCouponBoxByCharacterIDForUser(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUser, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectCouponBoxByCharacterIDForUser);
		if (size)
			*size = sizeof(_ns1__SelectCouponBoxByCharacterIDForUser);
		((_ns1__SelectCouponBoxByCharacterIDForUser*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectCouponBoxByCharacterIDForUser, n);
		if (size)
			*size = n * sizeof(_ns1__SelectCouponBoxByCharacterIDForUser);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectCouponBoxByCharacterIDForUser*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectCouponBoxByCharacterIDForUser*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectCouponBoxByCharacterIDForUser %p -> %p\n", q, p));
	*(_ns1__SelectCouponBoxByCharacterIDForUser*)p = *(_ns1__SelectCouponBoxByCharacterIDForUser*)q;
}

void _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse::SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResult = NULL;
	/* transient soap skipped */
}

void _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ArrayOfClientCouponBox(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse::SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResult);
	/* transient soap skipped */
#endif
}

int _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(struct soap *soap, const char *tag, int id, const _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse), type))
		return soap->error;
	if (a->SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResult)
		soap_element_result(soap, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResult");
	if (soap_out_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResult", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse::SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse * SOAP_FMAC4 soap_in__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(struct soap *soap, const char *tag, _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResult", &(a->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse::SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResult), "ns1:ArrayOfClientCouponBox"))
				{	soap_flag_SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse, 0, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse), 0, soap_copy__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse);
	if (this->soap_out(soap, tag?tag:"ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse * SOAP_FMAC4 soap_get__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse);
		if (size)
			*size = sizeof(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse);
		((_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse, n);
		if (size)
			*size = n * sizeof(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse %p -> %p\n", q, p));
	*(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse*)p = *(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse*)q;
}

void _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::serviceCode = NULL;
	soap_default_int(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::domainNo);
	this->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::characterId = NULL;
	this->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::itemCode = NULL;
	soap_default_int(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::itemPrice);
	/* transient soap skipped */
}

void _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::serviceCode);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::characterId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::itemCode);
	/* transient soap skipped */
#endif
}

int _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, const char *tag, int id, const _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:serviceCode", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::serviceCode), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:domainNo", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::domainNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:characterId", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::characterId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:itemCode", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::itemCode), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:itemPrice", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::itemPrice), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode * SOAP_FMAC4 soap_in__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, const char *tag, _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_serviceCode1 = 1;
	size_t soap_flag_domainNo1 = 1;
	size_t soap_flag_characterId1 = 1;
	size_t soap_flag_itemCode1 = 1;
	size_t soap_flag_itemPrice1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_serviceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:serviceCode", &(a->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::serviceCode), "xsd:string"))
				{	soap_flag_serviceCode1--;
					continue;
				}
			if (soap_flag_domainNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:domainNo", &(a->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::domainNo), "xsd:int"))
				{	soap_flag_domainNo1--;
					continue;
				}
			if (soap_flag_characterId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:characterId", &(a->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::characterId), "xsd:string"))
				{	soap_flag_characterId1--;
					continue;
				}
			if (soap_flag_itemCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:itemCode", &(a->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::itemCode), "xsd:string"))
				{	soap_flag_itemCode1--;
					continue;
				}
			if (soap_flag_itemPrice1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:itemPrice", &(a->_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::itemPrice), "xsd:int"))
				{	soap_flag_itemPrice1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode, 0, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode), 0, soap_copy__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_domainNo1 > 0 || soap_flag_itemPrice1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode);
	if (this->soap_out(soap, tag?tag:"ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode * SOAP_FMAC4 soap_get__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode * SOAP_FMAC2 soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode);
		if (size)
			*size = sizeof(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode);
		((_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode, n);
		if (size)
			*size = n * sizeof(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode %p -> %p\n", q, p));
	*(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode*)p = *(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode*)q;
}

void _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse::SelectDiscountCouponFromCouponBoxByNexonIDByItemListResult = NULL;
	/* transient soap skipped */
}

void _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ArrayOfClientCouponBox(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse::SelectDiscountCouponFromCouponBoxByNexonIDByItemListResult);
	/* transient soap skipped */
#endif
}

int _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(struct soap *soap, const char *tag, int id, const _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse), type))
		return soap->error;
	if (a->SelectDiscountCouponFromCouponBoxByNexonIDByItemListResult)
		soap_element_result(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemListResult");
	if (soap_out_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemListResult", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse::SelectDiscountCouponFromCouponBoxByNexonIDByItemListResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse * SOAP_FMAC4 soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(struct soap *soap, const char *tag, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_SelectDiscountCouponFromCouponBoxByNexonIDByItemListResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SelectDiscountCouponFromCouponBoxByNexonIDByItemListResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemListResult", &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse::SelectDiscountCouponFromCouponBoxByNexonIDByItemListResult), "ns1:ArrayOfClientCouponBox"))
				{	soap_flag_SelectDiscountCouponFromCouponBoxByNexonIDByItemListResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemListResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse, 0, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse), 0, soap_copy__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse);
	if (this->soap_out(soap, tag?tag:"ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse * SOAP_FMAC4 soap_get__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse);
		if (size)
			*size = sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse);
		((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse, n);
		if (size)
			*size = n * sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse %p -> %p\n", q, p));
	*(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse*)p = *(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse*)q;
}

void _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::nexonId = NULL;
	this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::serviceCode = NULL;
	this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::itemList = NULL;
	/* transient soap skipped */
}

void _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::nexonId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::serviceCode);
	soap_serialize_PointerTons1__ArrayOfCouponBoxItem(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::itemList);
	/* transient soap skipped */
#endif
}

int _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, const char *tag, int id, const _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nexonId", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::nexonId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:serviceCode", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::serviceCode), ""))
		return soap->error;
	if (soap_out_PointerTons1__ArrayOfCouponBoxItem(soap, "ns1:itemList", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::itemList), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList * SOAP_FMAC4 soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, const char *tag, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_nexonId1 = 1;
	size_t soap_flag_serviceCode1 = 1;
	size_t soap_flag_itemList1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_nexonId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nexonId", &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::nexonId), "xsd:string"))
				{	soap_flag_nexonId1--;
					continue;
				}
			if (soap_flag_serviceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:serviceCode", &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::serviceCode), "xsd:string"))
				{	soap_flag_serviceCode1--;
					continue;
				}
			if (soap_flag_itemList1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfCouponBoxItem(soap, "ns1:itemList", &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::itemList), "ns1:ArrayOfCouponBoxItem"))
				{	soap_flag_itemList1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList, 0, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList), 0, soap_copy__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList);
	if (this->soap_out(soap, tag?tag:"ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemList", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList * SOAP_FMAC4 soap_get__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList * SOAP_FMAC2 soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList);
		if (size)
			*size = sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList);
		((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList, n);
		if (size)
			*size = n * sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList %p -> %p\n", q, p));
	*(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList*)p = *(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList*)q;
}

void _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse::SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResult = NULL;
	/* transient soap skipped */
}

void _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ArrayOfClientCouponBox(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse::SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResult);
	/* transient soap skipped */
#endif
}

int _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(struct soap *soap, const char *tag, int id, const _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse), type))
		return soap->error;
	if (a->SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResult)
		soap_element_result(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResult");
	if (soap_out_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResult", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse::SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse * SOAP_FMAC4 soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(struct soap *soap, const char *tag, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResult", &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse::SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResult), "ns1:ArrayOfClientCouponBox"))
				{	soap_flag_SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse, 0, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse), 0, soap_copy__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse);
	if (this->soap_out(soap, tag?tag:"ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse * SOAP_FMAC4 soap_get__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse);
		if (size)
			*size = sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse);
		((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse, n);
		if (size)
			*size = n * sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse %p -> %p\n", q, p));
	*(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse*)p = *(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse*)q;
}

void _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::nexonId = NULL;
	this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::serviceCode = NULL;
	this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::itemCode = NULL;
	soap_default_int(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::itemPrice);
	/* transient soap skipped */
}

void _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::nexonId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::serviceCode);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::itemCode);
	/* transient soap skipped */
#endif
}

int _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, const char *tag, int id, const _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nexonId", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::nexonId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:serviceCode", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::serviceCode), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:itemCode", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::itemCode), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:itemPrice", -1, &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::itemPrice), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode * SOAP_FMAC4 soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, const char *tag, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_nexonId1 = 1;
	size_t soap_flag_serviceCode1 = 1;
	size_t soap_flag_itemCode1 = 1;
	size_t soap_flag_itemPrice1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_nexonId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nexonId", &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::nexonId), "xsd:string"))
				{	soap_flag_nexonId1--;
					continue;
				}
			if (soap_flag_serviceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:serviceCode", &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::serviceCode), "xsd:string"))
				{	soap_flag_serviceCode1--;
					continue;
				}
			if (soap_flag_itemCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:itemCode", &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::itemCode), "xsd:string"))
				{	soap_flag_itemCode1--;
					continue;
				}
			if (soap_flag_itemPrice1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:itemPrice", &(a->_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::itemPrice), "xsd:int"))
				{	soap_flag_itemPrice1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode, 0, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode), 0, soap_copy__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_itemPrice1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode);
	if (this->soap_out(soap, tag?tag:"ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCode", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode * SOAP_FMAC4 soap_get__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode * SOAP_FMAC2 soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode);
		if (size)
			*size = sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode);
		((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode, n);
		if (size)
			*size = n * sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode %p -> %p\n", q, p));
	*(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode*)p = *(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode*)q;
}

void _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse::CheckAddCouponBoxByCouponPinByNexonIdResult);
	soap_default_int(soap, &this->_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse::outContractDetailNo);
	/* transient soap skipped */
}

void _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, const char *tag, int id, const _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:CheckAddCouponBoxByCouponPinByNexonIdResult");
	if (soap_out_int(soap, "ns1:CheckAddCouponBoxByCouponPinByNexonIdResult", -1, &(a->_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse::CheckAddCouponBoxByCouponPinByNexonIdResult), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:outContractDetailNo", -1, &(a->_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse::outContractDetailNo), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse * SOAP_FMAC4 soap_in__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, const char *tag, _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse, sizeof(_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_CheckAddCouponBoxByCouponPinByNexonIdResult1 = 1;
	size_t soap_flag_outContractDetailNo1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_CheckAddCouponBoxByCouponPinByNexonIdResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:CheckAddCouponBoxByCouponPinByNexonIdResult", &(a->_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse::CheckAddCouponBoxByCouponPinByNexonIdResult), "xsd:int"))
				{	soap_flag_CheckAddCouponBoxByCouponPinByNexonIdResult1--;
					continue;
				}
			if (soap_flag_outContractDetailNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:outContractDetailNo", &(a->_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse::outContractDetailNo), "xsd:int"))
				{	soap_flag_outContractDetailNo1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:CheckAddCouponBoxByCouponPinByNexonIdResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse, 0, sizeof(_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse), 0, soap_copy__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_CheckAddCouponBoxByCouponPinByNexonIdResult1 > 0 || soap_flag_outContractDetailNo1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse);
	if (this->soap_out(soap, tag?tag:"ns1:CheckAddCouponBoxByCouponPinByNexonIdResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse * SOAP_FMAC4 soap_get__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse);
		if (size)
			*size = sizeof(_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse);
		((_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse, n);
		if (size)
			*size = n * sizeof(_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse %p -> %p\n", q, p));
	*(_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse*)p = *(_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse*)q;
}

void _ns1__CheckAddCouponBoxByCouponPinByNexonId::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__CheckAddCouponBoxByCouponPinByNexonId::couponPin = NULL;
	this->_ns1__CheckAddCouponBoxByCouponPinByNexonId::serviceCode = NULL;
	this->_ns1__CheckAddCouponBoxByCouponPinByNexonId::nexonId = NULL;
	/* transient soap skipped */
}

void _ns1__CheckAddCouponBoxByCouponPinByNexonId::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckAddCouponBoxByCouponPinByNexonId::couponPin);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckAddCouponBoxByCouponPinByNexonId::serviceCode);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckAddCouponBoxByCouponPinByNexonId::nexonId);
	/* transient soap skipped */
#endif
}

int _ns1__CheckAddCouponBoxByCouponPinByNexonId::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, const char *tag, int id, const _ns1__CheckAddCouponBoxByCouponPinByNexonId *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonId), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponPin", -1, &(a->_ns1__CheckAddCouponBoxByCouponPinByNexonId::couponPin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:serviceCode", -1, &(a->_ns1__CheckAddCouponBoxByCouponPinByNexonId::serviceCode), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nexonId", -1, &(a->_ns1__CheckAddCouponBoxByCouponPinByNexonId::nexonId), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckAddCouponBoxByCouponPinByNexonId::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckAddCouponBoxByCouponPinByNexonId * SOAP_FMAC4 soap_in__ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, const char *tag, _ns1__CheckAddCouponBoxByCouponPinByNexonId *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckAddCouponBoxByCouponPinByNexonId *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonId, sizeof(_ns1__CheckAddCouponBoxByCouponPinByNexonId), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonId)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckAddCouponBoxByCouponPinByNexonId *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_couponPin1 = 1;
	size_t soap_flag_serviceCode1 = 1;
	size_t soap_flag_nexonId1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_couponPin1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponPin", &(a->_ns1__CheckAddCouponBoxByCouponPinByNexonId::couponPin), "xsd:string"))
				{	soap_flag_couponPin1--;
					continue;
				}
			if (soap_flag_serviceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:serviceCode", &(a->_ns1__CheckAddCouponBoxByCouponPinByNexonId::serviceCode), "xsd:string"))
				{	soap_flag_serviceCode1--;
					continue;
				}
			if (soap_flag_nexonId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nexonId", &(a->_ns1__CheckAddCouponBoxByCouponPinByNexonId::nexonId), "xsd:string"))
				{	soap_flag_nexonId1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckAddCouponBoxByCouponPinByNexonId *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonId, 0, sizeof(_ns1__CheckAddCouponBoxByCouponPinByNexonId), 0, soap_copy__ns1__CheckAddCouponBoxByCouponPinByNexonId);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__CheckAddCouponBoxByCouponPinByNexonId::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonId);
	if (this->soap_out(soap, tag?tag:"ns1:CheckAddCouponBoxByCouponPinByNexonId", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckAddCouponBoxByCouponPinByNexonId::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckAddCouponBoxByCouponPinByNexonId * SOAP_FMAC4 soap_get__ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, _ns1__CheckAddCouponBoxByCouponPinByNexonId *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckAddCouponBoxByCouponPinByNexonId * SOAP_FMAC2 soap_instantiate__ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckAddCouponBoxByCouponPinByNexonId(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonId, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckAddCouponBoxByCouponPinByNexonId);
		if (size)
			*size = sizeof(_ns1__CheckAddCouponBoxByCouponPinByNexonId);
		((_ns1__CheckAddCouponBoxByCouponPinByNexonId*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckAddCouponBoxByCouponPinByNexonId, n);
		if (size)
			*size = n * sizeof(_ns1__CheckAddCouponBoxByCouponPinByNexonId);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckAddCouponBoxByCouponPinByNexonId*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckAddCouponBoxByCouponPinByNexonId*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckAddCouponBoxByCouponPinByNexonId %p -> %p\n", q, p));
	*(_ns1__CheckAddCouponBoxByCouponPinByNexonId*)p = *(_ns1__CheckAddCouponBoxByCouponPinByNexonId*)q;
}

void _ns1__AddCouponBoxByCouponPinByNexonIdResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__AddCouponBoxByCouponPinByNexonIdResponse::AddCouponBoxByCouponPinByNexonIdResult);
	/* transient soap skipped */
}

void _ns1__AddCouponBoxByCouponPinByNexonIdResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__AddCouponBoxByCouponPinByNexonIdResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__AddCouponBoxByCouponPinByNexonIdResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, const char *tag, int id, const _ns1__AddCouponBoxByCouponPinByNexonIdResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonIdResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:AddCouponBoxByCouponPinByNexonIdResult");
	if (soap_out_int(soap, "ns1:AddCouponBoxByCouponPinByNexonIdResult", -1, &(a->_ns1__AddCouponBoxByCouponPinByNexonIdResponse::AddCouponBoxByCouponPinByNexonIdResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__AddCouponBoxByCouponPinByNexonIdResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__AddCouponBoxByCouponPinByNexonIdResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__AddCouponBoxByCouponPinByNexonIdResponse * SOAP_FMAC4 soap_in__ns1__AddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, const char *tag, _ns1__AddCouponBoxByCouponPinByNexonIdResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__AddCouponBoxByCouponPinByNexonIdResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonIdResponse, sizeof(_ns1__AddCouponBoxByCouponPinByNexonIdResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonIdResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__AddCouponBoxByCouponPinByNexonIdResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_AddCouponBoxByCouponPinByNexonIdResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_AddCouponBoxByCouponPinByNexonIdResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:AddCouponBoxByCouponPinByNexonIdResult", &(a->_ns1__AddCouponBoxByCouponPinByNexonIdResponse::AddCouponBoxByCouponPinByNexonIdResult), "xsd:int"))
				{	soap_flag_AddCouponBoxByCouponPinByNexonIdResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:AddCouponBoxByCouponPinByNexonIdResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__AddCouponBoxByCouponPinByNexonIdResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonIdResponse, 0, sizeof(_ns1__AddCouponBoxByCouponPinByNexonIdResponse), 0, soap_copy__ns1__AddCouponBoxByCouponPinByNexonIdResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_AddCouponBoxByCouponPinByNexonIdResult1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__AddCouponBoxByCouponPinByNexonIdResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonIdResponse);
	if (this->soap_out(soap, tag?tag:"ns1:AddCouponBoxByCouponPinByNexonIdResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__AddCouponBoxByCouponPinByNexonIdResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__AddCouponBoxByCouponPinByNexonIdResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__AddCouponBoxByCouponPinByNexonIdResponse * SOAP_FMAC4 soap_get__ns1__AddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, _ns1__AddCouponBoxByCouponPinByNexonIdResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__AddCouponBoxByCouponPinByNexonIdResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__AddCouponBoxByCouponPinByNexonIdResponse * SOAP_FMAC2 soap_instantiate__ns1__AddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__AddCouponBoxByCouponPinByNexonIdResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonIdResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__AddCouponBoxByCouponPinByNexonIdResponse);
		if (size)
			*size = sizeof(_ns1__AddCouponBoxByCouponPinByNexonIdResponse);
		((_ns1__AddCouponBoxByCouponPinByNexonIdResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__AddCouponBoxByCouponPinByNexonIdResponse, n);
		if (size)
			*size = n * sizeof(_ns1__AddCouponBoxByCouponPinByNexonIdResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__AddCouponBoxByCouponPinByNexonIdResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__AddCouponBoxByCouponPinByNexonIdResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__AddCouponBoxByCouponPinByNexonIdResponse %p -> %p\n", q, p));
	*(_ns1__AddCouponBoxByCouponPinByNexonIdResponse*)p = *(_ns1__AddCouponBoxByCouponPinByNexonIdResponse*)q;
}

void _ns1__AddCouponBoxByCouponPinByNexonId::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__AddCouponBoxByCouponPinByNexonId::couponPin = NULL;
	this->_ns1__AddCouponBoxByCouponPinByNexonId::serviceCode = NULL;
	this->_ns1__AddCouponBoxByCouponPinByNexonId::nexonId = NULL;
	/* transient soap skipped */
}

void _ns1__AddCouponBoxByCouponPinByNexonId::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__AddCouponBoxByCouponPinByNexonId::couponPin);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__AddCouponBoxByCouponPinByNexonId::serviceCode);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__AddCouponBoxByCouponPinByNexonId::nexonId);
	/* transient soap skipped */
#endif
}

int _ns1__AddCouponBoxByCouponPinByNexonId::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__AddCouponBoxByCouponPinByNexonId(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, const char *tag, int id, const _ns1__AddCouponBoxByCouponPinByNexonId *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonId), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:couponPin", -1, &(a->_ns1__AddCouponBoxByCouponPinByNexonId::couponPin), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:serviceCode", -1, &(a->_ns1__AddCouponBoxByCouponPinByNexonId::serviceCode), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nexonId", -1, &(a->_ns1__AddCouponBoxByCouponPinByNexonId::nexonId), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__AddCouponBoxByCouponPinByNexonId::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__AddCouponBoxByCouponPinByNexonId(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__AddCouponBoxByCouponPinByNexonId * SOAP_FMAC4 soap_in__ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, const char *tag, _ns1__AddCouponBoxByCouponPinByNexonId *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__AddCouponBoxByCouponPinByNexonId *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonId, sizeof(_ns1__AddCouponBoxByCouponPinByNexonId), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonId)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__AddCouponBoxByCouponPinByNexonId *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_couponPin1 = 1;
	size_t soap_flag_serviceCode1 = 1;
	size_t soap_flag_nexonId1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_couponPin1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:couponPin", &(a->_ns1__AddCouponBoxByCouponPinByNexonId::couponPin), "xsd:string"))
				{	soap_flag_couponPin1--;
					continue;
				}
			if (soap_flag_serviceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:serviceCode", &(a->_ns1__AddCouponBoxByCouponPinByNexonId::serviceCode), "xsd:string"))
				{	soap_flag_serviceCode1--;
					continue;
				}
			if (soap_flag_nexonId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nexonId", &(a->_ns1__AddCouponBoxByCouponPinByNexonId::nexonId), "xsd:string"))
				{	soap_flag_nexonId1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__AddCouponBoxByCouponPinByNexonId *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonId, 0, sizeof(_ns1__AddCouponBoxByCouponPinByNexonId), 0, soap_copy__ns1__AddCouponBoxByCouponPinByNexonId);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__AddCouponBoxByCouponPinByNexonId::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonId);
	if (this->soap_out(soap, tag?tag:"ns1:AddCouponBoxByCouponPinByNexonId", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__AddCouponBoxByCouponPinByNexonId::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__AddCouponBoxByCouponPinByNexonId(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__AddCouponBoxByCouponPinByNexonId * SOAP_FMAC4 soap_get__ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, _ns1__AddCouponBoxByCouponPinByNexonId *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__AddCouponBoxByCouponPinByNexonId(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__AddCouponBoxByCouponPinByNexonId * SOAP_FMAC2 soap_instantiate__ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__AddCouponBoxByCouponPinByNexonId(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonId, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__AddCouponBoxByCouponPinByNexonId);
		if (size)
			*size = sizeof(_ns1__AddCouponBoxByCouponPinByNexonId);
		((_ns1__AddCouponBoxByCouponPinByNexonId*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__AddCouponBoxByCouponPinByNexonId, n);
		if (size)
			*size = n * sizeof(_ns1__AddCouponBoxByCouponPinByNexonId);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__AddCouponBoxByCouponPinByNexonId*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__AddCouponBoxByCouponPinByNexonId*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__AddCouponBoxByCouponPinByNexonId %p -> %p\n", q, p));
	*(_ns1__AddCouponBoxByCouponPinByNexonId*)p = *(_ns1__AddCouponBoxByCouponPinByNexonId*)q;
}

void _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse::SelectItemCouponFromCouponBoxByNexonIDResult = NULL;
	/* transient soap skipped */
}

void _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ArrayOfClientCouponBox(soap, &this->_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse::SelectItemCouponFromCouponBoxByNexonIDResult);
	/* transient soap skipped */
#endif
}

int _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(struct soap *soap, const char *tag, int id, const _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse), type))
		return soap->error;
	if (a->SelectItemCouponFromCouponBoxByNexonIDResult)
		soap_element_result(soap, "ns1:SelectItemCouponFromCouponBoxByNexonIDResult");
	if (soap_out_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectItemCouponFromCouponBoxByNexonIDResult", -1, &(a->_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse::SelectItemCouponFromCouponBoxByNexonIDResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse * SOAP_FMAC4 soap_in__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(struct soap *soap, const char *tag, _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse, sizeof(_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_SelectItemCouponFromCouponBoxByNexonIDResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SelectItemCouponFromCouponBoxByNexonIDResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectItemCouponFromCouponBoxByNexonIDResult", &(a->_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse::SelectItemCouponFromCouponBoxByNexonIDResult), "ns1:ArrayOfClientCouponBox"))
				{	soap_flag_SelectItemCouponFromCouponBoxByNexonIDResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:SelectItemCouponFromCouponBoxByNexonIDResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse, 0, sizeof(_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse), 0, soap_copy__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse);
	if (this->soap_out(soap, tag?tag:"ns1:SelectItemCouponFromCouponBoxByNexonIDResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse * SOAP_FMAC4 soap_get__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(struct soap *soap, _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse);
		if (size)
			*size = sizeof(_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse);
		((_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse, n);
		if (size)
			*size = n * sizeof(_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse %p -> %p\n", q, p));
	*(_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse*)p = *(_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse*)q;
}

void _ns1__SelectItemCouponFromCouponBoxByNexonID::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectItemCouponFromCouponBoxByNexonID::nexonId = NULL;
	this->_ns1__SelectItemCouponFromCouponBoxByNexonID::serviceCode = NULL;
	/* transient soap skipped */
}

void _ns1__SelectItemCouponFromCouponBoxByNexonID::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectItemCouponFromCouponBoxByNexonID::nexonId);
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectItemCouponFromCouponBoxByNexonID::serviceCode);
	/* transient soap skipped */
#endif
}

int _ns1__SelectItemCouponFromCouponBoxByNexonID::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectItemCouponFromCouponBoxByNexonID(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, const char *tag, int id, const _ns1__SelectItemCouponFromCouponBoxByNexonID *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonID), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nexonId", -1, &(a->_ns1__SelectItemCouponFromCouponBoxByNexonID::nexonId), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:serviceCode", -1, &(a->_ns1__SelectItemCouponFromCouponBoxByNexonID::serviceCode), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectItemCouponFromCouponBoxByNexonID::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectItemCouponFromCouponBoxByNexonID(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectItemCouponFromCouponBoxByNexonID * SOAP_FMAC4 soap_in__ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, const char *tag, _ns1__SelectItemCouponFromCouponBoxByNexonID *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectItemCouponFromCouponBoxByNexonID *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonID, sizeof(_ns1__SelectItemCouponFromCouponBoxByNexonID), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonID)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectItemCouponFromCouponBoxByNexonID *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_nexonId1 = 1;
	size_t soap_flag_serviceCode1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_nexonId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nexonId", &(a->_ns1__SelectItemCouponFromCouponBoxByNexonID::nexonId), "xsd:string"))
				{	soap_flag_nexonId1--;
					continue;
				}
			if (soap_flag_serviceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:serviceCode", &(a->_ns1__SelectItemCouponFromCouponBoxByNexonID::serviceCode), "xsd:string"))
				{	soap_flag_serviceCode1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectItemCouponFromCouponBoxByNexonID *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonID, 0, sizeof(_ns1__SelectItemCouponFromCouponBoxByNexonID), 0, soap_copy__ns1__SelectItemCouponFromCouponBoxByNexonID);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectItemCouponFromCouponBoxByNexonID::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonID);
	if (this->soap_out(soap, tag?tag:"ns1:SelectItemCouponFromCouponBoxByNexonID", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectItemCouponFromCouponBoxByNexonID::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectItemCouponFromCouponBoxByNexonID(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectItemCouponFromCouponBoxByNexonID * SOAP_FMAC4 soap_get__ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, _ns1__SelectItemCouponFromCouponBoxByNexonID *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectItemCouponFromCouponBoxByNexonID(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectItemCouponFromCouponBoxByNexonID * SOAP_FMAC2 soap_instantiate__ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectItemCouponFromCouponBoxByNexonID(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonID, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectItemCouponFromCouponBoxByNexonID);
		if (size)
			*size = sizeof(_ns1__SelectItemCouponFromCouponBoxByNexonID);
		((_ns1__SelectItemCouponFromCouponBoxByNexonID*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectItemCouponFromCouponBoxByNexonID, n);
		if (size)
			*size = n * sizeof(_ns1__SelectItemCouponFromCouponBoxByNexonID);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectItemCouponFromCouponBoxByNexonID*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectItemCouponFromCouponBoxByNexonID*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectItemCouponFromCouponBoxByNexonID %p -> %p\n", q, p));
	*(_ns1__SelectItemCouponFromCouponBoxByNexonID*)p = *(_ns1__SelectItemCouponFromCouponBoxByNexonID*)q;
}

void _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse::SelectCashCouponFromCouponBoxByNexonIDResult = NULL;
	/* transient soap skipped */
}

void _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ArrayOfClientCouponBox(soap, &this->_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse::SelectCashCouponFromCouponBoxByNexonIDResult);
	/* transient soap skipped */
#endif
}

int _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(struct soap *soap, const char *tag, int id, const _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse), type))
		return soap->error;
	if (a->SelectCashCouponFromCouponBoxByNexonIDResult)
		soap_element_result(soap, "ns1:SelectCashCouponFromCouponBoxByNexonIDResult");
	if (soap_out_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectCashCouponFromCouponBoxByNexonIDResult", -1, &(a->_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse::SelectCashCouponFromCouponBoxByNexonIDResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse * SOAP_FMAC4 soap_in__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(struct soap *soap, const char *tag, _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse, sizeof(_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_SelectCashCouponFromCouponBoxByNexonIDResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SelectCashCouponFromCouponBoxByNexonIDResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ArrayOfClientCouponBox(soap, "ns1:SelectCashCouponFromCouponBoxByNexonIDResult", &(a->_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse::SelectCashCouponFromCouponBoxByNexonIDResult), "ns1:ArrayOfClientCouponBox"))
				{	soap_flag_SelectCashCouponFromCouponBoxByNexonIDResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:SelectCashCouponFromCouponBoxByNexonIDResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse, 0, sizeof(_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse), 0, soap_copy__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse);
	if (this->soap_out(soap, tag?tag:"ns1:SelectCashCouponFromCouponBoxByNexonIDResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse * SOAP_FMAC4 soap_get__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(struct soap *soap, _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse);
		if (size)
			*size = sizeof(_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse);
		((_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse, n);
		if (size)
			*size = n * sizeof(_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse %p -> %p\n", q, p));
	*(_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse*)p = *(_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse*)q;
}

void _ns1__SelectCashCouponFromCouponBoxByNexonID::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->_ns1__SelectCashCouponFromCouponBoxByNexonID::nexonId = NULL;
	/* transient soap skipped */
}

void _ns1__SelectCashCouponFromCouponBoxByNexonID::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__SelectCashCouponFromCouponBoxByNexonID::nexonId);
	/* transient soap skipped */
#endif
}

int _ns1__SelectCashCouponFromCouponBoxByNexonID::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__SelectCashCouponFromCouponBoxByNexonID(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, const char *tag, int id, const _ns1__SelectCashCouponFromCouponBoxByNexonID *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonID), type))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:nexonId", -1, &(a->_ns1__SelectCashCouponFromCouponBoxByNexonID::nexonId), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__SelectCashCouponFromCouponBoxByNexonID::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__SelectCashCouponFromCouponBoxByNexonID(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__SelectCashCouponFromCouponBoxByNexonID * SOAP_FMAC4 soap_in__ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, const char *tag, _ns1__SelectCashCouponFromCouponBoxByNexonID *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__SelectCashCouponFromCouponBoxByNexonID *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonID, sizeof(_ns1__SelectCashCouponFromCouponBoxByNexonID), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonID)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__SelectCashCouponFromCouponBoxByNexonID *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_nexonId1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_nexonId1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:nexonId", &(a->_ns1__SelectCashCouponFromCouponBoxByNexonID::nexonId), "xsd:string"))
				{	soap_flag_nexonId1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__SelectCashCouponFromCouponBoxByNexonID *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonID, 0, sizeof(_ns1__SelectCashCouponFromCouponBoxByNexonID), 0, soap_copy__ns1__SelectCashCouponFromCouponBoxByNexonID);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int _ns1__SelectCashCouponFromCouponBoxByNexonID::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonID);
	if (this->soap_out(soap, tag?tag:"ns1:SelectCashCouponFromCouponBoxByNexonID", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__SelectCashCouponFromCouponBoxByNexonID::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__SelectCashCouponFromCouponBoxByNexonID(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__SelectCashCouponFromCouponBoxByNexonID * SOAP_FMAC4 soap_get__ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, _ns1__SelectCashCouponFromCouponBoxByNexonID *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__SelectCashCouponFromCouponBoxByNexonID(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__SelectCashCouponFromCouponBoxByNexonID * SOAP_FMAC2 soap_instantiate__ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__SelectCashCouponFromCouponBoxByNexonID(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonID, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__SelectCashCouponFromCouponBoxByNexonID);
		if (size)
			*size = sizeof(_ns1__SelectCashCouponFromCouponBoxByNexonID);
		((_ns1__SelectCashCouponFromCouponBoxByNexonID*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__SelectCashCouponFromCouponBoxByNexonID, n);
		if (size)
			*size = n * sizeof(_ns1__SelectCashCouponFromCouponBoxByNexonID);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__SelectCashCouponFromCouponBoxByNexonID*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__SelectCashCouponFromCouponBoxByNexonID*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__SelectCashCouponFromCouponBoxByNexonID %p -> %p\n", q, p));
	*(_ns1__SelectCashCouponFromCouponBoxByNexonID*)p = *(_ns1__SelectCashCouponFromCouponBoxByNexonID*)q;
}

void _ns1__GetListSchoolResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__GetListSchoolResponse::GetListSchoolResult);
	this->_ns1__GetListSchoolResponse::list = NULL;
	soap_default_int(soap, &this->_ns1__GetListSchoolResponse::totalCount);
	/* transient soap skipped */
}

void _ns1__GetListSchoolResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__GetListSchoolResponse::list);
	/* transient soap skipped */
#endif
}

int _ns1__GetListSchoolResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__GetListSchoolResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetListSchoolResponse(struct soap *soap, const char *tag, int id, const _ns1__GetListSchoolResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__GetListSchoolResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:GetListSchoolResult");
	if (soap_out_int(soap, "ns1:GetListSchoolResult", -1, &(a->_ns1__GetListSchoolResponse::GetListSchoolResult), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:list", -1, &(a->_ns1__GetListSchoolResponse::list), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:totalCount", -1, &(a->_ns1__GetListSchoolResponse::totalCount), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__GetListSchoolResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__GetListSchoolResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__GetListSchoolResponse * SOAP_FMAC4 soap_in__ns1__GetListSchoolResponse(struct soap *soap, const char *tag, _ns1__GetListSchoolResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__GetListSchoolResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__GetListSchoolResponse, sizeof(_ns1__GetListSchoolResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__GetListSchoolResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__GetListSchoolResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_GetListSchoolResult1 = 1;
	size_t soap_flag_list1 = 1;
	size_t soap_flag_totalCount1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_GetListSchoolResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:GetListSchoolResult", &(a->_ns1__GetListSchoolResponse::GetListSchoolResult), "xsd:int"))
				{	soap_flag_GetListSchoolResult1--;
					continue;
				}
			if (soap_flag_list1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:list", &(a->_ns1__GetListSchoolResponse::list), "xsd:string"))
				{	soap_flag_list1--;
					continue;
				}
			if (soap_flag_totalCount1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:totalCount", &(a->_ns1__GetListSchoolResponse::totalCount), "xsd:int"))
				{	soap_flag_totalCount1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:GetListSchoolResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__GetListSchoolResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__GetListSchoolResponse, 0, sizeof(_ns1__GetListSchoolResponse), 0, soap_copy__ns1__GetListSchoolResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_GetListSchoolResult1 > 0 || soap_flag_totalCount1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__GetListSchoolResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__GetListSchoolResponse);
	if (this->soap_out(soap, tag?tag:"ns1:GetListSchoolResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__GetListSchoolResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__GetListSchoolResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__GetListSchoolResponse * SOAP_FMAC4 soap_get__ns1__GetListSchoolResponse(struct soap *soap, _ns1__GetListSchoolResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__GetListSchoolResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__GetListSchoolResponse * SOAP_FMAC2 soap_instantiate__ns1__GetListSchoolResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__GetListSchoolResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__GetListSchoolResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__GetListSchoolResponse);
		if (size)
			*size = sizeof(_ns1__GetListSchoolResponse);
		((_ns1__GetListSchoolResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__GetListSchoolResponse, n);
		if (size)
			*size = n * sizeof(_ns1__GetListSchoolResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__GetListSchoolResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__GetListSchoolResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetListSchoolResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__GetListSchoolResponse %p -> %p\n", q, p));
	*(_ns1__GetListSchoolResponse*)p = *(_ns1__GetListSchoolResponse*)q;
}

void _ns1__GetListSchool::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__GetListSchool::n4ServiceCode);
	soap_default_LONG64(soap, &this->_ns1__GetListSchool::memberSN);
	/* transient soap skipped */
}

void _ns1__GetListSchool::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__GetListSchool::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__GetListSchool(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetListSchool(struct soap *soap, const char *tag, int id, const _ns1__GetListSchool *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__GetListSchool), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:n4ServiceCode", -1, &(a->_ns1__GetListSchool::n4ServiceCode), ""))
		return soap->error;
	if (soap_out_LONG64(soap, "ns1:memberSN", -1, &(a->_ns1__GetListSchool::memberSN), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__GetListSchool::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__GetListSchool(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__GetListSchool * SOAP_FMAC4 soap_in__ns1__GetListSchool(struct soap *soap, const char *tag, _ns1__GetListSchool *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__GetListSchool *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__GetListSchool, sizeof(_ns1__GetListSchool), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__GetListSchool)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__GetListSchool *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_n4ServiceCode1 = 1;
	size_t soap_flag_memberSN1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_n4ServiceCode1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:n4ServiceCode", &(a->_ns1__GetListSchool::n4ServiceCode), "xsd:int"))
				{	soap_flag_n4ServiceCode1--;
					continue;
				}
			if (soap_flag_memberSN1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns1:memberSN", &(a->_ns1__GetListSchool::memberSN), "xsd:long"))
				{	soap_flag_memberSN1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__GetListSchool *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__GetListSchool, 0, sizeof(_ns1__GetListSchool), 0, soap_copy__ns1__GetListSchool);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_n4ServiceCode1 > 0 || soap_flag_memberSN1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__GetListSchool::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__GetListSchool);
	if (this->soap_out(soap, tag?tag:"ns1:GetListSchool", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__GetListSchool::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__GetListSchool(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__GetListSchool * SOAP_FMAC4 soap_get__ns1__GetListSchool(struct soap *soap, _ns1__GetListSchool *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__GetListSchool(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__GetListSchool * SOAP_FMAC2 soap_instantiate__ns1__GetListSchool(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__GetListSchool(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__GetListSchool, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__GetListSchool);
		if (size)
			*size = sizeof(_ns1__GetListSchool);
		((_ns1__GetListSchool*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__GetListSchool, n);
		if (size)
			*size = n * sizeof(_ns1__GetListSchool);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__GetListSchool*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__GetListSchool*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetListSchool(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__GetListSchool %p -> %p\n", q, p));
	*(_ns1__GetListSchool*)p = *(_ns1__GetListSchool*)q;
}

void _ns1__CheckPasswordByMemberSNResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckPasswordByMemberSNResponse::CheckPasswordByMemberSNResult);
	/* transient soap skipped */
}

void _ns1__CheckPasswordByMemberSNResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__CheckPasswordByMemberSNResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckPasswordByMemberSNResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckPasswordByMemberSNResponse(struct soap *soap, const char *tag, int id, const _ns1__CheckPasswordByMemberSNResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckPasswordByMemberSNResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:CheckPasswordByMemberSNResult");
	if (soap_out_int(soap, "ns1:CheckPasswordByMemberSNResult", -1, &(a->_ns1__CheckPasswordByMemberSNResponse::CheckPasswordByMemberSNResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckPasswordByMemberSNResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckPasswordByMemberSNResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckPasswordByMemberSNResponse * SOAP_FMAC4 soap_in__ns1__CheckPasswordByMemberSNResponse(struct soap *soap, const char *tag, _ns1__CheckPasswordByMemberSNResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckPasswordByMemberSNResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckPasswordByMemberSNResponse, sizeof(_ns1__CheckPasswordByMemberSNResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckPasswordByMemberSNResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckPasswordByMemberSNResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_CheckPasswordByMemberSNResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_CheckPasswordByMemberSNResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:CheckPasswordByMemberSNResult", &(a->_ns1__CheckPasswordByMemberSNResponse::CheckPasswordByMemberSNResult), "xsd:int"))
				{	soap_flag_CheckPasswordByMemberSNResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:CheckPasswordByMemberSNResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckPasswordByMemberSNResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckPasswordByMemberSNResponse, 0, sizeof(_ns1__CheckPasswordByMemberSNResponse), 0, soap_copy__ns1__CheckPasswordByMemberSNResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_CheckPasswordByMemberSNResult1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckPasswordByMemberSNResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckPasswordByMemberSNResponse);
	if (this->soap_out(soap, tag?tag:"ns1:CheckPasswordByMemberSNResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckPasswordByMemberSNResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckPasswordByMemberSNResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckPasswordByMemberSNResponse * SOAP_FMAC4 soap_get__ns1__CheckPasswordByMemberSNResponse(struct soap *soap, _ns1__CheckPasswordByMemberSNResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckPasswordByMemberSNResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckPasswordByMemberSNResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckPasswordByMemberSNResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckPasswordByMemberSNResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckPasswordByMemberSNResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckPasswordByMemberSNResponse);
		if (size)
			*size = sizeof(_ns1__CheckPasswordByMemberSNResponse);
		((_ns1__CheckPasswordByMemberSNResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckPasswordByMemberSNResponse, n);
		if (size)
			*size = n * sizeof(_ns1__CheckPasswordByMemberSNResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckPasswordByMemberSNResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckPasswordByMemberSNResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckPasswordByMemberSNResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckPasswordByMemberSNResponse %p -> %p\n", q, p));
	*(_ns1__CheckPasswordByMemberSNResponse*)p = *(_ns1__CheckPasswordByMemberSNResponse*)q;
}

void _ns1__CheckPasswordByMemberSN::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckPasswordByMemberSN::n4ServiceCode);
	soap_default_LONG64(soap, &this->_ns1__CheckPasswordByMemberSN::memberSN);
	this->_ns1__CheckPasswordByMemberSN::password = NULL;
	/* transient soap skipped */
}

void _ns1__CheckPasswordByMemberSN::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTostd__string(soap, &this->_ns1__CheckPasswordByMemberSN::password);
	/* transient soap skipped */
#endif
}

int _ns1__CheckPasswordByMemberSN::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckPasswordByMemberSN(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckPasswordByMemberSN(struct soap *soap, const char *tag, int id, const _ns1__CheckPasswordByMemberSN *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckPasswordByMemberSN), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:n4ServiceCode", -1, &(a->_ns1__CheckPasswordByMemberSN::n4ServiceCode), ""))
		return soap->error;
	if (soap_out_LONG64(soap, "ns1:memberSN", -1, &(a->_ns1__CheckPasswordByMemberSN::memberSN), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:password", -1, &(a->_ns1__CheckPasswordByMemberSN::password), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckPasswordByMemberSN::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckPasswordByMemberSN(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckPasswordByMemberSN * SOAP_FMAC4 soap_in__ns1__CheckPasswordByMemberSN(struct soap *soap, const char *tag, _ns1__CheckPasswordByMemberSN *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckPasswordByMemberSN *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckPasswordByMemberSN, sizeof(_ns1__CheckPasswordByMemberSN), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckPasswordByMemberSN)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckPasswordByMemberSN *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_n4ServiceCode1 = 1;
	size_t soap_flag_memberSN1 = 1;
	size_t soap_flag_password1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_n4ServiceCode1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:n4ServiceCode", &(a->_ns1__CheckPasswordByMemberSN::n4ServiceCode), "xsd:int"))
				{	soap_flag_n4ServiceCode1--;
					continue;
				}
			if (soap_flag_memberSN1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns1:memberSN", &(a->_ns1__CheckPasswordByMemberSN::memberSN), "xsd:long"))
				{	soap_flag_memberSN1--;
					continue;
				}
			if (soap_flag_password1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:password", &(a->_ns1__CheckPasswordByMemberSN::password), "xsd:string"))
				{	soap_flag_password1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckPasswordByMemberSN *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckPasswordByMemberSN, 0, sizeof(_ns1__CheckPasswordByMemberSN), 0, soap_copy__ns1__CheckPasswordByMemberSN);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_n4ServiceCode1 > 0 || soap_flag_memberSN1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckPasswordByMemberSN::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckPasswordByMemberSN);
	if (this->soap_out(soap, tag?tag:"ns1:CheckPasswordByMemberSN", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckPasswordByMemberSN::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckPasswordByMemberSN(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckPasswordByMemberSN * SOAP_FMAC4 soap_get__ns1__CheckPasswordByMemberSN(struct soap *soap, _ns1__CheckPasswordByMemberSN *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckPasswordByMemberSN(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckPasswordByMemberSN * SOAP_FMAC2 soap_instantiate__ns1__CheckPasswordByMemberSN(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckPasswordByMemberSN(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckPasswordByMemberSN, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckPasswordByMemberSN);
		if (size)
			*size = sizeof(_ns1__CheckPasswordByMemberSN);
		((_ns1__CheckPasswordByMemberSN*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckPasswordByMemberSN, n);
		if (size)
			*size = n * sizeof(_ns1__CheckPasswordByMemberSN);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckPasswordByMemberSN*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckPasswordByMemberSN*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckPasswordByMemberSN(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckPasswordByMemberSN %p -> %p\n", q, p));
	*(_ns1__CheckPasswordByMemberSN*)p = *(_ns1__CheckPasswordByMemberSN*)q;
}

void _ns1__CheckSameUserResponse::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckSameUserResponse::CheckSameUserResult);
	/* transient soap skipped */
}

void _ns1__CheckSameUserResponse::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__CheckSameUserResponse::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckSameUserResponse(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckSameUserResponse(struct soap *soap, const char *tag, int id, const _ns1__CheckSameUserResponse *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckSameUserResponse), type))
		return soap->error;
	soap_element_result(soap, "ns1:CheckSameUserResult");
	if (soap_out_int(soap, "ns1:CheckSameUserResult", -1, &(a->_ns1__CheckSameUserResponse::CheckSameUserResult), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckSameUserResponse::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckSameUserResponse(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckSameUserResponse * SOAP_FMAC4 soap_in__ns1__CheckSameUserResponse(struct soap *soap, const char *tag, _ns1__CheckSameUserResponse *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckSameUserResponse *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckSameUserResponse, sizeof(_ns1__CheckSameUserResponse), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckSameUserResponse)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckSameUserResponse *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_CheckSameUserResult1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_CheckSameUserResult1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:CheckSameUserResult", &(a->_ns1__CheckSameUserResponse::CheckSameUserResult), "xsd:int"))
				{	soap_flag_CheckSameUserResult1--;
					continue;
				}
			/* transient soap skipped */
			soap_check_result(soap, "ns1:CheckSameUserResult");
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckSameUserResponse *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckSameUserResponse, 0, sizeof(_ns1__CheckSameUserResponse), 0, soap_copy__ns1__CheckSameUserResponse);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_CheckSameUserResult1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckSameUserResponse::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckSameUserResponse);
	if (this->soap_out(soap, tag?tag:"ns1:CheckSameUserResponse", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckSameUserResponse::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckSameUserResponse(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckSameUserResponse * SOAP_FMAC4 soap_get__ns1__CheckSameUserResponse(struct soap *soap, _ns1__CheckSameUserResponse *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckSameUserResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckSameUserResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckSameUserResponse(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckSameUserResponse(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckSameUserResponse, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckSameUserResponse);
		if (size)
			*size = sizeof(_ns1__CheckSameUserResponse);
		((_ns1__CheckSameUserResponse*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckSameUserResponse, n);
		if (size)
			*size = n * sizeof(_ns1__CheckSameUserResponse);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckSameUserResponse*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckSameUserResponse*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckSameUserResponse(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckSameUserResponse %p -> %p\n", q, p));
	*(_ns1__CheckSameUserResponse*)p = *(_ns1__CheckSameUserResponse*)q;
}

void _ns1__CheckSameUser::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_int(soap, &this->_ns1__CheckSameUser::n4ServiceCode);
	soap_default_LONG64(soap, &this->_ns1__CheckSameUser::memberSN);
	soap_default_LONG64(soap, &this->_ns1__CheckSameUser::compareMemberSN);
	/* transient soap skipped */
}

void _ns1__CheckSameUser::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int _ns1__CheckSameUser::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out__ns1__CheckSameUser(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckSameUser(struct soap *soap, const char *tag, int id, const _ns1__CheckSameUser *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE__ns1__CheckSameUser), type))
		return soap->error;
	if (soap_out_int(soap, "ns1:n4ServiceCode", -1, &(a->_ns1__CheckSameUser::n4ServiceCode), ""))
		return soap->error;
	if (soap_out_LONG64(soap, "ns1:memberSN", -1, &(a->_ns1__CheckSameUser::memberSN), ""))
		return soap->error;
	if (soap_out_LONG64(soap, "ns1:compareMemberSN", -1, &(a->_ns1__CheckSameUser::compareMemberSN), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *_ns1__CheckSameUser::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in__ns1__CheckSameUser(soap, tag, this, type);
}

SOAP_FMAC3 _ns1__CheckSameUser * SOAP_FMAC4 soap_in__ns1__CheckSameUser(struct soap *soap, const char *tag, _ns1__CheckSameUser *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (_ns1__CheckSameUser *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE__ns1__CheckSameUser, sizeof(_ns1__CheckSameUser), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE__ns1__CheckSameUser)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (_ns1__CheckSameUser *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_n4ServiceCode1 = 1;
	size_t soap_flag_memberSN1 = 1;
	size_t soap_flag_compareMemberSN1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_n4ServiceCode1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:n4ServiceCode", &(a->_ns1__CheckSameUser::n4ServiceCode), "xsd:int"))
				{	soap_flag_n4ServiceCode1--;
					continue;
				}
			if (soap_flag_memberSN1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns1:memberSN", &(a->_ns1__CheckSameUser::memberSN), "xsd:long"))
				{	soap_flag_memberSN1--;
					continue;
				}
			if (soap_flag_compareMemberSN1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_LONG64(soap, "ns1:compareMemberSN", &(a->_ns1__CheckSameUser::compareMemberSN), "xsd:long"))
				{	soap_flag_compareMemberSN1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (_ns1__CheckSameUser *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE__ns1__CheckSameUser, 0, sizeof(_ns1__CheckSameUser), 0, soap_copy__ns1__CheckSameUser);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_n4ServiceCode1 > 0 || soap_flag_memberSN1 > 0 || soap_flag_compareMemberSN1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int _ns1__CheckSameUser::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE__ns1__CheckSameUser);
	if (this->soap_out(soap, tag?tag:"ns1:CheckSameUser", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *_ns1__CheckSameUser::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get__ns1__CheckSameUser(soap, this, tag, type);
}

SOAP_FMAC3 _ns1__CheckSameUser * SOAP_FMAC4 soap_get__ns1__CheckSameUser(struct soap *soap, _ns1__CheckSameUser *p, const char *tag, const char *type)
{
	if ((p = soap_in__ns1__CheckSameUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 _ns1__CheckSameUser * SOAP_FMAC2 soap_instantiate__ns1__CheckSameUser(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate__ns1__CheckSameUser(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE__ns1__CheckSameUser, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(_ns1__CheckSameUser);
		if (size)
			*size = sizeof(_ns1__CheckSameUser);
		((_ns1__CheckSameUser*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(_ns1__CheckSameUser, n);
		if (size)
			*size = n * sizeof(_ns1__CheckSameUser);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((_ns1__CheckSameUser*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (_ns1__CheckSameUser*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckSameUser(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying _ns1__CheckSameUser %p -> %p\n", q, p));
	*(_ns1__CheckSameUser*)p = *(_ns1__CheckSameUser*)q;
}

void ns1__UseRestrictInfoEntity::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->ns1__UseRestrictInfoEntity::ExtensionData = NULL;
	soap_default_int(soap, &this->ns1__UseRestrictInfoEntity::DailyCurrent);
	soap_default_int(soap, &this->ns1__UseRestrictInfoEntity::DailyRestrict);
	soap_default_int(soap, &this->ns1__UseRestrictInfoEntity::HourlyCurrent);
	soap_default_int(soap, &this->ns1__UseRestrictInfoEntity::HourlyRestrict);
	soap_default_int(soap, &this->ns1__UseRestrictInfoEntity::TotalCurrent);
	soap_default_int(soap, &this->ns1__UseRestrictInfoEntity::TotalRestrict);
	soap_default_int(soap, &this->ns1__UseRestrictInfoEntity::WeeklyCurrent);
	soap_default_int(soap, &this->ns1__UseRestrictInfoEntity::WeeklyRestrict);
	/* transient soap skipped */
}

void ns1__UseRestrictInfoEntity::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ExtensionDataObject(soap, &this->ns1__UseRestrictInfoEntity::ExtensionData);
	/* transient soap skipped */
#endif
}

int ns1__UseRestrictInfoEntity::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out_ns1__UseRestrictInfoEntity(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__UseRestrictInfoEntity(struct soap *soap, const char *tag, int id, const ns1__UseRestrictInfoEntity *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_ns1__UseRestrictInfoEntity), type))
		return soap->error;
	if (soap_out_PointerTons1__ExtensionDataObject(soap, "ns1:ExtensionData", -1, &(a->ns1__UseRestrictInfoEntity::ExtensionData), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:DailyCurrent", -1, &(a->ns1__UseRestrictInfoEntity::DailyCurrent), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:DailyRestrict", -1, &(a->ns1__UseRestrictInfoEntity::DailyRestrict), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:HourlyCurrent", -1, &(a->ns1__UseRestrictInfoEntity::HourlyCurrent), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:HourlyRestrict", -1, &(a->ns1__UseRestrictInfoEntity::HourlyRestrict), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:TotalCurrent", -1, &(a->ns1__UseRestrictInfoEntity::TotalCurrent), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:TotalRestrict", -1, &(a->ns1__UseRestrictInfoEntity::TotalRestrict), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:WeeklyCurrent", -1, &(a->ns1__UseRestrictInfoEntity::WeeklyCurrent), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:WeeklyRestrict", -1, &(a->ns1__UseRestrictInfoEntity::WeeklyRestrict), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *ns1__UseRestrictInfoEntity::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in_ns1__UseRestrictInfoEntity(soap, tag, this, type);
}

SOAP_FMAC3 ns1__UseRestrictInfoEntity * SOAP_FMAC4 soap_in_ns1__UseRestrictInfoEntity(struct soap *soap, const char *tag, ns1__UseRestrictInfoEntity *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (ns1__UseRestrictInfoEntity *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE_ns1__UseRestrictInfoEntity, sizeof(ns1__UseRestrictInfoEntity), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE_ns1__UseRestrictInfoEntity)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (ns1__UseRestrictInfoEntity *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_ExtensionData1 = 1;
	size_t soap_flag_DailyCurrent1 = 1;
	size_t soap_flag_DailyRestrict1 = 1;
	size_t soap_flag_HourlyCurrent1 = 1;
	size_t soap_flag_HourlyRestrict1 = 1;
	size_t soap_flag_TotalCurrent1 = 1;
	size_t soap_flag_TotalRestrict1 = 1;
	size_t soap_flag_WeeklyCurrent1 = 1;
	size_t soap_flag_WeeklyRestrict1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ExtensionData1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ExtensionDataObject(soap, "ns1:ExtensionData", &(a->ns1__UseRestrictInfoEntity::ExtensionData), "ns1:ExtensionDataObject"))
				{	soap_flag_ExtensionData1--;
					continue;
				}
			if (soap_flag_DailyCurrent1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:DailyCurrent", &(a->ns1__UseRestrictInfoEntity::DailyCurrent), "xsd:int"))
				{	soap_flag_DailyCurrent1--;
					continue;
				}
			if (soap_flag_DailyRestrict1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:DailyRestrict", &(a->ns1__UseRestrictInfoEntity::DailyRestrict), "xsd:int"))
				{	soap_flag_DailyRestrict1--;
					continue;
				}
			if (soap_flag_HourlyCurrent1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:HourlyCurrent", &(a->ns1__UseRestrictInfoEntity::HourlyCurrent), "xsd:int"))
				{	soap_flag_HourlyCurrent1--;
					continue;
				}
			if (soap_flag_HourlyRestrict1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:HourlyRestrict", &(a->ns1__UseRestrictInfoEntity::HourlyRestrict), "xsd:int"))
				{	soap_flag_HourlyRestrict1--;
					continue;
				}
			if (soap_flag_TotalCurrent1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:TotalCurrent", &(a->ns1__UseRestrictInfoEntity::TotalCurrent), "xsd:int"))
				{	soap_flag_TotalCurrent1--;
					continue;
				}
			if (soap_flag_TotalRestrict1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:TotalRestrict", &(a->ns1__UseRestrictInfoEntity::TotalRestrict), "xsd:int"))
				{	soap_flag_TotalRestrict1--;
					continue;
				}
			if (soap_flag_WeeklyCurrent1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:WeeklyCurrent", &(a->ns1__UseRestrictInfoEntity::WeeklyCurrent), "xsd:int"))
				{	soap_flag_WeeklyCurrent1--;
					continue;
				}
			if (soap_flag_WeeklyRestrict1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:WeeklyRestrict", &(a->ns1__UseRestrictInfoEntity::WeeklyRestrict), "xsd:int"))
				{	soap_flag_WeeklyRestrict1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (ns1__UseRestrictInfoEntity *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_ns1__UseRestrictInfoEntity, 0, sizeof(ns1__UseRestrictInfoEntity), 0, soap_copy_ns1__UseRestrictInfoEntity);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_DailyCurrent1 > 0 || soap_flag_DailyRestrict1 > 0 || soap_flag_HourlyCurrent1 > 0 || soap_flag_HourlyRestrict1 > 0 || soap_flag_TotalCurrent1 > 0 || soap_flag_TotalRestrict1 > 0 || soap_flag_WeeklyCurrent1 > 0 || soap_flag_WeeklyRestrict1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int ns1__UseRestrictInfoEntity::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE_ns1__UseRestrictInfoEntity);
	if (this->soap_out(soap, tag?tag:"ns1:UseRestrictInfoEntity", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *ns1__UseRestrictInfoEntity::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get_ns1__UseRestrictInfoEntity(soap, this, tag, type);
}

SOAP_FMAC3 ns1__UseRestrictInfoEntity * SOAP_FMAC4 soap_get_ns1__UseRestrictInfoEntity(struct soap *soap, ns1__UseRestrictInfoEntity *p, const char *tag, const char *type)
{
	if ((p = soap_in_ns1__UseRestrictInfoEntity(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 ns1__UseRestrictInfoEntity * SOAP_FMAC2 soap_instantiate_ns1__UseRestrictInfoEntity(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_ns1__UseRestrictInfoEntity(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_ns1__UseRestrictInfoEntity, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(ns1__UseRestrictInfoEntity);
		if (size)
			*size = sizeof(ns1__UseRestrictInfoEntity);
		((ns1__UseRestrictInfoEntity*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(ns1__UseRestrictInfoEntity, n);
		if (size)
			*size = n * sizeof(ns1__UseRestrictInfoEntity);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((ns1__UseRestrictInfoEntity*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (ns1__UseRestrictInfoEntity*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__UseRestrictInfoEntity(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying ns1__UseRestrictInfoEntity %p -> %p\n", q, p));
	*(ns1__UseRestrictInfoEntity*)p = *(ns1__UseRestrictInfoEntity*)q;
}

void ns1__ItemEntity::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->ns1__ItemEntity::ExtensionData = NULL;
	soap_default_short(soap, &this->ns1__ItemEntity::ExpireDay);
	this->ns1__ItemEntity::ItemCode = NULL;
	this->ns1__ItemEntity::ItemName = NULL;
	soap_default_int(soap, &this->ns1__ItemEntity::ItemQuantity);
	this->ns1__ItemEntity::ServiceCode = NULL;
	this->ns1__ItemEntity::ServiceName = NULL;
	soap_default_short(soap, &this->ns1__ItemEntity::UsableLevel);
	/* transient soap skipped */
}

void ns1__ItemEntity::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ExtensionDataObject(soap, &this->ns1__ItemEntity::ExtensionData);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ItemEntity::ItemCode);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ItemEntity::ItemName);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ItemEntity::ServiceCode);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ItemEntity::ServiceName);
	/* transient soap skipped */
#endif
}

int ns1__ItemEntity::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out_ns1__ItemEntity(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ItemEntity(struct soap *soap, const char *tag, int id, const ns1__ItemEntity *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_ns1__ItemEntity), type))
		return soap->error;
	if (soap_out_PointerTons1__ExtensionDataObject(soap, "ns1:ExtensionData", -1, &(a->ns1__ItemEntity::ExtensionData), ""))
		return soap->error;
	if (soap_out_short(soap, "ns1:ExpireDay", -1, &(a->ns1__ItemEntity::ExpireDay), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ItemCode", -1, &(a->ns1__ItemEntity::ItemCode), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ItemName", -1, &(a->ns1__ItemEntity::ItemName), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:ItemQuantity", -1, &(a->ns1__ItemEntity::ItemQuantity), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ServiceCode", -1, &(a->ns1__ItemEntity::ServiceCode), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ServiceName", -1, &(a->ns1__ItemEntity::ServiceName), ""))
		return soap->error;
	if (soap_out_short(soap, "ns1:UsableLevel", -1, &(a->ns1__ItemEntity::UsableLevel), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *ns1__ItemEntity::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in_ns1__ItemEntity(soap, tag, this, type);
}

SOAP_FMAC3 ns1__ItemEntity * SOAP_FMAC4 soap_in_ns1__ItemEntity(struct soap *soap, const char *tag, ns1__ItemEntity *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (ns1__ItemEntity *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE_ns1__ItemEntity, sizeof(ns1__ItemEntity), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE_ns1__ItemEntity)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (ns1__ItemEntity *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_ExtensionData1 = 1;
	size_t soap_flag_ExpireDay1 = 1;
	size_t soap_flag_ItemCode1 = 1;
	size_t soap_flag_ItemName1 = 1;
	size_t soap_flag_ItemQuantity1 = 1;
	size_t soap_flag_ServiceCode1 = 1;
	size_t soap_flag_ServiceName1 = 1;
	size_t soap_flag_UsableLevel1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ExtensionData1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ExtensionDataObject(soap, "ns1:ExtensionData", &(a->ns1__ItemEntity::ExtensionData), "ns1:ExtensionDataObject"))
				{	soap_flag_ExtensionData1--;
					continue;
				}
			if (soap_flag_ExpireDay1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_short(soap, "ns1:ExpireDay", &(a->ns1__ItemEntity::ExpireDay), "xsd:short"))
				{	soap_flag_ExpireDay1--;
					continue;
				}
			if (soap_flag_ItemCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ItemCode", &(a->ns1__ItemEntity::ItemCode), "xsd:string"))
				{	soap_flag_ItemCode1--;
					continue;
				}
			if (soap_flag_ItemName1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ItemName", &(a->ns1__ItemEntity::ItemName), "xsd:string"))
				{	soap_flag_ItemName1--;
					continue;
				}
			if (soap_flag_ItemQuantity1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:ItemQuantity", &(a->ns1__ItemEntity::ItemQuantity), "xsd:int"))
				{	soap_flag_ItemQuantity1--;
					continue;
				}
			if (soap_flag_ServiceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ServiceCode", &(a->ns1__ItemEntity::ServiceCode), "xsd:string"))
				{	soap_flag_ServiceCode1--;
					continue;
				}
			if (soap_flag_ServiceName1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ServiceName", &(a->ns1__ItemEntity::ServiceName), "xsd:string"))
				{	soap_flag_ServiceName1--;
					continue;
				}
			if (soap_flag_UsableLevel1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_short(soap, "ns1:UsableLevel", &(a->ns1__ItemEntity::UsableLevel), "xsd:short"))
				{	soap_flag_UsableLevel1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (ns1__ItemEntity *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_ns1__ItemEntity, 0, sizeof(ns1__ItemEntity), 0, soap_copy_ns1__ItemEntity);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_ExpireDay1 > 0 || soap_flag_ItemQuantity1 > 0 || soap_flag_UsableLevel1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int ns1__ItemEntity::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE_ns1__ItemEntity);
	if (this->soap_out(soap, tag?tag:"ns1:ItemEntity", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *ns1__ItemEntity::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get_ns1__ItemEntity(soap, this, tag, type);
}

SOAP_FMAC3 ns1__ItemEntity * SOAP_FMAC4 soap_get_ns1__ItemEntity(struct soap *soap, ns1__ItemEntity *p, const char *tag, const char *type)
{
	if ((p = soap_in_ns1__ItemEntity(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 ns1__ItemEntity * SOAP_FMAC2 soap_instantiate_ns1__ItemEntity(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_ns1__ItemEntity(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_ns1__ItemEntity, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(ns1__ItemEntity);
		if (size)
			*size = sizeof(ns1__ItemEntity);
		((ns1__ItemEntity*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(ns1__ItemEntity, n);
		if (size)
			*size = n * sizeof(ns1__ItemEntity);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((ns1__ItemEntity*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (ns1__ItemEntity*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ItemEntity(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying ns1__ItemEntity %p -> %p\n", q, p));
	*(ns1__ItemEntity*)p = *(ns1__ItemEntity*)q;
}

void ns1__ArrayOfItemEntity::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_std__vectorTemplateOfPointerTons1__ItemEntity(soap, &this->ns1__ArrayOfItemEntity::ItemEntity);
	/* transient soap skipped */
}

void ns1__ArrayOfItemEntity::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_std__vectorTemplateOfPointerTons1__ItemEntity(soap, &this->ns1__ArrayOfItemEntity::ItemEntity);
	/* transient soap skipped */
#endif
}

int ns1__ArrayOfItemEntity::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out_ns1__ArrayOfItemEntity(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfItemEntity(struct soap *soap, const char *tag, int id, const ns1__ArrayOfItemEntity *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_ns1__ArrayOfItemEntity), type))
		return soap->error;
	if (soap_out_std__vectorTemplateOfPointerTons1__ItemEntity(soap, "ns1:ItemEntity", -1, &(a->ns1__ArrayOfItemEntity::ItemEntity), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *ns1__ArrayOfItemEntity::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in_ns1__ArrayOfItemEntity(soap, tag, this, type);
}

SOAP_FMAC3 ns1__ArrayOfItemEntity * SOAP_FMAC4 soap_in_ns1__ArrayOfItemEntity(struct soap *soap, const char *tag, ns1__ArrayOfItemEntity *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (ns1__ArrayOfItemEntity *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE_ns1__ArrayOfItemEntity, sizeof(ns1__ArrayOfItemEntity), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE_ns1__ArrayOfItemEntity)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (ns1__ArrayOfItemEntity *)a->soap_in(soap, tag, type);
		}
	}
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_std__vectorTemplateOfPointerTons1__ItemEntity(soap, "ns1:ItemEntity", &(a->ns1__ArrayOfItemEntity::ItemEntity), "ns1:ItemEntity"))
					continue;
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (ns1__ArrayOfItemEntity *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_ns1__ArrayOfItemEntity, 0, sizeof(ns1__ArrayOfItemEntity), 0, soap_copy_ns1__ArrayOfItemEntity);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int ns1__ArrayOfItemEntity::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE_ns1__ArrayOfItemEntity);
	if (this->soap_out(soap, tag?tag:"ns1:ArrayOfItemEntity", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *ns1__ArrayOfItemEntity::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get_ns1__ArrayOfItemEntity(soap, this, tag, type);
}

SOAP_FMAC3 ns1__ArrayOfItemEntity * SOAP_FMAC4 soap_get_ns1__ArrayOfItemEntity(struct soap *soap, ns1__ArrayOfItemEntity *p, const char *tag, const char *type)
{
	if ((p = soap_in_ns1__ArrayOfItemEntity(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 ns1__ArrayOfItemEntity * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfItemEntity(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_ns1__ArrayOfItemEntity(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_ns1__ArrayOfItemEntity, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(ns1__ArrayOfItemEntity);
		if (size)
			*size = sizeof(ns1__ArrayOfItemEntity);
		((ns1__ArrayOfItemEntity*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(ns1__ArrayOfItemEntity, n);
		if (size)
			*size = n * sizeof(ns1__ArrayOfItemEntity);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((ns1__ArrayOfItemEntity*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (ns1__ArrayOfItemEntity*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ArrayOfItemEntity(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying ns1__ArrayOfItemEntity %p -> %p\n", q, p));
	*(ns1__ArrayOfItemEntity*)p = *(ns1__ArrayOfItemEntity*)q;
}

void ns1__ArrayOfHoldingCouponCountEntity::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity(soap, &this->ns1__ArrayOfHoldingCouponCountEntity::HoldingCouponCountEntity);
	/* transient soap skipped */
}

void ns1__ArrayOfHoldingCouponCountEntity::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity(soap, &this->ns1__ArrayOfHoldingCouponCountEntity::HoldingCouponCountEntity);
	/* transient soap skipped */
#endif
}

int ns1__ArrayOfHoldingCouponCountEntity::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out_ns1__ArrayOfHoldingCouponCountEntity(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfHoldingCouponCountEntity(struct soap *soap, const char *tag, int id, const ns1__ArrayOfHoldingCouponCountEntity *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity), type))
		return soap->error;
	if (soap_out_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity(soap, "ns1:HoldingCouponCountEntity", -1, &(a->ns1__ArrayOfHoldingCouponCountEntity::HoldingCouponCountEntity), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *ns1__ArrayOfHoldingCouponCountEntity::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in_ns1__ArrayOfHoldingCouponCountEntity(soap, tag, this, type);
}

SOAP_FMAC3 ns1__ArrayOfHoldingCouponCountEntity * SOAP_FMAC4 soap_in_ns1__ArrayOfHoldingCouponCountEntity(struct soap *soap, const char *tag, ns1__ArrayOfHoldingCouponCountEntity *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (ns1__ArrayOfHoldingCouponCountEntity *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity, sizeof(ns1__ArrayOfHoldingCouponCountEntity), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (ns1__ArrayOfHoldingCouponCountEntity *)a->soap_in(soap, tag, type);
		}
	}
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity(soap, "ns1:HoldingCouponCountEntity", &(a->ns1__ArrayOfHoldingCouponCountEntity::HoldingCouponCountEntity), "ns1:HoldingCouponCountEntity"))
					continue;
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (ns1__ArrayOfHoldingCouponCountEntity *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity, 0, sizeof(ns1__ArrayOfHoldingCouponCountEntity), 0, soap_copy_ns1__ArrayOfHoldingCouponCountEntity);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int ns1__ArrayOfHoldingCouponCountEntity::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity);
	if (this->soap_out(soap, tag?tag:"ns1:ArrayOfHoldingCouponCountEntity", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *ns1__ArrayOfHoldingCouponCountEntity::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get_ns1__ArrayOfHoldingCouponCountEntity(soap, this, tag, type);
}

SOAP_FMAC3 ns1__ArrayOfHoldingCouponCountEntity * SOAP_FMAC4 soap_get_ns1__ArrayOfHoldingCouponCountEntity(struct soap *soap, ns1__ArrayOfHoldingCouponCountEntity *p, const char *tag, const char *type)
{
	if ((p = soap_in_ns1__ArrayOfHoldingCouponCountEntity(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 ns1__ArrayOfHoldingCouponCountEntity * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfHoldingCouponCountEntity(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_ns1__ArrayOfHoldingCouponCountEntity(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(ns1__ArrayOfHoldingCouponCountEntity);
		if (size)
			*size = sizeof(ns1__ArrayOfHoldingCouponCountEntity);
		((ns1__ArrayOfHoldingCouponCountEntity*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(ns1__ArrayOfHoldingCouponCountEntity, n);
		if (size)
			*size = n * sizeof(ns1__ArrayOfHoldingCouponCountEntity);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((ns1__ArrayOfHoldingCouponCountEntity*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (ns1__ArrayOfHoldingCouponCountEntity*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ArrayOfHoldingCouponCountEntity(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying ns1__ArrayOfHoldingCouponCountEntity %p -> %p\n", q, p));
	*(ns1__ArrayOfHoldingCouponCountEntity*)p = *(ns1__ArrayOfHoldingCouponCountEntity*)q;
}

void ns1__HoldingCouponCountEntity::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->ns1__HoldingCouponCountEntity::ExtensionData = NULL;
	soap_default_int(soap, &this->ns1__HoldingCouponCountEntity::CashCouponCount);
	soap_default_int(soap, &this->ns1__HoldingCouponCountEntity::DiscountCouponCount);
	this->ns1__HoldingCouponCountEntity::GameServiceCode = NULL;
	soap_default_int(soap, &this->ns1__HoldingCouponCountEntity::ItemCouponCount);
	/* transient soap skipped */
}

void ns1__HoldingCouponCountEntity::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ExtensionDataObject(soap, &this->ns1__HoldingCouponCountEntity::ExtensionData);
	soap_serialize_PointerTostd__string(soap, &this->ns1__HoldingCouponCountEntity::GameServiceCode);
	/* transient soap skipped */
#endif
}

int ns1__HoldingCouponCountEntity::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out_ns1__HoldingCouponCountEntity(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__HoldingCouponCountEntity(struct soap *soap, const char *tag, int id, const ns1__HoldingCouponCountEntity *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_ns1__HoldingCouponCountEntity), type))
		return soap->error;
	if (soap_out_PointerTons1__ExtensionDataObject(soap, "ns1:ExtensionData", -1, &(a->ns1__HoldingCouponCountEntity::ExtensionData), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:CashCouponCount", -1, &(a->ns1__HoldingCouponCountEntity::CashCouponCount), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:DiscountCouponCount", -1, &(a->ns1__HoldingCouponCountEntity::DiscountCouponCount), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:GameServiceCode", -1, &(a->ns1__HoldingCouponCountEntity::GameServiceCode), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:ItemCouponCount", -1, &(a->ns1__HoldingCouponCountEntity::ItemCouponCount), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *ns1__HoldingCouponCountEntity::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in_ns1__HoldingCouponCountEntity(soap, tag, this, type);
}

SOAP_FMAC3 ns1__HoldingCouponCountEntity * SOAP_FMAC4 soap_in_ns1__HoldingCouponCountEntity(struct soap *soap, const char *tag, ns1__HoldingCouponCountEntity *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (ns1__HoldingCouponCountEntity *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE_ns1__HoldingCouponCountEntity, sizeof(ns1__HoldingCouponCountEntity), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE_ns1__HoldingCouponCountEntity)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (ns1__HoldingCouponCountEntity *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_ExtensionData1 = 1;
	size_t soap_flag_CashCouponCount1 = 1;
	size_t soap_flag_DiscountCouponCount1 = 1;
	size_t soap_flag_GameServiceCode1 = 1;
	size_t soap_flag_ItemCouponCount1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ExtensionData1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ExtensionDataObject(soap, "ns1:ExtensionData", &(a->ns1__HoldingCouponCountEntity::ExtensionData), "ns1:ExtensionDataObject"))
				{	soap_flag_ExtensionData1--;
					continue;
				}
			if (soap_flag_CashCouponCount1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:CashCouponCount", &(a->ns1__HoldingCouponCountEntity::CashCouponCount), "xsd:int"))
				{	soap_flag_CashCouponCount1--;
					continue;
				}
			if (soap_flag_DiscountCouponCount1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:DiscountCouponCount", &(a->ns1__HoldingCouponCountEntity::DiscountCouponCount), "xsd:int"))
				{	soap_flag_DiscountCouponCount1--;
					continue;
				}
			if (soap_flag_GameServiceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:GameServiceCode", &(a->ns1__HoldingCouponCountEntity::GameServiceCode), "xsd:string"))
				{	soap_flag_GameServiceCode1--;
					continue;
				}
			if (soap_flag_ItemCouponCount1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:ItemCouponCount", &(a->ns1__HoldingCouponCountEntity::ItemCouponCount), "xsd:int"))
				{	soap_flag_ItemCouponCount1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (ns1__HoldingCouponCountEntity *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_ns1__HoldingCouponCountEntity, 0, sizeof(ns1__HoldingCouponCountEntity), 0, soap_copy_ns1__HoldingCouponCountEntity);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_CashCouponCount1 > 0 || soap_flag_DiscountCouponCount1 > 0 || soap_flag_ItemCouponCount1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int ns1__HoldingCouponCountEntity::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE_ns1__HoldingCouponCountEntity);
	if (this->soap_out(soap, tag?tag:"ns1:HoldingCouponCountEntity", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *ns1__HoldingCouponCountEntity::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get_ns1__HoldingCouponCountEntity(soap, this, tag, type);
}

SOAP_FMAC3 ns1__HoldingCouponCountEntity * SOAP_FMAC4 soap_get_ns1__HoldingCouponCountEntity(struct soap *soap, ns1__HoldingCouponCountEntity *p, const char *tag, const char *type)
{
	if ((p = soap_in_ns1__HoldingCouponCountEntity(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 ns1__HoldingCouponCountEntity * SOAP_FMAC2 soap_instantiate_ns1__HoldingCouponCountEntity(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_ns1__HoldingCouponCountEntity(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_ns1__HoldingCouponCountEntity, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(ns1__HoldingCouponCountEntity);
		if (size)
			*size = sizeof(ns1__HoldingCouponCountEntity);
		((ns1__HoldingCouponCountEntity*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(ns1__HoldingCouponCountEntity, n);
		if (size)
			*size = n * sizeof(ns1__HoldingCouponCountEntity);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((ns1__HoldingCouponCountEntity*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (ns1__HoldingCouponCountEntity*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__HoldingCouponCountEntity(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying ns1__HoldingCouponCountEntity %p -> %p\n", q, p));
	*(ns1__HoldingCouponCountEntity*)p = *(ns1__HoldingCouponCountEntity*)q;
}

void ns1__DiscountAppliableItemInfoEntity::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->ns1__DiscountAppliableItemInfoEntity::ExtensionData = NULL;
	this->ns1__DiscountAppliableItemInfoEntity::ItemCode = NULL;
	/* transient soap skipped */
}

void ns1__DiscountAppliableItemInfoEntity::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ExtensionDataObject(soap, &this->ns1__DiscountAppliableItemInfoEntity::ExtensionData);
	soap_serialize_PointerTostd__string(soap, &this->ns1__DiscountAppliableItemInfoEntity::ItemCode);
	/* transient soap skipped */
#endif
}

int ns1__DiscountAppliableItemInfoEntity::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out_ns1__DiscountAppliableItemInfoEntity(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__DiscountAppliableItemInfoEntity(struct soap *soap, const char *tag, int id, const ns1__DiscountAppliableItemInfoEntity *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity), type))
		return soap->error;
	if (soap_out_PointerTons1__ExtensionDataObject(soap, "ns1:ExtensionData", -1, &(a->ns1__DiscountAppliableItemInfoEntity::ExtensionData), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ItemCode", -1, &(a->ns1__DiscountAppliableItemInfoEntity::ItemCode), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *ns1__DiscountAppliableItemInfoEntity::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in_ns1__DiscountAppliableItemInfoEntity(soap, tag, this, type);
}

SOAP_FMAC3 ns1__DiscountAppliableItemInfoEntity * SOAP_FMAC4 soap_in_ns1__DiscountAppliableItemInfoEntity(struct soap *soap, const char *tag, ns1__DiscountAppliableItemInfoEntity *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (ns1__DiscountAppliableItemInfoEntity *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity, sizeof(ns1__DiscountAppliableItemInfoEntity), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (ns1__DiscountAppliableItemInfoEntity *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_ExtensionData1 = 1;
	size_t soap_flag_ItemCode1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ExtensionData1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ExtensionDataObject(soap, "ns1:ExtensionData", &(a->ns1__DiscountAppliableItemInfoEntity::ExtensionData), "ns1:ExtensionDataObject"))
				{	soap_flag_ExtensionData1--;
					continue;
				}
			if (soap_flag_ItemCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ItemCode", &(a->ns1__DiscountAppliableItemInfoEntity::ItemCode), "xsd:string"))
				{	soap_flag_ItemCode1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (ns1__DiscountAppliableItemInfoEntity *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity, 0, sizeof(ns1__DiscountAppliableItemInfoEntity), 0, soap_copy_ns1__DiscountAppliableItemInfoEntity);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int ns1__DiscountAppliableItemInfoEntity::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity);
	if (this->soap_out(soap, tag?tag:"ns1:DiscountAppliableItemInfoEntity", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *ns1__DiscountAppliableItemInfoEntity::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get_ns1__DiscountAppliableItemInfoEntity(soap, this, tag, type);
}

SOAP_FMAC3 ns1__DiscountAppliableItemInfoEntity * SOAP_FMAC4 soap_get_ns1__DiscountAppliableItemInfoEntity(struct soap *soap, ns1__DiscountAppliableItemInfoEntity *p, const char *tag, const char *type)
{
	if ((p = soap_in_ns1__DiscountAppliableItemInfoEntity(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 ns1__DiscountAppliableItemInfoEntity * SOAP_FMAC2 soap_instantiate_ns1__DiscountAppliableItemInfoEntity(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_ns1__DiscountAppliableItemInfoEntity(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(ns1__DiscountAppliableItemInfoEntity);
		if (size)
			*size = sizeof(ns1__DiscountAppliableItemInfoEntity);
		((ns1__DiscountAppliableItemInfoEntity*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(ns1__DiscountAppliableItemInfoEntity, n);
		if (size)
			*size = n * sizeof(ns1__DiscountAppliableItemInfoEntity);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((ns1__DiscountAppliableItemInfoEntity*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (ns1__DiscountAppliableItemInfoEntity*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__DiscountAppliableItemInfoEntity(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying ns1__DiscountAppliableItemInfoEntity %p -> %p\n", q, p));
	*(ns1__DiscountAppliableItemInfoEntity*)p = *(ns1__DiscountAppliableItemInfoEntity*)q;
}

void ns1__ArrayOfDiscountAppliableItemInfoEntity::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity(soap, &this->ns1__ArrayOfDiscountAppliableItemInfoEntity::DiscountAppliableItemInfoEntity);
	/* transient soap skipped */
}

void ns1__ArrayOfDiscountAppliableItemInfoEntity::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity(soap, &this->ns1__ArrayOfDiscountAppliableItemInfoEntity::DiscountAppliableItemInfoEntity);
	/* transient soap skipped */
#endif
}

int ns1__ArrayOfDiscountAppliableItemInfoEntity::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out_ns1__ArrayOfDiscountAppliableItemInfoEntity(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfDiscountAppliableItemInfoEntity(struct soap *soap, const char *tag, int id, const ns1__ArrayOfDiscountAppliableItemInfoEntity *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity), type))
		return soap->error;
	if (soap_out_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity(soap, "ns1:DiscountAppliableItemInfoEntity", -1, &(a->ns1__ArrayOfDiscountAppliableItemInfoEntity::DiscountAppliableItemInfoEntity), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *ns1__ArrayOfDiscountAppliableItemInfoEntity::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in_ns1__ArrayOfDiscountAppliableItemInfoEntity(soap, tag, this, type);
}

SOAP_FMAC3 ns1__ArrayOfDiscountAppliableItemInfoEntity * SOAP_FMAC4 soap_in_ns1__ArrayOfDiscountAppliableItemInfoEntity(struct soap *soap, const char *tag, ns1__ArrayOfDiscountAppliableItemInfoEntity *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (ns1__ArrayOfDiscountAppliableItemInfoEntity *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity, sizeof(ns1__ArrayOfDiscountAppliableItemInfoEntity), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (ns1__ArrayOfDiscountAppliableItemInfoEntity *)a->soap_in(soap, tag, type);
		}
	}
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity(soap, "ns1:DiscountAppliableItemInfoEntity", &(a->ns1__ArrayOfDiscountAppliableItemInfoEntity::DiscountAppliableItemInfoEntity), "ns1:DiscountAppliableItemInfoEntity"))
					continue;
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (ns1__ArrayOfDiscountAppliableItemInfoEntity *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity, 0, sizeof(ns1__ArrayOfDiscountAppliableItemInfoEntity), 0, soap_copy_ns1__ArrayOfDiscountAppliableItemInfoEntity);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int ns1__ArrayOfDiscountAppliableItemInfoEntity::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity);
	if (this->soap_out(soap, tag?tag:"ns1:ArrayOfDiscountAppliableItemInfoEntity", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *ns1__ArrayOfDiscountAppliableItemInfoEntity::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get_ns1__ArrayOfDiscountAppliableItemInfoEntity(soap, this, tag, type);
}

SOAP_FMAC3 ns1__ArrayOfDiscountAppliableItemInfoEntity * SOAP_FMAC4 soap_get_ns1__ArrayOfDiscountAppliableItemInfoEntity(struct soap *soap, ns1__ArrayOfDiscountAppliableItemInfoEntity *p, const char *tag, const char *type)
{
	if ((p = soap_in_ns1__ArrayOfDiscountAppliableItemInfoEntity(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 ns1__ArrayOfDiscountAppliableItemInfoEntity * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfDiscountAppliableItemInfoEntity(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_ns1__ArrayOfDiscountAppliableItemInfoEntity(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(ns1__ArrayOfDiscountAppliableItemInfoEntity);
		if (size)
			*size = sizeof(ns1__ArrayOfDiscountAppliableItemInfoEntity);
		((ns1__ArrayOfDiscountAppliableItemInfoEntity*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(ns1__ArrayOfDiscountAppliableItemInfoEntity, n);
		if (size)
			*size = n * sizeof(ns1__ArrayOfDiscountAppliableItemInfoEntity);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((ns1__ArrayOfDiscountAppliableItemInfoEntity*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (ns1__ArrayOfDiscountAppliableItemInfoEntity*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ArrayOfDiscountAppliableItemInfoEntity(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying ns1__ArrayOfDiscountAppliableItemInfoEntity %p -> %p\n", q, p));
	*(ns1__ArrayOfDiscountAppliableItemInfoEntity*)p = *(ns1__ArrayOfDiscountAppliableItemInfoEntity*)q;
}

void ns1__CouponBoxTargetItem::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->ns1__CouponBoxTargetItem::ExtensionData = NULL;
	this->ns1__CouponBoxTargetItem::ItemCode = NULL;
	this->ns1__CouponBoxTargetItem::ItemName = NULL;
	soap_default_int(soap, &this->ns1__CouponBoxTargetItem::ItemQuantity);
	soap_default_short(soap, &this->ns1__CouponBoxTargetItem::ItemUseDuration);
	/* transient soap skipped */
}

void ns1__CouponBoxTargetItem::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ExtensionDataObject(soap, &this->ns1__CouponBoxTargetItem::ExtensionData);
	soap_serialize_PointerTostd__string(soap, &this->ns1__CouponBoxTargetItem::ItemCode);
	soap_serialize_PointerTostd__string(soap, &this->ns1__CouponBoxTargetItem::ItemName);
	/* transient soap skipped */
#endif
}

int ns1__CouponBoxTargetItem::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out_ns1__CouponBoxTargetItem(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__CouponBoxTargetItem(struct soap *soap, const char *tag, int id, const ns1__CouponBoxTargetItem *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_ns1__CouponBoxTargetItem), type))
		return soap->error;
	if (soap_out_PointerTons1__ExtensionDataObject(soap, "ns1:ExtensionData", -1, &(a->ns1__CouponBoxTargetItem::ExtensionData), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ItemCode", -1, &(a->ns1__CouponBoxTargetItem::ItemCode), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ItemName", -1, &(a->ns1__CouponBoxTargetItem::ItemName), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:ItemQuantity", -1, &(a->ns1__CouponBoxTargetItem::ItemQuantity), ""))
		return soap->error;
	if (soap_out_short(soap, "ns1:ItemUseDuration", -1, &(a->ns1__CouponBoxTargetItem::ItemUseDuration), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *ns1__CouponBoxTargetItem::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in_ns1__CouponBoxTargetItem(soap, tag, this, type);
}

SOAP_FMAC3 ns1__CouponBoxTargetItem * SOAP_FMAC4 soap_in_ns1__CouponBoxTargetItem(struct soap *soap, const char *tag, ns1__CouponBoxTargetItem *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (ns1__CouponBoxTargetItem *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE_ns1__CouponBoxTargetItem, sizeof(ns1__CouponBoxTargetItem), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE_ns1__CouponBoxTargetItem)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (ns1__CouponBoxTargetItem *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_ExtensionData1 = 1;
	size_t soap_flag_ItemCode1 = 1;
	size_t soap_flag_ItemName1 = 1;
	size_t soap_flag_ItemQuantity1 = 1;
	size_t soap_flag_ItemUseDuration1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ExtensionData1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ExtensionDataObject(soap, "ns1:ExtensionData", &(a->ns1__CouponBoxTargetItem::ExtensionData), "ns1:ExtensionDataObject"))
				{	soap_flag_ExtensionData1--;
					continue;
				}
			if (soap_flag_ItemCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ItemCode", &(a->ns1__CouponBoxTargetItem::ItemCode), "xsd:string"))
				{	soap_flag_ItemCode1--;
					continue;
				}
			if (soap_flag_ItemName1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ItemName", &(a->ns1__CouponBoxTargetItem::ItemName), "xsd:string"))
				{	soap_flag_ItemName1--;
					continue;
				}
			if (soap_flag_ItemQuantity1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:ItemQuantity", &(a->ns1__CouponBoxTargetItem::ItemQuantity), "xsd:int"))
				{	soap_flag_ItemQuantity1--;
					continue;
				}
			if (soap_flag_ItemUseDuration1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_short(soap, "ns1:ItemUseDuration", &(a->ns1__CouponBoxTargetItem::ItemUseDuration), "xsd:short"))
				{	soap_flag_ItemUseDuration1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (ns1__CouponBoxTargetItem *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_ns1__CouponBoxTargetItem, 0, sizeof(ns1__CouponBoxTargetItem), 0, soap_copy_ns1__CouponBoxTargetItem);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_ItemQuantity1 > 0 || soap_flag_ItemUseDuration1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int ns1__CouponBoxTargetItem::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE_ns1__CouponBoxTargetItem);
	if (this->soap_out(soap, tag?tag:"ns1:CouponBoxTargetItem", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *ns1__CouponBoxTargetItem::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get_ns1__CouponBoxTargetItem(soap, this, tag, type);
}

SOAP_FMAC3 ns1__CouponBoxTargetItem * SOAP_FMAC4 soap_get_ns1__CouponBoxTargetItem(struct soap *soap, ns1__CouponBoxTargetItem *p, const char *tag, const char *type)
{
	if ((p = soap_in_ns1__CouponBoxTargetItem(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 ns1__CouponBoxTargetItem * SOAP_FMAC2 soap_instantiate_ns1__CouponBoxTargetItem(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_ns1__CouponBoxTargetItem(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_ns1__CouponBoxTargetItem, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(ns1__CouponBoxTargetItem);
		if (size)
			*size = sizeof(ns1__CouponBoxTargetItem);
		((ns1__CouponBoxTargetItem*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(ns1__CouponBoxTargetItem, n);
		if (size)
			*size = n * sizeof(ns1__CouponBoxTargetItem);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((ns1__CouponBoxTargetItem*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (ns1__CouponBoxTargetItem*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__CouponBoxTargetItem(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying ns1__CouponBoxTargetItem %p -> %p\n", q, p));
	*(ns1__CouponBoxTargetItem*)p = *(ns1__CouponBoxTargetItem*)q;
}

void ns1__ArrayOfCouponBoxTargetItem::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem(soap, &this->ns1__ArrayOfCouponBoxTargetItem::CouponBoxTargetItem);
	/* transient soap skipped */
}

void ns1__ArrayOfCouponBoxTargetItem::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem(soap, &this->ns1__ArrayOfCouponBoxTargetItem::CouponBoxTargetItem);
	/* transient soap skipped */
#endif
}

int ns1__ArrayOfCouponBoxTargetItem::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out_ns1__ArrayOfCouponBoxTargetItem(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfCouponBoxTargetItem(struct soap *soap, const char *tag, int id, const ns1__ArrayOfCouponBoxTargetItem *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem), type))
		return soap->error;
	if (soap_out_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem(soap, "ns1:CouponBoxTargetItem", -1, &(a->ns1__ArrayOfCouponBoxTargetItem::CouponBoxTargetItem), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *ns1__ArrayOfCouponBoxTargetItem::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in_ns1__ArrayOfCouponBoxTargetItem(soap, tag, this, type);
}

SOAP_FMAC3 ns1__ArrayOfCouponBoxTargetItem * SOAP_FMAC4 soap_in_ns1__ArrayOfCouponBoxTargetItem(struct soap *soap, const char *tag, ns1__ArrayOfCouponBoxTargetItem *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (ns1__ArrayOfCouponBoxTargetItem *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem, sizeof(ns1__ArrayOfCouponBoxTargetItem), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (ns1__ArrayOfCouponBoxTargetItem *)a->soap_in(soap, tag, type);
		}
	}
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem(soap, "ns1:CouponBoxTargetItem", &(a->ns1__ArrayOfCouponBoxTargetItem::CouponBoxTargetItem), "ns1:CouponBoxTargetItem"))
					continue;
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (ns1__ArrayOfCouponBoxTargetItem *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem, 0, sizeof(ns1__ArrayOfCouponBoxTargetItem), 0, soap_copy_ns1__ArrayOfCouponBoxTargetItem);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int ns1__ArrayOfCouponBoxTargetItem::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem);
	if (this->soap_out(soap, tag?tag:"ns1:ArrayOfCouponBoxTargetItem", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *ns1__ArrayOfCouponBoxTargetItem::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get_ns1__ArrayOfCouponBoxTargetItem(soap, this, tag, type);
}

SOAP_FMAC3 ns1__ArrayOfCouponBoxTargetItem * SOAP_FMAC4 soap_get_ns1__ArrayOfCouponBoxTargetItem(struct soap *soap, ns1__ArrayOfCouponBoxTargetItem *p, const char *tag, const char *type)
{
	if ((p = soap_in_ns1__ArrayOfCouponBoxTargetItem(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 ns1__ArrayOfCouponBoxTargetItem * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfCouponBoxTargetItem(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_ns1__ArrayOfCouponBoxTargetItem(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(ns1__ArrayOfCouponBoxTargetItem);
		if (size)
			*size = sizeof(ns1__ArrayOfCouponBoxTargetItem);
		((ns1__ArrayOfCouponBoxTargetItem*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(ns1__ArrayOfCouponBoxTargetItem, n);
		if (size)
			*size = n * sizeof(ns1__ArrayOfCouponBoxTargetItem);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((ns1__ArrayOfCouponBoxTargetItem*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (ns1__ArrayOfCouponBoxTargetItem*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ArrayOfCouponBoxTargetItem(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying ns1__ArrayOfCouponBoxTargetItem %p -> %p\n", q, p));
	*(ns1__ArrayOfCouponBoxTargetItem*)p = *(ns1__ArrayOfCouponBoxTargetItem*)q;
}

void ns1__CouponBoxItem::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->ns1__CouponBoxItem::ExtensionData = NULL;
	this->ns1__CouponBoxItem::ItemCode = NULL;
	soap_default_int(soap, &this->ns1__CouponBoxItem::ItemPrice);
	/* transient soap skipped */
}

void ns1__CouponBoxItem::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ExtensionDataObject(soap, &this->ns1__CouponBoxItem::ExtensionData);
	soap_serialize_PointerTostd__string(soap, &this->ns1__CouponBoxItem::ItemCode);
	/* transient soap skipped */
#endif
}

int ns1__CouponBoxItem::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out_ns1__CouponBoxItem(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__CouponBoxItem(struct soap *soap, const char *tag, int id, const ns1__CouponBoxItem *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_ns1__CouponBoxItem), type))
		return soap->error;
	if (soap_out_PointerTons1__ExtensionDataObject(soap, "ns1:ExtensionData", -1, &(a->ns1__CouponBoxItem::ExtensionData), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ItemCode", -1, &(a->ns1__CouponBoxItem::ItemCode), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:ItemPrice", -1, &(a->ns1__CouponBoxItem::ItemPrice), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *ns1__CouponBoxItem::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in_ns1__CouponBoxItem(soap, tag, this, type);
}

SOAP_FMAC3 ns1__CouponBoxItem * SOAP_FMAC4 soap_in_ns1__CouponBoxItem(struct soap *soap, const char *tag, ns1__CouponBoxItem *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (ns1__CouponBoxItem *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE_ns1__CouponBoxItem, sizeof(ns1__CouponBoxItem), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE_ns1__CouponBoxItem)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (ns1__CouponBoxItem *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_ExtensionData1 = 1;
	size_t soap_flag_ItemCode1 = 1;
	size_t soap_flag_ItemPrice1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ExtensionData1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ExtensionDataObject(soap, "ns1:ExtensionData", &(a->ns1__CouponBoxItem::ExtensionData), "ns1:ExtensionDataObject"))
				{	soap_flag_ExtensionData1--;
					continue;
				}
			if (soap_flag_ItemCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ItemCode", &(a->ns1__CouponBoxItem::ItemCode), "xsd:string"))
				{	soap_flag_ItemCode1--;
					continue;
				}
			if (soap_flag_ItemPrice1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:ItemPrice", &(a->ns1__CouponBoxItem::ItemPrice), "xsd:int"))
				{	soap_flag_ItemPrice1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (ns1__CouponBoxItem *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_ns1__CouponBoxItem, 0, sizeof(ns1__CouponBoxItem), 0, soap_copy_ns1__CouponBoxItem);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_ItemPrice1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int ns1__CouponBoxItem::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE_ns1__CouponBoxItem);
	if (this->soap_out(soap, tag?tag:"ns1:CouponBoxItem", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *ns1__CouponBoxItem::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get_ns1__CouponBoxItem(soap, this, tag, type);
}

SOAP_FMAC3 ns1__CouponBoxItem * SOAP_FMAC4 soap_get_ns1__CouponBoxItem(struct soap *soap, ns1__CouponBoxItem *p, const char *tag, const char *type)
{
	if ((p = soap_in_ns1__CouponBoxItem(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 ns1__CouponBoxItem * SOAP_FMAC2 soap_instantiate_ns1__CouponBoxItem(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_ns1__CouponBoxItem(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_ns1__CouponBoxItem, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(ns1__CouponBoxItem);
		if (size)
			*size = sizeof(ns1__CouponBoxItem);
		((ns1__CouponBoxItem*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(ns1__CouponBoxItem, n);
		if (size)
			*size = n * sizeof(ns1__CouponBoxItem);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((ns1__CouponBoxItem*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (ns1__CouponBoxItem*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__CouponBoxItem(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying ns1__CouponBoxItem %p -> %p\n", q, p));
	*(ns1__CouponBoxItem*)p = *(ns1__CouponBoxItem*)q;
}

void ns1__ArrayOfCouponBoxItem::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_std__vectorTemplateOfPointerTons1__CouponBoxItem(soap, &this->ns1__ArrayOfCouponBoxItem::CouponBoxItem);
	/* transient soap skipped */
}

void ns1__ArrayOfCouponBoxItem::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_std__vectorTemplateOfPointerTons1__CouponBoxItem(soap, &this->ns1__ArrayOfCouponBoxItem::CouponBoxItem);
	/* transient soap skipped */
#endif
}

int ns1__ArrayOfCouponBoxItem::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out_ns1__ArrayOfCouponBoxItem(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfCouponBoxItem(struct soap *soap, const char *tag, int id, const ns1__ArrayOfCouponBoxItem *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_ns1__ArrayOfCouponBoxItem), type))
		return soap->error;
	if (soap_out_std__vectorTemplateOfPointerTons1__CouponBoxItem(soap, "ns1:CouponBoxItem", -1, &(a->ns1__ArrayOfCouponBoxItem::CouponBoxItem), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *ns1__ArrayOfCouponBoxItem::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in_ns1__ArrayOfCouponBoxItem(soap, tag, this, type);
}

SOAP_FMAC3 ns1__ArrayOfCouponBoxItem * SOAP_FMAC4 soap_in_ns1__ArrayOfCouponBoxItem(struct soap *soap, const char *tag, ns1__ArrayOfCouponBoxItem *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (ns1__ArrayOfCouponBoxItem *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE_ns1__ArrayOfCouponBoxItem, sizeof(ns1__ArrayOfCouponBoxItem), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE_ns1__ArrayOfCouponBoxItem)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (ns1__ArrayOfCouponBoxItem *)a->soap_in(soap, tag, type);
		}
	}
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_std__vectorTemplateOfPointerTons1__CouponBoxItem(soap, "ns1:CouponBoxItem", &(a->ns1__ArrayOfCouponBoxItem::CouponBoxItem), "ns1:CouponBoxItem"))
					continue;
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (ns1__ArrayOfCouponBoxItem *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_ns1__ArrayOfCouponBoxItem, 0, sizeof(ns1__ArrayOfCouponBoxItem), 0, soap_copy_ns1__ArrayOfCouponBoxItem);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int ns1__ArrayOfCouponBoxItem::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE_ns1__ArrayOfCouponBoxItem);
	if (this->soap_out(soap, tag?tag:"ns1:ArrayOfCouponBoxItem", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *ns1__ArrayOfCouponBoxItem::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get_ns1__ArrayOfCouponBoxItem(soap, this, tag, type);
}

SOAP_FMAC3 ns1__ArrayOfCouponBoxItem * SOAP_FMAC4 soap_get_ns1__ArrayOfCouponBoxItem(struct soap *soap, ns1__ArrayOfCouponBoxItem *p, const char *tag, const char *type)
{
	if ((p = soap_in_ns1__ArrayOfCouponBoxItem(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 ns1__ArrayOfCouponBoxItem * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfCouponBoxItem(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_ns1__ArrayOfCouponBoxItem(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_ns1__ArrayOfCouponBoxItem, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(ns1__ArrayOfCouponBoxItem);
		if (size)
			*size = sizeof(ns1__ArrayOfCouponBoxItem);
		((ns1__ArrayOfCouponBoxItem*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(ns1__ArrayOfCouponBoxItem, n);
		if (size)
			*size = n * sizeof(ns1__ArrayOfCouponBoxItem);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((ns1__ArrayOfCouponBoxItem*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (ns1__ArrayOfCouponBoxItem*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ArrayOfCouponBoxItem(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying ns1__ArrayOfCouponBoxItem %p -> %p\n", q, p));
	*(ns1__ArrayOfCouponBoxItem*)p = *(ns1__ArrayOfCouponBoxItem*)q;
}

void ns1__ExtensionDataObject::soap_default(struct soap *soap)
{
	this->soap = soap;
	/* transient soap skipped */
}

void ns1__ExtensionDataObject::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	/* transient soap skipped */
#endif
}

int ns1__ExtensionDataObject::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out_ns1__ExtensionDataObject(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ExtensionDataObject(struct soap *soap, const char *tag, int id, const ns1__ExtensionDataObject *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_ns1__ExtensionDataObject), type))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *ns1__ExtensionDataObject::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in_ns1__ExtensionDataObject(soap, tag, this, type);
}

SOAP_FMAC3 ns1__ExtensionDataObject * SOAP_FMAC4 soap_in_ns1__ExtensionDataObject(struct soap *soap, const char *tag, ns1__ExtensionDataObject *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (ns1__ExtensionDataObject *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE_ns1__ExtensionDataObject, sizeof(ns1__ExtensionDataObject), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE_ns1__ExtensionDataObject)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (ns1__ExtensionDataObject *)a->soap_in(soap, tag, type);
		}
	}
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (ns1__ExtensionDataObject *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_ns1__ExtensionDataObject, 0, sizeof(ns1__ExtensionDataObject), 0, soap_copy_ns1__ExtensionDataObject);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int ns1__ExtensionDataObject::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE_ns1__ExtensionDataObject);
	if (this->soap_out(soap, tag?tag:"ns1:ExtensionDataObject", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *ns1__ExtensionDataObject::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get_ns1__ExtensionDataObject(soap, this, tag, type);
}

SOAP_FMAC3 ns1__ExtensionDataObject * SOAP_FMAC4 soap_get_ns1__ExtensionDataObject(struct soap *soap, ns1__ExtensionDataObject *p, const char *tag, const char *type)
{
	if ((p = soap_in_ns1__ExtensionDataObject(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 ns1__ExtensionDataObject * SOAP_FMAC2 soap_instantiate_ns1__ExtensionDataObject(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_ns1__ExtensionDataObject(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_ns1__ExtensionDataObject, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(ns1__ExtensionDataObject);
		if (size)
			*size = sizeof(ns1__ExtensionDataObject);
		((ns1__ExtensionDataObject*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(ns1__ExtensionDataObject, n);
		if (size)
			*size = n * sizeof(ns1__ExtensionDataObject);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((ns1__ExtensionDataObject*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (ns1__ExtensionDataObject*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ExtensionDataObject(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying ns1__ExtensionDataObject %p -> %p\n", q, p));
	*(ns1__ExtensionDataObject*)p = *(ns1__ExtensionDataObject*)q;
}

void ns1__ClientCouponBox::soap_default(struct soap *soap)
{
	this->soap = soap;
	this->ns1__ClientCouponBox::ExtensionData = NULL;
	this->ns1__ClientCouponBox::ConstraintValue = NULL;
	this->ns1__ClientCouponBox::ContractDetailName = NULL;
	soap_default_int(soap, &this->ns1__ClientCouponBox::ContractDetailNo);
	this->ns1__ClientCouponBox::CouponBoxType = NULL;
	this->ns1__ClientCouponBox::CouponBoxTypeText = NULL;
	soap_default_int(soap, &this->ns1__ClientCouponBox::CouponCardNo);
	soap_default_short(soap, &this->ns1__ClientCouponBox::CouponCardStatus);
	this->ns1__ClientCouponBox::CouponCardStatusText = NULL;
	this->ns1__ClientCouponBox::DiscountValue = NULL;
	this->ns1__ClientCouponBox::ExpireDateTime = NULL;
	this->ns1__ClientCouponBox::ItemCode = NULL;
	soap_default_int(soap, &this->ns1__ClientCouponBox::LowerLimitPrice);
	this->ns1__ClientCouponBox::ObtainDateTime = NULL;
	soap_default_short(soap, &this->ns1__ClientCouponBox::ProductType);
	this->ns1__ClientCouponBox::ServiceCode = NULL;
	this->ns1__ClientCouponBox::ServiceCodeText = NULL;
	soap_default_int(soap, &this->ns1__ClientCouponBox::UpperLimitPrice);
	this->ns1__ClientCouponBox::UsedDateTime = NULL;
	this->ns1__ClientCouponBox::ValidDateRange = NULL;
	/* transient soap skipped */
}

void ns1__ClientCouponBox::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_PointerTons1__ExtensionDataObject(soap, &this->ns1__ClientCouponBox::ExtensionData);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ClientCouponBox::ConstraintValue);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ClientCouponBox::ContractDetailName);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ClientCouponBox::CouponBoxType);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ClientCouponBox::CouponBoxTypeText);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ClientCouponBox::CouponCardStatusText);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ClientCouponBox::DiscountValue);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ClientCouponBox::ExpireDateTime);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ClientCouponBox::ItemCode);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ClientCouponBox::ObtainDateTime);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ClientCouponBox::ServiceCode);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ClientCouponBox::ServiceCodeText);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ClientCouponBox::UsedDateTime);
	soap_serialize_PointerTostd__string(soap, &this->ns1__ClientCouponBox::ValidDateRange);
	/* transient soap skipped */
#endif
}

int ns1__ClientCouponBox::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out_ns1__ClientCouponBox(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ClientCouponBox(struct soap *soap, const char *tag, int id, const ns1__ClientCouponBox *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_ns1__ClientCouponBox), type))
		return soap->error;
	if (soap_out_PointerTons1__ExtensionDataObject(soap, "ns1:ExtensionData", -1, &(a->ns1__ClientCouponBox::ExtensionData), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ConstraintValue", -1, &(a->ns1__ClientCouponBox::ConstraintValue), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ContractDetailName", -1, &(a->ns1__ClientCouponBox::ContractDetailName), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:ContractDetailNo", -1, &(a->ns1__ClientCouponBox::ContractDetailNo), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:CouponBoxType", -1, &(a->ns1__ClientCouponBox::CouponBoxType), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:CouponBoxTypeText", -1, &(a->ns1__ClientCouponBox::CouponBoxTypeText), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:CouponCardNo", -1, &(a->ns1__ClientCouponBox::CouponCardNo), ""))
		return soap->error;
	if (soap_out_short(soap, "ns1:CouponCardStatus", -1, &(a->ns1__ClientCouponBox::CouponCardStatus), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:CouponCardStatusText", -1, &(a->ns1__ClientCouponBox::CouponCardStatusText), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:DiscountValue", -1, &(a->ns1__ClientCouponBox::DiscountValue), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ExpireDateTime", -1, &(a->ns1__ClientCouponBox::ExpireDateTime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ItemCode", -1, &(a->ns1__ClientCouponBox::ItemCode), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:LowerLimitPrice", -1, &(a->ns1__ClientCouponBox::LowerLimitPrice), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ObtainDateTime", -1, &(a->ns1__ClientCouponBox::ObtainDateTime), ""))
		return soap->error;
	if (soap_out_short(soap, "ns1:ProductType", -1, &(a->ns1__ClientCouponBox::ProductType), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ServiceCode", -1, &(a->ns1__ClientCouponBox::ServiceCode), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ServiceCodeText", -1, &(a->ns1__ClientCouponBox::ServiceCodeText), ""))
		return soap->error;
	if (soap_out_int(soap, "ns1:UpperLimitPrice", -1, &(a->ns1__ClientCouponBox::UpperLimitPrice), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:UsedDateTime", -1, &(a->ns1__ClientCouponBox::UsedDateTime), ""))
		return soap->error;
	if (soap_out_PointerTostd__string(soap, "ns1:ValidDateRange", -1, &(a->ns1__ClientCouponBox::ValidDateRange), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *ns1__ClientCouponBox::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in_ns1__ClientCouponBox(soap, tag, this, type);
}

SOAP_FMAC3 ns1__ClientCouponBox * SOAP_FMAC4 soap_in_ns1__ClientCouponBox(struct soap *soap, const char *tag, ns1__ClientCouponBox *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (ns1__ClientCouponBox *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE_ns1__ClientCouponBox, sizeof(ns1__ClientCouponBox), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE_ns1__ClientCouponBox)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (ns1__ClientCouponBox *)a->soap_in(soap, tag, type);
		}
	}
	size_t soap_flag_ExtensionData1 = 1;
	size_t soap_flag_ConstraintValue1 = 1;
	size_t soap_flag_ContractDetailName1 = 1;
	size_t soap_flag_ContractDetailNo1 = 1;
	size_t soap_flag_CouponBoxType1 = 1;
	size_t soap_flag_CouponBoxTypeText1 = 1;
	size_t soap_flag_CouponCardNo1 = 1;
	size_t soap_flag_CouponCardStatus1 = 1;
	size_t soap_flag_CouponCardStatusText1 = 1;
	size_t soap_flag_DiscountValue1 = 1;
	size_t soap_flag_ExpireDateTime1 = 1;
	size_t soap_flag_ItemCode1 = 1;
	size_t soap_flag_LowerLimitPrice1 = 1;
	size_t soap_flag_ObtainDateTime1 = 1;
	size_t soap_flag_ProductType1 = 1;
	size_t soap_flag_ServiceCode1 = 1;
	size_t soap_flag_ServiceCodeText1 = 1;
	size_t soap_flag_UpperLimitPrice1 = 1;
	size_t soap_flag_UsedDateTime1 = 1;
	size_t soap_flag_ValidDateRange1 = 1;
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ExtensionData1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTons1__ExtensionDataObject(soap, "ns1:ExtensionData", &(a->ns1__ClientCouponBox::ExtensionData), "ns1:ExtensionDataObject"))
				{	soap_flag_ExtensionData1--;
					continue;
				}
			if (soap_flag_ConstraintValue1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ConstraintValue", &(a->ns1__ClientCouponBox::ConstraintValue), "xsd:string"))
				{	soap_flag_ConstraintValue1--;
					continue;
				}
			if (soap_flag_ContractDetailName1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ContractDetailName", &(a->ns1__ClientCouponBox::ContractDetailName), "xsd:string"))
				{	soap_flag_ContractDetailName1--;
					continue;
				}
			if (soap_flag_ContractDetailNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:ContractDetailNo", &(a->ns1__ClientCouponBox::ContractDetailNo), "xsd:int"))
				{	soap_flag_ContractDetailNo1--;
					continue;
				}
			if (soap_flag_CouponBoxType1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:CouponBoxType", &(a->ns1__ClientCouponBox::CouponBoxType), "xsd:string"))
				{	soap_flag_CouponBoxType1--;
					continue;
				}
			if (soap_flag_CouponBoxTypeText1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:CouponBoxTypeText", &(a->ns1__ClientCouponBox::CouponBoxTypeText), "xsd:string"))
				{	soap_flag_CouponBoxTypeText1--;
					continue;
				}
			if (soap_flag_CouponCardNo1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:CouponCardNo", &(a->ns1__ClientCouponBox::CouponCardNo), "xsd:int"))
				{	soap_flag_CouponCardNo1--;
					continue;
				}
			if (soap_flag_CouponCardStatus1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_short(soap, "ns1:CouponCardStatus", &(a->ns1__ClientCouponBox::CouponCardStatus), "xsd:short"))
				{	soap_flag_CouponCardStatus1--;
					continue;
				}
			if (soap_flag_CouponCardStatusText1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:CouponCardStatusText", &(a->ns1__ClientCouponBox::CouponCardStatusText), "xsd:string"))
				{	soap_flag_CouponCardStatusText1--;
					continue;
				}
			if (soap_flag_DiscountValue1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:DiscountValue", &(a->ns1__ClientCouponBox::DiscountValue), "xsd:string"))
				{	soap_flag_DiscountValue1--;
					continue;
				}
			if (soap_flag_ExpireDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ExpireDateTime", &(a->ns1__ClientCouponBox::ExpireDateTime), "xsd:string"))
				{	soap_flag_ExpireDateTime1--;
					continue;
				}
			if (soap_flag_ItemCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ItemCode", &(a->ns1__ClientCouponBox::ItemCode), "xsd:string"))
				{	soap_flag_ItemCode1--;
					continue;
				}
			if (soap_flag_LowerLimitPrice1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:LowerLimitPrice", &(a->ns1__ClientCouponBox::LowerLimitPrice), "xsd:int"))
				{	soap_flag_LowerLimitPrice1--;
					continue;
				}
			if (soap_flag_ObtainDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ObtainDateTime", &(a->ns1__ClientCouponBox::ObtainDateTime), "xsd:string"))
				{	soap_flag_ObtainDateTime1--;
					continue;
				}
			if (soap_flag_ProductType1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_short(soap, "ns1:ProductType", &(a->ns1__ClientCouponBox::ProductType), "xsd:short"))
				{	soap_flag_ProductType1--;
					continue;
				}
			if (soap_flag_ServiceCode1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ServiceCode", &(a->ns1__ClientCouponBox::ServiceCode), "xsd:string"))
				{	soap_flag_ServiceCode1--;
					continue;
				}
			if (soap_flag_ServiceCodeText1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ServiceCodeText", &(a->ns1__ClientCouponBox::ServiceCodeText), "xsd:string"))
				{	soap_flag_ServiceCodeText1--;
					continue;
				}
			if (soap_flag_UpperLimitPrice1 && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_int(soap, "ns1:UpperLimitPrice", &(a->ns1__ClientCouponBox::UpperLimitPrice), "xsd:int"))
				{	soap_flag_UpperLimitPrice1--;
					continue;
				}
			if (soap_flag_UsedDateTime1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:UsedDateTime", &(a->ns1__ClientCouponBox::UsedDateTime), "xsd:string"))
				{	soap_flag_UsedDateTime1--;
					continue;
				}
			if (soap_flag_ValidDateRange1 && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_PointerTostd__string(soap, "ns1:ValidDateRange", &(a->ns1__ClientCouponBox::ValidDateRange), "xsd:string"))
				{	soap_flag_ValidDateRange1--;
					continue;
				}
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (ns1__ClientCouponBox *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_ns1__ClientCouponBox, 0, sizeof(ns1__ClientCouponBox), 0, soap_copy_ns1__ClientCouponBox);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	if ((soap->mode & SOAP_XML_STRICT) && (soap_flag_ContractDetailNo1 > 0 || soap_flag_CouponCardNo1 > 0 || soap_flag_CouponCardStatus1 > 0 || soap_flag_LowerLimitPrice1 > 0 || soap_flag_ProductType1 > 0 || soap_flag_UpperLimitPrice1 > 0))
	{	soap->error = SOAP_OCCURS;
		return NULL;
	}
	return a;
}

int ns1__ClientCouponBox::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE_ns1__ClientCouponBox);
	if (this->soap_out(soap, tag?tag:"ns1:ClientCouponBox", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *ns1__ClientCouponBox::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get_ns1__ClientCouponBox(soap, this, tag, type);
}

SOAP_FMAC3 ns1__ClientCouponBox * SOAP_FMAC4 soap_get_ns1__ClientCouponBox(struct soap *soap, ns1__ClientCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in_ns1__ClientCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 ns1__ClientCouponBox * SOAP_FMAC2 soap_instantiate_ns1__ClientCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_ns1__ClientCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_ns1__ClientCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(ns1__ClientCouponBox);
		if (size)
			*size = sizeof(ns1__ClientCouponBox);
		((ns1__ClientCouponBox*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(ns1__ClientCouponBox, n);
		if (size)
			*size = n * sizeof(ns1__ClientCouponBox);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((ns1__ClientCouponBox*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (ns1__ClientCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ClientCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying ns1__ClientCouponBox %p -> %p\n", q, p));
	*(ns1__ClientCouponBox*)p = *(ns1__ClientCouponBox*)q;
}

void ns1__ArrayOfClientCouponBox::soap_default(struct soap *soap)
{
	this->soap = soap;
	soap_default_std__vectorTemplateOfPointerTons1__ClientCouponBox(soap, &this->ns1__ArrayOfClientCouponBox::ClientCouponBox);
	/* transient soap skipped */
}

void ns1__ArrayOfClientCouponBox::soap_serialize(struct soap *soap) const
{
#ifndef WITH_NOIDREF
	(void)soap; /* appease -Wall -Werror */
	soap_serialize_std__vectorTemplateOfPointerTons1__ClientCouponBox(soap, &this->ns1__ArrayOfClientCouponBox::ClientCouponBox);
	/* transient soap skipped */
#endif
}

int ns1__ArrayOfClientCouponBox::soap_out(struct soap *soap, const char *tag, int id, const char *type) const
{
	return soap_out_ns1__ArrayOfClientCouponBox(soap, tag, id, this, type);
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfClientCouponBox(struct soap *soap, const char *tag, int id, const ns1__ArrayOfClientCouponBox *a, const char *type)
{
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_ns1__ArrayOfClientCouponBox), type))
		return soap->error;
	if (soap_out_std__vectorTemplateOfPointerTons1__ClientCouponBox(soap, "ns1:ClientCouponBox", -1, &(a->ns1__ArrayOfClientCouponBox::ClientCouponBox), ""))
		return soap->error;
	/* transient soap skipped */
	return soap_element_end_out(soap, tag);
}

void *ns1__ArrayOfClientCouponBox::soap_in(struct soap *soap, const char *tag, const char *type)
{	return soap_in_ns1__ArrayOfClientCouponBox(soap, tag, this, type);
}

SOAP_FMAC3 ns1__ArrayOfClientCouponBox * SOAP_FMAC4 soap_in_ns1__ArrayOfClientCouponBox(struct soap *soap, const char *tag, ns1__ArrayOfClientCouponBox *a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	if (soap_element_begin_in(soap, tag, 0, NULL))
		return NULL;
	a = (ns1__ArrayOfClientCouponBox *)soap_class_id_enter(soap, soap->id, a, SOAP_TYPE_ns1__ArrayOfClientCouponBox, sizeof(ns1__ArrayOfClientCouponBox), soap->type, soap->arrayType);
	if (!a)
		return NULL;
	if (soap->alloced)
	{	a->soap_default(soap);
		if (soap->clist->type != SOAP_TYPE_ns1__ArrayOfClientCouponBox)
		{	soap_revert(soap);
			*soap->id = '\0';
			return (ns1__ArrayOfClientCouponBox *)a->soap_in(soap, tag, type);
		}
	}
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_std__vectorTemplateOfPointerTons1__ClientCouponBox(soap, "ns1:ClientCouponBox", &(a->ns1__ArrayOfClientCouponBox::ClientCouponBox), "ns1:ClientCouponBox"))
					continue;
			/* transient soap skipped */
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (ns1__ArrayOfClientCouponBox *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_ns1__ArrayOfClientCouponBox, 0, sizeof(ns1__ArrayOfClientCouponBox), 0, soap_copy_ns1__ArrayOfClientCouponBox);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

int ns1__ArrayOfClientCouponBox::soap_put(struct soap *soap, const char *tag, const  char *type) const
{
	register int id = soap_embed(soap, (void*)this, NULL, 0, tag, SOAP_TYPE_ns1__ArrayOfClientCouponBox);
	if (this->soap_out(soap, tag?tag:"ns1:ArrayOfClientCouponBox", id, type))
		return soap->error;
	return soap_putindependent(soap);
}

void *ns1__ArrayOfClientCouponBox::soap_get(struct soap *soap, const char *tag, const char *type)
{
	return soap_get_ns1__ArrayOfClientCouponBox(soap, this, tag, type);
}

SOAP_FMAC3 ns1__ArrayOfClientCouponBox * SOAP_FMAC4 soap_get_ns1__ArrayOfClientCouponBox(struct soap *soap, ns1__ArrayOfClientCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in_ns1__ArrayOfClientCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 ns1__ArrayOfClientCouponBox * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfClientCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_ns1__ArrayOfClientCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_ns1__ArrayOfClientCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(ns1__ArrayOfClientCouponBox);
		if (size)
			*size = sizeof(ns1__ArrayOfClientCouponBox);
		((ns1__ArrayOfClientCouponBox*)cp->ptr)->soap = soap;
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(ns1__ArrayOfClientCouponBox, n);
		if (size)
			*size = n * sizeof(ns1__ArrayOfClientCouponBox);
		if (cp->ptr)
			for (int i = 0; i < n; i++)
				((ns1__ArrayOfClientCouponBox*)cp->ptr)[i].soap = soap;
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (ns1__ArrayOfClientCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ArrayOfClientCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying ns1__ArrayOfClientCouponBox %p -> %p\n", q, p));
	*(ns1__ArrayOfClientCouponBox*)p = *(ns1__ArrayOfClientCouponBox*)q;
}

#ifndef WITH_NOGLOBAL

SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_default__QName(soap, &a->faultcode);
	soap_default_string(soap, &a->faultstring);
	soap_default_string(soap, &a->faultactor);
	a->detail = NULL;
	a->SOAP_ENV__Code = NULL;
	a->SOAP_ENV__Reason = NULL;
	soap_default_string(soap, &a->SOAP_ENV__Node);
	soap_default_string(soap, &a->SOAP_ENV__Role);
	a->SOAP_ENV__Detail = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap *soap, const struct SOAP_ENV__Fault *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize__QName(soap, &a->faultcode);
	soap_serialize_string(soap, &a->faultstring);
	soap_serialize_string(soap, &a->faultactor);
	soap_serialize_PointerToSOAP_ENV__Detail(soap, &a->detail);
	soap_serialize_PointerToSOAP_ENV__Code(soap, &a->SOAP_ENV__Code);
	soap_serialize_PointerToSOAP_ENV__Reason(soap, &a->SOAP_ENV__Reason);
	soap_serialize_string(soap, &a->SOAP_ENV__Node);
	soap_serialize_string(soap, &a->SOAP_ENV__Role);
	soap_serialize_PointerToSOAP_ENV__Detail(soap, &a->SOAP_ENV__Detail);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap *soap, const char *tag, int id, const struct SOAP_ENV__Fault *a, const char *type)
{
	const char *soap_tmp_faultcode = soap_QName2s(soap, a->faultcode);
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_SOAP_ENV__Fault), type))
		return soap->error;
	if (soap_out__QName(soap, "faultcode", -1, (char*const*)&soap_tmp_faultcode, ""))
		return soap->error;
	if (soap_out_string(soap, "faultstring", -1, &a->faultstring, ""))
		return soap->error;
	if (soap_out_string(soap, "faultactor", -1, &a->faultactor, ""))
		return soap->error;
	if (soap_out_PointerToSOAP_ENV__Detail(soap, "detail", -1, &a->detail, ""))
		return soap->error;
	if (soap_out_PointerToSOAP_ENV__Code(soap, "SOAP-ENV:Code", -1, &a->SOAP_ENV__Code, ""))
		return soap->error;
	if (soap_out_PointerToSOAP_ENV__Reason(soap, "SOAP-ENV:Reason", -1, &a->SOAP_ENV__Reason, ""))
		return soap->error;
	if (soap_out_string(soap, "SOAP-ENV:Node", -1, &a->SOAP_ENV__Node, ""))
		return soap->error;
	if (soap_out_string(soap, "SOAP-ENV:Role", -1, &a->SOAP_ENV__Role, ""))
		return soap->error;
	if (soap_out_PointerToSOAP_ENV__Detail(soap, "SOAP-ENV:Detail", -1, &a->SOAP_ENV__Detail, ""))
		return soap->error;
	return soap_element_end_out(soap, tag);
}

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap *soap, const char *tag, struct SOAP_ENV__Fault *a, const char *type)
{
	size_t soap_flag_faultcode = 1;
	size_t soap_flag_faultstring = 1;
	size_t soap_flag_faultactor = 1;
	size_t soap_flag_detail = 1;
	size_t soap_flag_SOAP_ENV__Code = 1;
	size_t soap_flag_SOAP_ENV__Reason = 1;
	size_t soap_flag_SOAP_ENV__Node = 1;
	size_t soap_flag_SOAP_ENV__Role = 1;
	size_t soap_flag_SOAP_ENV__Detail = 1;
	if (soap_element_begin_in(soap, tag, 0, type))
		return NULL;
	a = (struct SOAP_ENV__Fault *)soap_id_enter(soap, soap->id, a, SOAP_TYPE_SOAP_ENV__Fault, sizeof(struct SOAP_ENV__Fault), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default_SOAP_ENV__Fault(soap, a);
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_faultcode && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in__QName(soap, "faultcode", &a->faultcode, ""))
				{	soap_flag_faultcode--;
					continue;
				}
			if (soap_flag_faultstring && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_string(soap, "faultstring", &a->faultstring, "xsd:string"))
				{	soap_flag_faultstring--;
					continue;
				}
			if (soap_flag_faultactor && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_string(soap, "faultactor", &a->faultactor, "xsd:string"))
				{	soap_flag_faultactor--;
					continue;
				}
			if (soap_flag_detail && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerToSOAP_ENV__Detail(soap, "detail", &a->detail, ""))
				{	soap_flag_detail--;
					continue;
				}
			if (soap_flag_SOAP_ENV__Code && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerToSOAP_ENV__Code(soap, "SOAP-ENV:Code", &a->SOAP_ENV__Code, ""))
				{	soap_flag_SOAP_ENV__Code--;
					continue;
				}
			if (soap_flag_SOAP_ENV__Reason && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerToSOAP_ENV__Reason(soap, "SOAP-ENV:Reason", &a->SOAP_ENV__Reason, ""))
				{	soap_flag_SOAP_ENV__Reason--;
					continue;
				}
			if (soap_flag_SOAP_ENV__Node && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_string(soap, "SOAP-ENV:Node", &a->SOAP_ENV__Node, "xsd:string"))
				{	soap_flag_SOAP_ENV__Node--;
					continue;
				}
			if (soap_flag_SOAP_ENV__Role && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_string(soap, "SOAP-ENV:Role", &a->SOAP_ENV__Role, "xsd:string"))
				{	soap_flag_SOAP_ENV__Role--;
					continue;
				}
			if (soap_flag_SOAP_ENV__Detail && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerToSOAP_ENV__Detail(soap, "SOAP-ENV:Detail", &a->SOAP_ENV__Detail, ""))
				{	soap_flag_SOAP_ENV__Detail--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (struct SOAP_ENV__Fault *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_SOAP_ENV__Fault, 0, sizeof(struct SOAP_ENV__Fault), 0, NULL);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap *soap, const struct SOAP_ENV__Fault *a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_SOAP_ENV__Fault);
	if (soap_out_SOAP_ENV__Fault(soap, tag?tag:"SOAP-ENV:Fault", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p, const char *tag, const char *type)
{
	if ((p = soap_in_SOAP_ENV__Fault(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_SOAP_ENV__Fault(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_SOAP_ENV__Fault, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct SOAP_ENV__Fault);
		if (size)
			*size = sizeof(struct SOAP_ENV__Fault);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct SOAP_ENV__Fault, n);
		if (size)
			*size = n * sizeof(struct SOAP_ENV__Fault);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct SOAP_ENV__Fault*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct SOAP_ENV__Fault %p -> %p\n", q, p));
	*(struct SOAP_ENV__Fault*)p = *(struct SOAP_ENV__Fault*)q;
}

#endif

#ifndef WITH_NOGLOBAL

SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_default_string(soap, &a->SOAP_ENV__Text);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap *soap, const struct SOAP_ENV__Reason *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_string(soap, &a->SOAP_ENV__Text);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap *soap, const char *tag, int id, const struct SOAP_ENV__Reason *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_SOAP_ENV__Reason), type))
		return soap->error;
	if (soap->lang)
		soap_set_attr(soap, "xml:lang", soap->lang, 1);
	if (soap_out_string(soap, "SOAP-ENV:Text", -1, &a->SOAP_ENV__Text, ""))
		return soap->error;
	return soap_element_end_out(soap, tag);
}

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap *soap, const char *tag, struct SOAP_ENV__Reason *a, const char *type)
{
	size_t soap_flag_SOAP_ENV__Text = 1;
	if (soap_element_begin_in(soap, tag, 0, type))
		return NULL;
	a = (struct SOAP_ENV__Reason *)soap_id_enter(soap, soap->id, a, SOAP_TYPE_SOAP_ENV__Reason, sizeof(struct SOAP_ENV__Reason), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default_SOAP_ENV__Reason(soap, a);
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SOAP_ENV__Text && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in_string(soap, "SOAP-ENV:Text", &a->SOAP_ENV__Text, "xsd:string"))
				{	soap_flag_SOAP_ENV__Text--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (struct SOAP_ENV__Reason *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_SOAP_ENV__Reason, 0, sizeof(struct SOAP_ENV__Reason), 0, NULL);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap *soap, const struct SOAP_ENV__Reason *a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_SOAP_ENV__Reason);
	if (soap_out_SOAP_ENV__Reason(soap, tag?tag:"SOAP-ENV:Reason", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p, const char *tag, const char *type)
{
	if ((p = soap_in_SOAP_ENV__Reason(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_SOAP_ENV__Reason(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_SOAP_ENV__Reason, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct SOAP_ENV__Reason);
		if (size)
			*size = sizeof(struct SOAP_ENV__Reason);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct SOAP_ENV__Reason, n);
		if (size)
			*size = n * sizeof(struct SOAP_ENV__Reason);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct SOAP_ENV__Reason*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct SOAP_ENV__Reason %p -> %p\n", q, p));
	*(struct SOAP_ENV__Reason*)p = *(struct SOAP_ENV__Reason*)q;
}

#endif

#ifndef WITH_NOGLOBAL

SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->__any = NULL;
	a->__type = 0;
	a->fault = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap *soap, const struct SOAP_ENV__Detail *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_markelement(soap, a->fault, a->__type);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap *soap, const char *tag, int id, const struct SOAP_ENV__Detail *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_SOAP_ENV__Detail), type))
		return soap->error;
	soap_outliteral(soap, "-any", &a->__any, NULL);
	if (soap_putelement(soap, a->fault, "fault", -1, a->__type))
		return soap->error;
	return soap_element_end_out(soap, tag);
}

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap *soap, const char *tag, struct SOAP_ENV__Detail *a, const char *type)
{
	size_t soap_flag___any = 1;
	size_t soap_flag_fault = 1;
	if (soap_element_begin_in(soap, tag, 0, type))
		return NULL;
	a = (struct SOAP_ENV__Detail *)soap_id_enter(soap, soap->id, a, SOAP_TYPE_SOAP_ENV__Detail, sizeof(struct SOAP_ENV__Detail), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default_SOAP_ENV__Detail(soap, a);
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_fault && soap->error == SOAP_TAG_MISMATCH)
				if ((a->fault = soap_getelement(soap, &a->__type)))
				{	soap_flag_fault = 0;
					continue;
				}
			if (soap_flag___any && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_inliteral(soap, "-any", &a->__any))
				{	soap_flag___any--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (struct SOAP_ENV__Detail *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_SOAP_ENV__Detail, 0, sizeof(struct SOAP_ENV__Detail), 0, NULL);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap *soap, const struct SOAP_ENV__Detail *a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_SOAP_ENV__Detail);
	if (soap_out_SOAP_ENV__Detail(soap, tag?tag:"SOAP-ENV:Detail", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p, const char *tag, const char *type)
{
	if ((p = soap_in_SOAP_ENV__Detail(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_SOAP_ENV__Detail(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_SOAP_ENV__Detail, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct SOAP_ENV__Detail);
		if (size)
			*size = sizeof(struct SOAP_ENV__Detail);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct SOAP_ENV__Detail, n);
		if (size)
			*size = n * sizeof(struct SOAP_ENV__Detail);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct SOAP_ENV__Detail*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct SOAP_ENV__Detail %p -> %p\n", q, p));
	*(struct SOAP_ENV__Detail*)p = *(struct SOAP_ENV__Detail*)q;
}

#endif

#ifndef WITH_NOGLOBAL

SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_default__QName(soap, &a->SOAP_ENV__Value);
	a->SOAP_ENV__Subcode = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap *soap, const struct SOAP_ENV__Code *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize__QName(soap, &a->SOAP_ENV__Value);
	soap_serialize_PointerToSOAP_ENV__Code(soap, &a->SOAP_ENV__Subcode);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap *soap, const char *tag, int id, const struct SOAP_ENV__Code *a, const char *type)
{
	const char *soap_tmp_SOAP_ENV__Value = soap_QName2s(soap, a->SOAP_ENV__Value);
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_SOAP_ENV__Code), type))
		return soap->error;
	if (soap_out__QName(soap, "SOAP-ENV:Value", -1, (char*const*)&soap_tmp_SOAP_ENV__Value, ""))
		return soap->error;
	if (soap_out_PointerToSOAP_ENV__Code(soap, "SOAP-ENV:Subcode", -1, &a->SOAP_ENV__Subcode, ""))
		return soap->error;
	return soap_element_end_out(soap, tag);
}

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap *soap, const char *tag, struct SOAP_ENV__Code *a, const char *type)
{
	size_t soap_flag_SOAP_ENV__Value = 1;
	size_t soap_flag_SOAP_ENV__Subcode = 1;
	if (soap_element_begin_in(soap, tag, 0, type))
		return NULL;
	a = (struct SOAP_ENV__Code *)soap_id_enter(soap, soap->id, a, SOAP_TYPE_SOAP_ENV__Code, sizeof(struct SOAP_ENV__Code), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default_SOAP_ENV__Code(soap, a);
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_SOAP_ENV__Value && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
				if (soap_in__QName(soap, "SOAP-ENV:Value", &a->SOAP_ENV__Value, ""))
				{	soap_flag_SOAP_ENV__Value--;
					continue;
				}
			if (soap_flag_SOAP_ENV__Subcode && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerToSOAP_ENV__Code(soap, "SOAP-ENV:Subcode", &a->SOAP_ENV__Subcode, ""))
				{	soap_flag_SOAP_ENV__Subcode--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (struct SOAP_ENV__Code *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_SOAP_ENV__Code, 0, sizeof(struct SOAP_ENV__Code), 0, NULL);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap *soap, const struct SOAP_ENV__Code *a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_SOAP_ENV__Code);
	if (soap_out_SOAP_ENV__Code(soap, tag?tag:"SOAP-ENV:Code", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p, const char *tag, const char *type)
{
	if ((p = soap_in_SOAP_ENV__Code(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_SOAP_ENV__Code(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_SOAP_ENV__Code, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct SOAP_ENV__Code);
		if (size)
			*size = sizeof(struct SOAP_ENV__Code);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct SOAP_ENV__Code, n);
		if (size)
			*size = n * sizeof(struct SOAP_ENV__Code);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct SOAP_ENV__Code*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct SOAP_ENV__Code %p -> %p\n", q, p));
	*(struct SOAP_ENV__Code*)p = *(struct SOAP_ENV__Code*)q;
}

#endif

#ifndef WITH_NOGLOBAL

SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap *soap, const struct SOAP_ENV__Header *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap *soap, const char *tag, int id, const struct SOAP_ENV__Header *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_element_begin_out(soap, tag, soap_embedded_id(soap, id, a, SOAP_TYPE_SOAP_ENV__Header), type))
		return soap->error;
	return soap_element_end_out(soap, tag);
}

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap *soap, const char *tag, struct SOAP_ENV__Header *a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 0, type))
		return NULL;
	a = (struct SOAP_ENV__Header *)soap_id_enter(soap, soap->id, a, SOAP_TYPE_SOAP_ENV__Header, sizeof(struct SOAP_ENV__Header), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default_SOAP_ENV__Header(soap, a);
	if (soap->body && !*soap->href)
	{
		for (;;)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap->error == SOAP_TAG_MISMATCH)
				soap->error = soap_ignore_element(soap);
			if (soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
		if (soap_element_end_in(soap, tag))
			return NULL;
	}
	else
	{	a = (struct SOAP_ENV__Header *)soap_id_forward(soap, soap->href, (void*)a, 0, SOAP_TYPE_SOAP_ENV__Header, 0, sizeof(struct SOAP_ENV__Header), 0, NULL);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap *soap, const struct SOAP_ENV__Header *a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_SOAP_ENV__Header);
	if (soap_out_SOAP_ENV__Header(soap, tag?tag:"SOAP-ENV:Header", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p, const char *tag, const char *type)
{
	if ((p = soap_in_SOAP_ENV__Header(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_SOAP_ENV__Header(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_SOAP_ENV__Header, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct SOAP_ENV__Header);
		if (size)
			*size = sizeof(struct SOAP_ENV__Header);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct SOAP_ENV__Header, n);
		if (size)
			*size = n * sizeof(struct SOAP_ENV__Header);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct SOAP_ENV__Header*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct SOAP_ENV__Header %p -> %p\n", q, p));
	*(struct SOAP_ENV__Header*)p = *(struct SOAP_ENV__Header*)q;
}

#endif

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__GetGameAccessToken_(struct soap *soap, struct __ns2__GetGameAccessToken_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns2__GetGameAccessToken = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__GetGameAccessToken_(struct soap *soap, const struct __ns2__GetGameAccessToken_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns2__GetGameAccessToken(soap, &a->ns2__GetGameAccessToken);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__GetGameAccessToken_(struct soap *soap, const char *tag, int id, const struct __ns2__GetGameAccessToken_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns2__GetGameAccessToken(soap, "ns2:GetGameAccessToken", -1, &a->ns2__GetGameAccessToken, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns2__GetGameAccessToken_ * SOAP_FMAC4 soap_in___ns2__GetGameAccessToken_(struct soap *soap, const char *tag, struct __ns2__GetGameAccessToken_ *a, const char *type)
{
	size_t soap_flag_ns2__GetGameAccessToken = 1;
	short soap_flag;
	a = (struct __ns2__GetGameAccessToken_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns2__GetGameAccessToken_, sizeof(struct __ns2__GetGameAccessToken_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns2__GetGameAccessToken_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns2__GetGameAccessToken && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns2__GetGameAccessToken(soap, "ns2:GetGameAccessToken", &a->ns2__GetGameAccessToken, ""))
				{	soap_flag_ns2__GetGameAccessToken--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__GetGameAccessToken_(struct soap *soap, const struct __ns2__GetGameAccessToken_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns2__GetGameAccessToken_(soap, tag?tag:"-ns2:GetGameAccessToken", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns2__GetGameAccessToken_ * SOAP_FMAC4 soap_get___ns2__GetGameAccessToken_(struct soap *soap, struct __ns2__GetGameAccessToken_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns2__GetGameAccessToken_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns2__GetGameAccessToken_ * SOAP_FMAC2 soap_instantiate___ns2__GetGameAccessToken_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns2__GetGameAccessToken_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns2__GetGameAccessToken_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns2__GetGameAccessToken_);
		if (size)
			*size = sizeof(struct __ns2__GetGameAccessToken_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns2__GetGameAccessToken_, n);
		if (size)
			*size = n * sizeof(struct __ns2__GetGameAccessToken_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns2__GetGameAccessToken_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__GetGameAccessToken_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns2__GetGameAccessToken_ %p -> %p\n", q, p));
	*(struct __ns2__GetGameAccessToken_*)p = *(struct __ns2__GetGameAccessToken_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__GetGameAccessToken(struct soap *soap, struct __ns2__GetGameAccessToken *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns2__GetGameAccessToken = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__GetGameAccessToken(struct soap *soap, const struct __ns2__GetGameAccessToken *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns2__GetGameAccessToken(soap, &a->ns2__GetGameAccessToken);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__GetGameAccessToken(struct soap *soap, const char *tag, int id, const struct __ns2__GetGameAccessToken *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns2__GetGameAccessToken(soap, "ns2:GetGameAccessToken", -1, &a->ns2__GetGameAccessToken, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns2__GetGameAccessToken * SOAP_FMAC4 soap_in___ns2__GetGameAccessToken(struct soap *soap, const char *tag, struct __ns2__GetGameAccessToken *a, const char *type)
{
	size_t soap_flag_ns2__GetGameAccessToken = 1;
	short soap_flag;
	a = (struct __ns2__GetGameAccessToken *)soap_id_enter(soap, "", a, SOAP_TYPE___ns2__GetGameAccessToken, sizeof(struct __ns2__GetGameAccessToken), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns2__GetGameAccessToken(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns2__GetGameAccessToken && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns2__GetGameAccessToken(soap, "ns2:GetGameAccessToken", &a->ns2__GetGameAccessToken, ""))
				{	soap_flag_ns2__GetGameAccessToken--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__GetGameAccessToken(struct soap *soap, const struct __ns2__GetGameAccessToken *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns2__GetGameAccessToken(soap, tag?tag:"-ns2:GetGameAccessToken", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns2__GetGameAccessToken * SOAP_FMAC4 soap_get___ns2__GetGameAccessToken(struct soap *soap, struct __ns2__GetGameAccessToken *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns2__GetGameAccessToken(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns2__GetGameAccessToken * SOAP_FMAC2 soap_instantiate___ns2__GetGameAccessToken(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns2__GetGameAccessToken(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns2__GetGameAccessToken, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns2__GetGameAccessToken);
		if (size)
			*size = sizeof(struct __ns2__GetGameAccessToken);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns2__GetGameAccessToken, n);
		if (size)
			*size = n * sizeof(struct __ns2__GetGameAccessToken);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns2__GetGameAccessToken*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__GetGameAccessToken(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns2__GetGameAccessToken %p -> %p\n", q, p));
	*(struct __ns2__GetGameAccessToken*)p = *(struct __ns2__GetGameAccessToken*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__WakeUp_(struct soap *soap, struct __ns1__WakeUp_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__WakeUp = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__WakeUp_(struct soap *soap, const struct __ns1__WakeUp_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__WakeUp(soap, &a->ns1__WakeUp);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__WakeUp_(struct soap *soap, const char *tag, int id, const struct __ns1__WakeUp_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__WakeUp(soap, "ns1:WakeUp", -1, &a->ns1__WakeUp, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__WakeUp_ * SOAP_FMAC4 soap_in___ns1__WakeUp_(struct soap *soap, const char *tag, struct __ns1__WakeUp_ *a, const char *type)
{
	size_t soap_flag_ns1__WakeUp = 1;
	short soap_flag;
	a = (struct __ns1__WakeUp_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__WakeUp_, sizeof(struct __ns1__WakeUp_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__WakeUp_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__WakeUp && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__WakeUp(soap, "ns1:WakeUp", &a->ns1__WakeUp, ""))
				{	soap_flag_ns1__WakeUp--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__WakeUp_(struct soap *soap, const struct __ns1__WakeUp_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__WakeUp_(soap, tag?tag:"-ns1:WakeUp", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__WakeUp_ * SOAP_FMAC4 soap_get___ns1__WakeUp_(struct soap *soap, struct __ns1__WakeUp_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__WakeUp_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__WakeUp_ * SOAP_FMAC2 soap_instantiate___ns1__WakeUp_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__WakeUp_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__WakeUp_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__WakeUp_);
		if (size)
			*size = sizeof(struct __ns1__WakeUp_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__WakeUp_, n);
		if (size)
			*size = n * sizeof(struct __ns1__WakeUp_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__WakeUp_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__WakeUp_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__WakeUp_ %p -> %p\n", q, p));
	*(struct __ns1__WakeUp_*)p = *(struct __ns1__WakeUp_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetUseRestrictInfo_(struct soap *soap, struct __ns1__GetUseRestrictInfo_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__GetUseRestrictInfo = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetUseRestrictInfo_(struct soap *soap, const struct __ns1__GetUseRestrictInfo_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__GetUseRestrictInfo(soap, &a->ns1__GetUseRestrictInfo);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetUseRestrictInfo_(struct soap *soap, const char *tag, int id, const struct __ns1__GetUseRestrictInfo_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__GetUseRestrictInfo(soap, "ns1:GetUseRestrictInfo", -1, &a->ns1__GetUseRestrictInfo, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetUseRestrictInfo_ * SOAP_FMAC4 soap_in___ns1__GetUseRestrictInfo_(struct soap *soap, const char *tag, struct __ns1__GetUseRestrictInfo_ *a, const char *type)
{
	size_t soap_flag_ns1__GetUseRestrictInfo = 1;
	short soap_flag;
	a = (struct __ns1__GetUseRestrictInfo_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__GetUseRestrictInfo_, sizeof(struct __ns1__GetUseRestrictInfo_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__GetUseRestrictInfo_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__GetUseRestrictInfo && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__GetUseRestrictInfo(soap, "ns1:GetUseRestrictInfo", &a->ns1__GetUseRestrictInfo, ""))
				{	soap_flag_ns1__GetUseRestrictInfo--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetUseRestrictInfo_(struct soap *soap, const struct __ns1__GetUseRestrictInfo_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__GetUseRestrictInfo_(soap, tag?tag:"-ns1:GetUseRestrictInfo", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetUseRestrictInfo_ * SOAP_FMAC4 soap_get___ns1__GetUseRestrictInfo_(struct soap *soap, struct __ns1__GetUseRestrictInfo_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__GetUseRestrictInfo_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__GetUseRestrictInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetUseRestrictInfo_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__GetUseRestrictInfo_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__GetUseRestrictInfo_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__GetUseRestrictInfo_);
		if (size)
			*size = sizeof(struct __ns1__GetUseRestrictInfo_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__GetUseRestrictInfo_, n);
		if (size)
			*size = n * sizeof(struct __ns1__GetUseRestrictInfo_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__GetUseRestrictInfo_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetUseRestrictInfo_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__GetUseRestrictInfo_ %p -> %p\n", q, p));
	*(struct __ns1__GetUseRestrictInfo_*)p = *(struct __ns1__GetUseRestrictInfo_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__BulkCheckExtend_(struct soap *soap, struct __ns1__BulkCheckExtend_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__BulkCheckExtend = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__BulkCheckExtend_(struct soap *soap, const struct __ns1__BulkCheckExtend_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__BulkCheckExtend(soap, &a->ns1__BulkCheckExtend);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__BulkCheckExtend_(struct soap *soap, const char *tag, int id, const struct __ns1__BulkCheckExtend_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__BulkCheckExtend(soap, "ns1:BulkCheckExtend", -1, &a->ns1__BulkCheckExtend, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__BulkCheckExtend_ * SOAP_FMAC4 soap_in___ns1__BulkCheckExtend_(struct soap *soap, const char *tag, struct __ns1__BulkCheckExtend_ *a, const char *type)
{
	size_t soap_flag_ns1__BulkCheckExtend = 1;
	short soap_flag;
	a = (struct __ns1__BulkCheckExtend_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__BulkCheckExtend_, sizeof(struct __ns1__BulkCheckExtend_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__BulkCheckExtend_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__BulkCheckExtend && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__BulkCheckExtend(soap, "ns1:BulkCheckExtend", &a->ns1__BulkCheckExtend, ""))
				{	soap_flag_ns1__BulkCheckExtend--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__BulkCheckExtend_(struct soap *soap, const struct __ns1__BulkCheckExtend_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__BulkCheckExtend_(soap, tag?tag:"-ns1:BulkCheckExtend", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__BulkCheckExtend_ * SOAP_FMAC4 soap_get___ns1__BulkCheckExtend_(struct soap *soap, struct __ns1__BulkCheckExtend_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__BulkCheckExtend_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__BulkCheckExtend_ * SOAP_FMAC2 soap_instantiate___ns1__BulkCheckExtend_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__BulkCheckExtend_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__BulkCheckExtend_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__BulkCheckExtend_);
		if (size)
			*size = sizeof(struct __ns1__BulkCheckExtend_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__BulkCheckExtend_, n);
		if (size)
			*size = n * sizeof(struct __ns1__BulkCheckExtend_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__BulkCheckExtend_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__BulkCheckExtend_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__BulkCheckExtend_ %p -> %p\n", q, p));
	*(struct __ns1__BulkCheckExtend_*)p = *(struct __ns1__BulkCheckExtend_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__BulkCheck_(struct soap *soap, struct __ns1__BulkCheck_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__BulkCheck = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__BulkCheck_(struct soap *soap, const struct __ns1__BulkCheck_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__BulkCheck(soap, &a->ns1__BulkCheck);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__BulkCheck_(struct soap *soap, const char *tag, int id, const struct __ns1__BulkCheck_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__BulkCheck(soap, "ns1:BulkCheck", -1, &a->ns1__BulkCheck, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__BulkCheck_ * SOAP_FMAC4 soap_in___ns1__BulkCheck_(struct soap *soap, const char *tag, struct __ns1__BulkCheck_ *a, const char *type)
{
	size_t soap_flag_ns1__BulkCheck = 1;
	short soap_flag;
	a = (struct __ns1__BulkCheck_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__BulkCheck_, sizeof(struct __ns1__BulkCheck_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__BulkCheck_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__BulkCheck && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__BulkCheck(soap, "ns1:BulkCheck", &a->ns1__BulkCheck, ""))
				{	soap_flag_ns1__BulkCheck--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__BulkCheck_(struct soap *soap, const struct __ns1__BulkCheck_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__BulkCheck_(soap, tag?tag:"-ns1:BulkCheck", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__BulkCheck_ * SOAP_FMAC4 soap_get___ns1__BulkCheck_(struct soap *soap, struct __ns1__BulkCheck_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__BulkCheck_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__BulkCheck_ * SOAP_FMAC2 soap_instantiate___ns1__BulkCheck_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__BulkCheck_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__BulkCheck_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__BulkCheck_);
		if (size)
			*size = sizeof(struct __ns1__BulkCheck_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__BulkCheck_, n);
		if (size)
			*size = n * sizeof(struct __ns1__BulkCheck_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__BulkCheck_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__BulkCheck_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__BulkCheck_ %p -> %p\n", q, p));
	*(struct __ns1__BulkCheck_*)p = *(struct __ns1__BulkCheck_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UseItemCouponOLD_(struct soap *soap, struct __ns1__UseItemCouponOLD_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__UseItemCouponOLD = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UseItemCouponOLD_(struct soap *soap, const struct __ns1__UseItemCouponOLD_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__UseItemCouponOLD(soap, &a->ns1__UseItemCouponOLD);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UseItemCouponOLD_(struct soap *soap, const char *tag, int id, const struct __ns1__UseItemCouponOLD_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__UseItemCouponOLD(soap, "ns1:UseItemCouponOLD", -1, &a->ns1__UseItemCouponOLD, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseItemCouponOLD_ * SOAP_FMAC4 soap_in___ns1__UseItemCouponOLD_(struct soap *soap, const char *tag, struct __ns1__UseItemCouponOLD_ *a, const char *type)
{
	size_t soap_flag_ns1__UseItemCouponOLD = 1;
	short soap_flag;
	a = (struct __ns1__UseItemCouponOLD_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__UseItemCouponOLD_, sizeof(struct __ns1__UseItemCouponOLD_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__UseItemCouponOLD_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__UseItemCouponOLD && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__UseItemCouponOLD(soap, "ns1:UseItemCouponOLD", &a->ns1__UseItemCouponOLD, ""))
				{	soap_flag_ns1__UseItemCouponOLD--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UseItemCouponOLD_(struct soap *soap, const struct __ns1__UseItemCouponOLD_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__UseItemCouponOLD_(soap, tag?tag:"-ns1:UseItemCouponOLD", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseItemCouponOLD_ * SOAP_FMAC4 soap_get___ns1__UseItemCouponOLD_(struct soap *soap, struct __ns1__UseItemCouponOLD_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__UseItemCouponOLD_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__UseItemCouponOLD_ * SOAP_FMAC2 soap_instantiate___ns1__UseItemCouponOLD_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__UseItemCouponOLD_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__UseItemCouponOLD_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__UseItemCouponOLD_);
		if (size)
			*size = sizeof(struct __ns1__UseItemCouponOLD_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__UseItemCouponOLD_, n);
		if (size)
			*size = n * sizeof(struct __ns1__UseItemCouponOLD_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__UseItemCouponOLD_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UseItemCouponOLD_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__UseItemCouponOLD_ %p -> %p\n", q, p));
	*(struct __ns1__UseItemCouponOLD_*)p = *(struct __ns1__UseItemCouponOLD_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckItemCouponOLD_(struct soap *soap, struct __ns1__CheckItemCouponOLD_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckItemCouponOLD = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckItemCouponOLD_(struct soap *soap, const struct __ns1__CheckItemCouponOLD_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckItemCouponOLD(soap, &a->ns1__CheckItemCouponOLD);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckItemCouponOLD_(struct soap *soap, const char *tag, int id, const struct __ns1__CheckItemCouponOLD_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckItemCouponOLD(soap, "ns1:CheckItemCouponOLD", -1, &a->ns1__CheckItemCouponOLD, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckItemCouponOLD_ * SOAP_FMAC4 soap_in___ns1__CheckItemCouponOLD_(struct soap *soap, const char *tag, struct __ns1__CheckItemCouponOLD_ *a, const char *type)
{
	size_t soap_flag_ns1__CheckItemCouponOLD = 1;
	short soap_flag;
	a = (struct __ns1__CheckItemCouponOLD_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckItemCouponOLD_, sizeof(struct __ns1__CheckItemCouponOLD_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckItemCouponOLD_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckItemCouponOLD && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckItemCouponOLD(soap, "ns1:CheckItemCouponOLD", &a->ns1__CheckItemCouponOLD, ""))
				{	soap_flag_ns1__CheckItemCouponOLD--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckItemCouponOLD_(struct soap *soap, const struct __ns1__CheckItemCouponOLD_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckItemCouponOLD_(soap, tag?tag:"-ns1:CheckItemCouponOLD", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckItemCouponOLD_ * SOAP_FMAC4 soap_get___ns1__CheckItemCouponOLD_(struct soap *soap, struct __ns1__CheckItemCouponOLD_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckItemCouponOLD_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckItemCouponOLD_ * SOAP_FMAC2 soap_instantiate___ns1__CheckItemCouponOLD_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckItemCouponOLD_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckItemCouponOLD_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckItemCouponOLD_);
		if (size)
			*size = sizeof(struct __ns1__CheckItemCouponOLD_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckItemCouponOLD_, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckItemCouponOLD_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckItemCouponOLD_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckItemCouponOLD_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckItemCouponOLD_ %p -> %p\n", q, p));
	*(struct __ns1__CheckItemCouponOLD_*)p = *(struct __ns1__CheckItemCouponOLD_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RollbackItemCoupon_(struct soap *soap, struct __ns1__RollbackItemCoupon_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__RollbackItemCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RollbackItemCoupon_(struct soap *soap, const struct __ns1__RollbackItemCoupon_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__RollbackItemCoupon(soap, &a->ns1__RollbackItemCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RollbackItemCoupon_(struct soap *soap, const char *tag, int id, const struct __ns1__RollbackItemCoupon_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__RollbackItemCoupon(soap, "ns1:RollbackItemCoupon", -1, &a->ns1__RollbackItemCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackItemCoupon_ * SOAP_FMAC4 soap_in___ns1__RollbackItemCoupon_(struct soap *soap, const char *tag, struct __ns1__RollbackItemCoupon_ *a, const char *type)
{
	size_t soap_flag_ns1__RollbackItemCoupon = 1;
	short soap_flag;
	a = (struct __ns1__RollbackItemCoupon_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__RollbackItemCoupon_, sizeof(struct __ns1__RollbackItemCoupon_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__RollbackItemCoupon_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__RollbackItemCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__RollbackItemCoupon(soap, "ns1:RollbackItemCoupon", &a->ns1__RollbackItemCoupon, ""))
				{	soap_flag_ns1__RollbackItemCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RollbackItemCoupon_(struct soap *soap, const struct __ns1__RollbackItemCoupon_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__RollbackItemCoupon_(soap, tag?tag:"-ns1:RollbackItemCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackItemCoupon_ * SOAP_FMAC4 soap_get___ns1__RollbackItemCoupon_(struct soap *soap, struct __ns1__RollbackItemCoupon_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__RollbackItemCoupon_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__RollbackItemCoupon_ * SOAP_FMAC2 soap_instantiate___ns1__RollbackItemCoupon_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__RollbackItemCoupon_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__RollbackItemCoupon_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__RollbackItemCoupon_);
		if (size)
			*size = sizeof(struct __ns1__RollbackItemCoupon_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__RollbackItemCoupon_, n);
		if (size)
			*size = n * sizeof(struct __ns1__RollbackItemCoupon_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__RollbackItemCoupon_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RollbackItemCoupon_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__RollbackItemCoupon_ %p -> %p\n", q, p));
	*(struct __ns1__RollbackItemCoupon_*)p = *(struct __ns1__RollbackItemCoupon_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UseItemCoupon_(struct soap *soap, struct __ns1__UseItemCoupon_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__UseItemCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UseItemCoupon_(struct soap *soap, const struct __ns1__UseItemCoupon_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__UseItemCoupon(soap, &a->ns1__UseItemCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UseItemCoupon_(struct soap *soap, const char *tag, int id, const struct __ns1__UseItemCoupon_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__UseItemCoupon(soap, "ns1:UseItemCoupon", -1, &a->ns1__UseItemCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseItemCoupon_ * SOAP_FMAC4 soap_in___ns1__UseItemCoupon_(struct soap *soap, const char *tag, struct __ns1__UseItemCoupon_ *a, const char *type)
{
	size_t soap_flag_ns1__UseItemCoupon = 1;
	short soap_flag;
	a = (struct __ns1__UseItemCoupon_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__UseItemCoupon_, sizeof(struct __ns1__UseItemCoupon_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__UseItemCoupon_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__UseItemCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__UseItemCoupon(soap, "ns1:UseItemCoupon", &a->ns1__UseItemCoupon, ""))
				{	soap_flag_ns1__UseItemCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UseItemCoupon_(struct soap *soap, const struct __ns1__UseItemCoupon_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__UseItemCoupon_(soap, tag?tag:"-ns1:UseItemCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseItemCoupon_ * SOAP_FMAC4 soap_get___ns1__UseItemCoupon_(struct soap *soap, struct __ns1__UseItemCoupon_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__UseItemCoupon_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__UseItemCoupon_ * SOAP_FMAC2 soap_instantiate___ns1__UseItemCoupon_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__UseItemCoupon_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__UseItemCoupon_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__UseItemCoupon_);
		if (size)
			*size = sizeof(struct __ns1__UseItemCoupon_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__UseItemCoupon_, n);
		if (size)
			*size = n * sizeof(struct __ns1__UseItemCoupon_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__UseItemCoupon_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UseItemCoupon_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__UseItemCoupon_ %p -> %p\n", q, p));
	*(struct __ns1__UseItemCoupon_*)p = *(struct __ns1__UseItemCoupon_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckItemCoupon_(struct soap *soap, struct __ns1__CheckItemCoupon_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckItemCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckItemCoupon_(struct soap *soap, const struct __ns1__CheckItemCoupon_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckItemCoupon(soap, &a->ns1__CheckItemCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckItemCoupon_(struct soap *soap, const char *tag, int id, const struct __ns1__CheckItemCoupon_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckItemCoupon(soap, "ns1:CheckItemCoupon", -1, &a->ns1__CheckItemCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckItemCoupon_ * SOAP_FMAC4 soap_in___ns1__CheckItemCoupon_(struct soap *soap, const char *tag, struct __ns1__CheckItemCoupon_ *a, const char *type)
{
	size_t soap_flag_ns1__CheckItemCoupon = 1;
	short soap_flag;
	a = (struct __ns1__CheckItemCoupon_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckItemCoupon_, sizeof(struct __ns1__CheckItemCoupon_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckItemCoupon_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckItemCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckItemCoupon(soap, "ns1:CheckItemCoupon", &a->ns1__CheckItemCoupon, ""))
				{	soap_flag_ns1__CheckItemCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckItemCoupon_(struct soap *soap, const struct __ns1__CheckItemCoupon_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckItemCoupon_(soap, tag?tag:"-ns1:CheckItemCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckItemCoupon_ * SOAP_FMAC4 soap_get___ns1__CheckItemCoupon_(struct soap *soap, struct __ns1__CheckItemCoupon_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckItemCoupon_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckItemCoupon_ * SOAP_FMAC2 soap_instantiate___ns1__CheckItemCoupon_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckItemCoupon_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckItemCoupon_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckItemCoupon_);
		if (size)
			*size = sizeof(struct __ns1__CheckItemCoupon_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckItemCoupon_, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckItemCoupon_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckItemCoupon_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckItemCoupon_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckItemCoupon_ %p -> %p\n", q, p));
	*(struct __ns1__CheckItemCoupon_*)p = *(struct __ns1__CheckItemCoupon_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RollbackItemCouponFromCouponBox_(struct soap *soap, struct __ns1__RollbackItemCouponFromCouponBox_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__RollbackItemCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RollbackItemCouponFromCouponBox_(struct soap *soap, const struct __ns1__RollbackItemCouponFromCouponBox_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__RollbackItemCouponFromCouponBox(soap, &a->ns1__RollbackItemCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RollbackItemCouponFromCouponBox_(struct soap *soap, const char *tag, int id, const struct __ns1__RollbackItemCouponFromCouponBox_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__RollbackItemCouponFromCouponBox(soap, "ns1:RollbackItemCouponFromCouponBox", -1, &a->ns1__RollbackItemCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackItemCouponFromCouponBox_ * SOAP_FMAC4 soap_in___ns1__RollbackItemCouponFromCouponBox_(struct soap *soap, const char *tag, struct __ns1__RollbackItemCouponFromCouponBox_ *a, const char *type)
{
	size_t soap_flag_ns1__RollbackItemCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__RollbackItemCouponFromCouponBox_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__RollbackItemCouponFromCouponBox_, sizeof(struct __ns1__RollbackItemCouponFromCouponBox_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__RollbackItemCouponFromCouponBox_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__RollbackItemCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__RollbackItemCouponFromCouponBox(soap, "ns1:RollbackItemCouponFromCouponBox", &a->ns1__RollbackItemCouponFromCouponBox, ""))
				{	soap_flag_ns1__RollbackItemCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RollbackItemCouponFromCouponBox_(struct soap *soap, const struct __ns1__RollbackItemCouponFromCouponBox_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__RollbackItemCouponFromCouponBox_(soap, tag?tag:"-ns1:RollbackItemCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackItemCouponFromCouponBox_ * SOAP_FMAC4 soap_get___ns1__RollbackItemCouponFromCouponBox_(struct soap *soap, struct __ns1__RollbackItemCouponFromCouponBox_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__RollbackItemCouponFromCouponBox_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__RollbackItemCouponFromCouponBox_ * SOAP_FMAC2 soap_instantiate___ns1__RollbackItemCouponFromCouponBox_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__RollbackItemCouponFromCouponBox_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__RollbackItemCouponFromCouponBox_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__RollbackItemCouponFromCouponBox_);
		if (size)
			*size = sizeof(struct __ns1__RollbackItemCouponFromCouponBox_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__RollbackItemCouponFromCouponBox_, n);
		if (size)
			*size = n * sizeof(struct __ns1__RollbackItemCouponFromCouponBox_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__RollbackItemCouponFromCouponBox_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RollbackItemCouponFromCouponBox_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__RollbackItemCouponFromCouponBox_ %p -> %p\n", q, p));
	*(struct __ns1__RollbackItemCouponFromCouponBox_*)p = *(struct __ns1__RollbackItemCouponFromCouponBox_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UseItemCouponFromCouponBox_(struct soap *soap, struct __ns1__UseItemCouponFromCouponBox_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__UseItemCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UseItemCouponFromCouponBox_(struct soap *soap, const struct __ns1__UseItemCouponFromCouponBox_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__UseItemCouponFromCouponBox(soap, &a->ns1__UseItemCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UseItemCouponFromCouponBox_(struct soap *soap, const char *tag, int id, const struct __ns1__UseItemCouponFromCouponBox_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__UseItemCouponFromCouponBox(soap, "ns1:UseItemCouponFromCouponBox", -1, &a->ns1__UseItemCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseItemCouponFromCouponBox_ * SOAP_FMAC4 soap_in___ns1__UseItemCouponFromCouponBox_(struct soap *soap, const char *tag, struct __ns1__UseItemCouponFromCouponBox_ *a, const char *type)
{
	size_t soap_flag_ns1__UseItemCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__UseItemCouponFromCouponBox_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__UseItemCouponFromCouponBox_, sizeof(struct __ns1__UseItemCouponFromCouponBox_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__UseItemCouponFromCouponBox_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__UseItemCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__UseItemCouponFromCouponBox(soap, "ns1:UseItemCouponFromCouponBox", &a->ns1__UseItemCouponFromCouponBox, ""))
				{	soap_flag_ns1__UseItemCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UseItemCouponFromCouponBox_(struct soap *soap, const struct __ns1__UseItemCouponFromCouponBox_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__UseItemCouponFromCouponBox_(soap, tag?tag:"-ns1:UseItemCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseItemCouponFromCouponBox_ * SOAP_FMAC4 soap_get___ns1__UseItemCouponFromCouponBox_(struct soap *soap, struct __ns1__UseItemCouponFromCouponBox_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__UseItemCouponFromCouponBox_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__UseItemCouponFromCouponBox_ * SOAP_FMAC2 soap_instantiate___ns1__UseItemCouponFromCouponBox_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__UseItemCouponFromCouponBox_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__UseItemCouponFromCouponBox_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__UseItemCouponFromCouponBox_);
		if (size)
			*size = sizeof(struct __ns1__UseItemCouponFromCouponBox_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__UseItemCouponFromCouponBox_, n);
		if (size)
			*size = n * sizeof(struct __ns1__UseItemCouponFromCouponBox_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__UseItemCouponFromCouponBox_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UseItemCouponFromCouponBox_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__UseItemCouponFromCouponBox_ %p -> %p\n", q, p));
	*(struct __ns1__UseItemCouponFromCouponBox_*)p = *(struct __ns1__UseItemCouponFromCouponBox_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckItemCouponFromCouponBox_(struct soap *soap, struct __ns1__CheckItemCouponFromCouponBox_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckItemCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckItemCouponFromCouponBox_(struct soap *soap, const struct __ns1__CheckItemCouponFromCouponBox_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckItemCouponFromCouponBox(soap, &a->ns1__CheckItemCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckItemCouponFromCouponBox_(struct soap *soap, const char *tag, int id, const struct __ns1__CheckItemCouponFromCouponBox_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckItemCouponFromCouponBox(soap, "ns1:CheckItemCouponFromCouponBox", -1, &a->ns1__CheckItemCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckItemCouponFromCouponBox_ * SOAP_FMAC4 soap_in___ns1__CheckItemCouponFromCouponBox_(struct soap *soap, const char *tag, struct __ns1__CheckItemCouponFromCouponBox_ *a, const char *type)
{
	size_t soap_flag_ns1__CheckItemCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__CheckItemCouponFromCouponBox_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckItemCouponFromCouponBox_, sizeof(struct __ns1__CheckItemCouponFromCouponBox_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckItemCouponFromCouponBox_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckItemCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckItemCouponFromCouponBox(soap, "ns1:CheckItemCouponFromCouponBox", &a->ns1__CheckItemCouponFromCouponBox, ""))
				{	soap_flag_ns1__CheckItemCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckItemCouponFromCouponBox_(struct soap *soap, const struct __ns1__CheckItemCouponFromCouponBox_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckItemCouponFromCouponBox_(soap, tag?tag:"-ns1:CheckItemCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckItemCouponFromCouponBox_ * SOAP_FMAC4 soap_get___ns1__CheckItemCouponFromCouponBox_(struct soap *soap, struct __ns1__CheckItemCouponFromCouponBox_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckItemCouponFromCouponBox_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckItemCouponFromCouponBox_ * SOAP_FMAC2 soap_instantiate___ns1__CheckItemCouponFromCouponBox_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckItemCouponFromCouponBox_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckItemCouponFromCouponBox_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckItemCouponFromCouponBox_);
		if (size)
			*size = sizeof(struct __ns1__CheckItemCouponFromCouponBox_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckItemCouponFromCouponBox_, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckItemCouponFromCouponBox_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckItemCouponFromCouponBox_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckItemCouponFromCouponBox_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckItemCouponFromCouponBox_ %p -> %p\n", q, p));
	*(struct __ns1__CheckItemCouponFromCouponBox_*)p = *(struct __ns1__CheckItemCouponFromCouponBox_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RollbackDiscountItemCoupon_(struct soap *soap, struct __ns1__RollbackDiscountItemCoupon_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__RollbackDiscountItemCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RollbackDiscountItemCoupon_(struct soap *soap, const struct __ns1__RollbackDiscountItemCoupon_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__RollbackDiscountItemCoupon(soap, &a->ns1__RollbackDiscountItemCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RollbackDiscountItemCoupon_(struct soap *soap, const char *tag, int id, const struct __ns1__RollbackDiscountItemCoupon_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__RollbackDiscountItemCoupon(soap, "ns1:RollbackDiscountItemCoupon", -1, &a->ns1__RollbackDiscountItemCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackDiscountItemCoupon_ * SOAP_FMAC4 soap_in___ns1__RollbackDiscountItemCoupon_(struct soap *soap, const char *tag, struct __ns1__RollbackDiscountItemCoupon_ *a, const char *type)
{
	size_t soap_flag_ns1__RollbackDiscountItemCoupon = 1;
	short soap_flag;
	a = (struct __ns1__RollbackDiscountItemCoupon_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__RollbackDiscountItemCoupon_, sizeof(struct __ns1__RollbackDiscountItemCoupon_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__RollbackDiscountItemCoupon_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__RollbackDiscountItemCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__RollbackDiscountItemCoupon(soap, "ns1:RollbackDiscountItemCoupon", &a->ns1__RollbackDiscountItemCoupon, ""))
				{	soap_flag_ns1__RollbackDiscountItemCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RollbackDiscountItemCoupon_(struct soap *soap, const struct __ns1__RollbackDiscountItemCoupon_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__RollbackDiscountItemCoupon_(soap, tag?tag:"-ns1:RollbackDiscountItemCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackDiscountItemCoupon_ * SOAP_FMAC4 soap_get___ns1__RollbackDiscountItemCoupon_(struct soap *soap, struct __ns1__RollbackDiscountItemCoupon_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__RollbackDiscountItemCoupon_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__RollbackDiscountItemCoupon_ * SOAP_FMAC2 soap_instantiate___ns1__RollbackDiscountItemCoupon_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__RollbackDiscountItemCoupon_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__RollbackDiscountItemCoupon_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__RollbackDiscountItemCoupon_);
		if (size)
			*size = sizeof(struct __ns1__RollbackDiscountItemCoupon_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__RollbackDiscountItemCoupon_, n);
		if (size)
			*size = n * sizeof(struct __ns1__RollbackDiscountItemCoupon_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__RollbackDiscountItemCoupon_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RollbackDiscountItemCoupon_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__RollbackDiscountItemCoupon_ %p -> %p\n", q, p));
	*(struct __ns1__RollbackDiscountItemCoupon_*)p = *(struct __ns1__RollbackDiscountItemCoupon_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UseDiscountItemCoupon_(struct soap *soap, struct __ns1__UseDiscountItemCoupon_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__UseDiscountItemCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UseDiscountItemCoupon_(struct soap *soap, const struct __ns1__UseDiscountItemCoupon_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__UseDiscountItemCoupon(soap, &a->ns1__UseDiscountItemCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UseDiscountItemCoupon_(struct soap *soap, const char *tag, int id, const struct __ns1__UseDiscountItemCoupon_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__UseDiscountItemCoupon(soap, "ns1:UseDiscountItemCoupon", -1, &a->ns1__UseDiscountItemCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseDiscountItemCoupon_ * SOAP_FMAC4 soap_in___ns1__UseDiscountItemCoupon_(struct soap *soap, const char *tag, struct __ns1__UseDiscountItemCoupon_ *a, const char *type)
{
	size_t soap_flag_ns1__UseDiscountItemCoupon = 1;
	short soap_flag;
	a = (struct __ns1__UseDiscountItemCoupon_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__UseDiscountItemCoupon_, sizeof(struct __ns1__UseDiscountItemCoupon_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__UseDiscountItemCoupon_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__UseDiscountItemCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__UseDiscountItemCoupon(soap, "ns1:UseDiscountItemCoupon", &a->ns1__UseDiscountItemCoupon, ""))
				{	soap_flag_ns1__UseDiscountItemCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UseDiscountItemCoupon_(struct soap *soap, const struct __ns1__UseDiscountItemCoupon_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__UseDiscountItemCoupon_(soap, tag?tag:"-ns1:UseDiscountItemCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseDiscountItemCoupon_ * SOAP_FMAC4 soap_get___ns1__UseDiscountItemCoupon_(struct soap *soap, struct __ns1__UseDiscountItemCoupon_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__UseDiscountItemCoupon_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__UseDiscountItemCoupon_ * SOAP_FMAC2 soap_instantiate___ns1__UseDiscountItemCoupon_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__UseDiscountItemCoupon_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__UseDiscountItemCoupon_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__UseDiscountItemCoupon_);
		if (size)
			*size = sizeof(struct __ns1__UseDiscountItemCoupon_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__UseDiscountItemCoupon_, n);
		if (size)
			*size = n * sizeof(struct __ns1__UseDiscountItemCoupon_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__UseDiscountItemCoupon_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UseDiscountItemCoupon_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__UseDiscountItemCoupon_ %p -> %p\n", q, p));
	*(struct __ns1__UseDiscountItemCoupon_*)p = *(struct __ns1__UseDiscountItemCoupon_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckDiscountItemCoupon_(struct soap *soap, struct __ns1__CheckDiscountItemCoupon_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckDiscountItemCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckDiscountItemCoupon_(struct soap *soap, const struct __ns1__CheckDiscountItemCoupon_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckDiscountItemCoupon(soap, &a->ns1__CheckDiscountItemCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckDiscountItemCoupon_(struct soap *soap, const char *tag, int id, const struct __ns1__CheckDiscountItemCoupon_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckDiscountItemCoupon(soap, "ns1:CheckDiscountItemCoupon", -1, &a->ns1__CheckDiscountItemCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckDiscountItemCoupon_ * SOAP_FMAC4 soap_in___ns1__CheckDiscountItemCoupon_(struct soap *soap, const char *tag, struct __ns1__CheckDiscountItemCoupon_ *a, const char *type)
{
	size_t soap_flag_ns1__CheckDiscountItemCoupon = 1;
	short soap_flag;
	a = (struct __ns1__CheckDiscountItemCoupon_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckDiscountItemCoupon_, sizeof(struct __ns1__CheckDiscountItemCoupon_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckDiscountItemCoupon_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckDiscountItemCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckDiscountItemCoupon(soap, "ns1:CheckDiscountItemCoupon", &a->ns1__CheckDiscountItemCoupon, ""))
				{	soap_flag_ns1__CheckDiscountItemCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckDiscountItemCoupon_(struct soap *soap, const struct __ns1__CheckDiscountItemCoupon_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckDiscountItemCoupon_(soap, tag?tag:"-ns1:CheckDiscountItemCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckDiscountItemCoupon_ * SOAP_FMAC4 soap_get___ns1__CheckDiscountItemCoupon_(struct soap *soap, struct __ns1__CheckDiscountItemCoupon_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckDiscountItemCoupon_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckDiscountItemCoupon_ * SOAP_FMAC2 soap_instantiate___ns1__CheckDiscountItemCoupon_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckDiscountItemCoupon_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckDiscountItemCoupon_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckDiscountItemCoupon_);
		if (size)
			*size = sizeof(struct __ns1__CheckDiscountItemCoupon_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckDiscountItemCoupon_, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckDiscountItemCoupon_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckDiscountItemCoupon_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckDiscountItemCoupon_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckDiscountItemCoupon_ %p -> %p\n", q, p));
	*(struct __ns1__CheckDiscountItemCoupon_*)p = *(struct __ns1__CheckDiscountItemCoupon_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RollbackDiscountCouponFromCouponBox_(struct soap *soap, struct __ns1__RollbackDiscountCouponFromCouponBox_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__RollbackDiscountCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RollbackDiscountCouponFromCouponBox_(struct soap *soap, const struct __ns1__RollbackDiscountCouponFromCouponBox_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(soap, &a->ns1__RollbackDiscountCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RollbackDiscountCouponFromCouponBox_(struct soap *soap, const char *tag, int id, const struct __ns1__RollbackDiscountCouponFromCouponBox_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(soap, "ns1:RollbackDiscountCouponFromCouponBox", -1, &a->ns1__RollbackDiscountCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackDiscountCouponFromCouponBox_ * SOAP_FMAC4 soap_in___ns1__RollbackDiscountCouponFromCouponBox_(struct soap *soap, const char *tag, struct __ns1__RollbackDiscountCouponFromCouponBox_ *a, const char *type)
{
	size_t soap_flag_ns1__RollbackDiscountCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__RollbackDiscountCouponFromCouponBox_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__RollbackDiscountCouponFromCouponBox_, sizeof(struct __ns1__RollbackDiscountCouponFromCouponBox_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__RollbackDiscountCouponFromCouponBox_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__RollbackDiscountCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(soap, "ns1:RollbackDiscountCouponFromCouponBox", &a->ns1__RollbackDiscountCouponFromCouponBox, ""))
				{	soap_flag_ns1__RollbackDiscountCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RollbackDiscountCouponFromCouponBox_(struct soap *soap, const struct __ns1__RollbackDiscountCouponFromCouponBox_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__RollbackDiscountCouponFromCouponBox_(soap, tag?tag:"-ns1:RollbackDiscountCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackDiscountCouponFromCouponBox_ * SOAP_FMAC4 soap_get___ns1__RollbackDiscountCouponFromCouponBox_(struct soap *soap, struct __ns1__RollbackDiscountCouponFromCouponBox_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__RollbackDiscountCouponFromCouponBox_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__RollbackDiscountCouponFromCouponBox_ * SOAP_FMAC2 soap_instantiate___ns1__RollbackDiscountCouponFromCouponBox_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__RollbackDiscountCouponFromCouponBox_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__RollbackDiscountCouponFromCouponBox_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__RollbackDiscountCouponFromCouponBox_);
		if (size)
			*size = sizeof(struct __ns1__RollbackDiscountCouponFromCouponBox_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__RollbackDiscountCouponFromCouponBox_, n);
		if (size)
			*size = n * sizeof(struct __ns1__RollbackDiscountCouponFromCouponBox_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__RollbackDiscountCouponFromCouponBox_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RollbackDiscountCouponFromCouponBox_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__RollbackDiscountCouponFromCouponBox_ %p -> %p\n", q, p));
	*(struct __ns1__RollbackDiscountCouponFromCouponBox_*)p = *(struct __ns1__RollbackDiscountCouponFromCouponBox_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UseDiscountCouponFromCouponBox_(struct soap *soap, struct __ns1__UseDiscountCouponFromCouponBox_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__UseDiscountCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UseDiscountCouponFromCouponBox_(struct soap *soap, const struct __ns1__UseDiscountCouponFromCouponBox_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__UseDiscountCouponFromCouponBox(soap, &a->ns1__UseDiscountCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UseDiscountCouponFromCouponBox_(struct soap *soap, const char *tag, int id, const struct __ns1__UseDiscountCouponFromCouponBox_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__UseDiscountCouponFromCouponBox(soap, "ns1:UseDiscountCouponFromCouponBox", -1, &a->ns1__UseDiscountCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseDiscountCouponFromCouponBox_ * SOAP_FMAC4 soap_in___ns1__UseDiscountCouponFromCouponBox_(struct soap *soap, const char *tag, struct __ns1__UseDiscountCouponFromCouponBox_ *a, const char *type)
{
	size_t soap_flag_ns1__UseDiscountCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__UseDiscountCouponFromCouponBox_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__UseDiscountCouponFromCouponBox_, sizeof(struct __ns1__UseDiscountCouponFromCouponBox_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__UseDiscountCouponFromCouponBox_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__UseDiscountCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__UseDiscountCouponFromCouponBox(soap, "ns1:UseDiscountCouponFromCouponBox", &a->ns1__UseDiscountCouponFromCouponBox, ""))
				{	soap_flag_ns1__UseDiscountCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UseDiscountCouponFromCouponBox_(struct soap *soap, const struct __ns1__UseDiscountCouponFromCouponBox_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__UseDiscountCouponFromCouponBox_(soap, tag?tag:"-ns1:UseDiscountCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseDiscountCouponFromCouponBox_ * SOAP_FMAC4 soap_get___ns1__UseDiscountCouponFromCouponBox_(struct soap *soap, struct __ns1__UseDiscountCouponFromCouponBox_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__UseDiscountCouponFromCouponBox_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__UseDiscountCouponFromCouponBox_ * SOAP_FMAC2 soap_instantiate___ns1__UseDiscountCouponFromCouponBox_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__UseDiscountCouponFromCouponBox_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__UseDiscountCouponFromCouponBox_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__UseDiscountCouponFromCouponBox_);
		if (size)
			*size = sizeof(struct __ns1__UseDiscountCouponFromCouponBox_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__UseDiscountCouponFromCouponBox_, n);
		if (size)
			*size = n * sizeof(struct __ns1__UseDiscountCouponFromCouponBox_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__UseDiscountCouponFromCouponBox_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UseDiscountCouponFromCouponBox_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__UseDiscountCouponFromCouponBox_ %p -> %p\n", q, p));
	*(struct __ns1__UseDiscountCouponFromCouponBox_*)p = *(struct __ns1__UseDiscountCouponFromCouponBox_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckDiscountCouponFromCouponBox_(struct soap *soap, struct __ns1__CheckDiscountCouponFromCouponBox_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckDiscountCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckDiscountCouponFromCouponBox_(struct soap *soap, const struct __ns1__CheckDiscountCouponFromCouponBox_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckDiscountCouponFromCouponBox(soap, &a->ns1__CheckDiscountCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckDiscountCouponFromCouponBox_(struct soap *soap, const char *tag, int id, const struct __ns1__CheckDiscountCouponFromCouponBox_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckDiscountCouponFromCouponBox(soap, "ns1:CheckDiscountCouponFromCouponBox", -1, &a->ns1__CheckDiscountCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckDiscountCouponFromCouponBox_ * SOAP_FMAC4 soap_in___ns1__CheckDiscountCouponFromCouponBox_(struct soap *soap, const char *tag, struct __ns1__CheckDiscountCouponFromCouponBox_ *a, const char *type)
{
	size_t soap_flag_ns1__CheckDiscountCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__CheckDiscountCouponFromCouponBox_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckDiscountCouponFromCouponBox_, sizeof(struct __ns1__CheckDiscountCouponFromCouponBox_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckDiscountCouponFromCouponBox_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckDiscountCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckDiscountCouponFromCouponBox(soap, "ns1:CheckDiscountCouponFromCouponBox", &a->ns1__CheckDiscountCouponFromCouponBox, ""))
				{	soap_flag_ns1__CheckDiscountCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckDiscountCouponFromCouponBox_(struct soap *soap, const struct __ns1__CheckDiscountCouponFromCouponBox_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckDiscountCouponFromCouponBox_(soap, tag?tag:"-ns1:CheckDiscountCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckDiscountCouponFromCouponBox_ * SOAP_FMAC4 soap_get___ns1__CheckDiscountCouponFromCouponBox_(struct soap *soap, struct __ns1__CheckDiscountCouponFromCouponBox_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckDiscountCouponFromCouponBox_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckDiscountCouponFromCouponBox_ * SOAP_FMAC2 soap_instantiate___ns1__CheckDiscountCouponFromCouponBox_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckDiscountCouponFromCouponBox_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckDiscountCouponFromCouponBox_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckDiscountCouponFromCouponBox_);
		if (size)
			*size = sizeof(struct __ns1__CheckDiscountCouponFromCouponBox_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckDiscountCouponFromCouponBox_, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckDiscountCouponFromCouponBox_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckDiscountCouponFromCouponBox_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckDiscountCouponFromCouponBox_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckDiscountCouponFromCouponBox_ %p -> %p\n", q, p));
	*(struct __ns1__CheckDiscountCouponFromCouponBox_*)p = *(struct __ns1__CheckDiscountCouponFromCouponBox_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectHoldingCouponCountByAccountId_(struct soap *soap, struct __ns1__SelectHoldingCouponCountByAccountId_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectHoldingCouponCountByAccountId = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectHoldingCouponCountByAccountId_(struct soap *soap, const struct __ns1__SelectHoldingCouponCountByAccountId_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectHoldingCouponCountByAccountId(soap, &a->ns1__SelectHoldingCouponCountByAccountId);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectHoldingCouponCountByAccountId_(struct soap *soap, const char *tag, int id, const struct __ns1__SelectHoldingCouponCountByAccountId_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountId(soap, "ns1:SelectHoldingCouponCountByAccountId", -1, &a->ns1__SelectHoldingCouponCountByAccountId, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectHoldingCouponCountByAccountId_ * SOAP_FMAC4 soap_in___ns1__SelectHoldingCouponCountByAccountId_(struct soap *soap, const char *tag, struct __ns1__SelectHoldingCouponCountByAccountId_ *a, const char *type)
{
	size_t soap_flag_ns1__SelectHoldingCouponCountByAccountId = 1;
	short soap_flag;
	a = (struct __ns1__SelectHoldingCouponCountByAccountId_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountId_, sizeof(struct __ns1__SelectHoldingCouponCountByAccountId_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectHoldingCouponCountByAccountId_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectHoldingCouponCountByAccountId && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountId(soap, "ns1:SelectHoldingCouponCountByAccountId", &a->ns1__SelectHoldingCouponCountByAccountId, ""))
				{	soap_flag_ns1__SelectHoldingCouponCountByAccountId--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectHoldingCouponCountByAccountId_(struct soap *soap, const struct __ns1__SelectHoldingCouponCountByAccountId_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectHoldingCouponCountByAccountId_(soap, tag?tag:"-ns1:SelectHoldingCouponCountByAccountId", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectHoldingCouponCountByAccountId_ * SOAP_FMAC4 soap_get___ns1__SelectHoldingCouponCountByAccountId_(struct soap *soap, struct __ns1__SelectHoldingCouponCountByAccountId_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectHoldingCouponCountByAccountId_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectHoldingCouponCountByAccountId_ * SOAP_FMAC2 soap_instantiate___ns1__SelectHoldingCouponCountByAccountId_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectHoldingCouponCountByAccountId_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountId_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectHoldingCouponCountByAccountId_);
		if (size)
			*size = sizeof(struct __ns1__SelectHoldingCouponCountByAccountId_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectHoldingCouponCountByAccountId_, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectHoldingCouponCountByAccountId_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectHoldingCouponCountByAccountId_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectHoldingCouponCountByAccountId_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectHoldingCouponCountByAccountId_ %p -> %p\n", q, p));
	*(struct __ns1__SelectHoldingCouponCountByAccountId_*)p = *(struct __ns1__SelectHoldingCouponCountByAccountId_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_(struct soap *soap, struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_(struct soap *soap, const struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, &a->ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_(struct soap *soap, const char *tag, int id, const struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCode", -1, &a->ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_ * SOAP_FMAC4 soap_in___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_(struct soap *soap, const char *tag, struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_ *a, const char *type)
{
	size_t soap_flag_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode = 1;
	short soap_flag;
	a = (struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_, sizeof(struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCode", &a->ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode, ""))
				{	soap_flag_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_(struct soap *soap, const struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_(soap, tag?tag:"-ns1:SelectHoldingCouponCountByAccountIdByGameServiceCode", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_ * SOAP_FMAC4 soap_get___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_(struct soap *soap, struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_ * SOAP_FMAC2 soap_instantiate___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_);
		if (size)
			*size = sizeof(struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_ %p -> %p\n", q, p));
	*(struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_*)p = *(struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_(struct soap *soap, struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectAppliableItemCodeForDiscountByAccountByGame = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_(struct soap *soap, const struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, &a->ns1__SelectAppliableItemCodeForDiscountByAccountByGame);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_(struct soap *soap, const char *tag, int id, const struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, "ns1:SelectAppliableItemCodeForDiscountByAccountByGame", -1, &a->ns1__SelectAppliableItemCodeForDiscountByAccountByGame, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_ * SOAP_FMAC4 soap_in___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_(struct soap *soap, const char *tag, struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_ *a, const char *type)
{
	size_t soap_flag_ns1__SelectAppliableItemCodeForDiscountByAccountByGame = 1;
	short soap_flag;
	a = (struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_, sizeof(struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectAppliableItemCodeForDiscountByAccountByGame && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, "ns1:SelectAppliableItemCodeForDiscountByAccountByGame", &a->ns1__SelectAppliableItemCodeForDiscountByAccountByGame, ""))
				{	soap_flag_ns1__SelectAppliableItemCodeForDiscountByAccountByGame--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_(struct soap *soap, const struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_(soap, tag?tag:"-ns1:SelectAppliableItemCodeForDiscountByAccountByGame", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_ * SOAP_FMAC4 soap_get___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_(struct soap *soap, struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_ * SOAP_FMAC2 soap_instantiate___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_);
		if (size)
			*size = sizeof(struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectAppliableItemCodeForDiscountByAccountByGame_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_ %p -> %p\n", q, p));
	*(struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_*)p = *(struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckActivationCouponStatus_(struct soap *soap, struct __ns1__CheckActivationCouponStatus_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckActivationCouponStatus = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckActivationCouponStatus_(struct soap *soap, const struct __ns1__CheckActivationCouponStatus_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckActivationCouponStatus(soap, &a->ns1__CheckActivationCouponStatus);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckActivationCouponStatus_(struct soap *soap, const char *tag, int id, const struct __ns1__CheckActivationCouponStatus_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckActivationCouponStatus(soap, "ns1:CheckActivationCouponStatus", -1, &a->ns1__CheckActivationCouponStatus, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckActivationCouponStatus_ * SOAP_FMAC4 soap_in___ns1__CheckActivationCouponStatus_(struct soap *soap, const char *tag, struct __ns1__CheckActivationCouponStatus_ *a, const char *type)
{
	size_t soap_flag_ns1__CheckActivationCouponStatus = 1;
	short soap_flag;
	a = (struct __ns1__CheckActivationCouponStatus_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckActivationCouponStatus_, sizeof(struct __ns1__CheckActivationCouponStatus_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckActivationCouponStatus_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckActivationCouponStatus && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckActivationCouponStatus(soap, "ns1:CheckActivationCouponStatus", &a->ns1__CheckActivationCouponStatus, ""))
				{	soap_flag_ns1__CheckActivationCouponStatus--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckActivationCouponStatus_(struct soap *soap, const struct __ns1__CheckActivationCouponStatus_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckActivationCouponStatus_(soap, tag?tag:"-ns1:CheckActivationCouponStatus", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckActivationCouponStatus_ * SOAP_FMAC4 soap_get___ns1__CheckActivationCouponStatus_(struct soap *soap, struct __ns1__CheckActivationCouponStatus_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckActivationCouponStatus_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckActivationCouponStatus_ * SOAP_FMAC2 soap_instantiate___ns1__CheckActivationCouponStatus_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckActivationCouponStatus_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckActivationCouponStatus_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckActivationCouponStatus_);
		if (size)
			*size = sizeof(struct __ns1__CheckActivationCouponStatus_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckActivationCouponStatus_, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckActivationCouponStatus_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckActivationCouponStatus_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckActivationCouponStatus_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckActivationCouponStatus_ %p -> %p\n", q, p));
	*(struct __ns1__CheckActivationCouponStatus_*)p = *(struct __ns1__CheckActivationCouponStatus_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CancelActivationCashCoupon_(struct soap *soap, struct __ns1__CancelActivationCashCoupon_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CancelActivationCashCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CancelActivationCashCoupon_(struct soap *soap, const struct __ns1__CancelActivationCashCoupon_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CancelActivationCashCoupon(soap, &a->ns1__CancelActivationCashCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CancelActivationCashCoupon_(struct soap *soap, const char *tag, int id, const struct __ns1__CancelActivationCashCoupon_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CancelActivationCashCoupon(soap, "ns1:CancelActivationCashCoupon", -1, &a->ns1__CancelActivationCashCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CancelActivationCashCoupon_ * SOAP_FMAC4 soap_in___ns1__CancelActivationCashCoupon_(struct soap *soap, const char *tag, struct __ns1__CancelActivationCashCoupon_ *a, const char *type)
{
	size_t soap_flag_ns1__CancelActivationCashCoupon = 1;
	short soap_flag;
	a = (struct __ns1__CancelActivationCashCoupon_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CancelActivationCashCoupon_, sizeof(struct __ns1__CancelActivationCashCoupon_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CancelActivationCashCoupon_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CancelActivationCashCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CancelActivationCashCoupon(soap, "ns1:CancelActivationCashCoupon", &a->ns1__CancelActivationCashCoupon, ""))
				{	soap_flag_ns1__CancelActivationCashCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CancelActivationCashCoupon_(struct soap *soap, const struct __ns1__CancelActivationCashCoupon_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CancelActivationCashCoupon_(soap, tag?tag:"-ns1:CancelActivationCashCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CancelActivationCashCoupon_ * SOAP_FMAC4 soap_get___ns1__CancelActivationCashCoupon_(struct soap *soap, struct __ns1__CancelActivationCashCoupon_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CancelActivationCashCoupon_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CancelActivationCashCoupon_ * SOAP_FMAC2 soap_instantiate___ns1__CancelActivationCashCoupon_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CancelActivationCashCoupon_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CancelActivationCashCoupon_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CancelActivationCashCoupon_);
		if (size)
			*size = sizeof(struct __ns1__CancelActivationCashCoupon_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CancelActivationCashCoupon_, n);
		if (size)
			*size = n * sizeof(struct __ns1__CancelActivationCashCoupon_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CancelActivationCashCoupon_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CancelActivationCashCoupon_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CancelActivationCashCoupon_ %p -> %p\n", q, p));
	*(struct __ns1__CancelActivationCashCoupon_*)p = *(struct __ns1__CancelActivationCashCoupon_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ReverseDeactivationCashCoupon_(struct soap *soap, struct __ns1__ReverseDeactivationCashCoupon_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__ReverseDeactivationCashCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ReverseDeactivationCashCoupon_(struct soap *soap, const struct __ns1__ReverseDeactivationCashCoupon_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__ReverseDeactivationCashCoupon(soap, &a->ns1__ReverseDeactivationCashCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ReverseDeactivationCashCoupon_(struct soap *soap, const char *tag, int id, const struct __ns1__ReverseDeactivationCashCoupon_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__ReverseDeactivationCashCoupon(soap, "ns1:ReverseDeactivationCashCoupon", -1, &a->ns1__ReverseDeactivationCashCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__ReverseDeactivationCashCoupon_ * SOAP_FMAC4 soap_in___ns1__ReverseDeactivationCashCoupon_(struct soap *soap, const char *tag, struct __ns1__ReverseDeactivationCashCoupon_ *a, const char *type)
{
	size_t soap_flag_ns1__ReverseDeactivationCashCoupon = 1;
	short soap_flag;
	a = (struct __ns1__ReverseDeactivationCashCoupon_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__ReverseDeactivationCashCoupon_, sizeof(struct __ns1__ReverseDeactivationCashCoupon_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__ReverseDeactivationCashCoupon_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__ReverseDeactivationCashCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__ReverseDeactivationCashCoupon(soap, "ns1:ReverseDeactivationCashCoupon", &a->ns1__ReverseDeactivationCashCoupon, ""))
				{	soap_flag_ns1__ReverseDeactivationCashCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ReverseDeactivationCashCoupon_(struct soap *soap, const struct __ns1__ReverseDeactivationCashCoupon_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__ReverseDeactivationCashCoupon_(soap, tag?tag:"-ns1:ReverseDeactivationCashCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__ReverseDeactivationCashCoupon_ * SOAP_FMAC4 soap_get___ns1__ReverseDeactivationCashCoupon_(struct soap *soap, struct __ns1__ReverseDeactivationCashCoupon_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__ReverseDeactivationCashCoupon_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__ReverseDeactivationCashCoupon_ * SOAP_FMAC2 soap_instantiate___ns1__ReverseDeactivationCashCoupon_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__ReverseDeactivationCashCoupon_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__ReverseDeactivationCashCoupon_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__ReverseDeactivationCashCoupon_);
		if (size)
			*size = sizeof(struct __ns1__ReverseDeactivationCashCoupon_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__ReverseDeactivationCashCoupon_, n);
		if (size)
			*size = n * sizeof(struct __ns1__ReverseDeactivationCashCoupon_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__ReverseDeactivationCashCoupon_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__ReverseDeactivationCashCoupon_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__ReverseDeactivationCashCoupon_ %p -> %p\n", q, p));
	*(struct __ns1__ReverseDeactivationCashCoupon_*)p = *(struct __ns1__ReverseDeactivationCashCoupon_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ReverseActivationCashCoupon_(struct soap *soap, struct __ns1__ReverseActivationCashCoupon_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__ReverseActivationCashCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ReverseActivationCashCoupon_(struct soap *soap, const struct __ns1__ReverseActivationCashCoupon_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__ReverseActivationCashCoupon(soap, &a->ns1__ReverseActivationCashCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ReverseActivationCashCoupon_(struct soap *soap, const char *tag, int id, const struct __ns1__ReverseActivationCashCoupon_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__ReverseActivationCashCoupon(soap, "ns1:ReverseActivationCashCoupon", -1, &a->ns1__ReverseActivationCashCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__ReverseActivationCashCoupon_ * SOAP_FMAC4 soap_in___ns1__ReverseActivationCashCoupon_(struct soap *soap, const char *tag, struct __ns1__ReverseActivationCashCoupon_ *a, const char *type)
{
	size_t soap_flag_ns1__ReverseActivationCashCoupon = 1;
	short soap_flag;
	a = (struct __ns1__ReverseActivationCashCoupon_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__ReverseActivationCashCoupon_, sizeof(struct __ns1__ReverseActivationCashCoupon_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__ReverseActivationCashCoupon_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__ReverseActivationCashCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__ReverseActivationCashCoupon(soap, "ns1:ReverseActivationCashCoupon", &a->ns1__ReverseActivationCashCoupon, ""))
				{	soap_flag_ns1__ReverseActivationCashCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ReverseActivationCashCoupon_(struct soap *soap, const struct __ns1__ReverseActivationCashCoupon_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__ReverseActivationCashCoupon_(soap, tag?tag:"-ns1:ReverseActivationCashCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__ReverseActivationCashCoupon_ * SOAP_FMAC4 soap_get___ns1__ReverseActivationCashCoupon_(struct soap *soap, struct __ns1__ReverseActivationCashCoupon_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__ReverseActivationCashCoupon_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__ReverseActivationCashCoupon_ * SOAP_FMAC2 soap_instantiate___ns1__ReverseActivationCashCoupon_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__ReverseActivationCashCoupon_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__ReverseActivationCashCoupon_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__ReverseActivationCashCoupon_);
		if (size)
			*size = sizeof(struct __ns1__ReverseActivationCashCoupon_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__ReverseActivationCashCoupon_, n);
		if (size)
			*size = n * sizeof(struct __ns1__ReverseActivationCashCoupon_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__ReverseActivationCashCoupon_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__ReverseActivationCashCoupon_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__ReverseActivationCashCoupon_ %p -> %p\n", q, p));
	*(struct __ns1__ReverseActivationCashCoupon_*)p = *(struct __ns1__ReverseActivationCashCoupon_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ActivationCashCoupon_(struct soap *soap, struct __ns1__ActivationCashCoupon_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__ActivationCashCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ActivationCashCoupon_(struct soap *soap, const struct __ns1__ActivationCashCoupon_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__ActivationCashCoupon(soap, &a->ns1__ActivationCashCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ActivationCashCoupon_(struct soap *soap, const char *tag, int id, const struct __ns1__ActivationCashCoupon_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__ActivationCashCoupon(soap, "ns1:ActivationCashCoupon", -1, &a->ns1__ActivationCashCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__ActivationCashCoupon_ * SOAP_FMAC4 soap_in___ns1__ActivationCashCoupon_(struct soap *soap, const char *tag, struct __ns1__ActivationCashCoupon_ *a, const char *type)
{
	size_t soap_flag_ns1__ActivationCashCoupon = 1;
	short soap_flag;
	a = (struct __ns1__ActivationCashCoupon_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__ActivationCashCoupon_, sizeof(struct __ns1__ActivationCashCoupon_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__ActivationCashCoupon_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__ActivationCashCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__ActivationCashCoupon(soap, "ns1:ActivationCashCoupon", &a->ns1__ActivationCashCoupon, ""))
				{	soap_flag_ns1__ActivationCashCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ActivationCashCoupon_(struct soap *soap, const struct __ns1__ActivationCashCoupon_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__ActivationCashCoupon_(soap, tag?tag:"-ns1:ActivationCashCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__ActivationCashCoupon_ * SOAP_FMAC4 soap_get___ns1__ActivationCashCoupon_(struct soap *soap, struct __ns1__ActivationCashCoupon_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__ActivationCashCoupon_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__ActivationCashCoupon_ * SOAP_FMAC2 soap_instantiate___ns1__ActivationCashCoupon_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__ActivationCashCoupon_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__ActivationCashCoupon_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__ActivationCashCoupon_);
		if (size)
			*size = sizeof(struct __ns1__ActivationCashCoupon_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__ActivationCashCoupon_, n);
		if (size)
			*size = n * sizeof(struct __ns1__ActivationCashCoupon_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__ActivationCashCoupon_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__ActivationCashCoupon_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__ActivationCashCoupon_ %p -> %p\n", q, p));
	*(struct __ns1__ActivationCashCoupon_*)p = *(struct __ns1__ActivationCashCoupon_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RollbackCashCoupon_(struct soap *soap, struct __ns1__RollbackCashCoupon_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__RollbackCashCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RollbackCashCoupon_(struct soap *soap, const struct __ns1__RollbackCashCoupon_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__RollbackCashCoupon(soap, &a->ns1__RollbackCashCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RollbackCashCoupon_(struct soap *soap, const char *tag, int id, const struct __ns1__RollbackCashCoupon_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__RollbackCashCoupon(soap, "ns1:RollbackCashCoupon", -1, &a->ns1__RollbackCashCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackCashCoupon_ * SOAP_FMAC4 soap_in___ns1__RollbackCashCoupon_(struct soap *soap, const char *tag, struct __ns1__RollbackCashCoupon_ *a, const char *type)
{
	size_t soap_flag_ns1__RollbackCashCoupon = 1;
	short soap_flag;
	a = (struct __ns1__RollbackCashCoupon_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__RollbackCashCoupon_, sizeof(struct __ns1__RollbackCashCoupon_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__RollbackCashCoupon_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__RollbackCashCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__RollbackCashCoupon(soap, "ns1:RollbackCashCoupon", &a->ns1__RollbackCashCoupon, ""))
				{	soap_flag_ns1__RollbackCashCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RollbackCashCoupon_(struct soap *soap, const struct __ns1__RollbackCashCoupon_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__RollbackCashCoupon_(soap, tag?tag:"-ns1:RollbackCashCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackCashCoupon_ * SOAP_FMAC4 soap_get___ns1__RollbackCashCoupon_(struct soap *soap, struct __ns1__RollbackCashCoupon_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__RollbackCashCoupon_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__RollbackCashCoupon_ * SOAP_FMAC2 soap_instantiate___ns1__RollbackCashCoupon_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__RollbackCashCoupon_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__RollbackCashCoupon_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__RollbackCashCoupon_);
		if (size)
			*size = sizeof(struct __ns1__RollbackCashCoupon_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__RollbackCashCoupon_, n);
		if (size)
			*size = n * sizeof(struct __ns1__RollbackCashCoupon_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__RollbackCashCoupon_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RollbackCashCoupon_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__RollbackCashCoupon_ %p -> %p\n", q, p));
	*(struct __ns1__RollbackCashCoupon_*)p = *(struct __ns1__RollbackCashCoupon_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UseCashCoupon_(struct soap *soap, struct __ns1__UseCashCoupon_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__UseCashCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UseCashCoupon_(struct soap *soap, const struct __ns1__UseCashCoupon_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__UseCashCoupon(soap, &a->ns1__UseCashCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UseCashCoupon_(struct soap *soap, const char *tag, int id, const struct __ns1__UseCashCoupon_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__UseCashCoupon(soap, "ns1:UseCashCoupon", -1, &a->ns1__UseCashCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseCashCoupon_ * SOAP_FMAC4 soap_in___ns1__UseCashCoupon_(struct soap *soap, const char *tag, struct __ns1__UseCashCoupon_ *a, const char *type)
{
	size_t soap_flag_ns1__UseCashCoupon = 1;
	short soap_flag;
	a = (struct __ns1__UseCashCoupon_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__UseCashCoupon_, sizeof(struct __ns1__UseCashCoupon_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__UseCashCoupon_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__UseCashCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__UseCashCoupon(soap, "ns1:UseCashCoupon", &a->ns1__UseCashCoupon, ""))
				{	soap_flag_ns1__UseCashCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UseCashCoupon_(struct soap *soap, const struct __ns1__UseCashCoupon_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__UseCashCoupon_(soap, tag?tag:"-ns1:UseCashCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseCashCoupon_ * SOAP_FMAC4 soap_get___ns1__UseCashCoupon_(struct soap *soap, struct __ns1__UseCashCoupon_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__UseCashCoupon_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__UseCashCoupon_ * SOAP_FMAC2 soap_instantiate___ns1__UseCashCoupon_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__UseCashCoupon_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__UseCashCoupon_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__UseCashCoupon_);
		if (size)
			*size = sizeof(struct __ns1__UseCashCoupon_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__UseCashCoupon_, n);
		if (size)
			*size = n * sizeof(struct __ns1__UseCashCoupon_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__UseCashCoupon_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UseCashCoupon_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__UseCashCoupon_ %p -> %p\n", q, p));
	*(struct __ns1__UseCashCoupon_*)p = *(struct __ns1__UseCashCoupon_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckCashCoupon_(struct soap *soap, struct __ns1__CheckCashCoupon_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckCashCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckCashCoupon_(struct soap *soap, const struct __ns1__CheckCashCoupon_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckCashCoupon(soap, &a->ns1__CheckCashCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckCashCoupon_(struct soap *soap, const char *tag, int id, const struct __ns1__CheckCashCoupon_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckCashCoupon(soap, "ns1:CheckCashCoupon", -1, &a->ns1__CheckCashCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckCashCoupon_ * SOAP_FMAC4 soap_in___ns1__CheckCashCoupon_(struct soap *soap, const char *tag, struct __ns1__CheckCashCoupon_ *a, const char *type)
{
	size_t soap_flag_ns1__CheckCashCoupon = 1;
	short soap_flag;
	a = (struct __ns1__CheckCashCoupon_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckCashCoupon_, sizeof(struct __ns1__CheckCashCoupon_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckCashCoupon_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckCashCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckCashCoupon(soap, "ns1:CheckCashCoupon", &a->ns1__CheckCashCoupon, ""))
				{	soap_flag_ns1__CheckCashCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckCashCoupon_(struct soap *soap, const struct __ns1__CheckCashCoupon_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckCashCoupon_(soap, tag?tag:"-ns1:CheckCashCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckCashCoupon_ * SOAP_FMAC4 soap_get___ns1__CheckCashCoupon_(struct soap *soap, struct __ns1__CheckCashCoupon_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckCashCoupon_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckCashCoupon_ * SOAP_FMAC2 soap_instantiate___ns1__CheckCashCoupon_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckCashCoupon_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckCashCoupon_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckCashCoupon_);
		if (size)
			*size = sizeof(struct __ns1__CheckCashCoupon_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckCashCoupon_, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckCashCoupon_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckCashCoupon_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckCashCoupon_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckCashCoupon_ %p -> %p\n", q, p));
	*(struct __ns1__CheckCashCoupon_*)p = *(struct __ns1__CheckCashCoupon_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RollbackCashCouponFromCouponBox_(struct soap *soap, struct __ns1__RollbackCashCouponFromCouponBox_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__RollbackCashCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RollbackCashCouponFromCouponBox_(struct soap *soap, const struct __ns1__RollbackCashCouponFromCouponBox_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__RollbackCashCouponFromCouponBox(soap, &a->ns1__RollbackCashCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RollbackCashCouponFromCouponBox_(struct soap *soap, const char *tag, int id, const struct __ns1__RollbackCashCouponFromCouponBox_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__RollbackCashCouponFromCouponBox(soap, "ns1:RollbackCashCouponFromCouponBox", -1, &a->ns1__RollbackCashCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackCashCouponFromCouponBox_ * SOAP_FMAC4 soap_in___ns1__RollbackCashCouponFromCouponBox_(struct soap *soap, const char *tag, struct __ns1__RollbackCashCouponFromCouponBox_ *a, const char *type)
{
	size_t soap_flag_ns1__RollbackCashCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__RollbackCashCouponFromCouponBox_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__RollbackCashCouponFromCouponBox_, sizeof(struct __ns1__RollbackCashCouponFromCouponBox_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__RollbackCashCouponFromCouponBox_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__RollbackCashCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__RollbackCashCouponFromCouponBox(soap, "ns1:RollbackCashCouponFromCouponBox", &a->ns1__RollbackCashCouponFromCouponBox, ""))
				{	soap_flag_ns1__RollbackCashCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RollbackCashCouponFromCouponBox_(struct soap *soap, const struct __ns1__RollbackCashCouponFromCouponBox_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__RollbackCashCouponFromCouponBox_(soap, tag?tag:"-ns1:RollbackCashCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackCashCouponFromCouponBox_ * SOAP_FMAC4 soap_get___ns1__RollbackCashCouponFromCouponBox_(struct soap *soap, struct __ns1__RollbackCashCouponFromCouponBox_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__RollbackCashCouponFromCouponBox_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__RollbackCashCouponFromCouponBox_ * SOAP_FMAC2 soap_instantiate___ns1__RollbackCashCouponFromCouponBox_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__RollbackCashCouponFromCouponBox_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__RollbackCashCouponFromCouponBox_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__RollbackCashCouponFromCouponBox_);
		if (size)
			*size = sizeof(struct __ns1__RollbackCashCouponFromCouponBox_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__RollbackCashCouponFromCouponBox_, n);
		if (size)
			*size = n * sizeof(struct __ns1__RollbackCashCouponFromCouponBox_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__RollbackCashCouponFromCouponBox_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RollbackCashCouponFromCouponBox_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__RollbackCashCouponFromCouponBox_ %p -> %p\n", q, p));
	*(struct __ns1__RollbackCashCouponFromCouponBox_*)p = *(struct __ns1__RollbackCashCouponFromCouponBox_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UseCashCouponFromCouponBox_(struct soap *soap, struct __ns1__UseCashCouponFromCouponBox_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__UseCashCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UseCashCouponFromCouponBox_(struct soap *soap, const struct __ns1__UseCashCouponFromCouponBox_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__UseCashCouponFromCouponBox(soap, &a->ns1__UseCashCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UseCashCouponFromCouponBox_(struct soap *soap, const char *tag, int id, const struct __ns1__UseCashCouponFromCouponBox_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__UseCashCouponFromCouponBox(soap, "ns1:UseCashCouponFromCouponBox", -1, &a->ns1__UseCashCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseCashCouponFromCouponBox_ * SOAP_FMAC4 soap_in___ns1__UseCashCouponFromCouponBox_(struct soap *soap, const char *tag, struct __ns1__UseCashCouponFromCouponBox_ *a, const char *type)
{
	size_t soap_flag_ns1__UseCashCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__UseCashCouponFromCouponBox_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__UseCashCouponFromCouponBox_, sizeof(struct __ns1__UseCashCouponFromCouponBox_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__UseCashCouponFromCouponBox_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__UseCashCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__UseCashCouponFromCouponBox(soap, "ns1:UseCashCouponFromCouponBox", &a->ns1__UseCashCouponFromCouponBox, ""))
				{	soap_flag_ns1__UseCashCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UseCashCouponFromCouponBox_(struct soap *soap, const struct __ns1__UseCashCouponFromCouponBox_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__UseCashCouponFromCouponBox_(soap, tag?tag:"-ns1:UseCashCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseCashCouponFromCouponBox_ * SOAP_FMAC4 soap_get___ns1__UseCashCouponFromCouponBox_(struct soap *soap, struct __ns1__UseCashCouponFromCouponBox_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__UseCashCouponFromCouponBox_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__UseCashCouponFromCouponBox_ * SOAP_FMAC2 soap_instantiate___ns1__UseCashCouponFromCouponBox_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__UseCashCouponFromCouponBox_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__UseCashCouponFromCouponBox_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__UseCashCouponFromCouponBox_);
		if (size)
			*size = sizeof(struct __ns1__UseCashCouponFromCouponBox_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__UseCashCouponFromCouponBox_, n);
		if (size)
			*size = n * sizeof(struct __ns1__UseCashCouponFromCouponBox_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__UseCashCouponFromCouponBox_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UseCashCouponFromCouponBox_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__UseCashCouponFromCouponBox_ %p -> %p\n", q, p));
	*(struct __ns1__UseCashCouponFromCouponBox_*)p = *(struct __ns1__UseCashCouponFromCouponBox_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckCashCouponFromCouponBox_(struct soap *soap, struct __ns1__CheckCashCouponFromCouponBox_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckCashCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckCashCouponFromCouponBox_(struct soap *soap, const struct __ns1__CheckCashCouponFromCouponBox_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckCashCouponFromCouponBox(soap, &a->ns1__CheckCashCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckCashCouponFromCouponBox_(struct soap *soap, const char *tag, int id, const struct __ns1__CheckCashCouponFromCouponBox_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckCashCouponFromCouponBox(soap, "ns1:CheckCashCouponFromCouponBox", -1, &a->ns1__CheckCashCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckCashCouponFromCouponBox_ * SOAP_FMAC4 soap_in___ns1__CheckCashCouponFromCouponBox_(struct soap *soap, const char *tag, struct __ns1__CheckCashCouponFromCouponBox_ *a, const char *type)
{
	size_t soap_flag_ns1__CheckCashCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__CheckCashCouponFromCouponBox_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckCashCouponFromCouponBox_, sizeof(struct __ns1__CheckCashCouponFromCouponBox_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckCashCouponFromCouponBox_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckCashCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckCashCouponFromCouponBox(soap, "ns1:CheckCashCouponFromCouponBox", &a->ns1__CheckCashCouponFromCouponBox, ""))
				{	soap_flag_ns1__CheckCashCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckCashCouponFromCouponBox_(struct soap *soap, const struct __ns1__CheckCashCouponFromCouponBox_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckCashCouponFromCouponBox_(soap, tag?tag:"-ns1:CheckCashCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckCashCouponFromCouponBox_ * SOAP_FMAC4 soap_get___ns1__CheckCashCouponFromCouponBox_(struct soap *soap, struct __ns1__CheckCashCouponFromCouponBox_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckCashCouponFromCouponBox_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckCashCouponFromCouponBox_ * SOAP_FMAC2 soap_instantiate___ns1__CheckCashCouponFromCouponBox_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckCashCouponFromCouponBox_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckCashCouponFromCouponBox_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckCashCouponFromCouponBox_);
		if (size)
			*size = sizeof(struct __ns1__CheckCashCouponFromCouponBox_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckCashCouponFromCouponBox_, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckCashCouponFromCouponBox_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckCashCouponFromCouponBox_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckCashCouponFromCouponBox_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckCashCouponFromCouponBox_ %p -> %p\n", q, p));
	*(struct __ns1__CheckCashCouponFromCouponBox_*)p = *(struct __ns1__CheckCashCouponFromCouponBox_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetCouponBoxTargetItemListCount_(struct soap *soap, struct __ns1__GetCouponBoxTargetItemListCount_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__GetCouponBoxTargetItemListCount = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetCouponBoxTargetItemListCount_(struct soap *soap, const struct __ns1__GetCouponBoxTargetItemListCount_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__GetCouponBoxTargetItemListCount(soap, &a->ns1__GetCouponBoxTargetItemListCount);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetCouponBoxTargetItemListCount_(struct soap *soap, const char *tag, int id, const struct __ns1__GetCouponBoxTargetItemListCount_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__GetCouponBoxTargetItemListCount(soap, "ns1:GetCouponBoxTargetItemListCount", -1, &a->ns1__GetCouponBoxTargetItemListCount, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetCouponBoxTargetItemListCount_ * SOAP_FMAC4 soap_in___ns1__GetCouponBoxTargetItemListCount_(struct soap *soap, const char *tag, struct __ns1__GetCouponBoxTargetItemListCount_ *a, const char *type)
{
	size_t soap_flag_ns1__GetCouponBoxTargetItemListCount = 1;
	short soap_flag;
	a = (struct __ns1__GetCouponBoxTargetItemListCount_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__GetCouponBoxTargetItemListCount_, sizeof(struct __ns1__GetCouponBoxTargetItemListCount_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__GetCouponBoxTargetItemListCount_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__GetCouponBoxTargetItemListCount && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__GetCouponBoxTargetItemListCount(soap, "ns1:GetCouponBoxTargetItemListCount", &a->ns1__GetCouponBoxTargetItemListCount, ""))
				{	soap_flag_ns1__GetCouponBoxTargetItemListCount--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetCouponBoxTargetItemListCount_(struct soap *soap, const struct __ns1__GetCouponBoxTargetItemListCount_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__GetCouponBoxTargetItemListCount_(soap, tag?tag:"-ns1:GetCouponBoxTargetItemListCount", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetCouponBoxTargetItemListCount_ * SOAP_FMAC4 soap_get___ns1__GetCouponBoxTargetItemListCount_(struct soap *soap, struct __ns1__GetCouponBoxTargetItemListCount_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__GetCouponBoxTargetItemListCount_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__GetCouponBoxTargetItemListCount_ * SOAP_FMAC2 soap_instantiate___ns1__GetCouponBoxTargetItemListCount_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__GetCouponBoxTargetItemListCount_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__GetCouponBoxTargetItemListCount_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__GetCouponBoxTargetItemListCount_);
		if (size)
			*size = sizeof(struct __ns1__GetCouponBoxTargetItemListCount_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__GetCouponBoxTargetItemListCount_, n);
		if (size)
			*size = n * sizeof(struct __ns1__GetCouponBoxTargetItemListCount_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__GetCouponBoxTargetItemListCount_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetCouponBoxTargetItemListCount_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__GetCouponBoxTargetItemListCount_ %p -> %p\n", q, p));
	*(struct __ns1__GetCouponBoxTargetItemListCount_*)p = *(struct __ns1__GetCouponBoxTargetItemListCount_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectCouponBoxTargetItemList_(struct soap *soap, struct __ns1__SelectCouponBoxTargetItemList_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectCouponBoxTargetItemList = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectCouponBoxTargetItemList_(struct soap *soap, const struct __ns1__SelectCouponBoxTargetItemList_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectCouponBoxTargetItemList(soap, &a->ns1__SelectCouponBoxTargetItemList);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectCouponBoxTargetItemList_(struct soap *soap, const char *tag, int id, const struct __ns1__SelectCouponBoxTargetItemList_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectCouponBoxTargetItemList(soap, "ns1:SelectCouponBoxTargetItemList", -1, &a->ns1__SelectCouponBoxTargetItemList, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxTargetItemList_ * SOAP_FMAC4 soap_in___ns1__SelectCouponBoxTargetItemList_(struct soap *soap, const char *tag, struct __ns1__SelectCouponBoxTargetItemList_ *a, const char *type)
{
	size_t soap_flag_ns1__SelectCouponBoxTargetItemList = 1;
	short soap_flag;
	a = (struct __ns1__SelectCouponBoxTargetItemList_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectCouponBoxTargetItemList_, sizeof(struct __ns1__SelectCouponBoxTargetItemList_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectCouponBoxTargetItemList_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectCouponBoxTargetItemList && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectCouponBoxTargetItemList(soap, "ns1:SelectCouponBoxTargetItemList", &a->ns1__SelectCouponBoxTargetItemList, ""))
				{	soap_flag_ns1__SelectCouponBoxTargetItemList--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectCouponBoxTargetItemList_(struct soap *soap, const struct __ns1__SelectCouponBoxTargetItemList_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectCouponBoxTargetItemList_(soap, tag?tag:"-ns1:SelectCouponBoxTargetItemList", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxTargetItemList_ * SOAP_FMAC4 soap_get___ns1__SelectCouponBoxTargetItemList_(struct soap *soap, struct __ns1__SelectCouponBoxTargetItemList_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectCouponBoxTargetItemList_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectCouponBoxTargetItemList_ * SOAP_FMAC2 soap_instantiate___ns1__SelectCouponBoxTargetItemList_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectCouponBoxTargetItemList_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectCouponBoxTargetItemList_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectCouponBoxTargetItemList_);
		if (size)
			*size = sizeof(struct __ns1__SelectCouponBoxTargetItemList_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectCouponBoxTargetItemList_, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectCouponBoxTargetItemList_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectCouponBoxTargetItemList_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectCouponBoxTargetItemList_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectCouponBoxTargetItemList_ %p -> %p\n", q, p));
	*(struct __ns1__SelectCouponBoxTargetItemList_*)p = *(struct __ns1__SelectCouponBoxTargetItemList_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetCouponBoxUsedListCountByNexonIDForUser_(struct soap *soap, struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__GetCouponBoxUsedListCountByNexonIDForUser = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetCouponBoxUsedListCountByNexonIDForUser_(struct soap *soap, const struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, &a->ns1__GetCouponBoxUsedListCountByNexonIDForUser);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetCouponBoxUsedListCountByNexonIDForUser_(struct soap *soap, const char *tag, int id, const struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, "ns1:GetCouponBoxUsedListCountByNexonIDForUser", -1, &a->ns1__GetCouponBoxUsedListCountByNexonIDForUser, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_ * SOAP_FMAC4 soap_in___ns1__GetCouponBoxUsedListCountByNexonIDForUser_(struct soap *soap, const char *tag, struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_ *a, const char *type)
{
	size_t soap_flag_ns1__GetCouponBoxUsedListCountByNexonIDForUser = 1;
	short soap_flag;
	a = (struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__GetCouponBoxUsedListCountByNexonIDForUser_, sizeof(struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__GetCouponBoxUsedListCountByNexonIDForUser_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__GetCouponBoxUsedListCountByNexonIDForUser && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, "ns1:GetCouponBoxUsedListCountByNexonIDForUser", &a->ns1__GetCouponBoxUsedListCountByNexonIDForUser, ""))
				{	soap_flag_ns1__GetCouponBoxUsedListCountByNexonIDForUser--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetCouponBoxUsedListCountByNexonIDForUser_(struct soap *soap, const struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__GetCouponBoxUsedListCountByNexonIDForUser_(soap, tag?tag:"-ns1:GetCouponBoxUsedListCountByNexonIDForUser", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_ * SOAP_FMAC4 soap_get___ns1__GetCouponBoxUsedListCountByNexonIDForUser_(struct soap *soap, struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__GetCouponBoxUsedListCountByNexonIDForUser_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_ * SOAP_FMAC2 soap_instantiate___ns1__GetCouponBoxUsedListCountByNexonIDForUser_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__GetCouponBoxUsedListCountByNexonIDForUser_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__GetCouponBoxUsedListCountByNexonIDForUser_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_);
		if (size)
			*size = sizeof(struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_, n);
		if (size)
			*size = n * sizeof(struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetCouponBoxUsedListCountByNexonIDForUser_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_ %p -> %p\n", q, p));
	*(struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_*)p = *(struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetCouponBoxListCountByNexonIDForUser_(struct soap *soap, struct __ns1__GetCouponBoxListCountByNexonIDForUser_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__GetCouponBoxListCountByNexonIDForUser = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetCouponBoxListCountByNexonIDForUser_(struct soap *soap, const struct __ns1__GetCouponBoxListCountByNexonIDForUser_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(soap, &a->ns1__GetCouponBoxListCountByNexonIDForUser);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetCouponBoxListCountByNexonIDForUser_(struct soap *soap, const char *tag, int id, const struct __ns1__GetCouponBoxListCountByNexonIDForUser_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(soap, "ns1:GetCouponBoxListCountByNexonIDForUser", -1, &a->ns1__GetCouponBoxListCountByNexonIDForUser, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetCouponBoxListCountByNexonIDForUser_ * SOAP_FMAC4 soap_in___ns1__GetCouponBoxListCountByNexonIDForUser_(struct soap *soap, const char *tag, struct __ns1__GetCouponBoxListCountByNexonIDForUser_ *a, const char *type)
{
	size_t soap_flag_ns1__GetCouponBoxListCountByNexonIDForUser = 1;
	short soap_flag;
	a = (struct __ns1__GetCouponBoxListCountByNexonIDForUser_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__GetCouponBoxListCountByNexonIDForUser_, sizeof(struct __ns1__GetCouponBoxListCountByNexonIDForUser_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__GetCouponBoxListCountByNexonIDForUser_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__GetCouponBoxListCountByNexonIDForUser && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(soap, "ns1:GetCouponBoxListCountByNexonIDForUser", &a->ns1__GetCouponBoxListCountByNexonIDForUser, ""))
				{	soap_flag_ns1__GetCouponBoxListCountByNexonIDForUser--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetCouponBoxListCountByNexonIDForUser_(struct soap *soap, const struct __ns1__GetCouponBoxListCountByNexonIDForUser_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__GetCouponBoxListCountByNexonIDForUser_(soap, tag?tag:"-ns1:GetCouponBoxListCountByNexonIDForUser", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetCouponBoxListCountByNexonIDForUser_ * SOAP_FMAC4 soap_get___ns1__GetCouponBoxListCountByNexonIDForUser_(struct soap *soap, struct __ns1__GetCouponBoxListCountByNexonIDForUser_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__GetCouponBoxListCountByNexonIDForUser_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__GetCouponBoxListCountByNexonIDForUser_ * SOAP_FMAC2 soap_instantiate___ns1__GetCouponBoxListCountByNexonIDForUser_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__GetCouponBoxListCountByNexonIDForUser_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__GetCouponBoxListCountByNexonIDForUser_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__GetCouponBoxListCountByNexonIDForUser_);
		if (size)
			*size = sizeof(struct __ns1__GetCouponBoxListCountByNexonIDForUser_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__GetCouponBoxListCountByNexonIDForUser_, n);
		if (size)
			*size = n * sizeof(struct __ns1__GetCouponBoxListCountByNexonIDForUser_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__GetCouponBoxListCountByNexonIDForUser_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetCouponBoxListCountByNexonIDForUser_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__GetCouponBoxListCountByNexonIDForUser_ %p -> %p\n", q, p));
	*(struct __ns1__GetCouponBoxListCountByNexonIDForUser_*)p = *(struct __ns1__GetCouponBoxListCountByNexonIDForUser_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectCouponBoxUsedListByNexonIDForUser_(struct soap *soap, struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectCouponBoxUsedListByNexonIDForUser = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectCouponBoxUsedListByNexonIDForUser_(struct soap *soap, const struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, &a->ns1__SelectCouponBoxUsedListByNexonIDForUser);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectCouponBoxUsedListByNexonIDForUser_(struct soap *soap, const char *tag, int id, const struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, "ns1:SelectCouponBoxUsedListByNexonIDForUser", -1, &a->ns1__SelectCouponBoxUsedListByNexonIDForUser, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_ * SOAP_FMAC4 soap_in___ns1__SelectCouponBoxUsedListByNexonIDForUser_(struct soap *soap, const char *tag, struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_ *a, const char *type)
{
	size_t soap_flag_ns1__SelectCouponBoxUsedListByNexonIDForUser = 1;
	short soap_flag;
	a = (struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectCouponBoxUsedListByNexonIDForUser_, sizeof(struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectCouponBoxUsedListByNexonIDForUser_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectCouponBoxUsedListByNexonIDForUser && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, "ns1:SelectCouponBoxUsedListByNexonIDForUser", &a->ns1__SelectCouponBoxUsedListByNexonIDForUser, ""))
				{	soap_flag_ns1__SelectCouponBoxUsedListByNexonIDForUser--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectCouponBoxUsedListByNexonIDForUser_(struct soap *soap, const struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectCouponBoxUsedListByNexonIDForUser_(soap, tag?tag:"-ns1:SelectCouponBoxUsedListByNexonIDForUser", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_ * SOAP_FMAC4 soap_get___ns1__SelectCouponBoxUsedListByNexonIDForUser_(struct soap *soap, struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectCouponBoxUsedListByNexonIDForUser_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_ * SOAP_FMAC2 soap_instantiate___ns1__SelectCouponBoxUsedListByNexonIDForUser_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectCouponBoxUsedListByNexonIDForUser_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectCouponBoxUsedListByNexonIDForUser_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_);
		if (size)
			*size = sizeof(struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectCouponBoxUsedListByNexonIDForUser_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_ %p -> %p\n", q, p));
	*(struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_*)p = *(struct __ns1__SelectCouponBoxUsedListByNexonIDForUser_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectCouponBoxListByNexonIDForUser_(struct soap *soap, struct __ns1__SelectCouponBoxListByNexonIDForUser_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectCouponBoxListByNexonIDForUser = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectCouponBoxListByNexonIDForUser_(struct soap *soap, const struct __ns1__SelectCouponBoxListByNexonIDForUser_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(soap, &a->ns1__SelectCouponBoxListByNexonIDForUser);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectCouponBoxListByNexonIDForUser_(struct soap *soap, const char *tag, int id, const struct __ns1__SelectCouponBoxListByNexonIDForUser_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(soap, "ns1:SelectCouponBoxListByNexonIDForUser", -1, &a->ns1__SelectCouponBoxListByNexonIDForUser, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxListByNexonIDForUser_ * SOAP_FMAC4 soap_in___ns1__SelectCouponBoxListByNexonIDForUser_(struct soap *soap, const char *tag, struct __ns1__SelectCouponBoxListByNexonIDForUser_ *a, const char *type)
{
	size_t soap_flag_ns1__SelectCouponBoxListByNexonIDForUser = 1;
	short soap_flag;
	a = (struct __ns1__SelectCouponBoxListByNexonIDForUser_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectCouponBoxListByNexonIDForUser_, sizeof(struct __ns1__SelectCouponBoxListByNexonIDForUser_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectCouponBoxListByNexonIDForUser_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectCouponBoxListByNexonIDForUser && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(soap, "ns1:SelectCouponBoxListByNexonIDForUser", &a->ns1__SelectCouponBoxListByNexonIDForUser, ""))
				{	soap_flag_ns1__SelectCouponBoxListByNexonIDForUser--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectCouponBoxListByNexonIDForUser_(struct soap *soap, const struct __ns1__SelectCouponBoxListByNexonIDForUser_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectCouponBoxListByNexonIDForUser_(soap, tag?tag:"-ns1:SelectCouponBoxListByNexonIDForUser", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxListByNexonIDForUser_ * SOAP_FMAC4 soap_get___ns1__SelectCouponBoxListByNexonIDForUser_(struct soap *soap, struct __ns1__SelectCouponBoxListByNexonIDForUser_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectCouponBoxListByNexonIDForUser_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectCouponBoxListByNexonIDForUser_ * SOAP_FMAC2 soap_instantiate___ns1__SelectCouponBoxListByNexonIDForUser_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectCouponBoxListByNexonIDForUser_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectCouponBoxListByNexonIDForUser_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectCouponBoxListByNexonIDForUser_);
		if (size)
			*size = sizeof(struct __ns1__SelectCouponBoxListByNexonIDForUser_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectCouponBoxListByNexonIDForUser_, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectCouponBoxListByNexonIDForUser_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectCouponBoxListByNexonIDForUser_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectCouponBoxListByNexonIDForUser_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectCouponBoxListByNexonIDForUser_ %p -> %p\n", q, p));
	*(struct __ns1__SelectCouponBoxListByNexonIDForUser_*)p = *(struct __ns1__SelectCouponBoxListByNexonIDForUser_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectCouponBoxByAccountIDForUser_(struct soap *soap, struct __ns1__SelectCouponBoxByAccountIDForUser_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectCouponBoxByAccountIDForUser = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectCouponBoxByAccountIDForUser_(struct soap *soap, const struct __ns1__SelectCouponBoxByAccountIDForUser_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(soap, &a->ns1__SelectCouponBoxByAccountIDForUser);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectCouponBoxByAccountIDForUser_(struct soap *soap, const char *tag, int id, const struct __ns1__SelectCouponBoxByAccountIDForUser_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(soap, "ns1:SelectCouponBoxByAccountIDForUser", -1, &a->ns1__SelectCouponBoxByAccountIDForUser, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxByAccountIDForUser_ * SOAP_FMAC4 soap_in___ns1__SelectCouponBoxByAccountIDForUser_(struct soap *soap, const char *tag, struct __ns1__SelectCouponBoxByAccountIDForUser_ *a, const char *type)
{
	size_t soap_flag_ns1__SelectCouponBoxByAccountIDForUser = 1;
	short soap_flag;
	a = (struct __ns1__SelectCouponBoxByAccountIDForUser_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectCouponBoxByAccountIDForUser_, sizeof(struct __ns1__SelectCouponBoxByAccountIDForUser_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectCouponBoxByAccountIDForUser_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectCouponBoxByAccountIDForUser && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(soap, "ns1:SelectCouponBoxByAccountIDForUser", &a->ns1__SelectCouponBoxByAccountIDForUser, ""))
				{	soap_flag_ns1__SelectCouponBoxByAccountIDForUser--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectCouponBoxByAccountIDForUser_(struct soap *soap, const struct __ns1__SelectCouponBoxByAccountIDForUser_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectCouponBoxByAccountIDForUser_(soap, tag?tag:"-ns1:SelectCouponBoxByAccountIDForUser", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxByAccountIDForUser_ * SOAP_FMAC4 soap_get___ns1__SelectCouponBoxByAccountIDForUser_(struct soap *soap, struct __ns1__SelectCouponBoxByAccountIDForUser_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectCouponBoxByAccountIDForUser_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectCouponBoxByAccountIDForUser_ * SOAP_FMAC2 soap_instantiate___ns1__SelectCouponBoxByAccountIDForUser_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectCouponBoxByAccountIDForUser_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectCouponBoxByAccountIDForUser_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectCouponBoxByAccountIDForUser_);
		if (size)
			*size = sizeof(struct __ns1__SelectCouponBoxByAccountIDForUser_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectCouponBoxByAccountIDForUser_, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectCouponBoxByAccountIDForUser_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectCouponBoxByAccountIDForUser_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectCouponBoxByAccountIDForUser_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectCouponBoxByAccountIDForUser_ %p -> %p\n", q, p));
	*(struct __ns1__SelectCouponBoxByAccountIDForUser_*)p = *(struct __ns1__SelectCouponBoxByAccountIDForUser_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectCouponBoxByCharacterIDForUser_(struct soap *soap, struct __ns1__SelectCouponBoxByCharacterIDForUser_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectCouponBoxByCharacterIDForUser = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectCouponBoxByCharacterIDForUser_(struct soap *soap, const struct __ns1__SelectCouponBoxByCharacterIDForUser_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(soap, &a->ns1__SelectCouponBoxByCharacterIDForUser);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectCouponBoxByCharacterIDForUser_(struct soap *soap, const char *tag, int id, const struct __ns1__SelectCouponBoxByCharacterIDForUser_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(soap, "ns1:SelectCouponBoxByCharacterIDForUser", -1, &a->ns1__SelectCouponBoxByCharacterIDForUser, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxByCharacterIDForUser_ * SOAP_FMAC4 soap_in___ns1__SelectCouponBoxByCharacterIDForUser_(struct soap *soap, const char *tag, struct __ns1__SelectCouponBoxByCharacterIDForUser_ *a, const char *type)
{
	size_t soap_flag_ns1__SelectCouponBoxByCharacterIDForUser = 1;
	short soap_flag;
	a = (struct __ns1__SelectCouponBoxByCharacterIDForUser_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectCouponBoxByCharacterIDForUser_, sizeof(struct __ns1__SelectCouponBoxByCharacterIDForUser_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectCouponBoxByCharacterIDForUser_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectCouponBoxByCharacterIDForUser && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(soap, "ns1:SelectCouponBoxByCharacterIDForUser", &a->ns1__SelectCouponBoxByCharacterIDForUser, ""))
				{	soap_flag_ns1__SelectCouponBoxByCharacterIDForUser--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectCouponBoxByCharacterIDForUser_(struct soap *soap, const struct __ns1__SelectCouponBoxByCharacterIDForUser_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectCouponBoxByCharacterIDForUser_(soap, tag?tag:"-ns1:SelectCouponBoxByCharacterIDForUser", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxByCharacterIDForUser_ * SOAP_FMAC4 soap_get___ns1__SelectCouponBoxByCharacterIDForUser_(struct soap *soap, struct __ns1__SelectCouponBoxByCharacterIDForUser_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectCouponBoxByCharacterIDForUser_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectCouponBoxByCharacterIDForUser_ * SOAP_FMAC2 soap_instantiate___ns1__SelectCouponBoxByCharacterIDForUser_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectCouponBoxByCharacterIDForUser_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectCouponBoxByCharacterIDForUser_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectCouponBoxByCharacterIDForUser_);
		if (size)
			*size = sizeof(struct __ns1__SelectCouponBoxByCharacterIDForUser_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectCouponBoxByCharacterIDForUser_, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectCouponBoxByCharacterIDForUser_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectCouponBoxByCharacterIDForUser_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectCouponBoxByCharacterIDForUser_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectCouponBoxByCharacterIDForUser_ %p -> %p\n", q, p));
	*(struct __ns1__SelectCouponBoxByCharacterIDForUser_*)p = *(struct __ns1__SelectCouponBoxByCharacterIDForUser_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_(struct soap *soap, struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_(struct soap *soap, const struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, &a->ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_(struct soap *soap, const char *tag, int id, const struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode", -1, &a->ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_ * SOAP_FMAC4 soap_in___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_(struct soap *soap, const char *tag, struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_ *a, const char *type)
{
	size_t soap_flag_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode = 1;
	short soap_flag;
	a = (struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_, sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode", &a->ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode, ""))
				{	soap_flag_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_(struct soap *soap, const struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_(soap, tag?tag:"-ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_ * SOAP_FMAC4 soap_get___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_(struct soap *soap, struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_ * SOAP_FMAC2 soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_);
		if (size)
			*size = sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_ %p -> %p\n", q, p));
	*(struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_*)p = *(struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_(struct soap *soap, struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_(struct soap *soap, const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, &a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_(struct soap *soap, const char *tag, int id, const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemList", -1, &a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_ * SOAP_FMAC4 soap_in___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_(struct soap *soap, const char *tag, struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_ *a, const char *type)
{
	size_t soap_flag_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList = 1;
	short soap_flag;
	a = (struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_, sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemList", &a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList, ""))
				{	soap_flag_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_(struct soap *soap, const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_(soap, tag?tag:"-ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemList", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_ * SOAP_FMAC4 soap_get___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_(struct soap *soap, struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_ * SOAP_FMAC2 soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_);
		if (size)
			*size = sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_ %p -> %p\n", q, p));
	*(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_*)p = *(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_(struct soap *soap, struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_(struct soap *soap, const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, &a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_(struct soap *soap, const char *tag, int id, const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCode", -1, &a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_ * SOAP_FMAC4 soap_in___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_(struct soap *soap, const char *tag, struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_ *a, const char *type)
{
	size_t soap_flag_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode = 1;
	short soap_flag;
	a = (struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_, sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCode", &a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode, ""))
				{	soap_flag_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_(struct soap *soap, const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_(soap, tag?tag:"-ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCode", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_ * SOAP_FMAC4 soap_get___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_(struct soap *soap, struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_ * SOAP_FMAC2 soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_);
		if (size)
			*size = sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_ %p -> %p\n", q, p));
	*(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_*)p = *(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckAddCouponBoxByCouponPinByNexonId_(struct soap *soap, struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckAddCouponBoxByCouponPinByNexonId = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckAddCouponBoxByCouponPinByNexonId_(struct soap *soap, const struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, &a->ns1__CheckAddCouponBoxByCouponPinByNexonId);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckAddCouponBoxByCouponPinByNexonId_(struct soap *soap, const char *tag, int id, const struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, "ns1:CheckAddCouponBoxByCouponPinByNexonId", -1, &a->ns1__CheckAddCouponBoxByCouponPinByNexonId, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_ * SOAP_FMAC4 soap_in___ns1__CheckAddCouponBoxByCouponPinByNexonId_(struct soap *soap, const char *tag, struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_ *a, const char *type)
{
	size_t soap_flag_ns1__CheckAddCouponBoxByCouponPinByNexonId = 1;
	short soap_flag;
	a = (struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckAddCouponBoxByCouponPinByNexonId_, sizeof(struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckAddCouponBoxByCouponPinByNexonId_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckAddCouponBoxByCouponPinByNexonId && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, "ns1:CheckAddCouponBoxByCouponPinByNexonId", &a->ns1__CheckAddCouponBoxByCouponPinByNexonId, ""))
				{	soap_flag_ns1__CheckAddCouponBoxByCouponPinByNexonId--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckAddCouponBoxByCouponPinByNexonId_(struct soap *soap, const struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckAddCouponBoxByCouponPinByNexonId_(soap, tag?tag:"-ns1:CheckAddCouponBoxByCouponPinByNexonId", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_ * SOAP_FMAC4 soap_get___ns1__CheckAddCouponBoxByCouponPinByNexonId_(struct soap *soap, struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckAddCouponBoxByCouponPinByNexonId_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_ * SOAP_FMAC2 soap_instantiate___ns1__CheckAddCouponBoxByCouponPinByNexonId_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckAddCouponBoxByCouponPinByNexonId_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckAddCouponBoxByCouponPinByNexonId_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_);
		if (size)
			*size = sizeof(struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckAddCouponBoxByCouponPinByNexonId_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_ %p -> %p\n", q, p));
	*(struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_*)p = *(struct __ns1__CheckAddCouponBoxByCouponPinByNexonId_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddCouponBoxByCouponPinByNexonId_(struct soap *soap, struct __ns1__AddCouponBoxByCouponPinByNexonId_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__AddCouponBoxByCouponPinByNexonId = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddCouponBoxByCouponPinByNexonId_(struct soap *soap, const struct __ns1__AddCouponBoxByCouponPinByNexonId_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(soap, &a->ns1__AddCouponBoxByCouponPinByNexonId);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddCouponBoxByCouponPinByNexonId_(struct soap *soap, const char *tag, int id, const struct __ns1__AddCouponBoxByCouponPinByNexonId_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(soap, "ns1:AddCouponBoxByCouponPinByNexonId", -1, &a->ns1__AddCouponBoxByCouponPinByNexonId, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__AddCouponBoxByCouponPinByNexonId_ * SOAP_FMAC4 soap_in___ns1__AddCouponBoxByCouponPinByNexonId_(struct soap *soap, const char *tag, struct __ns1__AddCouponBoxByCouponPinByNexonId_ *a, const char *type)
{
	size_t soap_flag_ns1__AddCouponBoxByCouponPinByNexonId = 1;
	short soap_flag;
	a = (struct __ns1__AddCouponBoxByCouponPinByNexonId_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__AddCouponBoxByCouponPinByNexonId_, sizeof(struct __ns1__AddCouponBoxByCouponPinByNexonId_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__AddCouponBoxByCouponPinByNexonId_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__AddCouponBoxByCouponPinByNexonId && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(soap, "ns1:AddCouponBoxByCouponPinByNexonId", &a->ns1__AddCouponBoxByCouponPinByNexonId, ""))
				{	soap_flag_ns1__AddCouponBoxByCouponPinByNexonId--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddCouponBoxByCouponPinByNexonId_(struct soap *soap, const struct __ns1__AddCouponBoxByCouponPinByNexonId_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__AddCouponBoxByCouponPinByNexonId_(soap, tag?tag:"-ns1:AddCouponBoxByCouponPinByNexonId", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__AddCouponBoxByCouponPinByNexonId_ * SOAP_FMAC4 soap_get___ns1__AddCouponBoxByCouponPinByNexonId_(struct soap *soap, struct __ns1__AddCouponBoxByCouponPinByNexonId_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__AddCouponBoxByCouponPinByNexonId_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__AddCouponBoxByCouponPinByNexonId_ * SOAP_FMAC2 soap_instantiate___ns1__AddCouponBoxByCouponPinByNexonId_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__AddCouponBoxByCouponPinByNexonId_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__AddCouponBoxByCouponPinByNexonId_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__AddCouponBoxByCouponPinByNexonId_);
		if (size)
			*size = sizeof(struct __ns1__AddCouponBoxByCouponPinByNexonId_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__AddCouponBoxByCouponPinByNexonId_, n);
		if (size)
			*size = n * sizeof(struct __ns1__AddCouponBoxByCouponPinByNexonId_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__AddCouponBoxByCouponPinByNexonId_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AddCouponBoxByCouponPinByNexonId_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__AddCouponBoxByCouponPinByNexonId_ %p -> %p\n", q, p));
	*(struct __ns1__AddCouponBoxByCouponPinByNexonId_*)p = *(struct __ns1__AddCouponBoxByCouponPinByNexonId_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectItemCouponFromCouponBoxByNexonID_(struct soap *soap, struct __ns1__SelectItemCouponFromCouponBoxByNexonID_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectItemCouponFromCouponBoxByNexonID = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectItemCouponFromCouponBoxByNexonID_(struct soap *soap, const struct __ns1__SelectItemCouponFromCouponBoxByNexonID_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(soap, &a->ns1__SelectItemCouponFromCouponBoxByNexonID);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectItemCouponFromCouponBoxByNexonID_(struct soap *soap, const char *tag, int id, const struct __ns1__SelectItemCouponFromCouponBoxByNexonID_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(soap, "ns1:SelectItemCouponFromCouponBoxByNexonID", -1, &a->ns1__SelectItemCouponFromCouponBoxByNexonID, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectItemCouponFromCouponBoxByNexonID_ * SOAP_FMAC4 soap_in___ns1__SelectItemCouponFromCouponBoxByNexonID_(struct soap *soap, const char *tag, struct __ns1__SelectItemCouponFromCouponBoxByNexonID_ *a, const char *type)
{
	size_t soap_flag_ns1__SelectItemCouponFromCouponBoxByNexonID = 1;
	short soap_flag;
	a = (struct __ns1__SelectItemCouponFromCouponBoxByNexonID_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectItemCouponFromCouponBoxByNexonID_, sizeof(struct __ns1__SelectItemCouponFromCouponBoxByNexonID_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectItemCouponFromCouponBoxByNexonID_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectItemCouponFromCouponBoxByNexonID && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(soap, "ns1:SelectItemCouponFromCouponBoxByNexonID", &a->ns1__SelectItemCouponFromCouponBoxByNexonID, ""))
				{	soap_flag_ns1__SelectItemCouponFromCouponBoxByNexonID--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectItemCouponFromCouponBoxByNexonID_(struct soap *soap, const struct __ns1__SelectItemCouponFromCouponBoxByNexonID_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectItemCouponFromCouponBoxByNexonID_(soap, tag?tag:"-ns1:SelectItemCouponFromCouponBoxByNexonID", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectItemCouponFromCouponBoxByNexonID_ * SOAP_FMAC4 soap_get___ns1__SelectItemCouponFromCouponBoxByNexonID_(struct soap *soap, struct __ns1__SelectItemCouponFromCouponBoxByNexonID_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectItemCouponFromCouponBoxByNexonID_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectItemCouponFromCouponBoxByNexonID_ * SOAP_FMAC2 soap_instantiate___ns1__SelectItemCouponFromCouponBoxByNexonID_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectItemCouponFromCouponBoxByNexonID_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectItemCouponFromCouponBoxByNexonID_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectItemCouponFromCouponBoxByNexonID_);
		if (size)
			*size = sizeof(struct __ns1__SelectItemCouponFromCouponBoxByNexonID_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectItemCouponFromCouponBoxByNexonID_, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectItemCouponFromCouponBoxByNexonID_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectItemCouponFromCouponBoxByNexonID_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectItemCouponFromCouponBoxByNexonID_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectItemCouponFromCouponBoxByNexonID_ %p -> %p\n", q, p));
	*(struct __ns1__SelectItemCouponFromCouponBoxByNexonID_*)p = *(struct __ns1__SelectItemCouponFromCouponBoxByNexonID_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectCashCouponFromCouponBoxByNexonID_(struct soap *soap, struct __ns1__SelectCashCouponFromCouponBoxByNexonID_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectCashCouponFromCouponBoxByNexonID = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectCashCouponFromCouponBoxByNexonID_(struct soap *soap, const struct __ns1__SelectCashCouponFromCouponBoxByNexonID_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(soap, &a->ns1__SelectCashCouponFromCouponBoxByNexonID);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectCashCouponFromCouponBoxByNexonID_(struct soap *soap, const char *tag, int id, const struct __ns1__SelectCashCouponFromCouponBoxByNexonID_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(soap, "ns1:SelectCashCouponFromCouponBoxByNexonID", -1, &a->ns1__SelectCashCouponFromCouponBoxByNexonID, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCashCouponFromCouponBoxByNexonID_ * SOAP_FMAC4 soap_in___ns1__SelectCashCouponFromCouponBoxByNexonID_(struct soap *soap, const char *tag, struct __ns1__SelectCashCouponFromCouponBoxByNexonID_ *a, const char *type)
{
	size_t soap_flag_ns1__SelectCashCouponFromCouponBoxByNexonID = 1;
	short soap_flag;
	a = (struct __ns1__SelectCashCouponFromCouponBoxByNexonID_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectCashCouponFromCouponBoxByNexonID_, sizeof(struct __ns1__SelectCashCouponFromCouponBoxByNexonID_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectCashCouponFromCouponBoxByNexonID_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectCashCouponFromCouponBoxByNexonID && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(soap, "ns1:SelectCashCouponFromCouponBoxByNexonID", &a->ns1__SelectCashCouponFromCouponBoxByNexonID, ""))
				{	soap_flag_ns1__SelectCashCouponFromCouponBoxByNexonID--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectCashCouponFromCouponBoxByNexonID_(struct soap *soap, const struct __ns1__SelectCashCouponFromCouponBoxByNexonID_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectCashCouponFromCouponBoxByNexonID_(soap, tag?tag:"-ns1:SelectCashCouponFromCouponBoxByNexonID", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCashCouponFromCouponBoxByNexonID_ * SOAP_FMAC4 soap_get___ns1__SelectCashCouponFromCouponBoxByNexonID_(struct soap *soap, struct __ns1__SelectCashCouponFromCouponBoxByNexonID_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectCashCouponFromCouponBoxByNexonID_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectCashCouponFromCouponBoxByNexonID_ * SOAP_FMAC2 soap_instantiate___ns1__SelectCashCouponFromCouponBoxByNexonID_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectCashCouponFromCouponBoxByNexonID_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectCashCouponFromCouponBoxByNexonID_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectCashCouponFromCouponBoxByNexonID_);
		if (size)
			*size = sizeof(struct __ns1__SelectCashCouponFromCouponBoxByNexonID_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectCashCouponFromCouponBoxByNexonID_, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectCashCouponFromCouponBoxByNexonID_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectCashCouponFromCouponBoxByNexonID_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectCashCouponFromCouponBoxByNexonID_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectCashCouponFromCouponBoxByNexonID_ %p -> %p\n", q, p));
	*(struct __ns1__SelectCashCouponFromCouponBoxByNexonID_*)p = *(struct __ns1__SelectCashCouponFromCouponBoxByNexonID_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__WakeUp(struct soap *soap, struct __ns1__WakeUp *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__WakeUp = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__WakeUp(struct soap *soap, const struct __ns1__WakeUp *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__WakeUp(soap, &a->ns1__WakeUp);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__WakeUp(struct soap *soap, const char *tag, int id, const struct __ns1__WakeUp *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__WakeUp(soap, "ns1:WakeUp", -1, &a->ns1__WakeUp, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__WakeUp * SOAP_FMAC4 soap_in___ns1__WakeUp(struct soap *soap, const char *tag, struct __ns1__WakeUp *a, const char *type)
{
	size_t soap_flag_ns1__WakeUp = 1;
	short soap_flag;
	a = (struct __ns1__WakeUp *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__WakeUp, sizeof(struct __ns1__WakeUp), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__WakeUp(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__WakeUp && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__WakeUp(soap, "ns1:WakeUp", &a->ns1__WakeUp, ""))
				{	soap_flag_ns1__WakeUp--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__WakeUp(struct soap *soap, const struct __ns1__WakeUp *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__WakeUp(soap, tag?tag:"-ns1:WakeUp", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__WakeUp * SOAP_FMAC4 soap_get___ns1__WakeUp(struct soap *soap, struct __ns1__WakeUp *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__WakeUp(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__WakeUp * SOAP_FMAC2 soap_instantiate___ns1__WakeUp(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__WakeUp(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__WakeUp, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__WakeUp);
		if (size)
			*size = sizeof(struct __ns1__WakeUp);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__WakeUp, n);
		if (size)
			*size = n * sizeof(struct __ns1__WakeUp);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__WakeUp*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__WakeUp(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__WakeUp %p -> %p\n", q, p));
	*(struct __ns1__WakeUp*)p = *(struct __ns1__WakeUp*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetUseRestrictInfo(struct soap *soap, struct __ns1__GetUseRestrictInfo *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__GetUseRestrictInfo = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetUseRestrictInfo(struct soap *soap, const struct __ns1__GetUseRestrictInfo *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__GetUseRestrictInfo(soap, &a->ns1__GetUseRestrictInfo);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetUseRestrictInfo(struct soap *soap, const char *tag, int id, const struct __ns1__GetUseRestrictInfo *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__GetUseRestrictInfo(soap, "ns1:GetUseRestrictInfo", -1, &a->ns1__GetUseRestrictInfo, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetUseRestrictInfo * SOAP_FMAC4 soap_in___ns1__GetUseRestrictInfo(struct soap *soap, const char *tag, struct __ns1__GetUseRestrictInfo *a, const char *type)
{
	size_t soap_flag_ns1__GetUseRestrictInfo = 1;
	short soap_flag;
	a = (struct __ns1__GetUseRestrictInfo *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__GetUseRestrictInfo, sizeof(struct __ns1__GetUseRestrictInfo), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__GetUseRestrictInfo(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__GetUseRestrictInfo && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__GetUseRestrictInfo(soap, "ns1:GetUseRestrictInfo", &a->ns1__GetUseRestrictInfo, ""))
				{	soap_flag_ns1__GetUseRestrictInfo--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetUseRestrictInfo(struct soap *soap, const struct __ns1__GetUseRestrictInfo *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__GetUseRestrictInfo(soap, tag?tag:"-ns1:GetUseRestrictInfo", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetUseRestrictInfo * SOAP_FMAC4 soap_get___ns1__GetUseRestrictInfo(struct soap *soap, struct __ns1__GetUseRestrictInfo *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__GetUseRestrictInfo(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__GetUseRestrictInfo * SOAP_FMAC2 soap_instantiate___ns1__GetUseRestrictInfo(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__GetUseRestrictInfo(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__GetUseRestrictInfo, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__GetUseRestrictInfo);
		if (size)
			*size = sizeof(struct __ns1__GetUseRestrictInfo);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__GetUseRestrictInfo, n);
		if (size)
			*size = n * sizeof(struct __ns1__GetUseRestrictInfo);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__GetUseRestrictInfo*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetUseRestrictInfo(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__GetUseRestrictInfo %p -> %p\n", q, p));
	*(struct __ns1__GetUseRestrictInfo*)p = *(struct __ns1__GetUseRestrictInfo*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__BulkCheckExtend(struct soap *soap, struct __ns1__BulkCheckExtend *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__BulkCheckExtend = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__BulkCheckExtend(struct soap *soap, const struct __ns1__BulkCheckExtend *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__BulkCheckExtend(soap, &a->ns1__BulkCheckExtend);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__BulkCheckExtend(struct soap *soap, const char *tag, int id, const struct __ns1__BulkCheckExtend *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__BulkCheckExtend(soap, "ns1:BulkCheckExtend", -1, &a->ns1__BulkCheckExtend, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__BulkCheckExtend * SOAP_FMAC4 soap_in___ns1__BulkCheckExtend(struct soap *soap, const char *tag, struct __ns1__BulkCheckExtend *a, const char *type)
{
	size_t soap_flag_ns1__BulkCheckExtend = 1;
	short soap_flag;
	a = (struct __ns1__BulkCheckExtend *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__BulkCheckExtend, sizeof(struct __ns1__BulkCheckExtend), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__BulkCheckExtend(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__BulkCheckExtend && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__BulkCheckExtend(soap, "ns1:BulkCheckExtend", &a->ns1__BulkCheckExtend, ""))
				{	soap_flag_ns1__BulkCheckExtend--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__BulkCheckExtend(struct soap *soap, const struct __ns1__BulkCheckExtend *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__BulkCheckExtend(soap, tag?tag:"-ns1:BulkCheckExtend", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__BulkCheckExtend * SOAP_FMAC4 soap_get___ns1__BulkCheckExtend(struct soap *soap, struct __ns1__BulkCheckExtend *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__BulkCheckExtend(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__BulkCheckExtend * SOAP_FMAC2 soap_instantiate___ns1__BulkCheckExtend(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__BulkCheckExtend(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__BulkCheckExtend, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__BulkCheckExtend);
		if (size)
			*size = sizeof(struct __ns1__BulkCheckExtend);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__BulkCheckExtend, n);
		if (size)
			*size = n * sizeof(struct __ns1__BulkCheckExtend);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__BulkCheckExtend*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__BulkCheckExtend(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__BulkCheckExtend %p -> %p\n", q, p));
	*(struct __ns1__BulkCheckExtend*)p = *(struct __ns1__BulkCheckExtend*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__BulkCheck(struct soap *soap, struct __ns1__BulkCheck *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__BulkCheck = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__BulkCheck(struct soap *soap, const struct __ns1__BulkCheck *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__BulkCheck(soap, &a->ns1__BulkCheck);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__BulkCheck(struct soap *soap, const char *tag, int id, const struct __ns1__BulkCheck *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__BulkCheck(soap, "ns1:BulkCheck", -1, &a->ns1__BulkCheck, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__BulkCheck * SOAP_FMAC4 soap_in___ns1__BulkCheck(struct soap *soap, const char *tag, struct __ns1__BulkCheck *a, const char *type)
{
	size_t soap_flag_ns1__BulkCheck = 1;
	short soap_flag;
	a = (struct __ns1__BulkCheck *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__BulkCheck, sizeof(struct __ns1__BulkCheck), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__BulkCheck(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__BulkCheck && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__BulkCheck(soap, "ns1:BulkCheck", &a->ns1__BulkCheck, ""))
				{	soap_flag_ns1__BulkCheck--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__BulkCheck(struct soap *soap, const struct __ns1__BulkCheck *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__BulkCheck(soap, tag?tag:"-ns1:BulkCheck", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__BulkCheck * SOAP_FMAC4 soap_get___ns1__BulkCheck(struct soap *soap, struct __ns1__BulkCheck *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__BulkCheck(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__BulkCheck * SOAP_FMAC2 soap_instantiate___ns1__BulkCheck(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__BulkCheck(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__BulkCheck, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__BulkCheck);
		if (size)
			*size = sizeof(struct __ns1__BulkCheck);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__BulkCheck, n);
		if (size)
			*size = n * sizeof(struct __ns1__BulkCheck);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__BulkCheck*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__BulkCheck(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__BulkCheck %p -> %p\n", q, p));
	*(struct __ns1__BulkCheck*)p = *(struct __ns1__BulkCheck*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UseItemCouponOLD(struct soap *soap, struct __ns1__UseItemCouponOLD *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__UseItemCouponOLD = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UseItemCouponOLD(struct soap *soap, const struct __ns1__UseItemCouponOLD *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__UseItemCouponOLD(soap, &a->ns1__UseItemCouponOLD);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UseItemCouponOLD(struct soap *soap, const char *tag, int id, const struct __ns1__UseItemCouponOLD *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__UseItemCouponOLD(soap, "ns1:UseItemCouponOLD", -1, &a->ns1__UseItemCouponOLD, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseItemCouponOLD * SOAP_FMAC4 soap_in___ns1__UseItemCouponOLD(struct soap *soap, const char *tag, struct __ns1__UseItemCouponOLD *a, const char *type)
{
	size_t soap_flag_ns1__UseItemCouponOLD = 1;
	short soap_flag;
	a = (struct __ns1__UseItemCouponOLD *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__UseItemCouponOLD, sizeof(struct __ns1__UseItemCouponOLD), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__UseItemCouponOLD(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__UseItemCouponOLD && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__UseItemCouponOLD(soap, "ns1:UseItemCouponOLD", &a->ns1__UseItemCouponOLD, ""))
				{	soap_flag_ns1__UseItemCouponOLD--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UseItemCouponOLD(struct soap *soap, const struct __ns1__UseItemCouponOLD *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__UseItemCouponOLD(soap, tag?tag:"-ns1:UseItemCouponOLD", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseItemCouponOLD * SOAP_FMAC4 soap_get___ns1__UseItemCouponOLD(struct soap *soap, struct __ns1__UseItemCouponOLD *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__UseItemCouponOLD(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__UseItemCouponOLD * SOAP_FMAC2 soap_instantiate___ns1__UseItemCouponOLD(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__UseItemCouponOLD(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__UseItemCouponOLD, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__UseItemCouponOLD);
		if (size)
			*size = sizeof(struct __ns1__UseItemCouponOLD);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__UseItemCouponOLD, n);
		if (size)
			*size = n * sizeof(struct __ns1__UseItemCouponOLD);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__UseItemCouponOLD*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UseItemCouponOLD(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__UseItemCouponOLD %p -> %p\n", q, p));
	*(struct __ns1__UseItemCouponOLD*)p = *(struct __ns1__UseItemCouponOLD*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckItemCouponOLD(struct soap *soap, struct __ns1__CheckItemCouponOLD *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckItemCouponOLD = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckItemCouponOLD(struct soap *soap, const struct __ns1__CheckItemCouponOLD *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckItemCouponOLD(soap, &a->ns1__CheckItemCouponOLD);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckItemCouponOLD(struct soap *soap, const char *tag, int id, const struct __ns1__CheckItemCouponOLD *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckItemCouponOLD(soap, "ns1:CheckItemCouponOLD", -1, &a->ns1__CheckItemCouponOLD, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckItemCouponOLD * SOAP_FMAC4 soap_in___ns1__CheckItemCouponOLD(struct soap *soap, const char *tag, struct __ns1__CheckItemCouponOLD *a, const char *type)
{
	size_t soap_flag_ns1__CheckItemCouponOLD = 1;
	short soap_flag;
	a = (struct __ns1__CheckItemCouponOLD *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckItemCouponOLD, sizeof(struct __ns1__CheckItemCouponOLD), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckItemCouponOLD(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckItemCouponOLD && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckItemCouponOLD(soap, "ns1:CheckItemCouponOLD", &a->ns1__CheckItemCouponOLD, ""))
				{	soap_flag_ns1__CheckItemCouponOLD--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckItemCouponOLD(struct soap *soap, const struct __ns1__CheckItemCouponOLD *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckItemCouponOLD(soap, tag?tag:"-ns1:CheckItemCouponOLD", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckItemCouponOLD * SOAP_FMAC4 soap_get___ns1__CheckItemCouponOLD(struct soap *soap, struct __ns1__CheckItemCouponOLD *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckItemCouponOLD(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckItemCouponOLD * SOAP_FMAC2 soap_instantiate___ns1__CheckItemCouponOLD(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckItemCouponOLD(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckItemCouponOLD, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckItemCouponOLD);
		if (size)
			*size = sizeof(struct __ns1__CheckItemCouponOLD);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckItemCouponOLD, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckItemCouponOLD);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckItemCouponOLD*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckItemCouponOLD(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckItemCouponOLD %p -> %p\n", q, p));
	*(struct __ns1__CheckItemCouponOLD*)p = *(struct __ns1__CheckItemCouponOLD*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RollbackItemCoupon(struct soap *soap, struct __ns1__RollbackItemCoupon *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__RollbackItemCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RollbackItemCoupon(struct soap *soap, const struct __ns1__RollbackItemCoupon *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__RollbackItemCoupon(soap, &a->ns1__RollbackItemCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RollbackItemCoupon(struct soap *soap, const char *tag, int id, const struct __ns1__RollbackItemCoupon *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__RollbackItemCoupon(soap, "ns1:RollbackItemCoupon", -1, &a->ns1__RollbackItemCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackItemCoupon * SOAP_FMAC4 soap_in___ns1__RollbackItemCoupon(struct soap *soap, const char *tag, struct __ns1__RollbackItemCoupon *a, const char *type)
{
	size_t soap_flag_ns1__RollbackItemCoupon = 1;
	short soap_flag;
	a = (struct __ns1__RollbackItemCoupon *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__RollbackItemCoupon, sizeof(struct __ns1__RollbackItemCoupon), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__RollbackItemCoupon(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__RollbackItemCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__RollbackItemCoupon(soap, "ns1:RollbackItemCoupon", &a->ns1__RollbackItemCoupon, ""))
				{	soap_flag_ns1__RollbackItemCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RollbackItemCoupon(struct soap *soap, const struct __ns1__RollbackItemCoupon *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__RollbackItemCoupon(soap, tag?tag:"-ns1:RollbackItemCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackItemCoupon * SOAP_FMAC4 soap_get___ns1__RollbackItemCoupon(struct soap *soap, struct __ns1__RollbackItemCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__RollbackItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__RollbackItemCoupon * SOAP_FMAC2 soap_instantiate___ns1__RollbackItemCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__RollbackItemCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__RollbackItemCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__RollbackItemCoupon);
		if (size)
			*size = sizeof(struct __ns1__RollbackItemCoupon);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__RollbackItemCoupon, n);
		if (size)
			*size = n * sizeof(struct __ns1__RollbackItemCoupon);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__RollbackItemCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RollbackItemCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__RollbackItemCoupon %p -> %p\n", q, p));
	*(struct __ns1__RollbackItemCoupon*)p = *(struct __ns1__RollbackItemCoupon*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UseItemCoupon(struct soap *soap, struct __ns1__UseItemCoupon *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__UseItemCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UseItemCoupon(struct soap *soap, const struct __ns1__UseItemCoupon *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__UseItemCoupon(soap, &a->ns1__UseItemCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UseItemCoupon(struct soap *soap, const char *tag, int id, const struct __ns1__UseItemCoupon *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__UseItemCoupon(soap, "ns1:UseItemCoupon", -1, &a->ns1__UseItemCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseItemCoupon * SOAP_FMAC4 soap_in___ns1__UseItemCoupon(struct soap *soap, const char *tag, struct __ns1__UseItemCoupon *a, const char *type)
{
	size_t soap_flag_ns1__UseItemCoupon = 1;
	short soap_flag;
	a = (struct __ns1__UseItemCoupon *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__UseItemCoupon, sizeof(struct __ns1__UseItemCoupon), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__UseItemCoupon(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__UseItemCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__UseItemCoupon(soap, "ns1:UseItemCoupon", &a->ns1__UseItemCoupon, ""))
				{	soap_flag_ns1__UseItemCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UseItemCoupon(struct soap *soap, const struct __ns1__UseItemCoupon *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__UseItemCoupon(soap, tag?tag:"-ns1:UseItemCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseItemCoupon * SOAP_FMAC4 soap_get___ns1__UseItemCoupon(struct soap *soap, struct __ns1__UseItemCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__UseItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__UseItemCoupon * SOAP_FMAC2 soap_instantiate___ns1__UseItemCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__UseItemCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__UseItemCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__UseItemCoupon);
		if (size)
			*size = sizeof(struct __ns1__UseItemCoupon);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__UseItemCoupon, n);
		if (size)
			*size = n * sizeof(struct __ns1__UseItemCoupon);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__UseItemCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UseItemCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__UseItemCoupon %p -> %p\n", q, p));
	*(struct __ns1__UseItemCoupon*)p = *(struct __ns1__UseItemCoupon*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckItemCoupon(struct soap *soap, struct __ns1__CheckItemCoupon *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckItemCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckItemCoupon(struct soap *soap, const struct __ns1__CheckItemCoupon *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckItemCoupon(soap, &a->ns1__CheckItemCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckItemCoupon(struct soap *soap, const char *tag, int id, const struct __ns1__CheckItemCoupon *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckItemCoupon(soap, "ns1:CheckItemCoupon", -1, &a->ns1__CheckItemCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckItemCoupon * SOAP_FMAC4 soap_in___ns1__CheckItemCoupon(struct soap *soap, const char *tag, struct __ns1__CheckItemCoupon *a, const char *type)
{
	size_t soap_flag_ns1__CheckItemCoupon = 1;
	short soap_flag;
	a = (struct __ns1__CheckItemCoupon *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckItemCoupon, sizeof(struct __ns1__CheckItemCoupon), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckItemCoupon(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckItemCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckItemCoupon(soap, "ns1:CheckItemCoupon", &a->ns1__CheckItemCoupon, ""))
				{	soap_flag_ns1__CheckItemCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckItemCoupon(struct soap *soap, const struct __ns1__CheckItemCoupon *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckItemCoupon(soap, tag?tag:"-ns1:CheckItemCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckItemCoupon * SOAP_FMAC4 soap_get___ns1__CheckItemCoupon(struct soap *soap, struct __ns1__CheckItemCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckItemCoupon * SOAP_FMAC2 soap_instantiate___ns1__CheckItemCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckItemCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckItemCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckItemCoupon);
		if (size)
			*size = sizeof(struct __ns1__CheckItemCoupon);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckItemCoupon, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckItemCoupon);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckItemCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckItemCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckItemCoupon %p -> %p\n", q, p));
	*(struct __ns1__CheckItemCoupon*)p = *(struct __ns1__CheckItemCoupon*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RollbackItemCouponFromCouponBox(struct soap *soap, struct __ns1__RollbackItemCouponFromCouponBox *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__RollbackItemCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RollbackItemCouponFromCouponBox(struct soap *soap, const struct __ns1__RollbackItemCouponFromCouponBox *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__RollbackItemCouponFromCouponBox(soap, &a->ns1__RollbackItemCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RollbackItemCouponFromCouponBox(struct soap *soap, const char *tag, int id, const struct __ns1__RollbackItemCouponFromCouponBox *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__RollbackItemCouponFromCouponBox(soap, "ns1:RollbackItemCouponFromCouponBox", -1, &a->ns1__RollbackItemCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackItemCouponFromCouponBox * SOAP_FMAC4 soap_in___ns1__RollbackItemCouponFromCouponBox(struct soap *soap, const char *tag, struct __ns1__RollbackItemCouponFromCouponBox *a, const char *type)
{
	size_t soap_flag_ns1__RollbackItemCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__RollbackItemCouponFromCouponBox *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__RollbackItemCouponFromCouponBox, sizeof(struct __ns1__RollbackItemCouponFromCouponBox), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__RollbackItemCouponFromCouponBox(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__RollbackItemCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__RollbackItemCouponFromCouponBox(soap, "ns1:RollbackItemCouponFromCouponBox", &a->ns1__RollbackItemCouponFromCouponBox, ""))
				{	soap_flag_ns1__RollbackItemCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RollbackItemCouponFromCouponBox(struct soap *soap, const struct __ns1__RollbackItemCouponFromCouponBox *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__RollbackItemCouponFromCouponBox(soap, tag?tag:"-ns1:RollbackItemCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackItemCouponFromCouponBox * SOAP_FMAC4 soap_get___ns1__RollbackItemCouponFromCouponBox(struct soap *soap, struct __ns1__RollbackItemCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__RollbackItemCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__RollbackItemCouponFromCouponBox * SOAP_FMAC2 soap_instantiate___ns1__RollbackItemCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__RollbackItemCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__RollbackItemCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__RollbackItemCouponFromCouponBox);
		if (size)
			*size = sizeof(struct __ns1__RollbackItemCouponFromCouponBox);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__RollbackItemCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(struct __ns1__RollbackItemCouponFromCouponBox);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__RollbackItemCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RollbackItemCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__RollbackItemCouponFromCouponBox %p -> %p\n", q, p));
	*(struct __ns1__RollbackItemCouponFromCouponBox*)p = *(struct __ns1__RollbackItemCouponFromCouponBox*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UseItemCouponFromCouponBox(struct soap *soap, struct __ns1__UseItemCouponFromCouponBox *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__UseItemCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UseItemCouponFromCouponBox(struct soap *soap, const struct __ns1__UseItemCouponFromCouponBox *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__UseItemCouponFromCouponBox(soap, &a->ns1__UseItemCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UseItemCouponFromCouponBox(struct soap *soap, const char *tag, int id, const struct __ns1__UseItemCouponFromCouponBox *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__UseItemCouponFromCouponBox(soap, "ns1:UseItemCouponFromCouponBox", -1, &a->ns1__UseItemCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseItemCouponFromCouponBox * SOAP_FMAC4 soap_in___ns1__UseItemCouponFromCouponBox(struct soap *soap, const char *tag, struct __ns1__UseItemCouponFromCouponBox *a, const char *type)
{
	size_t soap_flag_ns1__UseItemCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__UseItemCouponFromCouponBox *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__UseItemCouponFromCouponBox, sizeof(struct __ns1__UseItemCouponFromCouponBox), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__UseItemCouponFromCouponBox(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__UseItemCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__UseItemCouponFromCouponBox(soap, "ns1:UseItemCouponFromCouponBox", &a->ns1__UseItemCouponFromCouponBox, ""))
				{	soap_flag_ns1__UseItemCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UseItemCouponFromCouponBox(struct soap *soap, const struct __ns1__UseItemCouponFromCouponBox *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__UseItemCouponFromCouponBox(soap, tag?tag:"-ns1:UseItemCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseItemCouponFromCouponBox * SOAP_FMAC4 soap_get___ns1__UseItemCouponFromCouponBox(struct soap *soap, struct __ns1__UseItemCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__UseItemCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__UseItemCouponFromCouponBox * SOAP_FMAC2 soap_instantiate___ns1__UseItemCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__UseItemCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__UseItemCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__UseItemCouponFromCouponBox);
		if (size)
			*size = sizeof(struct __ns1__UseItemCouponFromCouponBox);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__UseItemCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(struct __ns1__UseItemCouponFromCouponBox);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__UseItemCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UseItemCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__UseItemCouponFromCouponBox %p -> %p\n", q, p));
	*(struct __ns1__UseItemCouponFromCouponBox*)p = *(struct __ns1__UseItemCouponFromCouponBox*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckItemCouponFromCouponBox(struct soap *soap, struct __ns1__CheckItemCouponFromCouponBox *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckItemCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckItemCouponFromCouponBox(struct soap *soap, const struct __ns1__CheckItemCouponFromCouponBox *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckItemCouponFromCouponBox(soap, &a->ns1__CheckItemCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckItemCouponFromCouponBox(struct soap *soap, const char *tag, int id, const struct __ns1__CheckItemCouponFromCouponBox *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckItemCouponFromCouponBox(soap, "ns1:CheckItemCouponFromCouponBox", -1, &a->ns1__CheckItemCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckItemCouponFromCouponBox * SOAP_FMAC4 soap_in___ns1__CheckItemCouponFromCouponBox(struct soap *soap, const char *tag, struct __ns1__CheckItemCouponFromCouponBox *a, const char *type)
{
	size_t soap_flag_ns1__CheckItemCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__CheckItemCouponFromCouponBox *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckItemCouponFromCouponBox, sizeof(struct __ns1__CheckItemCouponFromCouponBox), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckItemCouponFromCouponBox(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckItemCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckItemCouponFromCouponBox(soap, "ns1:CheckItemCouponFromCouponBox", &a->ns1__CheckItemCouponFromCouponBox, ""))
				{	soap_flag_ns1__CheckItemCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckItemCouponFromCouponBox(struct soap *soap, const struct __ns1__CheckItemCouponFromCouponBox *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckItemCouponFromCouponBox(soap, tag?tag:"-ns1:CheckItemCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckItemCouponFromCouponBox * SOAP_FMAC4 soap_get___ns1__CheckItemCouponFromCouponBox(struct soap *soap, struct __ns1__CheckItemCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckItemCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckItemCouponFromCouponBox * SOAP_FMAC2 soap_instantiate___ns1__CheckItemCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckItemCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckItemCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckItemCouponFromCouponBox);
		if (size)
			*size = sizeof(struct __ns1__CheckItemCouponFromCouponBox);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckItemCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckItemCouponFromCouponBox);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckItemCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckItemCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckItemCouponFromCouponBox %p -> %p\n", q, p));
	*(struct __ns1__CheckItemCouponFromCouponBox*)p = *(struct __ns1__CheckItemCouponFromCouponBox*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RollbackDiscountItemCoupon(struct soap *soap, struct __ns1__RollbackDiscountItemCoupon *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__RollbackDiscountItemCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RollbackDiscountItemCoupon(struct soap *soap, const struct __ns1__RollbackDiscountItemCoupon *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__RollbackDiscountItemCoupon(soap, &a->ns1__RollbackDiscountItemCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RollbackDiscountItemCoupon(struct soap *soap, const char *tag, int id, const struct __ns1__RollbackDiscountItemCoupon *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__RollbackDiscountItemCoupon(soap, "ns1:RollbackDiscountItemCoupon", -1, &a->ns1__RollbackDiscountItemCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackDiscountItemCoupon * SOAP_FMAC4 soap_in___ns1__RollbackDiscountItemCoupon(struct soap *soap, const char *tag, struct __ns1__RollbackDiscountItemCoupon *a, const char *type)
{
	size_t soap_flag_ns1__RollbackDiscountItemCoupon = 1;
	short soap_flag;
	a = (struct __ns1__RollbackDiscountItemCoupon *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__RollbackDiscountItemCoupon, sizeof(struct __ns1__RollbackDiscountItemCoupon), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__RollbackDiscountItemCoupon(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__RollbackDiscountItemCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__RollbackDiscountItemCoupon(soap, "ns1:RollbackDiscountItemCoupon", &a->ns1__RollbackDiscountItemCoupon, ""))
				{	soap_flag_ns1__RollbackDiscountItemCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RollbackDiscountItemCoupon(struct soap *soap, const struct __ns1__RollbackDiscountItemCoupon *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__RollbackDiscountItemCoupon(soap, tag?tag:"-ns1:RollbackDiscountItemCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackDiscountItemCoupon * SOAP_FMAC4 soap_get___ns1__RollbackDiscountItemCoupon(struct soap *soap, struct __ns1__RollbackDiscountItemCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__RollbackDiscountItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__RollbackDiscountItemCoupon * SOAP_FMAC2 soap_instantiate___ns1__RollbackDiscountItemCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__RollbackDiscountItemCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__RollbackDiscountItemCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__RollbackDiscountItemCoupon);
		if (size)
			*size = sizeof(struct __ns1__RollbackDiscountItemCoupon);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__RollbackDiscountItemCoupon, n);
		if (size)
			*size = n * sizeof(struct __ns1__RollbackDiscountItemCoupon);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__RollbackDiscountItemCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RollbackDiscountItemCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__RollbackDiscountItemCoupon %p -> %p\n", q, p));
	*(struct __ns1__RollbackDiscountItemCoupon*)p = *(struct __ns1__RollbackDiscountItemCoupon*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UseDiscountItemCoupon(struct soap *soap, struct __ns1__UseDiscountItemCoupon *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__UseDiscountItemCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UseDiscountItemCoupon(struct soap *soap, const struct __ns1__UseDiscountItemCoupon *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__UseDiscountItemCoupon(soap, &a->ns1__UseDiscountItemCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UseDiscountItemCoupon(struct soap *soap, const char *tag, int id, const struct __ns1__UseDiscountItemCoupon *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__UseDiscountItemCoupon(soap, "ns1:UseDiscountItemCoupon", -1, &a->ns1__UseDiscountItemCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseDiscountItemCoupon * SOAP_FMAC4 soap_in___ns1__UseDiscountItemCoupon(struct soap *soap, const char *tag, struct __ns1__UseDiscountItemCoupon *a, const char *type)
{
	size_t soap_flag_ns1__UseDiscountItemCoupon = 1;
	short soap_flag;
	a = (struct __ns1__UseDiscountItemCoupon *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__UseDiscountItemCoupon, sizeof(struct __ns1__UseDiscountItemCoupon), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__UseDiscountItemCoupon(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__UseDiscountItemCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__UseDiscountItemCoupon(soap, "ns1:UseDiscountItemCoupon", &a->ns1__UseDiscountItemCoupon, ""))
				{	soap_flag_ns1__UseDiscountItemCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UseDiscountItemCoupon(struct soap *soap, const struct __ns1__UseDiscountItemCoupon *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__UseDiscountItemCoupon(soap, tag?tag:"-ns1:UseDiscountItemCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseDiscountItemCoupon * SOAP_FMAC4 soap_get___ns1__UseDiscountItemCoupon(struct soap *soap, struct __ns1__UseDiscountItemCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__UseDiscountItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__UseDiscountItemCoupon * SOAP_FMAC2 soap_instantiate___ns1__UseDiscountItemCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__UseDiscountItemCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__UseDiscountItemCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__UseDiscountItemCoupon);
		if (size)
			*size = sizeof(struct __ns1__UseDiscountItemCoupon);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__UseDiscountItemCoupon, n);
		if (size)
			*size = n * sizeof(struct __ns1__UseDiscountItemCoupon);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__UseDiscountItemCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UseDiscountItemCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__UseDiscountItemCoupon %p -> %p\n", q, p));
	*(struct __ns1__UseDiscountItemCoupon*)p = *(struct __ns1__UseDiscountItemCoupon*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckDiscountItemCoupon(struct soap *soap, struct __ns1__CheckDiscountItemCoupon *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckDiscountItemCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckDiscountItemCoupon(struct soap *soap, const struct __ns1__CheckDiscountItemCoupon *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckDiscountItemCoupon(soap, &a->ns1__CheckDiscountItemCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckDiscountItemCoupon(struct soap *soap, const char *tag, int id, const struct __ns1__CheckDiscountItemCoupon *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckDiscountItemCoupon(soap, "ns1:CheckDiscountItemCoupon", -1, &a->ns1__CheckDiscountItemCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckDiscountItemCoupon * SOAP_FMAC4 soap_in___ns1__CheckDiscountItemCoupon(struct soap *soap, const char *tag, struct __ns1__CheckDiscountItemCoupon *a, const char *type)
{
	size_t soap_flag_ns1__CheckDiscountItemCoupon = 1;
	short soap_flag;
	a = (struct __ns1__CheckDiscountItemCoupon *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckDiscountItemCoupon, sizeof(struct __ns1__CheckDiscountItemCoupon), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckDiscountItemCoupon(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckDiscountItemCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckDiscountItemCoupon(soap, "ns1:CheckDiscountItemCoupon", &a->ns1__CheckDiscountItemCoupon, ""))
				{	soap_flag_ns1__CheckDiscountItemCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckDiscountItemCoupon(struct soap *soap, const struct __ns1__CheckDiscountItemCoupon *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckDiscountItemCoupon(soap, tag?tag:"-ns1:CheckDiscountItemCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckDiscountItemCoupon * SOAP_FMAC4 soap_get___ns1__CheckDiscountItemCoupon(struct soap *soap, struct __ns1__CheckDiscountItemCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckDiscountItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckDiscountItemCoupon * SOAP_FMAC2 soap_instantiate___ns1__CheckDiscountItemCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckDiscountItemCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckDiscountItemCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckDiscountItemCoupon);
		if (size)
			*size = sizeof(struct __ns1__CheckDiscountItemCoupon);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckDiscountItemCoupon, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckDiscountItemCoupon);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckDiscountItemCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckDiscountItemCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckDiscountItemCoupon %p -> %p\n", q, p));
	*(struct __ns1__CheckDiscountItemCoupon*)p = *(struct __ns1__CheckDiscountItemCoupon*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, struct __ns1__RollbackDiscountCouponFromCouponBox *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__RollbackDiscountCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, const struct __ns1__RollbackDiscountCouponFromCouponBox *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(soap, &a->ns1__RollbackDiscountCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, const char *tag, int id, const struct __ns1__RollbackDiscountCouponFromCouponBox *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(soap, "ns1:RollbackDiscountCouponFromCouponBox", -1, &a->ns1__RollbackDiscountCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackDiscountCouponFromCouponBox * SOAP_FMAC4 soap_in___ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, const char *tag, struct __ns1__RollbackDiscountCouponFromCouponBox *a, const char *type)
{
	size_t soap_flag_ns1__RollbackDiscountCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__RollbackDiscountCouponFromCouponBox *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__RollbackDiscountCouponFromCouponBox, sizeof(struct __ns1__RollbackDiscountCouponFromCouponBox), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__RollbackDiscountCouponFromCouponBox(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__RollbackDiscountCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(soap, "ns1:RollbackDiscountCouponFromCouponBox", &a->ns1__RollbackDiscountCouponFromCouponBox, ""))
				{	soap_flag_ns1__RollbackDiscountCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, const struct __ns1__RollbackDiscountCouponFromCouponBox *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__RollbackDiscountCouponFromCouponBox(soap, tag?tag:"-ns1:RollbackDiscountCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackDiscountCouponFromCouponBox * SOAP_FMAC4 soap_get___ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, struct __ns1__RollbackDiscountCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__RollbackDiscountCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__RollbackDiscountCouponFromCouponBox * SOAP_FMAC2 soap_instantiate___ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__RollbackDiscountCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__RollbackDiscountCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__RollbackDiscountCouponFromCouponBox);
		if (size)
			*size = sizeof(struct __ns1__RollbackDiscountCouponFromCouponBox);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__RollbackDiscountCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(struct __ns1__RollbackDiscountCouponFromCouponBox);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__RollbackDiscountCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__RollbackDiscountCouponFromCouponBox %p -> %p\n", q, p));
	*(struct __ns1__RollbackDiscountCouponFromCouponBox*)p = *(struct __ns1__RollbackDiscountCouponFromCouponBox*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UseDiscountCouponFromCouponBox(struct soap *soap, struct __ns1__UseDiscountCouponFromCouponBox *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__UseDiscountCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UseDiscountCouponFromCouponBox(struct soap *soap, const struct __ns1__UseDiscountCouponFromCouponBox *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__UseDiscountCouponFromCouponBox(soap, &a->ns1__UseDiscountCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UseDiscountCouponFromCouponBox(struct soap *soap, const char *tag, int id, const struct __ns1__UseDiscountCouponFromCouponBox *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__UseDiscountCouponFromCouponBox(soap, "ns1:UseDiscountCouponFromCouponBox", -1, &a->ns1__UseDiscountCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseDiscountCouponFromCouponBox * SOAP_FMAC4 soap_in___ns1__UseDiscountCouponFromCouponBox(struct soap *soap, const char *tag, struct __ns1__UseDiscountCouponFromCouponBox *a, const char *type)
{
	size_t soap_flag_ns1__UseDiscountCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__UseDiscountCouponFromCouponBox *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__UseDiscountCouponFromCouponBox, sizeof(struct __ns1__UseDiscountCouponFromCouponBox), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__UseDiscountCouponFromCouponBox(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__UseDiscountCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__UseDiscountCouponFromCouponBox(soap, "ns1:UseDiscountCouponFromCouponBox", &a->ns1__UseDiscountCouponFromCouponBox, ""))
				{	soap_flag_ns1__UseDiscountCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UseDiscountCouponFromCouponBox(struct soap *soap, const struct __ns1__UseDiscountCouponFromCouponBox *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__UseDiscountCouponFromCouponBox(soap, tag?tag:"-ns1:UseDiscountCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseDiscountCouponFromCouponBox * SOAP_FMAC4 soap_get___ns1__UseDiscountCouponFromCouponBox(struct soap *soap, struct __ns1__UseDiscountCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__UseDiscountCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__UseDiscountCouponFromCouponBox * SOAP_FMAC2 soap_instantiate___ns1__UseDiscountCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__UseDiscountCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__UseDiscountCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__UseDiscountCouponFromCouponBox);
		if (size)
			*size = sizeof(struct __ns1__UseDiscountCouponFromCouponBox);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__UseDiscountCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(struct __ns1__UseDiscountCouponFromCouponBox);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__UseDiscountCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UseDiscountCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__UseDiscountCouponFromCouponBox %p -> %p\n", q, p));
	*(struct __ns1__UseDiscountCouponFromCouponBox*)p = *(struct __ns1__UseDiscountCouponFromCouponBox*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, struct __ns1__CheckDiscountCouponFromCouponBox *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckDiscountCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, const struct __ns1__CheckDiscountCouponFromCouponBox *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckDiscountCouponFromCouponBox(soap, &a->ns1__CheckDiscountCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, const char *tag, int id, const struct __ns1__CheckDiscountCouponFromCouponBox *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckDiscountCouponFromCouponBox(soap, "ns1:CheckDiscountCouponFromCouponBox", -1, &a->ns1__CheckDiscountCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckDiscountCouponFromCouponBox * SOAP_FMAC4 soap_in___ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, const char *tag, struct __ns1__CheckDiscountCouponFromCouponBox *a, const char *type)
{
	size_t soap_flag_ns1__CheckDiscountCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__CheckDiscountCouponFromCouponBox *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckDiscountCouponFromCouponBox, sizeof(struct __ns1__CheckDiscountCouponFromCouponBox), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckDiscountCouponFromCouponBox(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckDiscountCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckDiscountCouponFromCouponBox(soap, "ns1:CheckDiscountCouponFromCouponBox", &a->ns1__CheckDiscountCouponFromCouponBox, ""))
				{	soap_flag_ns1__CheckDiscountCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, const struct __ns1__CheckDiscountCouponFromCouponBox *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckDiscountCouponFromCouponBox(soap, tag?tag:"-ns1:CheckDiscountCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckDiscountCouponFromCouponBox * SOAP_FMAC4 soap_get___ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, struct __ns1__CheckDiscountCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckDiscountCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckDiscountCouponFromCouponBox * SOAP_FMAC2 soap_instantiate___ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckDiscountCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckDiscountCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckDiscountCouponFromCouponBox);
		if (size)
			*size = sizeof(struct __ns1__CheckDiscountCouponFromCouponBox);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckDiscountCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckDiscountCouponFromCouponBox);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckDiscountCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckDiscountCouponFromCouponBox %p -> %p\n", q, p));
	*(struct __ns1__CheckDiscountCouponFromCouponBox*)p = *(struct __ns1__CheckDiscountCouponFromCouponBox*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, struct __ns1__SelectHoldingCouponCountByAccountId *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectHoldingCouponCountByAccountId = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, const struct __ns1__SelectHoldingCouponCountByAccountId *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectHoldingCouponCountByAccountId(soap, &a->ns1__SelectHoldingCouponCountByAccountId);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, const char *tag, int id, const struct __ns1__SelectHoldingCouponCountByAccountId *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountId(soap, "ns1:SelectHoldingCouponCountByAccountId", -1, &a->ns1__SelectHoldingCouponCountByAccountId, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectHoldingCouponCountByAccountId * SOAP_FMAC4 soap_in___ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, const char *tag, struct __ns1__SelectHoldingCouponCountByAccountId *a, const char *type)
{
	size_t soap_flag_ns1__SelectHoldingCouponCountByAccountId = 1;
	short soap_flag;
	a = (struct __ns1__SelectHoldingCouponCountByAccountId *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountId, sizeof(struct __ns1__SelectHoldingCouponCountByAccountId), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectHoldingCouponCountByAccountId(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectHoldingCouponCountByAccountId && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountId(soap, "ns1:SelectHoldingCouponCountByAccountId", &a->ns1__SelectHoldingCouponCountByAccountId, ""))
				{	soap_flag_ns1__SelectHoldingCouponCountByAccountId--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, const struct __ns1__SelectHoldingCouponCountByAccountId *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectHoldingCouponCountByAccountId(soap, tag?tag:"-ns1:SelectHoldingCouponCountByAccountId", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectHoldingCouponCountByAccountId * SOAP_FMAC4 soap_get___ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, struct __ns1__SelectHoldingCouponCountByAccountId *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectHoldingCouponCountByAccountId(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectHoldingCouponCountByAccountId * SOAP_FMAC2 soap_instantiate___ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectHoldingCouponCountByAccountId(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountId, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectHoldingCouponCountByAccountId);
		if (size)
			*size = sizeof(struct __ns1__SelectHoldingCouponCountByAccountId);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectHoldingCouponCountByAccountId, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectHoldingCouponCountByAccountId);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectHoldingCouponCountByAccountId*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectHoldingCouponCountByAccountId %p -> %p\n", q, p));
	*(struct __ns1__SelectHoldingCouponCountByAccountId*)p = *(struct __ns1__SelectHoldingCouponCountByAccountId*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, const struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, &a->ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, const char *tag, int id, const struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCode", -1, &a->ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode * SOAP_FMAC4 soap_in___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, const char *tag, struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *a, const char *type)
{
	size_t soap_flag_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode = 1;
	short soap_flag;
	a = (struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode, sizeof(struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, "ns1:SelectHoldingCouponCountByAccountIdByGameServiceCode", &a->ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode, ""))
				{	soap_flag_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, const struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, tag?tag:"-ns1:SelectHoldingCouponCountByAccountIdByGameServiceCode", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode * SOAP_FMAC4 soap_get___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode * SOAP_FMAC2 soap_instantiate___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode);
		if (size)
			*size = sizeof(struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode %p -> %p\n", q, p));
	*(struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode*)p = *(struct __ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectAppliableItemCodeForDiscountByAccountByGame = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, const struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, &a->ns1__SelectAppliableItemCodeForDiscountByAccountByGame);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, const char *tag, int id, const struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, "ns1:SelectAppliableItemCodeForDiscountByAccountByGame", -1, &a->ns1__SelectAppliableItemCodeForDiscountByAccountByGame, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame * SOAP_FMAC4 soap_in___ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, const char *tag, struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame *a, const char *type)
{
	size_t soap_flag_ns1__SelectAppliableItemCodeForDiscountByAccountByGame = 1;
	short soap_flag;
	a = (struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectAppliableItemCodeForDiscountByAccountByGame, sizeof(struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectAppliableItemCodeForDiscountByAccountByGame && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, "ns1:SelectAppliableItemCodeForDiscountByAccountByGame", &a->ns1__SelectAppliableItemCodeForDiscountByAccountByGame, ""))
				{	soap_flag_ns1__SelectAppliableItemCodeForDiscountByAccountByGame--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, const struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, tag?tag:"-ns1:SelectAppliableItemCodeForDiscountByAccountByGame", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame * SOAP_FMAC4 soap_get___ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame * SOAP_FMAC2 soap_instantiate___ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectAppliableItemCodeForDiscountByAccountByGame(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectAppliableItemCodeForDiscountByAccountByGame, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame);
		if (size)
			*size = sizeof(struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame %p -> %p\n", q, p));
	*(struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame*)p = *(struct __ns1__SelectAppliableItemCodeForDiscountByAccountByGame*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckActivationCouponStatus(struct soap *soap, struct __ns1__CheckActivationCouponStatus *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckActivationCouponStatus = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckActivationCouponStatus(struct soap *soap, const struct __ns1__CheckActivationCouponStatus *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckActivationCouponStatus(soap, &a->ns1__CheckActivationCouponStatus);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckActivationCouponStatus(struct soap *soap, const char *tag, int id, const struct __ns1__CheckActivationCouponStatus *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckActivationCouponStatus(soap, "ns1:CheckActivationCouponStatus", -1, &a->ns1__CheckActivationCouponStatus, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckActivationCouponStatus * SOAP_FMAC4 soap_in___ns1__CheckActivationCouponStatus(struct soap *soap, const char *tag, struct __ns1__CheckActivationCouponStatus *a, const char *type)
{
	size_t soap_flag_ns1__CheckActivationCouponStatus = 1;
	short soap_flag;
	a = (struct __ns1__CheckActivationCouponStatus *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckActivationCouponStatus, sizeof(struct __ns1__CheckActivationCouponStatus), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckActivationCouponStatus(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckActivationCouponStatus && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckActivationCouponStatus(soap, "ns1:CheckActivationCouponStatus", &a->ns1__CheckActivationCouponStatus, ""))
				{	soap_flag_ns1__CheckActivationCouponStatus--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckActivationCouponStatus(struct soap *soap, const struct __ns1__CheckActivationCouponStatus *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckActivationCouponStatus(soap, tag?tag:"-ns1:CheckActivationCouponStatus", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckActivationCouponStatus * SOAP_FMAC4 soap_get___ns1__CheckActivationCouponStatus(struct soap *soap, struct __ns1__CheckActivationCouponStatus *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckActivationCouponStatus(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckActivationCouponStatus * SOAP_FMAC2 soap_instantiate___ns1__CheckActivationCouponStatus(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckActivationCouponStatus(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckActivationCouponStatus, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckActivationCouponStatus);
		if (size)
			*size = sizeof(struct __ns1__CheckActivationCouponStatus);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckActivationCouponStatus, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckActivationCouponStatus);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckActivationCouponStatus*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckActivationCouponStatus(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckActivationCouponStatus %p -> %p\n", q, p));
	*(struct __ns1__CheckActivationCouponStatus*)p = *(struct __ns1__CheckActivationCouponStatus*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CancelActivationCashCoupon(struct soap *soap, struct __ns1__CancelActivationCashCoupon *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CancelActivationCashCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CancelActivationCashCoupon(struct soap *soap, const struct __ns1__CancelActivationCashCoupon *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CancelActivationCashCoupon(soap, &a->ns1__CancelActivationCashCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CancelActivationCashCoupon(struct soap *soap, const char *tag, int id, const struct __ns1__CancelActivationCashCoupon *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CancelActivationCashCoupon(soap, "ns1:CancelActivationCashCoupon", -1, &a->ns1__CancelActivationCashCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CancelActivationCashCoupon * SOAP_FMAC4 soap_in___ns1__CancelActivationCashCoupon(struct soap *soap, const char *tag, struct __ns1__CancelActivationCashCoupon *a, const char *type)
{
	size_t soap_flag_ns1__CancelActivationCashCoupon = 1;
	short soap_flag;
	a = (struct __ns1__CancelActivationCashCoupon *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CancelActivationCashCoupon, sizeof(struct __ns1__CancelActivationCashCoupon), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CancelActivationCashCoupon(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CancelActivationCashCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CancelActivationCashCoupon(soap, "ns1:CancelActivationCashCoupon", &a->ns1__CancelActivationCashCoupon, ""))
				{	soap_flag_ns1__CancelActivationCashCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CancelActivationCashCoupon(struct soap *soap, const struct __ns1__CancelActivationCashCoupon *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CancelActivationCashCoupon(soap, tag?tag:"-ns1:CancelActivationCashCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CancelActivationCashCoupon * SOAP_FMAC4 soap_get___ns1__CancelActivationCashCoupon(struct soap *soap, struct __ns1__CancelActivationCashCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CancelActivationCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CancelActivationCashCoupon * SOAP_FMAC2 soap_instantiate___ns1__CancelActivationCashCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CancelActivationCashCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CancelActivationCashCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CancelActivationCashCoupon);
		if (size)
			*size = sizeof(struct __ns1__CancelActivationCashCoupon);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CancelActivationCashCoupon, n);
		if (size)
			*size = n * sizeof(struct __ns1__CancelActivationCashCoupon);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CancelActivationCashCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CancelActivationCashCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CancelActivationCashCoupon %p -> %p\n", q, p));
	*(struct __ns1__CancelActivationCashCoupon*)p = *(struct __ns1__CancelActivationCashCoupon*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ReverseDeactivationCashCoupon(struct soap *soap, struct __ns1__ReverseDeactivationCashCoupon *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__ReverseDeactivationCashCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ReverseDeactivationCashCoupon(struct soap *soap, const struct __ns1__ReverseDeactivationCashCoupon *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__ReverseDeactivationCashCoupon(soap, &a->ns1__ReverseDeactivationCashCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ReverseDeactivationCashCoupon(struct soap *soap, const char *tag, int id, const struct __ns1__ReverseDeactivationCashCoupon *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__ReverseDeactivationCashCoupon(soap, "ns1:ReverseDeactivationCashCoupon", -1, &a->ns1__ReverseDeactivationCashCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__ReverseDeactivationCashCoupon * SOAP_FMAC4 soap_in___ns1__ReverseDeactivationCashCoupon(struct soap *soap, const char *tag, struct __ns1__ReverseDeactivationCashCoupon *a, const char *type)
{
	size_t soap_flag_ns1__ReverseDeactivationCashCoupon = 1;
	short soap_flag;
	a = (struct __ns1__ReverseDeactivationCashCoupon *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__ReverseDeactivationCashCoupon, sizeof(struct __ns1__ReverseDeactivationCashCoupon), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__ReverseDeactivationCashCoupon(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__ReverseDeactivationCashCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__ReverseDeactivationCashCoupon(soap, "ns1:ReverseDeactivationCashCoupon", &a->ns1__ReverseDeactivationCashCoupon, ""))
				{	soap_flag_ns1__ReverseDeactivationCashCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ReverseDeactivationCashCoupon(struct soap *soap, const struct __ns1__ReverseDeactivationCashCoupon *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__ReverseDeactivationCashCoupon(soap, tag?tag:"-ns1:ReverseDeactivationCashCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__ReverseDeactivationCashCoupon * SOAP_FMAC4 soap_get___ns1__ReverseDeactivationCashCoupon(struct soap *soap, struct __ns1__ReverseDeactivationCashCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__ReverseDeactivationCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__ReverseDeactivationCashCoupon * SOAP_FMAC2 soap_instantiate___ns1__ReverseDeactivationCashCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__ReverseDeactivationCashCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__ReverseDeactivationCashCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__ReverseDeactivationCashCoupon);
		if (size)
			*size = sizeof(struct __ns1__ReverseDeactivationCashCoupon);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__ReverseDeactivationCashCoupon, n);
		if (size)
			*size = n * sizeof(struct __ns1__ReverseDeactivationCashCoupon);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__ReverseDeactivationCashCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__ReverseDeactivationCashCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__ReverseDeactivationCashCoupon %p -> %p\n", q, p));
	*(struct __ns1__ReverseDeactivationCashCoupon*)p = *(struct __ns1__ReverseDeactivationCashCoupon*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ReverseActivationCashCoupon(struct soap *soap, struct __ns1__ReverseActivationCashCoupon *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__ReverseActivationCashCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ReverseActivationCashCoupon(struct soap *soap, const struct __ns1__ReverseActivationCashCoupon *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__ReverseActivationCashCoupon(soap, &a->ns1__ReverseActivationCashCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ReverseActivationCashCoupon(struct soap *soap, const char *tag, int id, const struct __ns1__ReverseActivationCashCoupon *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__ReverseActivationCashCoupon(soap, "ns1:ReverseActivationCashCoupon", -1, &a->ns1__ReverseActivationCashCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__ReverseActivationCashCoupon * SOAP_FMAC4 soap_in___ns1__ReverseActivationCashCoupon(struct soap *soap, const char *tag, struct __ns1__ReverseActivationCashCoupon *a, const char *type)
{
	size_t soap_flag_ns1__ReverseActivationCashCoupon = 1;
	short soap_flag;
	a = (struct __ns1__ReverseActivationCashCoupon *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__ReverseActivationCashCoupon, sizeof(struct __ns1__ReverseActivationCashCoupon), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__ReverseActivationCashCoupon(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__ReverseActivationCashCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__ReverseActivationCashCoupon(soap, "ns1:ReverseActivationCashCoupon", &a->ns1__ReverseActivationCashCoupon, ""))
				{	soap_flag_ns1__ReverseActivationCashCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ReverseActivationCashCoupon(struct soap *soap, const struct __ns1__ReverseActivationCashCoupon *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__ReverseActivationCashCoupon(soap, tag?tag:"-ns1:ReverseActivationCashCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__ReverseActivationCashCoupon * SOAP_FMAC4 soap_get___ns1__ReverseActivationCashCoupon(struct soap *soap, struct __ns1__ReverseActivationCashCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__ReverseActivationCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__ReverseActivationCashCoupon * SOAP_FMAC2 soap_instantiate___ns1__ReverseActivationCashCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__ReverseActivationCashCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__ReverseActivationCashCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__ReverseActivationCashCoupon);
		if (size)
			*size = sizeof(struct __ns1__ReverseActivationCashCoupon);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__ReverseActivationCashCoupon, n);
		if (size)
			*size = n * sizeof(struct __ns1__ReverseActivationCashCoupon);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__ReverseActivationCashCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__ReverseActivationCashCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__ReverseActivationCashCoupon %p -> %p\n", q, p));
	*(struct __ns1__ReverseActivationCashCoupon*)p = *(struct __ns1__ReverseActivationCashCoupon*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ActivationCashCoupon(struct soap *soap, struct __ns1__ActivationCashCoupon *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__ActivationCashCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ActivationCashCoupon(struct soap *soap, const struct __ns1__ActivationCashCoupon *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__ActivationCashCoupon(soap, &a->ns1__ActivationCashCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ActivationCashCoupon(struct soap *soap, const char *tag, int id, const struct __ns1__ActivationCashCoupon *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__ActivationCashCoupon(soap, "ns1:ActivationCashCoupon", -1, &a->ns1__ActivationCashCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__ActivationCashCoupon * SOAP_FMAC4 soap_in___ns1__ActivationCashCoupon(struct soap *soap, const char *tag, struct __ns1__ActivationCashCoupon *a, const char *type)
{
	size_t soap_flag_ns1__ActivationCashCoupon = 1;
	short soap_flag;
	a = (struct __ns1__ActivationCashCoupon *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__ActivationCashCoupon, sizeof(struct __ns1__ActivationCashCoupon), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__ActivationCashCoupon(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__ActivationCashCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__ActivationCashCoupon(soap, "ns1:ActivationCashCoupon", &a->ns1__ActivationCashCoupon, ""))
				{	soap_flag_ns1__ActivationCashCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ActivationCashCoupon(struct soap *soap, const struct __ns1__ActivationCashCoupon *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__ActivationCashCoupon(soap, tag?tag:"-ns1:ActivationCashCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__ActivationCashCoupon * SOAP_FMAC4 soap_get___ns1__ActivationCashCoupon(struct soap *soap, struct __ns1__ActivationCashCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__ActivationCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__ActivationCashCoupon * SOAP_FMAC2 soap_instantiate___ns1__ActivationCashCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__ActivationCashCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__ActivationCashCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__ActivationCashCoupon);
		if (size)
			*size = sizeof(struct __ns1__ActivationCashCoupon);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__ActivationCashCoupon, n);
		if (size)
			*size = n * sizeof(struct __ns1__ActivationCashCoupon);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__ActivationCashCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__ActivationCashCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__ActivationCashCoupon %p -> %p\n", q, p));
	*(struct __ns1__ActivationCashCoupon*)p = *(struct __ns1__ActivationCashCoupon*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RollbackCashCoupon(struct soap *soap, struct __ns1__RollbackCashCoupon *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__RollbackCashCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RollbackCashCoupon(struct soap *soap, const struct __ns1__RollbackCashCoupon *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__RollbackCashCoupon(soap, &a->ns1__RollbackCashCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RollbackCashCoupon(struct soap *soap, const char *tag, int id, const struct __ns1__RollbackCashCoupon *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__RollbackCashCoupon(soap, "ns1:RollbackCashCoupon", -1, &a->ns1__RollbackCashCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackCashCoupon * SOAP_FMAC4 soap_in___ns1__RollbackCashCoupon(struct soap *soap, const char *tag, struct __ns1__RollbackCashCoupon *a, const char *type)
{
	size_t soap_flag_ns1__RollbackCashCoupon = 1;
	short soap_flag;
	a = (struct __ns1__RollbackCashCoupon *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__RollbackCashCoupon, sizeof(struct __ns1__RollbackCashCoupon), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__RollbackCashCoupon(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__RollbackCashCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__RollbackCashCoupon(soap, "ns1:RollbackCashCoupon", &a->ns1__RollbackCashCoupon, ""))
				{	soap_flag_ns1__RollbackCashCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RollbackCashCoupon(struct soap *soap, const struct __ns1__RollbackCashCoupon *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__RollbackCashCoupon(soap, tag?tag:"-ns1:RollbackCashCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackCashCoupon * SOAP_FMAC4 soap_get___ns1__RollbackCashCoupon(struct soap *soap, struct __ns1__RollbackCashCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__RollbackCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__RollbackCashCoupon * SOAP_FMAC2 soap_instantiate___ns1__RollbackCashCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__RollbackCashCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__RollbackCashCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__RollbackCashCoupon);
		if (size)
			*size = sizeof(struct __ns1__RollbackCashCoupon);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__RollbackCashCoupon, n);
		if (size)
			*size = n * sizeof(struct __ns1__RollbackCashCoupon);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__RollbackCashCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RollbackCashCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__RollbackCashCoupon %p -> %p\n", q, p));
	*(struct __ns1__RollbackCashCoupon*)p = *(struct __ns1__RollbackCashCoupon*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UseCashCoupon(struct soap *soap, struct __ns1__UseCashCoupon *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__UseCashCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UseCashCoupon(struct soap *soap, const struct __ns1__UseCashCoupon *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__UseCashCoupon(soap, &a->ns1__UseCashCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UseCashCoupon(struct soap *soap, const char *tag, int id, const struct __ns1__UseCashCoupon *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__UseCashCoupon(soap, "ns1:UseCashCoupon", -1, &a->ns1__UseCashCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseCashCoupon * SOAP_FMAC4 soap_in___ns1__UseCashCoupon(struct soap *soap, const char *tag, struct __ns1__UseCashCoupon *a, const char *type)
{
	size_t soap_flag_ns1__UseCashCoupon = 1;
	short soap_flag;
	a = (struct __ns1__UseCashCoupon *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__UseCashCoupon, sizeof(struct __ns1__UseCashCoupon), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__UseCashCoupon(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__UseCashCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__UseCashCoupon(soap, "ns1:UseCashCoupon", &a->ns1__UseCashCoupon, ""))
				{	soap_flag_ns1__UseCashCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UseCashCoupon(struct soap *soap, const struct __ns1__UseCashCoupon *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__UseCashCoupon(soap, tag?tag:"-ns1:UseCashCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseCashCoupon * SOAP_FMAC4 soap_get___ns1__UseCashCoupon(struct soap *soap, struct __ns1__UseCashCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__UseCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__UseCashCoupon * SOAP_FMAC2 soap_instantiate___ns1__UseCashCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__UseCashCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__UseCashCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__UseCashCoupon);
		if (size)
			*size = sizeof(struct __ns1__UseCashCoupon);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__UseCashCoupon, n);
		if (size)
			*size = n * sizeof(struct __ns1__UseCashCoupon);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__UseCashCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UseCashCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__UseCashCoupon %p -> %p\n", q, p));
	*(struct __ns1__UseCashCoupon*)p = *(struct __ns1__UseCashCoupon*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckCashCoupon(struct soap *soap, struct __ns1__CheckCashCoupon *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckCashCoupon = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckCashCoupon(struct soap *soap, const struct __ns1__CheckCashCoupon *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckCashCoupon(soap, &a->ns1__CheckCashCoupon);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckCashCoupon(struct soap *soap, const char *tag, int id, const struct __ns1__CheckCashCoupon *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckCashCoupon(soap, "ns1:CheckCashCoupon", -1, &a->ns1__CheckCashCoupon, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckCashCoupon * SOAP_FMAC4 soap_in___ns1__CheckCashCoupon(struct soap *soap, const char *tag, struct __ns1__CheckCashCoupon *a, const char *type)
{
	size_t soap_flag_ns1__CheckCashCoupon = 1;
	short soap_flag;
	a = (struct __ns1__CheckCashCoupon *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckCashCoupon, sizeof(struct __ns1__CheckCashCoupon), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckCashCoupon(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckCashCoupon && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckCashCoupon(soap, "ns1:CheckCashCoupon", &a->ns1__CheckCashCoupon, ""))
				{	soap_flag_ns1__CheckCashCoupon--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckCashCoupon(struct soap *soap, const struct __ns1__CheckCashCoupon *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckCashCoupon(soap, tag?tag:"-ns1:CheckCashCoupon", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckCashCoupon * SOAP_FMAC4 soap_get___ns1__CheckCashCoupon(struct soap *soap, struct __ns1__CheckCashCoupon *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckCashCoupon * SOAP_FMAC2 soap_instantiate___ns1__CheckCashCoupon(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckCashCoupon(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckCashCoupon, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckCashCoupon);
		if (size)
			*size = sizeof(struct __ns1__CheckCashCoupon);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckCashCoupon, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckCashCoupon);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckCashCoupon*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckCashCoupon(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckCashCoupon %p -> %p\n", q, p));
	*(struct __ns1__CheckCashCoupon*)p = *(struct __ns1__CheckCashCoupon*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RollbackCashCouponFromCouponBox(struct soap *soap, struct __ns1__RollbackCashCouponFromCouponBox *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__RollbackCashCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RollbackCashCouponFromCouponBox(struct soap *soap, const struct __ns1__RollbackCashCouponFromCouponBox *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__RollbackCashCouponFromCouponBox(soap, &a->ns1__RollbackCashCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RollbackCashCouponFromCouponBox(struct soap *soap, const char *tag, int id, const struct __ns1__RollbackCashCouponFromCouponBox *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__RollbackCashCouponFromCouponBox(soap, "ns1:RollbackCashCouponFromCouponBox", -1, &a->ns1__RollbackCashCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackCashCouponFromCouponBox * SOAP_FMAC4 soap_in___ns1__RollbackCashCouponFromCouponBox(struct soap *soap, const char *tag, struct __ns1__RollbackCashCouponFromCouponBox *a, const char *type)
{
	size_t soap_flag_ns1__RollbackCashCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__RollbackCashCouponFromCouponBox *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__RollbackCashCouponFromCouponBox, sizeof(struct __ns1__RollbackCashCouponFromCouponBox), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__RollbackCashCouponFromCouponBox(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__RollbackCashCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__RollbackCashCouponFromCouponBox(soap, "ns1:RollbackCashCouponFromCouponBox", &a->ns1__RollbackCashCouponFromCouponBox, ""))
				{	soap_flag_ns1__RollbackCashCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RollbackCashCouponFromCouponBox(struct soap *soap, const struct __ns1__RollbackCashCouponFromCouponBox *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__RollbackCashCouponFromCouponBox(soap, tag?tag:"-ns1:RollbackCashCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__RollbackCashCouponFromCouponBox * SOAP_FMAC4 soap_get___ns1__RollbackCashCouponFromCouponBox(struct soap *soap, struct __ns1__RollbackCashCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__RollbackCashCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__RollbackCashCouponFromCouponBox * SOAP_FMAC2 soap_instantiate___ns1__RollbackCashCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__RollbackCashCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__RollbackCashCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__RollbackCashCouponFromCouponBox);
		if (size)
			*size = sizeof(struct __ns1__RollbackCashCouponFromCouponBox);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__RollbackCashCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(struct __ns1__RollbackCashCouponFromCouponBox);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__RollbackCashCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RollbackCashCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__RollbackCashCouponFromCouponBox %p -> %p\n", q, p));
	*(struct __ns1__RollbackCashCouponFromCouponBox*)p = *(struct __ns1__RollbackCashCouponFromCouponBox*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UseCashCouponFromCouponBox(struct soap *soap, struct __ns1__UseCashCouponFromCouponBox *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__UseCashCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UseCashCouponFromCouponBox(struct soap *soap, const struct __ns1__UseCashCouponFromCouponBox *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__UseCashCouponFromCouponBox(soap, &a->ns1__UseCashCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UseCashCouponFromCouponBox(struct soap *soap, const char *tag, int id, const struct __ns1__UseCashCouponFromCouponBox *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__UseCashCouponFromCouponBox(soap, "ns1:UseCashCouponFromCouponBox", -1, &a->ns1__UseCashCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseCashCouponFromCouponBox * SOAP_FMAC4 soap_in___ns1__UseCashCouponFromCouponBox(struct soap *soap, const char *tag, struct __ns1__UseCashCouponFromCouponBox *a, const char *type)
{
	size_t soap_flag_ns1__UseCashCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__UseCashCouponFromCouponBox *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__UseCashCouponFromCouponBox, sizeof(struct __ns1__UseCashCouponFromCouponBox), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__UseCashCouponFromCouponBox(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__UseCashCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__UseCashCouponFromCouponBox(soap, "ns1:UseCashCouponFromCouponBox", &a->ns1__UseCashCouponFromCouponBox, ""))
				{	soap_flag_ns1__UseCashCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UseCashCouponFromCouponBox(struct soap *soap, const struct __ns1__UseCashCouponFromCouponBox *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__UseCashCouponFromCouponBox(soap, tag?tag:"-ns1:UseCashCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__UseCashCouponFromCouponBox * SOAP_FMAC4 soap_get___ns1__UseCashCouponFromCouponBox(struct soap *soap, struct __ns1__UseCashCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__UseCashCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__UseCashCouponFromCouponBox * SOAP_FMAC2 soap_instantiate___ns1__UseCashCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__UseCashCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__UseCashCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__UseCashCouponFromCouponBox);
		if (size)
			*size = sizeof(struct __ns1__UseCashCouponFromCouponBox);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__UseCashCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(struct __ns1__UseCashCouponFromCouponBox);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__UseCashCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UseCashCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__UseCashCouponFromCouponBox %p -> %p\n", q, p));
	*(struct __ns1__UseCashCouponFromCouponBox*)p = *(struct __ns1__UseCashCouponFromCouponBox*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckCashCouponFromCouponBox(struct soap *soap, struct __ns1__CheckCashCouponFromCouponBox *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckCashCouponFromCouponBox = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckCashCouponFromCouponBox(struct soap *soap, const struct __ns1__CheckCashCouponFromCouponBox *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckCashCouponFromCouponBox(soap, &a->ns1__CheckCashCouponFromCouponBox);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckCashCouponFromCouponBox(struct soap *soap, const char *tag, int id, const struct __ns1__CheckCashCouponFromCouponBox *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckCashCouponFromCouponBox(soap, "ns1:CheckCashCouponFromCouponBox", -1, &a->ns1__CheckCashCouponFromCouponBox, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckCashCouponFromCouponBox * SOAP_FMAC4 soap_in___ns1__CheckCashCouponFromCouponBox(struct soap *soap, const char *tag, struct __ns1__CheckCashCouponFromCouponBox *a, const char *type)
{
	size_t soap_flag_ns1__CheckCashCouponFromCouponBox = 1;
	short soap_flag;
	a = (struct __ns1__CheckCashCouponFromCouponBox *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckCashCouponFromCouponBox, sizeof(struct __ns1__CheckCashCouponFromCouponBox), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckCashCouponFromCouponBox(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckCashCouponFromCouponBox && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckCashCouponFromCouponBox(soap, "ns1:CheckCashCouponFromCouponBox", &a->ns1__CheckCashCouponFromCouponBox, ""))
				{	soap_flag_ns1__CheckCashCouponFromCouponBox--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckCashCouponFromCouponBox(struct soap *soap, const struct __ns1__CheckCashCouponFromCouponBox *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckCashCouponFromCouponBox(soap, tag?tag:"-ns1:CheckCashCouponFromCouponBox", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckCashCouponFromCouponBox * SOAP_FMAC4 soap_get___ns1__CheckCashCouponFromCouponBox(struct soap *soap, struct __ns1__CheckCashCouponFromCouponBox *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckCashCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckCashCouponFromCouponBox * SOAP_FMAC2 soap_instantiate___ns1__CheckCashCouponFromCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckCashCouponFromCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckCashCouponFromCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckCashCouponFromCouponBox);
		if (size)
			*size = sizeof(struct __ns1__CheckCashCouponFromCouponBox);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckCashCouponFromCouponBox, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckCashCouponFromCouponBox);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckCashCouponFromCouponBox*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckCashCouponFromCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckCashCouponFromCouponBox %p -> %p\n", q, p));
	*(struct __ns1__CheckCashCouponFromCouponBox*)p = *(struct __ns1__CheckCashCouponFromCouponBox*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetCouponBoxTargetItemListCount(struct soap *soap, struct __ns1__GetCouponBoxTargetItemListCount *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__GetCouponBoxTargetItemListCount = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetCouponBoxTargetItemListCount(struct soap *soap, const struct __ns1__GetCouponBoxTargetItemListCount *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__GetCouponBoxTargetItemListCount(soap, &a->ns1__GetCouponBoxTargetItemListCount);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetCouponBoxTargetItemListCount(struct soap *soap, const char *tag, int id, const struct __ns1__GetCouponBoxTargetItemListCount *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__GetCouponBoxTargetItemListCount(soap, "ns1:GetCouponBoxTargetItemListCount", -1, &a->ns1__GetCouponBoxTargetItemListCount, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetCouponBoxTargetItemListCount * SOAP_FMAC4 soap_in___ns1__GetCouponBoxTargetItemListCount(struct soap *soap, const char *tag, struct __ns1__GetCouponBoxTargetItemListCount *a, const char *type)
{
	size_t soap_flag_ns1__GetCouponBoxTargetItemListCount = 1;
	short soap_flag;
	a = (struct __ns1__GetCouponBoxTargetItemListCount *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__GetCouponBoxTargetItemListCount, sizeof(struct __ns1__GetCouponBoxTargetItemListCount), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__GetCouponBoxTargetItemListCount(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__GetCouponBoxTargetItemListCount && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__GetCouponBoxTargetItemListCount(soap, "ns1:GetCouponBoxTargetItemListCount", &a->ns1__GetCouponBoxTargetItemListCount, ""))
				{	soap_flag_ns1__GetCouponBoxTargetItemListCount--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetCouponBoxTargetItemListCount(struct soap *soap, const struct __ns1__GetCouponBoxTargetItemListCount *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__GetCouponBoxTargetItemListCount(soap, tag?tag:"-ns1:GetCouponBoxTargetItemListCount", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetCouponBoxTargetItemListCount * SOAP_FMAC4 soap_get___ns1__GetCouponBoxTargetItemListCount(struct soap *soap, struct __ns1__GetCouponBoxTargetItemListCount *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__GetCouponBoxTargetItemListCount(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__GetCouponBoxTargetItemListCount * SOAP_FMAC2 soap_instantiate___ns1__GetCouponBoxTargetItemListCount(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__GetCouponBoxTargetItemListCount(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__GetCouponBoxTargetItemListCount, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__GetCouponBoxTargetItemListCount);
		if (size)
			*size = sizeof(struct __ns1__GetCouponBoxTargetItemListCount);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__GetCouponBoxTargetItemListCount, n);
		if (size)
			*size = n * sizeof(struct __ns1__GetCouponBoxTargetItemListCount);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__GetCouponBoxTargetItemListCount*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetCouponBoxTargetItemListCount(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__GetCouponBoxTargetItemListCount %p -> %p\n", q, p));
	*(struct __ns1__GetCouponBoxTargetItemListCount*)p = *(struct __ns1__GetCouponBoxTargetItemListCount*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectCouponBoxTargetItemList(struct soap *soap, struct __ns1__SelectCouponBoxTargetItemList *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectCouponBoxTargetItemList = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectCouponBoxTargetItemList(struct soap *soap, const struct __ns1__SelectCouponBoxTargetItemList *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectCouponBoxTargetItemList(soap, &a->ns1__SelectCouponBoxTargetItemList);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectCouponBoxTargetItemList(struct soap *soap, const char *tag, int id, const struct __ns1__SelectCouponBoxTargetItemList *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectCouponBoxTargetItemList(soap, "ns1:SelectCouponBoxTargetItemList", -1, &a->ns1__SelectCouponBoxTargetItemList, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxTargetItemList * SOAP_FMAC4 soap_in___ns1__SelectCouponBoxTargetItemList(struct soap *soap, const char *tag, struct __ns1__SelectCouponBoxTargetItemList *a, const char *type)
{
	size_t soap_flag_ns1__SelectCouponBoxTargetItemList = 1;
	short soap_flag;
	a = (struct __ns1__SelectCouponBoxTargetItemList *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectCouponBoxTargetItemList, sizeof(struct __ns1__SelectCouponBoxTargetItemList), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectCouponBoxTargetItemList(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectCouponBoxTargetItemList && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectCouponBoxTargetItemList(soap, "ns1:SelectCouponBoxTargetItemList", &a->ns1__SelectCouponBoxTargetItemList, ""))
				{	soap_flag_ns1__SelectCouponBoxTargetItemList--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectCouponBoxTargetItemList(struct soap *soap, const struct __ns1__SelectCouponBoxTargetItemList *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectCouponBoxTargetItemList(soap, tag?tag:"-ns1:SelectCouponBoxTargetItemList", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxTargetItemList * SOAP_FMAC4 soap_get___ns1__SelectCouponBoxTargetItemList(struct soap *soap, struct __ns1__SelectCouponBoxTargetItemList *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectCouponBoxTargetItemList(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectCouponBoxTargetItemList * SOAP_FMAC2 soap_instantiate___ns1__SelectCouponBoxTargetItemList(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectCouponBoxTargetItemList(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectCouponBoxTargetItemList, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectCouponBoxTargetItemList);
		if (size)
			*size = sizeof(struct __ns1__SelectCouponBoxTargetItemList);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectCouponBoxTargetItemList, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectCouponBoxTargetItemList);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectCouponBoxTargetItemList*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectCouponBoxTargetItemList(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectCouponBoxTargetItemList %p -> %p\n", q, p));
	*(struct __ns1__SelectCouponBoxTargetItemList*)p = *(struct __ns1__SelectCouponBoxTargetItemList*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__GetCouponBoxUsedListCountByNexonIDForUser = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, const struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, &a->ns1__GetCouponBoxUsedListCountByNexonIDForUser);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, const char *tag, int id, const struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, "ns1:GetCouponBoxUsedListCountByNexonIDForUser", -1, &a->ns1__GetCouponBoxUsedListCountByNexonIDForUser, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser * SOAP_FMAC4 soap_in___ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, const char *tag, struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser *a, const char *type)
{
	size_t soap_flag_ns1__GetCouponBoxUsedListCountByNexonIDForUser = 1;
	short soap_flag;
	a = (struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__GetCouponBoxUsedListCountByNexonIDForUser, sizeof(struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__GetCouponBoxUsedListCountByNexonIDForUser && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, "ns1:GetCouponBoxUsedListCountByNexonIDForUser", &a->ns1__GetCouponBoxUsedListCountByNexonIDForUser, ""))
				{	soap_flag_ns1__GetCouponBoxUsedListCountByNexonIDForUser--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, const struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, tag?tag:"-ns1:GetCouponBoxUsedListCountByNexonIDForUser", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser * SOAP_FMAC4 soap_get___ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser * SOAP_FMAC2 soap_instantiate___ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__GetCouponBoxUsedListCountByNexonIDForUser(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__GetCouponBoxUsedListCountByNexonIDForUser, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser);
		if (size)
			*size = sizeof(struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser, n);
		if (size)
			*size = n * sizeof(struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser %p -> %p\n", q, p));
	*(struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser*)p = *(struct __ns1__GetCouponBoxUsedListCountByNexonIDForUser*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, struct __ns1__GetCouponBoxListCountByNexonIDForUser *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__GetCouponBoxListCountByNexonIDForUser = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, const struct __ns1__GetCouponBoxListCountByNexonIDForUser *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(soap, &a->ns1__GetCouponBoxListCountByNexonIDForUser);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, const char *tag, int id, const struct __ns1__GetCouponBoxListCountByNexonIDForUser *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(soap, "ns1:GetCouponBoxListCountByNexonIDForUser", -1, &a->ns1__GetCouponBoxListCountByNexonIDForUser, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetCouponBoxListCountByNexonIDForUser * SOAP_FMAC4 soap_in___ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, const char *tag, struct __ns1__GetCouponBoxListCountByNexonIDForUser *a, const char *type)
{
	size_t soap_flag_ns1__GetCouponBoxListCountByNexonIDForUser = 1;
	short soap_flag;
	a = (struct __ns1__GetCouponBoxListCountByNexonIDForUser *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__GetCouponBoxListCountByNexonIDForUser, sizeof(struct __ns1__GetCouponBoxListCountByNexonIDForUser), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__GetCouponBoxListCountByNexonIDForUser(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__GetCouponBoxListCountByNexonIDForUser && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(soap, "ns1:GetCouponBoxListCountByNexonIDForUser", &a->ns1__GetCouponBoxListCountByNexonIDForUser, ""))
				{	soap_flag_ns1__GetCouponBoxListCountByNexonIDForUser--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, const struct __ns1__GetCouponBoxListCountByNexonIDForUser *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__GetCouponBoxListCountByNexonIDForUser(soap, tag?tag:"-ns1:GetCouponBoxListCountByNexonIDForUser", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetCouponBoxListCountByNexonIDForUser * SOAP_FMAC4 soap_get___ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, struct __ns1__GetCouponBoxListCountByNexonIDForUser *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__GetCouponBoxListCountByNexonIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__GetCouponBoxListCountByNexonIDForUser * SOAP_FMAC2 soap_instantiate___ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__GetCouponBoxListCountByNexonIDForUser(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__GetCouponBoxListCountByNexonIDForUser, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__GetCouponBoxListCountByNexonIDForUser);
		if (size)
			*size = sizeof(struct __ns1__GetCouponBoxListCountByNexonIDForUser);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__GetCouponBoxListCountByNexonIDForUser, n);
		if (size)
			*size = n * sizeof(struct __ns1__GetCouponBoxListCountByNexonIDForUser);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__GetCouponBoxListCountByNexonIDForUser*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__GetCouponBoxListCountByNexonIDForUser %p -> %p\n", q, p));
	*(struct __ns1__GetCouponBoxListCountByNexonIDForUser*)p = *(struct __ns1__GetCouponBoxListCountByNexonIDForUser*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, struct __ns1__SelectCouponBoxUsedListByNexonIDForUser *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectCouponBoxUsedListByNexonIDForUser = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, const struct __ns1__SelectCouponBoxUsedListByNexonIDForUser *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, &a->ns1__SelectCouponBoxUsedListByNexonIDForUser);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, const char *tag, int id, const struct __ns1__SelectCouponBoxUsedListByNexonIDForUser *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, "ns1:SelectCouponBoxUsedListByNexonIDForUser", -1, &a->ns1__SelectCouponBoxUsedListByNexonIDForUser, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxUsedListByNexonIDForUser * SOAP_FMAC4 soap_in___ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, const char *tag, struct __ns1__SelectCouponBoxUsedListByNexonIDForUser *a, const char *type)
{
	size_t soap_flag_ns1__SelectCouponBoxUsedListByNexonIDForUser = 1;
	short soap_flag;
	a = (struct __ns1__SelectCouponBoxUsedListByNexonIDForUser *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectCouponBoxUsedListByNexonIDForUser, sizeof(struct __ns1__SelectCouponBoxUsedListByNexonIDForUser), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectCouponBoxUsedListByNexonIDForUser && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, "ns1:SelectCouponBoxUsedListByNexonIDForUser", &a->ns1__SelectCouponBoxUsedListByNexonIDForUser, ""))
				{	soap_flag_ns1__SelectCouponBoxUsedListByNexonIDForUser--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, const struct __ns1__SelectCouponBoxUsedListByNexonIDForUser *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, tag?tag:"-ns1:SelectCouponBoxUsedListByNexonIDForUser", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxUsedListByNexonIDForUser * SOAP_FMAC4 soap_get___ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, struct __ns1__SelectCouponBoxUsedListByNexonIDForUser *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectCouponBoxUsedListByNexonIDForUser * SOAP_FMAC2 soap_instantiate___ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectCouponBoxUsedListByNexonIDForUser(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectCouponBoxUsedListByNexonIDForUser, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectCouponBoxUsedListByNexonIDForUser);
		if (size)
			*size = sizeof(struct __ns1__SelectCouponBoxUsedListByNexonIDForUser);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectCouponBoxUsedListByNexonIDForUser, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectCouponBoxUsedListByNexonIDForUser);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectCouponBoxUsedListByNexonIDForUser*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectCouponBoxUsedListByNexonIDForUser %p -> %p\n", q, p));
	*(struct __ns1__SelectCouponBoxUsedListByNexonIDForUser*)p = *(struct __ns1__SelectCouponBoxUsedListByNexonIDForUser*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, struct __ns1__SelectCouponBoxListByNexonIDForUser *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectCouponBoxListByNexonIDForUser = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, const struct __ns1__SelectCouponBoxListByNexonIDForUser *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(soap, &a->ns1__SelectCouponBoxListByNexonIDForUser);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, const char *tag, int id, const struct __ns1__SelectCouponBoxListByNexonIDForUser *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(soap, "ns1:SelectCouponBoxListByNexonIDForUser", -1, &a->ns1__SelectCouponBoxListByNexonIDForUser, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxListByNexonIDForUser * SOAP_FMAC4 soap_in___ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, const char *tag, struct __ns1__SelectCouponBoxListByNexonIDForUser *a, const char *type)
{
	size_t soap_flag_ns1__SelectCouponBoxListByNexonIDForUser = 1;
	short soap_flag;
	a = (struct __ns1__SelectCouponBoxListByNexonIDForUser *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectCouponBoxListByNexonIDForUser, sizeof(struct __ns1__SelectCouponBoxListByNexonIDForUser), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectCouponBoxListByNexonIDForUser(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectCouponBoxListByNexonIDForUser && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(soap, "ns1:SelectCouponBoxListByNexonIDForUser", &a->ns1__SelectCouponBoxListByNexonIDForUser, ""))
				{	soap_flag_ns1__SelectCouponBoxListByNexonIDForUser--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, const struct __ns1__SelectCouponBoxListByNexonIDForUser *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectCouponBoxListByNexonIDForUser(soap, tag?tag:"-ns1:SelectCouponBoxListByNexonIDForUser", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxListByNexonIDForUser * SOAP_FMAC4 soap_get___ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, struct __ns1__SelectCouponBoxListByNexonIDForUser *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectCouponBoxListByNexonIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectCouponBoxListByNexonIDForUser * SOAP_FMAC2 soap_instantiate___ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectCouponBoxListByNexonIDForUser(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectCouponBoxListByNexonIDForUser, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectCouponBoxListByNexonIDForUser);
		if (size)
			*size = sizeof(struct __ns1__SelectCouponBoxListByNexonIDForUser);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectCouponBoxListByNexonIDForUser, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectCouponBoxListByNexonIDForUser);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectCouponBoxListByNexonIDForUser*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectCouponBoxListByNexonIDForUser %p -> %p\n", q, p));
	*(struct __ns1__SelectCouponBoxListByNexonIDForUser*)p = *(struct __ns1__SelectCouponBoxListByNexonIDForUser*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, struct __ns1__SelectCouponBoxByAccountIDForUser *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectCouponBoxByAccountIDForUser = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, const struct __ns1__SelectCouponBoxByAccountIDForUser *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(soap, &a->ns1__SelectCouponBoxByAccountIDForUser);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, const char *tag, int id, const struct __ns1__SelectCouponBoxByAccountIDForUser *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(soap, "ns1:SelectCouponBoxByAccountIDForUser", -1, &a->ns1__SelectCouponBoxByAccountIDForUser, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxByAccountIDForUser * SOAP_FMAC4 soap_in___ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, const char *tag, struct __ns1__SelectCouponBoxByAccountIDForUser *a, const char *type)
{
	size_t soap_flag_ns1__SelectCouponBoxByAccountIDForUser = 1;
	short soap_flag;
	a = (struct __ns1__SelectCouponBoxByAccountIDForUser *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectCouponBoxByAccountIDForUser, sizeof(struct __ns1__SelectCouponBoxByAccountIDForUser), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectCouponBoxByAccountIDForUser(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectCouponBoxByAccountIDForUser && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(soap, "ns1:SelectCouponBoxByAccountIDForUser", &a->ns1__SelectCouponBoxByAccountIDForUser, ""))
				{	soap_flag_ns1__SelectCouponBoxByAccountIDForUser--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, const struct __ns1__SelectCouponBoxByAccountIDForUser *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectCouponBoxByAccountIDForUser(soap, tag?tag:"-ns1:SelectCouponBoxByAccountIDForUser", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxByAccountIDForUser * SOAP_FMAC4 soap_get___ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, struct __ns1__SelectCouponBoxByAccountIDForUser *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectCouponBoxByAccountIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectCouponBoxByAccountIDForUser * SOAP_FMAC2 soap_instantiate___ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectCouponBoxByAccountIDForUser(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectCouponBoxByAccountIDForUser, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectCouponBoxByAccountIDForUser);
		if (size)
			*size = sizeof(struct __ns1__SelectCouponBoxByAccountIDForUser);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectCouponBoxByAccountIDForUser, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectCouponBoxByAccountIDForUser);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectCouponBoxByAccountIDForUser*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectCouponBoxByAccountIDForUser %p -> %p\n", q, p));
	*(struct __ns1__SelectCouponBoxByAccountIDForUser*)p = *(struct __ns1__SelectCouponBoxByAccountIDForUser*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, struct __ns1__SelectCouponBoxByCharacterIDForUser *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectCouponBoxByCharacterIDForUser = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, const struct __ns1__SelectCouponBoxByCharacterIDForUser *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(soap, &a->ns1__SelectCouponBoxByCharacterIDForUser);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, const char *tag, int id, const struct __ns1__SelectCouponBoxByCharacterIDForUser *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(soap, "ns1:SelectCouponBoxByCharacterIDForUser", -1, &a->ns1__SelectCouponBoxByCharacterIDForUser, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxByCharacterIDForUser * SOAP_FMAC4 soap_in___ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, const char *tag, struct __ns1__SelectCouponBoxByCharacterIDForUser *a, const char *type)
{
	size_t soap_flag_ns1__SelectCouponBoxByCharacterIDForUser = 1;
	short soap_flag;
	a = (struct __ns1__SelectCouponBoxByCharacterIDForUser *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectCouponBoxByCharacterIDForUser, sizeof(struct __ns1__SelectCouponBoxByCharacterIDForUser), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectCouponBoxByCharacterIDForUser(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectCouponBoxByCharacterIDForUser && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(soap, "ns1:SelectCouponBoxByCharacterIDForUser", &a->ns1__SelectCouponBoxByCharacterIDForUser, ""))
				{	soap_flag_ns1__SelectCouponBoxByCharacterIDForUser--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, const struct __ns1__SelectCouponBoxByCharacterIDForUser *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectCouponBoxByCharacterIDForUser(soap, tag?tag:"-ns1:SelectCouponBoxByCharacterIDForUser", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCouponBoxByCharacterIDForUser * SOAP_FMAC4 soap_get___ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, struct __ns1__SelectCouponBoxByCharacterIDForUser *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectCouponBoxByCharacterIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectCouponBoxByCharacterIDForUser * SOAP_FMAC2 soap_instantiate___ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectCouponBoxByCharacterIDForUser(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectCouponBoxByCharacterIDForUser, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectCouponBoxByCharacterIDForUser);
		if (size)
			*size = sizeof(struct __ns1__SelectCouponBoxByCharacterIDForUser);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectCouponBoxByCharacterIDForUser, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectCouponBoxByCharacterIDForUser);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectCouponBoxByCharacterIDForUser*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectCouponBoxByCharacterIDForUser %p -> %p\n", q, p));
	*(struct __ns1__SelectCouponBoxByCharacterIDForUser*)p = *(struct __ns1__SelectCouponBoxByCharacterIDForUser*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, const struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, &a->ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, const char *tag, int id, const struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode", -1, &a->ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode * SOAP_FMAC4 soap_in___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, const char *tag, struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *a, const char *type)
{
	size_t soap_flag_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode = 1;
	short soap_flag;
	a = (struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode, sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, "ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode", &a->ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode, ""))
				{	soap_flag_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, const struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, tag?tag:"-ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode * SOAP_FMAC4 soap_get___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode * SOAP_FMAC2 soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode);
		if (size)
			*size = sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode %p -> %p\n", q, p));
	*(struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode*)p = *(struct __ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, &a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, const char *tag, int id, const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemList", -1, &a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList * SOAP_FMAC4 soap_in___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, const char *tag, struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *a, const char *type)
{
	size_t soap_flag_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList = 1;
	short soap_flag;
	a = (struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList, sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemList", &a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList, ""))
				{	soap_flag_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, tag?tag:"-ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemList", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList * SOAP_FMAC4 soap_get___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList * SOAP_FMAC2 soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList);
		if (size)
			*size = sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList %p -> %p\n", q, p));
	*(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList*)p = *(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, &a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, const char *tag, int id, const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCode", -1, &a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode * SOAP_FMAC4 soap_in___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, const char *tag, struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *a, const char *type)
{
	size_t soap_flag_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode = 1;
	short soap_flag;
	a = (struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode, sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, "ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCode", &a->ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode, ""))
				{	soap_flag_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, const struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, tag?tag:"-ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCode", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode * SOAP_FMAC4 soap_get___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode * SOAP_FMAC2 soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode);
		if (size)
			*size = sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode %p -> %p\n", q, p));
	*(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode*)p = *(struct __ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, struct __ns1__CheckAddCouponBoxByCouponPinByNexonId *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckAddCouponBoxByCouponPinByNexonId = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, const struct __ns1__CheckAddCouponBoxByCouponPinByNexonId *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, &a->ns1__CheckAddCouponBoxByCouponPinByNexonId);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, const char *tag, int id, const struct __ns1__CheckAddCouponBoxByCouponPinByNexonId *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, "ns1:CheckAddCouponBoxByCouponPinByNexonId", -1, &a->ns1__CheckAddCouponBoxByCouponPinByNexonId, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckAddCouponBoxByCouponPinByNexonId * SOAP_FMAC4 soap_in___ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, const char *tag, struct __ns1__CheckAddCouponBoxByCouponPinByNexonId *a, const char *type)
{
	size_t soap_flag_ns1__CheckAddCouponBoxByCouponPinByNexonId = 1;
	short soap_flag;
	a = (struct __ns1__CheckAddCouponBoxByCouponPinByNexonId *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckAddCouponBoxByCouponPinByNexonId, sizeof(struct __ns1__CheckAddCouponBoxByCouponPinByNexonId), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckAddCouponBoxByCouponPinByNexonId && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, "ns1:CheckAddCouponBoxByCouponPinByNexonId", &a->ns1__CheckAddCouponBoxByCouponPinByNexonId, ""))
				{	soap_flag_ns1__CheckAddCouponBoxByCouponPinByNexonId--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, const struct __ns1__CheckAddCouponBoxByCouponPinByNexonId *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, tag?tag:"-ns1:CheckAddCouponBoxByCouponPinByNexonId", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckAddCouponBoxByCouponPinByNexonId * SOAP_FMAC4 soap_get___ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, struct __ns1__CheckAddCouponBoxByCouponPinByNexonId *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckAddCouponBoxByCouponPinByNexonId * SOAP_FMAC2 soap_instantiate___ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckAddCouponBoxByCouponPinByNexonId(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckAddCouponBoxByCouponPinByNexonId, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckAddCouponBoxByCouponPinByNexonId);
		if (size)
			*size = sizeof(struct __ns1__CheckAddCouponBoxByCouponPinByNexonId);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckAddCouponBoxByCouponPinByNexonId, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckAddCouponBoxByCouponPinByNexonId);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckAddCouponBoxByCouponPinByNexonId*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckAddCouponBoxByCouponPinByNexonId %p -> %p\n", q, p));
	*(struct __ns1__CheckAddCouponBoxByCouponPinByNexonId*)p = *(struct __ns1__CheckAddCouponBoxByCouponPinByNexonId*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, struct __ns1__AddCouponBoxByCouponPinByNexonId *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__AddCouponBoxByCouponPinByNexonId = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, const struct __ns1__AddCouponBoxByCouponPinByNexonId *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(soap, &a->ns1__AddCouponBoxByCouponPinByNexonId);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, const char *tag, int id, const struct __ns1__AddCouponBoxByCouponPinByNexonId *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(soap, "ns1:AddCouponBoxByCouponPinByNexonId", -1, &a->ns1__AddCouponBoxByCouponPinByNexonId, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__AddCouponBoxByCouponPinByNexonId * SOAP_FMAC4 soap_in___ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, const char *tag, struct __ns1__AddCouponBoxByCouponPinByNexonId *a, const char *type)
{
	size_t soap_flag_ns1__AddCouponBoxByCouponPinByNexonId = 1;
	short soap_flag;
	a = (struct __ns1__AddCouponBoxByCouponPinByNexonId *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__AddCouponBoxByCouponPinByNexonId, sizeof(struct __ns1__AddCouponBoxByCouponPinByNexonId), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__AddCouponBoxByCouponPinByNexonId(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__AddCouponBoxByCouponPinByNexonId && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(soap, "ns1:AddCouponBoxByCouponPinByNexonId", &a->ns1__AddCouponBoxByCouponPinByNexonId, ""))
				{	soap_flag_ns1__AddCouponBoxByCouponPinByNexonId--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, const struct __ns1__AddCouponBoxByCouponPinByNexonId *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__AddCouponBoxByCouponPinByNexonId(soap, tag?tag:"-ns1:AddCouponBoxByCouponPinByNexonId", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__AddCouponBoxByCouponPinByNexonId * SOAP_FMAC4 soap_get___ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, struct __ns1__AddCouponBoxByCouponPinByNexonId *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__AddCouponBoxByCouponPinByNexonId(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__AddCouponBoxByCouponPinByNexonId * SOAP_FMAC2 soap_instantiate___ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__AddCouponBoxByCouponPinByNexonId(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__AddCouponBoxByCouponPinByNexonId, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__AddCouponBoxByCouponPinByNexonId);
		if (size)
			*size = sizeof(struct __ns1__AddCouponBoxByCouponPinByNexonId);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__AddCouponBoxByCouponPinByNexonId, n);
		if (size)
			*size = n * sizeof(struct __ns1__AddCouponBoxByCouponPinByNexonId);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__AddCouponBoxByCouponPinByNexonId*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__AddCouponBoxByCouponPinByNexonId %p -> %p\n", q, p));
	*(struct __ns1__AddCouponBoxByCouponPinByNexonId*)p = *(struct __ns1__AddCouponBoxByCouponPinByNexonId*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, struct __ns1__SelectItemCouponFromCouponBoxByNexonID *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectItemCouponFromCouponBoxByNexonID = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, const struct __ns1__SelectItemCouponFromCouponBoxByNexonID *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(soap, &a->ns1__SelectItemCouponFromCouponBoxByNexonID);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, const char *tag, int id, const struct __ns1__SelectItemCouponFromCouponBoxByNexonID *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(soap, "ns1:SelectItemCouponFromCouponBoxByNexonID", -1, &a->ns1__SelectItemCouponFromCouponBoxByNexonID, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectItemCouponFromCouponBoxByNexonID * SOAP_FMAC4 soap_in___ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, const char *tag, struct __ns1__SelectItemCouponFromCouponBoxByNexonID *a, const char *type)
{
	size_t soap_flag_ns1__SelectItemCouponFromCouponBoxByNexonID = 1;
	short soap_flag;
	a = (struct __ns1__SelectItemCouponFromCouponBoxByNexonID *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectItemCouponFromCouponBoxByNexonID, sizeof(struct __ns1__SelectItemCouponFromCouponBoxByNexonID), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectItemCouponFromCouponBoxByNexonID(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectItemCouponFromCouponBoxByNexonID && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(soap, "ns1:SelectItemCouponFromCouponBoxByNexonID", &a->ns1__SelectItemCouponFromCouponBoxByNexonID, ""))
				{	soap_flag_ns1__SelectItemCouponFromCouponBoxByNexonID--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, const struct __ns1__SelectItemCouponFromCouponBoxByNexonID *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectItemCouponFromCouponBoxByNexonID(soap, tag?tag:"-ns1:SelectItemCouponFromCouponBoxByNexonID", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectItemCouponFromCouponBoxByNexonID * SOAP_FMAC4 soap_get___ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, struct __ns1__SelectItemCouponFromCouponBoxByNexonID *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectItemCouponFromCouponBoxByNexonID(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectItemCouponFromCouponBoxByNexonID * SOAP_FMAC2 soap_instantiate___ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectItemCouponFromCouponBoxByNexonID(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectItemCouponFromCouponBoxByNexonID, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectItemCouponFromCouponBoxByNexonID);
		if (size)
			*size = sizeof(struct __ns1__SelectItemCouponFromCouponBoxByNexonID);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectItemCouponFromCouponBoxByNexonID, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectItemCouponFromCouponBoxByNexonID);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectItemCouponFromCouponBoxByNexonID*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectItemCouponFromCouponBoxByNexonID %p -> %p\n", q, p));
	*(struct __ns1__SelectItemCouponFromCouponBoxByNexonID*)p = *(struct __ns1__SelectItemCouponFromCouponBoxByNexonID*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, struct __ns1__SelectCashCouponFromCouponBoxByNexonID *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__SelectCashCouponFromCouponBoxByNexonID = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, const struct __ns1__SelectCashCouponFromCouponBoxByNexonID *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(soap, &a->ns1__SelectCashCouponFromCouponBoxByNexonID);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, const char *tag, int id, const struct __ns1__SelectCashCouponFromCouponBoxByNexonID *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(soap, "ns1:SelectCashCouponFromCouponBoxByNexonID", -1, &a->ns1__SelectCashCouponFromCouponBoxByNexonID, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCashCouponFromCouponBoxByNexonID * SOAP_FMAC4 soap_in___ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, const char *tag, struct __ns1__SelectCashCouponFromCouponBoxByNexonID *a, const char *type)
{
	size_t soap_flag_ns1__SelectCashCouponFromCouponBoxByNexonID = 1;
	short soap_flag;
	a = (struct __ns1__SelectCashCouponFromCouponBoxByNexonID *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__SelectCashCouponFromCouponBoxByNexonID, sizeof(struct __ns1__SelectCashCouponFromCouponBoxByNexonID), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__SelectCashCouponFromCouponBoxByNexonID(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__SelectCashCouponFromCouponBoxByNexonID && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(soap, "ns1:SelectCashCouponFromCouponBoxByNexonID", &a->ns1__SelectCashCouponFromCouponBoxByNexonID, ""))
				{	soap_flag_ns1__SelectCashCouponFromCouponBoxByNexonID--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, const struct __ns1__SelectCashCouponFromCouponBoxByNexonID *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__SelectCashCouponFromCouponBoxByNexonID(soap, tag?tag:"-ns1:SelectCashCouponFromCouponBoxByNexonID", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__SelectCashCouponFromCouponBoxByNexonID * SOAP_FMAC4 soap_get___ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, struct __ns1__SelectCashCouponFromCouponBoxByNexonID *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__SelectCashCouponFromCouponBoxByNexonID(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__SelectCashCouponFromCouponBoxByNexonID * SOAP_FMAC2 soap_instantiate___ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__SelectCashCouponFromCouponBoxByNexonID(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__SelectCashCouponFromCouponBoxByNexonID, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__SelectCashCouponFromCouponBoxByNexonID);
		if (size)
			*size = sizeof(struct __ns1__SelectCashCouponFromCouponBoxByNexonID);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__SelectCashCouponFromCouponBoxByNexonID, n);
		if (size)
			*size = n * sizeof(struct __ns1__SelectCashCouponFromCouponBoxByNexonID);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__SelectCashCouponFromCouponBoxByNexonID*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__SelectCashCouponFromCouponBoxByNexonID %p -> %p\n", q, p));
	*(struct __ns1__SelectCashCouponFromCouponBoxByNexonID*)p = *(struct __ns1__SelectCashCouponFromCouponBoxByNexonID*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetListSchool_(struct soap *soap, struct __ns1__GetListSchool_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__GetListSchool = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetListSchool_(struct soap *soap, const struct __ns1__GetListSchool_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__GetListSchool(soap, &a->ns1__GetListSchool);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetListSchool_(struct soap *soap, const char *tag, int id, const struct __ns1__GetListSchool_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__GetListSchool(soap, "ns1:GetListSchool", -1, &a->ns1__GetListSchool, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetListSchool_ * SOAP_FMAC4 soap_in___ns1__GetListSchool_(struct soap *soap, const char *tag, struct __ns1__GetListSchool_ *a, const char *type)
{
	size_t soap_flag_ns1__GetListSchool = 1;
	short soap_flag;
	a = (struct __ns1__GetListSchool_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__GetListSchool_, sizeof(struct __ns1__GetListSchool_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__GetListSchool_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__GetListSchool && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__GetListSchool(soap, "ns1:GetListSchool", &a->ns1__GetListSchool, ""))
				{	soap_flag_ns1__GetListSchool--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetListSchool_(struct soap *soap, const struct __ns1__GetListSchool_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__GetListSchool_(soap, tag?tag:"-ns1:GetListSchool", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetListSchool_ * SOAP_FMAC4 soap_get___ns1__GetListSchool_(struct soap *soap, struct __ns1__GetListSchool_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__GetListSchool_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__GetListSchool_ * SOAP_FMAC2 soap_instantiate___ns1__GetListSchool_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__GetListSchool_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__GetListSchool_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__GetListSchool_);
		if (size)
			*size = sizeof(struct __ns1__GetListSchool_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__GetListSchool_, n);
		if (size)
			*size = n * sizeof(struct __ns1__GetListSchool_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__GetListSchool_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetListSchool_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__GetListSchool_ %p -> %p\n", q, p));
	*(struct __ns1__GetListSchool_*)p = *(struct __ns1__GetListSchool_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckPasswordByMemberSN_(struct soap *soap, struct __ns1__CheckPasswordByMemberSN_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckPasswordByMemberSN = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckPasswordByMemberSN_(struct soap *soap, const struct __ns1__CheckPasswordByMemberSN_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckPasswordByMemberSN(soap, &a->ns1__CheckPasswordByMemberSN);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckPasswordByMemberSN_(struct soap *soap, const char *tag, int id, const struct __ns1__CheckPasswordByMemberSN_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckPasswordByMemberSN(soap, "ns1:CheckPasswordByMemberSN", -1, &a->ns1__CheckPasswordByMemberSN, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckPasswordByMemberSN_ * SOAP_FMAC4 soap_in___ns1__CheckPasswordByMemberSN_(struct soap *soap, const char *tag, struct __ns1__CheckPasswordByMemberSN_ *a, const char *type)
{
	size_t soap_flag_ns1__CheckPasswordByMemberSN = 1;
	short soap_flag;
	a = (struct __ns1__CheckPasswordByMemberSN_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckPasswordByMemberSN_, sizeof(struct __ns1__CheckPasswordByMemberSN_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckPasswordByMemberSN_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckPasswordByMemberSN && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckPasswordByMemberSN(soap, "ns1:CheckPasswordByMemberSN", &a->ns1__CheckPasswordByMemberSN, ""))
				{	soap_flag_ns1__CheckPasswordByMemberSN--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckPasswordByMemberSN_(struct soap *soap, const struct __ns1__CheckPasswordByMemberSN_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckPasswordByMemberSN_(soap, tag?tag:"-ns1:CheckPasswordByMemberSN", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckPasswordByMemberSN_ * SOAP_FMAC4 soap_get___ns1__CheckPasswordByMemberSN_(struct soap *soap, struct __ns1__CheckPasswordByMemberSN_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckPasswordByMemberSN_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckPasswordByMemberSN_ * SOAP_FMAC2 soap_instantiate___ns1__CheckPasswordByMemberSN_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckPasswordByMemberSN_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckPasswordByMemberSN_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckPasswordByMemberSN_);
		if (size)
			*size = sizeof(struct __ns1__CheckPasswordByMemberSN_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckPasswordByMemberSN_, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckPasswordByMemberSN_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckPasswordByMemberSN_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckPasswordByMemberSN_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckPasswordByMemberSN_ %p -> %p\n", q, p));
	*(struct __ns1__CheckPasswordByMemberSN_*)p = *(struct __ns1__CheckPasswordByMemberSN_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckSameUser_(struct soap *soap, struct __ns1__CheckSameUser_ *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckSameUser = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckSameUser_(struct soap *soap, const struct __ns1__CheckSameUser_ *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckSameUser(soap, &a->ns1__CheckSameUser);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckSameUser_(struct soap *soap, const char *tag, int id, const struct __ns1__CheckSameUser_ *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckSameUser(soap, "ns1:CheckSameUser", -1, &a->ns1__CheckSameUser, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckSameUser_ * SOAP_FMAC4 soap_in___ns1__CheckSameUser_(struct soap *soap, const char *tag, struct __ns1__CheckSameUser_ *a, const char *type)
{
	size_t soap_flag_ns1__CheckSameUser = 1;
	short soap_flag;
	a = (struct __ns1__CheckSameUser_ *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckSameUser_, sizeof(struct __ns1__CheckSameUser_), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckSameUser_(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckSameUser && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckSameUser(soap, "ns1:CheckSameUser", &a->ns1__CheckSameUser, ""))
				{	soap_flag_ns1__CheckSameUser--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckSameUser_(struct soap *soap, const struct __ns1__CheckSameUser_ *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckSameUser_(soap, tag?tag:"-ns1:CheckSameUser", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckSameUser_ * SOAP_FMAC4 soap_get___ns1__CheckSameUser_(struct soap *soap, struct __ns1__CheckSameUser_ *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckSameUser_(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckSameUser_ * SOAP_FMAC2 soap_instantiate___ns1__CheckSameUser_(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckSameUser_(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckSameUser_, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckSameUser_);
		if (size)
			*size = sizeof(struct __ns1__CheckSameUser_);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckSameUser_, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckSameUser_);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckSameUser_*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckSameUser_(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckSameUser_ %p -> %p\n", q, p));
	*(struct __ns1__CheckSameUser_*)p = *(struct __ns1__CheckSameUser_*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetListSchool(struct soap *soap, struct __ns1__GetListSchool *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__GetListSchool = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetListSchool(struct soap *soap, const struct __ns1__GetListSchool *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__GetListSchool(soap, &a->ns1__GetListSchool);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetListSchool(struct soap *soap, const char *tag, int id, const struct __ns1__GetListSchool *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__GetListSchool(soap, "ns1:GetListSchool", -1, &a->ns1__GetListSchool, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetListSchool * SOAP_FMAC4 soap_in___ns1__GetListSchool(struct soap *soap, const char *tag, struct __ns1__GetListSchool *a, const char *type)
{
	size_t soap_flag_ns1__GetListSchool = 1;
	short soap_flag;
	a = (struct __ns1__GetListSchool *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__GetListSchool, sizeof(struct __ns1__GetListSchool), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__GetListSchool(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__GetListSchool && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__GetListSchool(soap, "ns1:GetListSchool", &a->ns1__GetListSchool, ""))
				{	soap_flag_ns1__GetListSchool--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetListSchool(struct soap *soap, const struct __ns1__GetListSchool *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__GetListSchool(soap, tag?tag:"-ns1:GetListSchool", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__GetListSchool * SOAP_FMAC4 soap_get___ns1__GetListSchool(struct soap *soap, struct __ns1__GetListSchool *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__GetListSchool(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__GetListSchool * SOAP_FMAC2 soap_instantiate___ns1__GetListSchool(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__GetListSchool(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__GetListSchool, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__GetListSchool);
		if (size)
			*size = sizeof(struct __ns1__GetListSchool);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__GetListSchool, n);
		if (size)
			*size = n * sizeof(struct __ns1__GetListSchool);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__GetListSchool*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetListSchool(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__GetListSchool %p -> %p\n", q, p));
	*(struct __ns1__GetListSchool*)p = *(struct __ns1__GetListSchool*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckPasswordByMemberSN(struct soap *soap, struct __ns1__CheckPasswordByMemberSN *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckPasswordByMemberSN = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckPasswordByMemberSN(struct soap *soap, const struct __ns1__CheckPasswordByMemberSN *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckPasswordByMemberSN(soap, &a->ns1__CheckPasswordByMemberSN);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckPasswordByMemberSN(struct soap *soap, const char *tag, int id, const struct __ns1__CheckPasswordByMemberSN *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckPasswordByMemberSN(soap, "ns1:CheckPasswordByMemberSN", -1, &a->ns1__CheckPasswordByMemberSN, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckPasswordByMemberSN * SOAP_FMAC4 soap_in___ns1__CheckPasswordByMemberSN(struct soap *soap, const char *tag, struct __ns1__CheckPasswordByMemberSN *a, const char *type)
{
	size_t soap_flag_ns1__CheckPasswordByMemberSN = 1;
	short soap_flag;
	a = (struct __ns1__CheckPasswordByMemberSN *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckPasswordByMemberSN, sizeof(struct __ns1__CheckPasswordByMemberSN), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckPasswordByMemberSN(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckPasswordByMemberSN && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckPasswordByMemberSN(soap, "ns1:CheckPasswordByMemberSN", &a->ns1__CheckPasswordByMemberSN, ""))
				{	soap_flag_ns1__CheckPasswordByMemberSN--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckPasswordByMemberSN(struct soap *soap, const struct __ns1__CheckPasswordByMemberSN *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckPasswordByMemberSN(soap, tag?tag:"-ns1:CheckPasswordByMemberSN", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckPasswordByMemberSN * SOAP_FMAC4 soap_get___ns1__CheckPasswordByMemberSN(struct soap *soap, struct __ns1__CheckPasswordByMemberSN *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckPasswordByMemberSN(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckPasswordByMemberSN * SOAP_FMAC2 soap_instantiate___ns1__CheckPasswordByMemberSN(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckPasswordByMemberSN(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckPasswordByMemberSN, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckPasswordByMemberSN);
		if (size)
			*size = sizeof(struct __ns1__CheckPasswordByMemberSN);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckPasswordByMemberSN, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckPasswordByMemberSN);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckPasswordByMemberSN*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckPasswordByMemberSN(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckPasswordByMemberSN %p -> %p\n", q, p));
	*(struct __ns1__CheckPasswordByMemberSN*)p = *(struct __ns1__CheckPasswordByMemberSN*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckSameUser(struct soap *soap, struct __ns1__CheckSameUser *a)
{
	(void)soap; (void)a; /* appease -Wall -Werror */
	a->ns1__CheckSameUser = NULL;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckSameUser(struct soap *soap, const struct __ns1__CheckSameUser *a)
{
#ifndef WITH_NOIDREF
	(void)soap; (void)a; /* appease -Wall -Werror */
	soap_serialize_PointerTo_ns1__CheckSameUser(soap, &a->ns1__CheckSameUser);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckSameUser(struct soap *soap, const char *tag, int id, const struct __ns1__CheckSameUser *a, const char *type)
{
	(void)soap; (void)tag; (void)id; (void)type;
	if (soap_out_PointerTo_ns1__CheckSameUser(soap, "ns1:CheckSameUser", -1, &a->ns1__CheckSameUser, ""))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckSameUser * SOAP_FMAC4 soap_in___ns1__CheckSameUser(struct soap *soap, const char *tag, struct __ns1__CheckSameUser *a, const char *type)
{
	size_t soap_flag_ns1__CheckSameUser = 1;
	short soap_flag;
	a = (struct __ns1__CheckSameUser *)soap_id_enter(soap, "", a, SOAP_TYPE___ns1__CheckSameUser, sizeof(struct __ns1__CheckSameUser), 0, NULL, NULL, NULL);
	if (!a)
		return NULL;
	soap_default___ns1__CheckSameUser(soap, a);
		for (soap_flag = 0;; soap_flag = 1)
		{	soap->error = SOAP_TAG_MISMATCH;
			if (soap_flag_ns1__CheckSameUser && soap->error == SOAP_TAG_MISMATCH)
				if (soap_in_PointerTo_ns1__CheckSameUser(soap, "ns1:CheckSameUser", &a->ns1__CheckSameUser, ""))
				{	soap_flag_ns1__CheckSameUser--;
					continue;
				}
			if (soap->error == SOAP_TAG_MISMATCH)
				if (soap_flag)
				{	soap->error = SOAP_OK;
					break;
				}
			if (soap_flag && soap->error == SOAP_NO_TAG)
				break;
			if (soap->error)
				return NULL;
		}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckSameUser(struct soap *soap, const struct __ns1__CheckSameUser *a, const char *tag, const char *type)
{
	register int id = 0;
	if (soap_out___ns1__CheckSameUser(soap, tag?tag:"-ns1:CheckSameUser", id, a, type))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC3 struct __ns1__CheckSameUser * SOAP_FMAC4 soap_get___ns1__CheckSameUser(struct soap *soap, struct __ns1__CheckSameUser *p, const char *tag, const char *type)
{
	if ((p = soap_in___ns1__CheckSameUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC1 struct __ns1__CheckSameUser * SOAP_FMAC2 soap_instantiate___ns1__CheckSameUser(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate___ns1__CheckSameUser(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE___ns1__CheckSameUser, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(struct __ns1__CheckSameUser);
		if (size)
			*size = sizeof(struct __ns1__CheckSameUser);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(struct __ns1__CheckSameUser, n);
		if (size)
			*size = n * sizeof(struct __ns1__CheckSameUser);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (struct __ns1__CheckSameUser*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckSameUser(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying struct __ns1__CheckSameUser %p -> %p\n", q, p));
	*(struct __ns1__CheckSameUser*)p = *(struct __ns1__CheckSameUser*)q;
}

#ifndef WITH_NOGLOBAL

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_SOAP_ENV__Reason))
		soap_serialize_SOAP_ENV__Reason(soap, *a);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap *soap, const char *tag, int id, struct SOAP_ENV__Reason *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_SOAP_ENV__Reason);
	if (id < 0)
		return soap->error;
	return soap_out_SOAP_ENV__Reason(soap, tag, id, *a, type);
}

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap *soap, const char *tag, struct SOAP_ENV__Reason **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (struct SOAP_ENV__Reason **)soap_malloc(soap, sizeof(struct SOAP_ENV__Reason *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = soap_in_SOAP_ENV__Reason(soap, tag, *a, type)))
			return NULL;
	}
	else
	{	a = (struct SOAP_ENV__Reason **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_SOAP_ENV__Reason, sizeof(struct SOAP_ENV__Reason), 0);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerToSOAP_ENV__Reason);
	if (soap_out_PointerToSOAP_ENV__Reason(soap, tag?tag:"SOAP-ENV:Reason", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerToSOAP_ENV__Reason(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

#endif

#ifndef WITH_NOGLOBAL

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_SOAP_ENV__Detail))
		soap_serialize_SOAP_ENV__Detail(soap, *a);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap *soap, const char *tag, int id, struct SOAP_ENV__Detail *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_SOAP_ENV__Detail);
	if (id < 0)
		return soap->error;
	return soap_out_SOAP_ENV__Detail(soap, tag, id, *a, type);
}

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap *soap, const char *tag, struct SOAP_ENV__Detail **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (struct SOAP_ENV__Detail **)soap_malloc(soap, sizeof(struct SOAP_ENV__Detail *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = soap_in_SOAP_ENV__Detail(soap, tag, *a, type)))
			return NULL;
	}
	else
	{	a = (struct SOAP_ENV__Detail **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_SOAP_ENV__Detail, sizeof(struct SOAP_ENV__Detail), 0);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerToSOAP_ENV__Detail);
	if (soap_out_PointerToSOAP_ENV__Detail(soap, tag?tag:"SOAP-ENV:Detail", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerToSOAP_ENV__Detail(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

#endif

#ifndef WITH_NOGLOBAL

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_SOAP_ENV__Code))
		soap_serialize_SOAP_ENV__Code(soap, *a);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap *soap, const char *tag, int id, struct SOAP_ENV__Code *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_SOAP_ENV__Code);
	if (id < 0)
		return soap->error;
	return soap_out_SOAP_ENV__Code(soap, tag, id, *a, type);
}

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap *soap, const char *tag, struct SOAP_ENV__Code **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (struct SOAP_ENV__Code **)soap_malloc(soap, sizeof(struct SOAP_ENV__Code *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = soap_in_SOAP_ENV__Code(soap, tag, *a, type)))
			return NULL;
	}
	else
	{	a = (struct SOAP_ENV__Code **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_SOAP_ENV__Code, sizeof(struct SOAP_ENV__Code), 0);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerToSOAP_ENV__Code);
	if (soap_out_PointerToSOAP_ENV__Code(soap, tag?tag:"SOAP-ENV:Code", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerToSOAP_ENV__Code(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

#endif

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__GetGameAccessTokenResponse(struct soap *soap, _ns2__GetGameAccessTokenResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns2__GetGameAccessTokenResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__GetGameAccessTokenResponse(struct soap *soap, const char *tag, int id, _ns2__GetGameAccessTokenResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns2__GetGameAccessTokenResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns2__GetGameAccessTokenResponse ** SOAP_FMAC4 soap_in_PointerTo_ns2__GetGameAccessTokenResponse(struct soap *soap, const char *tag, _ns2__GetGameAccessTokenResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns2__GetGameAccessTokenResponse **)soap_malloc(soap, sizeof(_ns2__GetGameAccessTokenResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns2__GetGameAccessTokenResponse *)soap_instantiate__ns2__GetGameAccessTokenResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns2__GetGameAccessTokenResponse ** p = (_ns2__GetGameAccessTokenResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns2__GetGameAccessTokenResponse, sizeof(_ns2__GetGameAccessTokenResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__GetGameAccessTokenResponse(struct soap *soap, _ns2__GetGameAccessTokenResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns2__GetGameAccessTokenResponse);
	if (soap_out_PointerTo_ns2__GetGameAccessTokenResponse(soap, tag?tag:"ns2:GetGameAccessTokenResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns2__GetGameAccessTokenResponse ** SOAP_FMAC4 soap_get_PointerTo_ns2__GetGameAccessTokenResponse(struct soap *soap, _ns2__GetGameAccessTokenResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns2__GetGameAccessTokenResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__GetGameAccessToken(struct soap *soap, _ns2__GetGameAccessToken *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns2__GetGameAccessToken))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__GetGameAccessToken(struct soap *soap, const char *tag, int id, _ns2__GetGameAccessToken *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns2__GetGameAccessToken);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns2__GetGameAccessToken ** SOAP_FMAC4 soap_in_PointerTo_ns2__GetGameAccessToken(struct soap *soap, const char *tag, _ns2__GetGameAccessToken **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns2__GetGameAccessToken **)soap_malloc(soap, sizeof(_ns2__GetGameAccessToken *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns2__GetGameAccessToken *)soap_instantiate__ns2__GetGameAccessToken(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns2__GetGameAccessToken ** p = (_ns2__GetGameAccessToken **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns2__GetGameAccessToken, sizeof(_ns2__GetGameAccessToken), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__GetGameAccessToken(struct soap *soap, _ns2__GetGameAccessToken *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns2__GetGameAccessToken);
	if (soap_out_PointerTo_ns2__GetGameAccessToken(soap, tag?tag:"ns2:GetGameAccessToken", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns2__GetGameAccessToken ** SOAP_FMAC4 soap_get_PointerTo_ns2__GetGameAccessToken(struct soap *soap, _ns2__GetGameAccessToken **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns2__GetGameAccessToken(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__WakeUpResponse(struct soap *soap, _ns1__WakeUpResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__WakeUpResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__WakeUpResponse(struct soap *soap, const char *tag, int id, _ns1__WakeUpResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__WakeUpResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__WakeUpResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__WakeUpResponse(struct soap *soap, const char *tag, _ns1__WakeUpResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__WakeUpResponse **)soap_malloc(soap, sizeof(_ns1__WakeUpResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__WakeUpResponse *)soap_instantiate__ns1__WakeUpResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__WakeUpResponse ** p = (_ns1__WakeUpResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__WakeUpResponse, sizeof(_ns1__WakeUpResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__WakeUpResponse(struct soap *soap, _ns1__WakeUpResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__WakeUpResponse);
	if (soap_out_PointerTo_ns1__WakeUpResponse(soap, tag?tag:"ns1:WakeUpResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__WakeUpResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__WakeUpResponse(struct soap *soap, _ns1__WakeUpResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__WakeUpResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__WakeUp(struct soap *soap, _ns1__WakeUp *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__WakeUp))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__WakeUp(struct soap *soap, const char *tag, int id, _ns1__WakeUp *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__WakeUp);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__WakeUp ** SOAP_FMAC4 soap_in_PointerTo_ns1__WakeUp(struct soap *soap, const char *tag, _ns1__WakeUp **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__WakeUp **)soap_malloc(soap, sizeof(_ns1__WakeUp *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__WakeUp *)soap_instantiate__ns1__WakeUp(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__WakeUp ** p = (_ns1__WakeUp **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__WakeUp, sizeof(_ns1__WakeUp), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__WakeUp(struct soap *soap, _ns1__WakeUp *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__WakeUp);
	if (soap_out_PointerTo_ns1__WakeUp(soap, tag?tag:"ns1:WakeUp", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__WakeUp ** SOAP_FMAC4 soap_get_PointerTo_ns1__WakeUp(struct soap *soap, _ns1__WakeUp **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__WakeUp(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetUseRestrictInfoResponse(struct soap *soap, _ns1__GetUseRestrictInfoResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__GetUseRestrictInfoResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetUseRestrictInfoResponse(struct soap *soap, const char *tag, int id, _ns1__GetUseRestrictInfoResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__GetUseRestrictInfoResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__GetUseRestrictInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetUseRestrictInfoResponse(struct soap *soap, const char *tag, _ns1__GetUseRestrictInfoResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__GetUseRestrictInfoResponse **)soap_malloc(soap, sizeof(_ns1__GetUseRestrictInfoResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__GetUseRestrictInfoResponse *)soap_instantiate__ns1__GetUseRestrictInfoResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__GetUseRestrictInfoResponse ** p = (_ns1__GetUseRestrictInfoResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__GetUseRestrictInfoResponse, sizeof(_ns1__GetUseRestrictInfoResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetUseRestrictInfoResponse(struct soap *soap, _ns1__GetUseRestrictInfoResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__GetUseRestrictInfoResponse);
	if (soap_out_PointerTo_ns1__GetUseRestrictInfoResponse(soap, tag?tag:"ns1:GetUseRestrictInfoResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__GetUseRestrictInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetUseRestrictInfoResponse(struct soap *soap, _ns1__GetUseRestrictInfoResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__GetUseRestrictInfoResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetUseRestrictInfo(struct soap *soap, _ns1__GetUseRestrictInfo *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__GetUseRestrictInfo))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetUseRestrictInfo(struct soap *soap, const char *tag, int id, _ns1__GetUseRestrictInfo *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__GetUseRestrictInfo);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__GetUseRestrictInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetUseRestrictInfo(struct soap *soap, const char *tag, _ns1__GetUseRestrictInfo **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__GetUseRestrictInfo **)soap_malloc(soap, sizeof(_ns1__GetUseRestrictInfo *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__GetUseRestrictInfo *)soap_instantiate__ns1__GetUseRestrictInfo(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__GetUseRestrictInfo ** p = (_ns1__GetUseRestrictInfo **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__GetUseRestrictInfo, sizeof(_ns1__GetUseRestrictInfo), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetUseRestrictInfo(struct soap *soap, _ns1__GetUseRestrictInfo *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__GetUseRestrictInfo);
	if (soap_out_PointerTo_ns1__GetUseRestrictInfo(soap, tag?tag:"ns1:GetUseRestrictInfo", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__GetUseRestrictInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetUseRestrictInfo(struct soap *soap, _ns1__GetUseRestrictInfo **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__GetUseRestrictInfo(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__BulkCheckExtendResponse(struct soap *soap, _ns1__BulkCheckExtendResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__BulkCheckExtendResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__BulkCheckExtendResponse(struct soap *soap, const char *tag, int id, _ns1__BulkCheckExtendResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__BulkCheckExtendResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__BulkCheckExtendResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__BulkCheckExtendResponse(struct soap *soap, const char *tag, _ns1__BulkCheckExtendResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__BulkCheckExtendResponse **)soap_malloc(soap, sizeof(_ns1__BulkCheckExtendResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__BulkCheckExtendResponse *)soap_instantiate__ns1__BulkCheckExtendResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__BulkCheckExtendResponse ** p = (_ns1__BulkCheckExtendResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__BulkCheckExtendResponse, sizeof(_ns1__BulkCheckExtendResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__BulkCheckExtendResponse(struct soap *soap, _ns1__BulkCheckExtendResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__BulkCheckExtendResponse);
	if (soap_out_PointerTo_ns1__BulkCheckExtendResponse(soap, tag?tag:"ns1:BulkCheckExtendResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__BulkCheckExtendResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__BulkCheckExtendResponse(struct soap *soap, _ns1__BulkCheckExtendResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__BulkCheckExtendResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__BulkCheckExtend(struct soap *soap, _ns1__BulkCheckExtend *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__BulkCheckExtend))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__BulkCheckExtend(struct soap *soap, const char *tag, int id, _ns1__BulkCheckExtend *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__BulkCheckExtend);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__BulkCheckExtend ** SOAP_FMAC4 soap_in_PointerTo_ns1__BulkCheckExtend(struct soap *soap, const char *tag, _ns1__BulkCheckExtend **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__BulkCheckExtend **)soap_malloc(soap, sizeof(_ns1__BulkCheckExtend *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__BulkCheckExtend *)soap_instantiate__ns1__BulkCheckExtend(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__BulkCheckExtend ** p = (_ns1__BulkCheckExtend **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__BulkCheckExtend, sizeof(_ns1__BulkCheckExtend), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__BulkCheckExtend(struct soap *soap, _ns1__BulkCheckExtend *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__BulkCheckExtend);
	if (soap_out_PointerTo_ns1__BulkCheckExtend(soap, tag?tag:"ns1:BulkCheckExtend", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__BulkCheckExtend ** SOAP_FMAC4 soap_get_PointerTo_ns1__BulkCheckExtend(struct soap *soap, _ns1__BulkCheckExtend **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__BulkCheckExtend(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__BulkCheckResponse(struct soap *soap, _ns1__BulkCheckResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__BulkCheckResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__BulkCheckResponse(struct soap *soap, const char *tag, int id, _ns1__BulkCheckResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__BulkCheckResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__BulkCheckResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__BulkCheckResponse(struct soap *soap, const char *tag, _ns1__BulkCheckResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__BulkCheckResponse **)soap_malloc(soap, sizeof(_ns1__BulkCheckResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__BulkCheckResponse *)soap_instantiate__ns1__BulkCheckResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__BulkCheckResponse ** p = (_ns1__BulkCheckResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__BulkCheckResponse, sizeof(_ns1__BulkCheckResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__BulkCheckResponse(struct soap *soap, _ns1__BulkCheckResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__BulkCheckResponse);
	if (soap_out_PointerTo_ns1__BulkCheckResponse(soap, tag?tag:"ns1:BulkCheckResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__BulkCheckResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__BulkCheckResponse(struct soap *soap, _ns1__BulkCheckResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__BulkCheckResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__BulkCheck(struct soap *soap, _ns1__BulkCheck *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__BulkCheck))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__BulkCheck(struct soap *soap, const char *tag, int id, _ns1__BulkCheck *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__BulkCheck);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__BulkCheck ** SOAP_FMAC4 soap_in_PointerTo_ns1__BulkCheck(struct soap *soap, const char *tag, _ns1__BulkCheck **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__BulkCheck **)soap_malloc(soap, sizeof(_ns1__BulkCheck *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__BulkCheck *)soap_instantiate__ns1__BulkCheck(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__BulkCheck ** p = (_ns1__BulkCheck **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__BulkCheck, sizeof(_ns1__BulkCheck), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__BulkCheck(struct soap *soap, _ns1__BulkCheck *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__BulkCheck);
	if (soap_out_PointerTo_ns1__BulkCheck(soap, tag?tag:"ns1:BulkCheck", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__BulkCheck ** SOAP_FMAC4 soap_get_PointerTo_ns1__BulkCheck(struct soap *soap, _ns1__BulkCheck **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__BulkCheck(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UseItemCouponOLDResponse(struct soap *soap, _ns1__UseItemCouponOLDResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__UseItemCouponOLDResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UseItemCouponOLDResponse(struct soap *soap, const char *tag, int id, _ns1__UseItemCouponOLDResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__UseItemCouponOLDResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__UseItemCouponOLDResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__UseItemCouponOLDResponse(struct soap *soap, const char *tag, _ns1__UseItemCouponOLDResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__UseItemCouponOLDResponse **)soap_malloc(soap, sizeof(_ns1__UseItemCouponOLDResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__UseItemCouponOLDResponse *)soap_instantiate__ns1__UseItemCouponOLDResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__UseItemCouponOLDResponse ** p = (_ns1__UseItemCouponOLDResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__UseItemCouponOLDResponse, sizeof(_ns1__UseItemCouponOLDResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UseItemCouponOLDResponse(struct soap *soap, _ns1__UseItemCouponOLDResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__UseItemCouponOLDResponse);
	if (soap_out_PointerTo_ns1__UseItemCouponOLDResponse(soap, tag?tag:"ns1:UseItemCouponOLDResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__UseItemCouponOLDResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__UseItemCouponOLDResponse(struct soap *soap, _ns1__UseItemCouponOLDResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__UseItemCouponOLDResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UseItemCouponOLD(struct soap *soap, _ns1__UseItemCouponOLD *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__UseItemCouponOLD))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UseItemCouponOLD(struct soap *soap, const char *tag, int id, _ns1__UseItemCouponOLD *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__UseItemCouponOLD);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__UseItemCouponOLD ** SOAP_FMAC4 soap_in_PointerTo_ns1__UseItemCouponOLD(struct soap *soap, const char *tag, _ns1__UseItemCouponOLD **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__UseItemCouponOLD **)soap_malloc(soap, sizeof(_ns1__UseItemCouponOLD *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__UseItemCouponOLD *)soap_instantiate__ns1__UseItemCouponOLD(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__UseItemCouponOLD ** p = (_ns1__UseItemCouponOLD **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__UseItemCouponOLD, sizeof(_ns1__UseItemCouponOLD), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UseItemCouponOLD(struct soap *soap, _ns1__UseItemCouponOLD *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__UseItemCouponOLD);
	if (soap_out_PointerTo_ns1__UseItemCouponOLD(soap, tag?tag:"ns1:UseItemCouponOLD", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__UseItemCouponOLD ** SOAP_FMAC4 soap_get_PointerTo_ns1__UseItemCouponOLD(struct soap *soap, _ns1__UseItemCouponOLD **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__UseItemCouponOLD(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckItemCouponOLDResponse(struct soap *soap, _ns1__CheckItemCouponOLDResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckItemCouponOLDResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckItemCouponOLDResponse(struct soap *soap, const char *tag, int id, _ns1__CheckItemCouponOLDResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckItemCouponOLDResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponOLDResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckItemCouponOLDResponse(struct soap *soap, const char *tag, _ns1__CheckItemCouponOLDResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckItemCouponOLDResponse **)soap_malloc(soap, sizeof(_ns1__CheckItemCouponOLDResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckItemCouponOLDResponse *)soap_instantiate__ns1__CheckItemCouponOLDResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckItemCouponOLDResponse ** p = (_ns1__CheckItemCouponOLDResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckItemCouponOLDResponse, sizeof(_ns1__CheckItemCouponOLDResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckItemCouponOLDResponse(struct soap *soap, _ns1__CheckItemCouponOLDResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckItemCouponOLDResponse);
	if (soap_out_PointerTo_ns1__CheckItemCouponOLDResponse(soap, tag?tag:"ns1:CheckItemCouponOLDResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckItemCouponOLDResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckItemCouponOLDResponse(struct soap *soap, _ns1__CheckItemCouponOLDResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckItemCouponOLDResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckItemCouponOLD(struct soap *soap, _ns1__CheckItemCouponOLD *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckItemCouponOLD))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckItemCouponOLD(struct soap *soap, const char *tag, int id, _ns1__CheckItemCouponOLD *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckItemCouponOLD);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponOLD ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckItemCouponOLD(struct soap *soap, const char *tag, _ns1__CheckItemCouponOLD **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckItemCouponOLD **)soap_malloc(soap, sizeof(_ns1__CheckItemCouponOLD *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckItemCouponOLD *)soap_instantiate__ns1__CheckItemCouponOLD(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckItemCouponOLD ** p = (_ns1__CheckItemCouponOLD **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckItemCouponOLD, sizeof(_ns1__CheckItemCouponOLD), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckItemCouponOLD(struct soap *soap, _ns1__CheckItemCouponOLD *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckItemCouponOLD);
	if (soap_out_PointerTo_ns1__CheckItemCouponOLD(soap, tag?tag:"ns1:CheckItemCouponOLD", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckItemCouponOLD ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckItemCouponOLD(struct soap *soap, _ns1__CheckItemCouponOLD **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckItemCouponOLD(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RollbackItemCouponResponse(struct soap *soap, _ns1__RollbackItemCouponResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__RollbackItemCouponResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RollbackItemCouponResponse(struct soap *soap, const char *tag, int id, _ns1__RollbackItemCouponResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__RollbackItemCouponResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__RollbackItemCouponResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__RollbackItemCouponResponse(struct soap *soap, const char *tag, _ns1__RollbackItemCouponResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__RollbackItemCouponResponse **)soap_malloc(soap, sizeof(_ns1__RollbackItemCouponResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__RollbackItemCouponResponse *)soap_instantiate__ns1__RollbackItemCouponResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__RollbackItemCouponResponse ** p = (_ns1__RollbackItemCouponResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__RollbackItemCouponResponse, sizeof(_ns1__RollbackItemCouponResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RollbackItemCouponResponse(struct soap *soap, _ns1__RollbackItemCouponResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__RollbackItemCouponResponse);
	if (soap_out_PointerTo_ns1__RollbackItemCouponResponse(soap, tag?tag:"ns1:RollbackItemCouponResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__RollbackItemCouponResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__RollbackItemCouponResponse(struct soap *soap, _ns1__RollbackItemCouponResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__RollbackItemCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RollbackItemCoupon(struct soap *soap, _ns1__RollbackItemCoupon *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__RollbackItemCoupon))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RollbackItemCoupon(struct soap *soap, const char *tag, int id, _ns1__RollbackItemCoupon *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__RollbackItemCoupon);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__RollbackItemCoupon ** SOAP_FMAC4 soap_in_PointerTo_ns1__RollbackItemCoupon(struct soap *soap, const char *tag, _ns1__RollbackItemCoupon **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__RollbackItemCoupon **)soap_malloc(soap, sizeof(_ns1__RollbackItemCoupon *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__RollbackItemCoupon *)soap_instantiate__ns1__RollbackItemCoupon(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__RollbackItemCoupon ** p = (_ns1__RollbackItemCoupon **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__RollbackItemCoupon, sizeof(_ns1__RollbackItemCoupon), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RollbackItemCoupon(struct soap *soap, _ns1__RollbackItemCoupon *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__RollbackItemCoupon);
	if (soap_out_PointerTo_ns1__RollbackItemCoupon(soap, tag?tag:"ns1:RollbackItemCoupon", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__RollbackItemCoupon ** SOAP_FMAC4 soap_get_PointerTo_ns1__RollbackItemCoupon(struct soap *soap, _ns1__RollbackItemCoupon **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__RollbackItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UseItemCouponResponse(struct soap *soap, _ns1__UseItemCouponResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__UseItemCouponResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UseItemCouponResponse(struct soap *soap, const char *tag, int id, _ns1__UseItemCouponResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__UseItemCouponResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__UseItemCouponResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__UseItemCouponResponse(struct soap *soap, const char *tag, _ns1__UseItemCouponResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__UseItemCouponResponse **)soap_malloc(soap, sizeof(_ns1__UseItemCouponResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__UseItemCouponResponse *)soap_instantiate__ns1__UseItemCouponResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__UseItemCouponResponse ** p = (_ns1__UseItemCouponResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__UseItemCouponResponse, sizeof(_ns1__UseItemCouponResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UseItemCouponResponse(struct soap *soap, _ns1__UseItemCouponResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__UseItemCouponResponse);
	if (soap_out_PointerTo_ns1__UseItemCouponResponse(soap, tag?tag:"ns1:UseItemCouponResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__UseItemCouponResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__UseItemCouponResponse(struct soap *soap, _ns1__UseItemCouponResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__UseItemCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UseItemCoupon(struct soap *soap, _ns1__UseItemCoupon *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__UseItemCoupon))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UseItemCoupon(struct soap *soap, const char *tag, int id, _ns1__UseItemCoupon *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__UseItemCoupon);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__UseItemCoupon ** SOAP_FMAC4 soap_in_PointerTo_ns1__UseItemCoupon(struct soap *soap, const char *tag, _ns1__UseItemCoupon **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__UseItemCoupon **)soap_malloc(soap, sizeof(_ns1__UseItemCoupon *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__UseItemCoupon *)soap_instantiate__ns1__UseItemCoupon(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__UseItemCoupon ** p = (_ns1__UseItemCoupon **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__UseItemCoupon, sizeof(_ns1__UseItemCoupon), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UseItemCoupon(struct soap *soap, _ns1__UseItemCoupon *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__UseItemCoupon);
	if (soap_out_PointerTo_ns1__UseItemCoupon(soap, tag?tag:"ns1:UseItemCoupon", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__UseItemCoupon ** SOAP_FMAC4 soap_get_PointerTo_ns1__UseItemCoupon(struct soap *soap, _ns1__UseItemCoupon **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__UseItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckItemCouponResponse(struct soap *soap, _ns1__CheckItemCouponResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckItemCouponResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckItemCouponResponse(struct soap *soap, const char *tag, int id, _ns1__CheckItemCouponResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckItemCouponResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckItemCouponResponse(struct soap *soap, const char *tag, _ns1__CheckItemCouponResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckItemCouponResponse **)soap_malloc(soap, sizeof(_ns1__CheckItemCouponResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckItemCouponResponse *)soap_instantiate__ns1__CheckItemCouponResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckItemCouponResponse ** p = (_ns1__CheckItemCouponResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckItemCouponResponse, sizeof(_ns1__CheckItemCouponResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckItemCouponResponse(struct soap *soap, _ns1__CheckItemCouponResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckItemCouponResponse);
	if (soap_out_PointerTo_ns1__CheckItemCouponResponse(soap, tag?tag:"ns1:CheckItemCouponResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckItemCouponResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckItemCouponResponse(struct soap *soap, _ns1__CheckItemCouponResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckItemCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckItemCoupon(struct soap *soap, _ns1__CheckItemCoupon *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckItemCoupon))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckItemCoupon(struct soap *soap, const char *tag, int id, _ns1__CheckItemCoupon *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckItemCoupon);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckItemCoupon ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckItemCoupon(struct soap *soap, const char *tag, _ns1__CheckItemCoupon **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckItemCoupon **)soap_malloc(soap, sizeof(_ns1__CheckItemCoupon *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckItemCoupon *)soap_instantiate__ns1__CheckItemCoupon(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckItemCoupon ** p = (_ns1__CheckItemCoupon **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckItemCoupon, sizeof(_ns1__CheckItemCoupon), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckItemCoupon(struct soap *soap, _ns1__CheckItemCoupon *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckItemCoupon);
	if (soap_out_PointerTo_ns1__CheckItemCoupon(soap, tag?tag:"ns1:CheckItemCoupon", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckItemCoupon ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckItemCoupon(struct soap *soap, _ns1__CheckItemCoupon **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RollbackItemCouponFromCouponBoxResponse(struct soap *soap, _ns1__RollbackItemCouponFromCouponBoxResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBoxResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RollbackItemCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, _ns1__RollbackItemCouponFromCouponBoxResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBoxResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__RollbackItemCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__RollbackItemCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__RollbackItemCouponFromCouponBoxResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__RollbackItemCouponFromCouponBoxResponse **)soap_malloc(soap, sizeof(_ns1__RollbackItemCouponFromCouponBoxResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__RollbackItemCouponFromCouponBoxResponse *)soap_instantiate__ns1__RollbackItemCouponFromCouponBoxResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__RollbackItemCouponFromCouponBoxResponse ** p = (_ns1__RollbackItemCouponFromCouponBoxResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBoxResponse, sizeof(_ns1__RollbackItemCouponFromCouponBoxResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RollbackItemCouponFromCouponBoxResponse(struct soap *soap, _ns1__RollbackItemCouponFromCouponBoxResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__RollbackItemCouponFromCouponBoxResponse);
	if (soap_out_PointerTo_ns1__RollbackItemCouponFromCouponBoxResponse(soap, tag?tag:"ns1:RollbackItemCouponFromCouponBoxResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__RollbackItemCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__RollbackItemCouponFromCouponBoxResponse(struct soap *soap, _ns1__RollbackItemCouponFromCouponBoxResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__RollbackItemCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RollbackItemCouponFromCouponBox(struct soap *soap, _ns1__RollbackItemCouponFromCouponBox *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBox))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RollbackItemCouponFromCouponBox(struct soap *soap, const char *tag, int id, _ns1__RollbackItemCouponFromCouponBox *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBox);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__RollbackItemCouponFromCouponBox ** SOAP_FMAC4 soap_in_PointerTo_ns1__RollbackItemCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__RollbackItemCouponFromCouponBox **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__RollbackItemCouponFromCouponBox **)soap_malloc(soap, sizeof(_ns1__RollbackItemCouponFromCouponBox *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__RollbackItemCouponFromCouponBox *)soap_instantiate__ns1__RollbackItemCouponFromCouponBox(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__RollbackItemCouponFromCouponBox ** p = (_ns1__RollbackItemCouponFromCouponBox **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__RollbackItemCouponFromCouponBox, sizeof(_ns1__RollbackItemCouponFromCouponBox), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RollbackItemCouponFromCouponBox(struct soap *soap, _ns1__RollbackItemCouponFromCouponBox *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__RollbackItemCouponFromCouponBox);
	if (soap_out_PointerTo_ns1__RollbackItemCouponFromCouponBox(soap, tag?tag:"ns1:RollbackItemCouponFromCouponBox", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__RollbackItemCouponFromCouponBox ** SOAP_FMAC4 soap_get_PointerTo_ns1__RollbackItemCouponFromCouponBox(struct soap *soap, _ns1__RollbackItemCouponFromCouponBox **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__RollbackItemCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UseItemCouponFromCouponBoxResponse(struct soap *soap, _ns1__UseItemCouponFromCouponBoxResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__UseItemCouponFromCouponBoxResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UseItemCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, _ns1__UseItemCouponFromCouponBoxResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__UseItemCouponFromCouponBoxResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__UseItemCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__UseItemCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__UseItemCouponFromCouponBoxResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__UseItemCouponFromCouponBoxResponse **)soap_malloc(soap, sizeof(_ns1__UseItemCouponFromCouponBoxResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__UseItemCouponFromCouponBoxResponse *)soap_instantiate__ns1__UseItemCouponFromCouponBoxResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__UseItemCouponFromCouponBoxResponse ** p = (_ns1__UseItemCouponFromCouponBoxResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__UseItemCouponFromCouponBoxResponse, sizeof(_ns1__UseItemCouponFromCouponBoxResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UseItemCouponFromCouponBoxResponse(struct soap *soap, _ns1__UseItemCouponFromCouponBoxResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__UseItemCouponFromCouponBoxResponse);
	if (soap_out_PointerTo_ns1__UseItemCouponFromCouponBoxResponse(soap, tag?tag:"ns1:UseItemCouponFromCouponBoxResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__UseItemCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__UseItemCouponFromCouponBoxResponse(struct soap *soap, _ns1__UseItemCouponFromCouponBoxResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__UseItemCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UseItemCouponFromCouponBox(struct soap *soap, _ns1__UseItemCouponFromCouponBox *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__UseItemCouponFromCouponBox))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UseItemCouponFromCouponBox(struct soap *soap, const char *tag, int id, _ns1__UseItemCouponFromCouponBox *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__UseItemCouponFromCouponBox);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__UseItemCouponFromCouponBox ** SOAP_FMAC4 soap_in_PointerTo_ns1__UseItemCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__UseItemCouponFromCouponBox **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__UseItemCouponFromCouponBox **)soap_malloc(soap, sizeof(_ns1__UseItemCouponFromCouponBox *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__UseItemCouponFromCouponBox *)soap_instantiate__ns1__UseItemCouponFromCouponBox(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__UseItemCouponFromCouponBox ** p = (_ns1__UseItemCouponFromCouponBox **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__UseItemCouponFromCouponBox, sizeof(_ns1__UseItemCouponFromCouponBox), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UseItemCouponFromCouponBox(struct soap *soap, _ns1__UseItemCouponFromCouponBox *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__UseItemCouponFromCouponBox);
	if (soap_out_PointerTo_ns1__UseItemCouponFromCouponBox(soap, tag?tag:"ns1:UseItemCouponFromCouponBox", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__UseItemCouponFromCouponBox ** SOAP_FMAC4 soap_get_PointerTo_ns1__UseItemCouponFromCouponBox(struct soap *soap, _ns1__UseItemCouponFromCouponBox **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__UseItemCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckItemCouponFromCouponBoxResponse(struct soap *soap, _ns1__CheckItemCouponFromCouponBoxResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckItemCouponFromCouponBoxResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckItemCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, _ns1__CheckItemCouponFromCouponBoxResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckItemCouponFromCouponBoxResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckItemCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__CheckItemCouponFromCouponBoxResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckItemCouponFromCouponBoxResponse **)soap_malloc(soap, sizeof(_ns1__CheckItemCouponFromCouponBoxResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckItemCouponFromCouponBoxResponse *)soap_instantiate__ns1__CheckItemCouponFromCouponBoxResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckItemCouponFromCouponBoxResponse ** p = (_ns1__CheckItemCouponFromCouponBoxResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckItemCouponFromCouponBoxResponse, sizeof(_ns1__CheckItemCouponFromCouponBoxResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckItemCouponFromCouponBoxResponse(struct soap *soap, _ns1__CheckItemCouponFromCouponBoxResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckItemCouponFromCouponBoxResponse);
	if (soap_out_PointerTo_ns1__CheckItemCouponFromCouponBoxResponse(soap, tag?tag:"ns1:CheckItemCouponFromCouponBoxResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckItemCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckItemCouponFromCouponBoxResponse(struct soap *soap, _ns1__CheckItemCouponFromCouponBoxResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckItemCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckItemCouponFromCouponBox(struct soap *soap, _ns1__CheckItemCouponFromCouponBox *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckItemCouponFromCouponBox))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckItemCouponFromCouponBox(struct soap *soap, const char *tag, int id, _ns1__CheckItemCouponFromCouponBox *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckItemCouponFromCouponBox);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckItemCouponFromCouponBox ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckItemCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__CheckItemCouponFromCouponBox **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckItemCouponFromCouponBox **)soap_malloc(soap, sizeof(_ns1__CheckItemCouponFromCouponBox *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckItemCouponFromCouponBox *)soap_instantiate__ns1__CheckItemCouponFromCouponBox(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckItemCouponFromCouponBox ** p = (_ns1__CheckItemCouponFromCouponBox **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckItemCouponFromCouponBox, sizeof(_ns1__CheckItemCouponFromCouponBox), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckItemCouponFromCouponBox(struct soap *soap, _ns1__CheckItemCouponFromCouponBox *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckItemCouponFromCouponBox);
	if (soap_out_PointerTo_ns1__CheckItemCouponFromCouponBox(soap, tag?tag:"ns1:CheckItemCouponFromCouponBox", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckItemCouponFromCouponBox ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckItemCouponFromCouponBox(struct soap *soap, _ns1__CheckItemCouponFromCouponBox **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckItemCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RollbackDiscountItemCouponResponse(struct soap *soap, _ns1__RollbackDiscountItemCouponResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__RollbackDiscountItemCouponResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RollbackDiscountItemCouponResponse(struct soap *soap, const char *tag, int id, _ns1__RollbackDiscountItemCouponResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__RollbackDiscountItemCouponResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__RollbackDiscountItemCouponResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__RollbackDiscountItemCouponResponse(struct soap *soap, const char *tag, _ns1__RollbackDiscountItemCouponResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__RollbackDiscountItemCouponResponse **)soap_malloc(soap, sizeof(_ns1__RollbackDiscountItemCouponResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__RollbackDiscountItemCouponResponse *)soap_instantiate__ns1__RollbackDiscountItemCouponResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__RollbackDiscountItemCouponResponse ** p = (_ns1__RollbackDiscountItemCouponResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__RollbackDiscountItemCouponResponse, sizeof(_ns1__RollbackDiscountItemCouponResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RollbackDiscountItemCouponResponse(struct soap *soap, _ns1__RollbackDiscountItemCouponResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__RollbackDiscountItemCouponResponse);
	if (soap_out_PointerTo_ns1__RollbackDiscountItemCouponResponse(soap, tag?tag:"ns1:RollbackDiscountItemCouponResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__RollbackDiscountItemCouponResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__RollbackDiscountItemCouponResponse(struct soap *soap, _ns1__RollbackDiscountItemCouponResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__RollbackDiscountItemCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RollbackDiscountItemCoupon(struct soap *soap, _ns1__RollbackDiscountItemCoupon *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__RollbackDiscountItemCoupon))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RollbackDiscountItemCoupon(struct soap *soap, const char *tag, int id, _ns1__RollbackDiscountItemCoupon *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__RollbackDiscountItemCoupon);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__RollbackDiscountItemCoupon ** SOAP_FMAC4 soap_in_PointerTo_ns1__RollbackDiscountItemCoupon(struct soap *soap, const char *tag, _ns1__RollbackDiscountItemCoupon **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__RollbackDiscountItemCoupon **)soap_malloc(soap, sizeof(_ns1__RollbackDiscountItemCoupon *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__RollbackDiscountItemCoupon *)soap_instantiate__ns1__RollbackDiscountItemCoupon(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__RollbackDiscountItemCoupon ** p = (_ns1__RollbackDiscountItemCoupon **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__RollbackDiscountItemCoupon, sizeof(_ns1__RollbackDiscountItemCoupon), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RollbackDiscountItemCoupon(struct soap *soap, _ns1__RollbackDiscountItemCoupon *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__RollbackDiscountItemCoupon);
	if (soap_out_PointerTo_ns1__RollbackDiscountItemCoupon(soap, tag?tag:"ns1:RollbackDiscountItemCoupon", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__RollbackDiscountItemCoupon ** SOAP_FMAC4 soap_get_PointerTo_ns1__RollbackDiscountItemCoupon(struct soap *soap, _ns1__RollbackDiscountItemCoupon **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__RollbackDiscountItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UseDiscountItemCouponResponse(struct soap *soap, _ns1__UseDiscountItemCouponResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__UseDiscountItemCouponResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UseDiscountItemCouponResponse(struct soap *soap, const char *tag, int id, _ns1__UseDiscountItemCouponResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__UseDiscountItemCouponResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__UseDiscountItemCouponResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__UseDiscountItemCouponResponse(struct soap *soap, const char *tag, _ns1__UseDiscountItemCouponResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__UseDiscountItemCouponResponse **)soap_malloc(soap, sizeof(_ns1__UseDiscountItemCouponResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__UseDiscountItemCouponResponse *)soap_instantiate__ns1__UseDiscountItemCouponResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__UseDiscountItemCouponResponse ** p = (_ns1__UseDiscountItemCouponResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__UseDiscountItemCouponResponse, sizeof(_ns1__UseDiscountItemCouponResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UseDiscountItemCouponResponse(struct soap *soap, _ns1__UseDiscountItemCouponResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__UseDiscountItemCouponResponse);
	if (soap_out_PointerTo_ns1__UseDiscountItemCouponResponse(soap, tag?tag:"ns1:UseDiscountItemCouponResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__UseDiscountItemCouponResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__UseDiscountItemCouponResponse(struct soap *soap, _ns1__UseDiscountItemCouponResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__UseDiscountItemCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UseDiscountItemCoupon(struct soap *soap, _ns1__UseDiscountItemCoupon *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__UseDiscountItemCoupon))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UseDiscountItemCoupon(struct soap *soap, const char *tag, int id, _ns1__UseDiscountItemCoupon *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__UseDiscountItemCoupon);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__UseDiscountItemCoupon ** SOAP_FMAC4 soap_in_PointerTo_ns1__UseDiscountItemCoupon(struct soap *soap, const char *tag, _ns1__UseDiscountItemCoupon **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__UseDiscountItemCoupon **)soap_malloc(soap, sizeof(_ns1__UseDiscountItemCoupon *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__UseDiscountItemCoupon *)soap_instantiate__ns1__UseDiscountItemCoupon(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__UseDiscountItemCoupon ** p = (_ns1__UseDiscountItemCoupon **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__UseDiscountItemCoupon, sizeof(_ns1__UseDiscountItemCoupon), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UseDiscountItemCoupon(struct soap *soap, _ns1__UseDiscountItemCoupon *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__UseDiscountItemCoupon);
	if (soap_out_PointerTo_ns1__UseDiscountItemCoupon(soap, tag?tag:"ns1:UseDiscountItemCoupon", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__UseDiscountItemCoupon ** SOAP_FMAC4 soap_get_PointerTo_ns1__UseDiscountItemCoupon(struct soap *soap, _ns1__UseDiscountItemCoupon **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__UseDiscountItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckDiscountItemCouponResponse(struct soap *soap, _ns1__CheckDiscountItemCouponResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckDiscountItemCouponResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckDiscountItemCouponResponse(struct soap *soap, const char *tag, int id, _ns1__CheckDiscountItemCouponResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckDiscountItemCouponResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckDiscountItemCouponResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckDiscountItemCouponResponse(struct soap *soap, const char *tag, _ns1__CheckDiscountItemCouponResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckDiscountItemCouponResponse **)soap_malloc(soap, sizeof(_ns1__CheckDiscountItemCouponResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckDiscountItemCouponResponse *)soap_instantiate__ns1__CheckDiscountItemCouponResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckDiscountItemCouponResponse ** p = (_ns1__CheckDiscountItemCouponResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckDiscountItemCouponResponse, sizeof(_ns1__CheckDiscountItemCouponResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckDiscountItemCouponResponse(struct soap *soap, _ns1__CheckDiscountItemCouponResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckDiscountItemCouponResponse);
	if (soap_out_PointerTo_ns1__CheckDiscountItemCouponResponse(soap, tag?tag:"ns1:CheckDiscountItemCouponResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckDiscountItemCouponResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckDiscountItemCouponResponse(struct soap *soap, _ns1__CheckDiscountItemCouponResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckDiscountItemCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckDiscountItemCoupon(struct soap *soap, _ns1__CheckDiscountItemCoupon *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckDiscountItemCoupon))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckDiscountItemCoupon(struct soap *soap, const char *tag, int id, _ns1__CheckDiscountItemCoupon *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckDiscountItemCoupon);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckDiscountItemCoupon ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckDiscountItemCoupon(struct soap *soap, const char *tag, _ns1__CheckDiscountItemCoupon **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckDiscountItemCoupon **)soap_malloc(soap, sizeof(_ns1__CheckDiscountItemCoupon *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckDiscountItemCoupon *)soap_instantiate__ns1__CheckDiscountItemCoupon(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckDiscountItemCoupon ** p = (_ns1__CheckDiscountItemCoupon **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckDiscountItemCoupon, sizeof(_ns1__CheckDiscountItemCoupon), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckDiscountItemCoupon(struct soap *soap, _ns1__CheckDiscountItemCoupon *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckDiscountItemCoupon);
	if (soap_out_PointerTo_ns1__CheckDiscountItemCoupon(soap, tag?tag:"ns1:CheckDiscountItemCoupon", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckDiscountItemCoupon ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckDiscountItemCoupon(struct soap *soap, _ns1__CheckDiscountItemCoupon **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckDiscountItemCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RollbackDiscountCouponFromCouponBoxResponse(struct soap *soap, _ns1__RollbackDiscountCouponFromCouponBoxResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBoxResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RollbackDiscountCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, _ns1__RollbackDiscountCouponFromCouponBoxResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBoxResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__RollbackDiscountCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__RollbackDiscountCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__RollbackDiscountCouponFromCouponBoxResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__RollbackDiscountCouponFromCouponBoxResponse **)soap_malloc(soap, sizeof(_ns1__RollbackDiscountCouponFromCouponBoxResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__RollbackDiscountCouponFromCouponBoxResponse *)soap_instantiate__ns1__RollbackDiscountCouponFromCouponBoxResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__RollbackDiscountCouponFromCouponBoxResponse ** p = (_ns1__RollbackDiscountCouponFromCouponBoxResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBoxResponse, sizeof(_ns1__RollbackDiscountCouponFromCouponBoxResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RollbackDiscountCouponFromCouponBoxResponse(struct soap *soap, _ns1__RollbackDiscountCouponFromCouponBoxResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__RollbackDiscountCouponFromCouponBoxResponse);
	if (soap_out_PointerTo_ns1__RollbackDiscountCouponFromCouponBoxResponse(soap, tag?tag:"ns1:RollbackDiscountCouponFromCouponBoxResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__RollbackDiscountCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__RollbackDiscountCouponFromCouponBoxResponse(struct soap *soap, _ns1__RollbackDiscountCouponFromCouponBoxResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__RollbackDiscountCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, _ns1__RollbackDiscountCouponFromCouponBox *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBox))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, const char *tag, int id, _ns1__RollbackDiscountCouponFromCouponBox *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBox);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__RollbackDiscountCouponFromCouponBox ** SOAP_FMAC4 soap_in_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__RollbackDiscountCouponFromCouponBox **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__RollbackDiscountCouponFromCouponBox **)soap_malloc(soap, sizeof(_ns1__RollbackDiscountCouponFromCouponBox *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__RollbackDiscountCouponFromCouponBox *)soap_instantiate__ns1__RollbackDiscountCouponFromCouponBox(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__RollbackDiscountCouponFromCouponBox ** p = (_ns1__RollbackDiscountCouponFromCouponBox **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__RollbackDiscountCouponFromCouponBox, sizeof(_ns1__RollbackDiscountCouponFromCouponBox), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, _ns1__RollbackDiscountCouponFromCouponBox *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__RollbackDiscountCouponFromCouponBox);
	if (soap_out_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(soap, tag?tag:"ns1:RollbackDiscountCouponFromCouponBox", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__RollbackDiscountCouponFromCouponBox ** SOAP_FMAC4 soap_get_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(struct soap *soap, _ns1__RollbackDiscountCouponFromCouponBox **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__RollbackDiscountCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UseDiscountCouponFromCouponBoxResponse(struct soap *soap, _ns1__UseDiscountCouponFromCouponBoxResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBoxResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UseDiscountCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, _ns1__UseDiscountCouponFromCouponBoxResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBoxResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__UseDiscountCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__UseDiscountCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__UseDiscountCouponFromCouponBoxResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__UseDiscountCouponFromCouponBoxResponse **)soap_malloc(soap, sizeof(_ns1__UseDiscountCouponFromCouponBoxResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__UseDiscountCouponFromCouponBoxResponse *)soap_instantiate__ns1__UseDiscountCouponFromCouponBoxResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__UseDiscountCouponFromCouponBoxResponse ** p = (_ns1__UseDiscountCouponFromCouponBoxResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBoxResponse, sizeof(_ns1__UseDiscountCouponFromCouponBoxResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UseDiscountCouponFromCouponBoxResponse(struct soap *soap, _ns1__UseDiscountCouponFromCouponBoxResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__UseDiscountCouponFromCouponBoxResponse);
	if (soap_out_PointerTo_ns1__UseDiscountCouponFromCouponBoxResponse(soap, tag?tag:"ns1:UseDiscountCouponFromCouponBoxResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__UseDiscountCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__UseDiscountCouponFromCouponBoxResponse(struct soap *soap, _ns1__UseDiscountCouponFromCouponBoxResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__UseDiscountCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UseDiscountCouponFromCouponBox(struct soap *soap, _ns1__UseDiscountCouponFromCouponBox *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBox))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UseDiscountCouponFromCouponBox(struct soap *soap, const char *tag, int id, _ns1__UseDiscountCouponFromCouponBox *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBox);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__UseDiscountCouponFromCouponBox ** SOAP_FMAC4 soap_in_PointerTo_ns1__UseDiscountCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__UseDiscountCouponFromCouponBox **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__UseDiscountCouponFromCouponBox **)soap_malloc(soap, sizeof(_ns1__UseDiscountCouponFromCouponBox *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__UseDiscountCouponFromCouponBox *)soap_instantiate__ns1__UseDiscountCouponFromCouponBox(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__UseDiscountCouponFromCouponBox ** p = (_ns1__UseDiscountCouponFromCouponBox **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__UseDiscountCouponFromCouponBox, sizeof(_ns1__UseDiscountCouponFromCouponBox), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UseDiscountCouponFromCouponBox(struct soap *soap, _ns1__UseDiscountCouponFromCouponBox *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__UseDiscountCouponFromCouponBox);
	if (soap_out_PointerTo_ns1__UseDiscountCouponFromCouponBox(soap, tag?tag:"ns1:UseDiscountCouponFromCouponBox", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__UseDiscountCouponFromCouponBox ** SOAP_FMAC4 soap_get_PointerTo_ns1__UseDiscountCouponFromCouponBox(struct soap *soap, _ns1__UseDiscountCouponFromCouponBox **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__UseDiscountCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckDiscountCouponFromCouponBoxResponse(struct soap *soap, _ns1__CheckDiscountCouponFromCouponBoxResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBoxResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckDiscountCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, _ns1__CheckDiscountCouponFromCouponBoxResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBoxResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckDiscountCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckDiscountCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__CheckDiscountCouponFromCouponBoxResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckDiscountCouponFromCouponBoxResponse **)soap_malloc(soap, sizeof(_ns1__CheckDiscountCouponFromCouponBoxResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckDiscountCouponFromCouponBoxResponse *)soap_instantiate__ns1__CheckDiscountCouponFromCouponBoxResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckDiscountCouponFromCouponBoxResponse ** p = (_ns1__CheckDiscountCouponFromCouponBoxResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBoxResponse, sizeof(_ns1__CheckDiscountCouponFromCouponBoxResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckDiscountCouponFromCouponBoxResponse(struct soap *soap, _ns1__CheckDiscountCouponFromCouponBoxResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckDiscountCouponFromCouponBoxResponse);
	if (soap_out_PointerTo_ns1__CheckDiscountCouponFromCouponBoxResponse(soap, tag?tag:"ns1:CheckDiscountCouponFromCouponBoxResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckDiscountCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckDiscountCouponFromCouponBoxResponse(struct soap *soap, _ns1__CheckDiscountCouponFromCouponBoxResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckDiscountCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, _ns1__CheckDiscountCouponFromCouponBox *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBox))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, const char *tag, int id, _ns1__CheckDiscountCouponFromCouponBox *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBox);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckDiscountCouponFromCouponBox ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__CheckDiscountCouponFromCouponBox **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckDiscountCouponFromCouponBox **)soap_malloc(soap, sizeof(_ns1__CheckDiscountCouponFromCouponBox *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckDiscountCouponFromCouponBox *)soap_instantiate__ns1__CheckDiscountCouponFromCouponBox(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckDiscountCouponFromCouponBox ** p = (_ns1__CheckDiscountCouponFromCouponBox **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckDiscountCouponFromCouponBox, sizeof(_ns1__CheckDiscountCouponFromCouponBox), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, _ns1__CheckDiscountCouponFromCouponBox *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckDiscountCouponFromCouponBox);
	if (soap_out_PointerTo_ns1__CheckDiscountCouponFromCouponBox(soap, tag?tag:"ns1:CheckDiscountCouponFromCouponBox", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckDiscountCouponFromCouponBox ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckDiscountCouponFromCouponBox(struct soap *soap, _ns1__CheckDiscountCouponFromCouponBox **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckDiscountCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectHoldingCouponCountByAccountIdResponse(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountIdResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountIdResponse(struct soap *soap, const char *tag, int id, _ns1__SelectHoldingCouponCountByAccountIdResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountIdResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountIdResponse(struct soap *soap, const char *tag, _ns1__SelectHoldingCouponCountByAccountIdResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectHoldingCouponCountByAccountIdResponse **)soap_malloc(soap, sizeof(_ns1__SelectHoldingCouponCountByAccountIdResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectHoldingCouponCountByAccountIdResponse *)soap_instantiate__ns1__SelectHoldingCouponCountByAccountIdResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectHoldingCouponCountByAccountIdResponse ** p = (_ns1__SelectHoldingCouponCountByAccountIdResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdResponse, sizeof(_ns1__SelectHoldingCouponCountByAccountIdResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectHoldingCouponCountByAccountIdResponse(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountIdResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountIdResponse);
	if (soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountIdResponse(soap, tag?tag:"ns1:SelectHoldingCouponCountByAccountIdResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountIdResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectHoldingCouponCountByAccountIdResponse(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountIdResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountIdResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountId *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountId))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, const char *tag, int id, _ns1__SelectHoldingCouponCountByAccountId *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountId);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountId ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, const char *tag, _ns1__SelectHoldingCouponCountByAccountId **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectHoldingCouponCountByAccountId **)soap_malloc(soap, sizeof(_ns1__SelectHoldingCouponCountByAccountId *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectHoldingCouponCountByAccountId *)soap_instantiate__ns1__SelectHoldingCouponCountByAccountId(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectHoldingCouponCountByAccountId ** p = (_ns1__SelectHoldingCouponCountByAccountId **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountId, sizeof(_ns1__SelectHoldingCouponCountByAccountId), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountId *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountId);
	if (soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountId(soap, tag?tag:"ns1:SelectHoldingCouponCountByAccountId", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountId ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectHoldingCouponCountByAccountId(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountId **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountId(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(struct soap *soap, const char *tag, int id, _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(struct soap *soap, const char *tag, _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse **)soap_malloc(soap, sizeof(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *)soap_instantiate__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse ** p = (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse, sizeof(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse);
	if (soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(soap, tag?tag:"ns1:SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCodeResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, const char *tag, int id, _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, const char *tag, _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode **)soap_malloc(soap, sizeof(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *)soap_instantiate__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode ** p = (_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode, sizeof(_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode);
	if (soap_out_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, tag?tag:"ns1:SelectHoldingCouponCountByAccountIdByGameServiceCode", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(struct soap *soap, _ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectHoldingCouponCountByAccountIdByGameServiceCode(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(struct soap *soap, _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(struct soap *soap, const char *tag, int id, _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(struct soap *soap, const char *tag, _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse **)soap_malloc(soap, sizeof(_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *)soap_instantiate__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse ** p = (_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse, sizeof(_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(struct soap *soap, _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse);
	if (soap_out_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(soap, tag?tag:"ns1:SelectAppliableItemCodeForDiscountByAccountByGameResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(struct soap *soap, _ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGameResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, _ns1__SelectAppliableItemCodeForDiscountByAccountByGame *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGame))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, const char *tag, int id, _ns1__SelectAppliableItemCodeForDiscountByAccountByGame *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGame);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectAppliableItemCodeForDiscountByAccountByGame ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, const char *tag, _ns1__SelectAppliableItemCodeForDiscountByAccountByGame **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectAppliableItemCodeForDiscountByAccountByGame **)soap_malloc(soap, sizeof(_ns1__SelectAppliableItemCodeForDiscountByAccountByGame *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectAppliableItemCodeForDiscountByAccountByGame *)soap_instantiate__ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectAppliableItemCodeForDiscountByAccountByGame ** p = (_ns1__SelectAppliableItemCodeForDiscountByAccountByGame **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectAppliableItemCodeForDiscountByAccountByGame, sizeof(_ns1__SelectAppliableItemCodeForDiscountByAccountByGame), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, _ns1__SelectAppliableItemCodeForDiscountByAccountByGame *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame);
	if (soap_out_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, tag?tag:"ns1:SelectAppliableItemCodeForDiscountByAccountByGame", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectAppliableItemCodeForDiscountByAccountByGame ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(struct soap *soap, _ns1__SelectAppliableItemCodeForDiscountByAccountByGame **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectAppliableItemCodeForDiscountByAccountByGame(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckActivationCouponStatusResponse(struct soap *soap, _ns1__CheckActivationCouponStatusResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckActivationCouponStatusResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckActivationCouponStatusResponse(struct soap *soap, const char *tag, int id, _ns1__CheckActivationCouponStatusResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckActivationCouponStatusResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckActivationCouponStatusResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckActivationCouponStatusResponse(struct soap *soap, const char *tag, _ns1__CheckActivationCouponStatusResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckActivationCouponStatusResponse **)soap_malloc(soap, sizeof(_ns1__CheckActivationCouponStatusResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckActivationCouponStatusResponse *)soap_instantiate__ns1__CheckActivationCouponStatusResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckActivationCouponStatusResponse ** p = (_ns1__CheckActivationCouponStatusResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckActivationCouponStatusResponse, sizeof(_ns1__CheckActivationCouponStatusResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckActivationCouponStatusResponse(struct soap *soap, _ns1__CheckActivationCouponStatusResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckActivationCouponStatusResponse);
	if (soap_out_PointerTo_ns1__CheckActivationCouponStatusResponse(soap, tag?tag:"ns1:CheckActivationCouponStatusResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckActivationCouponStatusResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckActivationCouponStatusResponse(struct soap *soap, _ns1__CheckActivationCouponStatusResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckActivationCouponStatusResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckActivationCouponStatus(struct soap *soap, _ns1__CheckActivationCouponStatus *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckActivationCouponStatus))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckActivationCouponStatus(struct soap *soap, const char *tag, int id, _ns1__CheckActivationCouponStatus *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckActivationCouponStatus);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckActivationCouponStatus ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckActivationCouponStatus(struct soap *soap, const char *tag, _ns1__CheckActivationCouponStatus **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckActivationCouponStatus **)soap_malloc(soap, sizeof(_ns1__CheckActivationCouponStatus *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckActivationCouponStatus *)soap_instantiate__ns1__CheckActivationCouponStatus(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckActivationCouponStatus ** p = (_ns1__CheckActivationCouponStatus **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckActivationCouponStatus, sizeof(_ns1__CheckActivationCouponStatus), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckActivationCouponStatus(struct soap *soap, _ns1__CheckActivationCouponStatus *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckActivationCouponStatus);
	if (soap_out_PointerTo_ns1__CheckActivationCouponStatus(soap, tag?tag:"ns1:CheckActivationCouponStatus", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckActivationCouponStatus ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckActivationCouponStatus(struct soap *soap, _ns1__CheckActivationCouponStatus **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckActivationCouponStatus(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CancelActivationCashCouponResponse(struct soap *soap, _ns1__CancelActivationCashCouponResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CancelActivationCashCouponResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CancelActivationCashCouponResponse(struct soap *soap, const char *tag, int id, _ns1__CancelActivationCashCouponResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CancelActivationCashCouponResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CancelActivationCashCouponResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CancelActivationCashCouponResponse(struct soap *soap, const char *tag, _ns1__CancelActivationCashCouponResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CancelActivationCashCouponResponse **)soap_malloc(soap, sizeof(_ns1__CancelActivationCashCouponResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CancelActivationCashCouponResponse *)soap_instantiate__ns1__CancelActivationCashCouponResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CancelActivationCashCouponResponse ** p = (_ns1__CancelActivationCashCouponResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CancelActivationCashCouponResponse, sizeof(_ns1__CancelActivationCashCouponResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CancelActivationCashCouponResponse(struct soap *soap, _ns1__CancelActivationCashCouponResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CancelActivationCashCouponResponse);
	if (soap_out_PointerTo_ns1__CancelActivationCashCouponResponse(soap, tag?tag:"ns1:CancelActivationCashCouponResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CancelActivationCashCouponResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CancelActivationCashCouponResponse(struct soap *soap, _ns1__CancelActivationCashCouponResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CancelActivationCashCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CancelActivationCashCoupon(struct soap *soap, _ns1__CancelActivationCashCoupon *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CancelActivationCashCoupon))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CancelActivationCashCoupon(struct soap *soap, const char *tag, int id, _ns1__CancelActivationCashCoupon *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CancelActivationCashCoupon);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CancelActivationCashCoupon ** SOAP_FMAC4 soap_in_PointerTo_ns1__CancelActivationCashCoupon(struct soap *soap, const char *tag, _ns1__CancelActivationCashCoupon **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CancelActivationCashCoupon **)soap_malloc(soap, sizeof(_ns1__CancelActivationCashCoupon *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CancelActivationCashCoupon *)soap_instantiate__ns1__CancelActivationCashCoupon(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CancelActivationCashCoupon ** p = (_ns1__CancelActivationCashCoupon **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CancelActivationCashCoupon, sizeof(_ns1__CancelActivationCashCoupon), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CancelActivationCashCoupon(struct soap *soap, _ns1__CancelActivationCashCoupon *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CancelActivationCashCoupon);
	if (soap_out_PointerTo_ns1__CancelActivationCashCoupon(soap, tag?tag:"ns1:CancelActivationCashCoupon", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CancelActivationCashCoupon ** SOAP_FMAC4 soap_get_PointerTo_ns1__CancelActivationCashCoupon(struct soap *soap, _ns1__CancelActivationCashCoupon **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CancelActivationCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ReverseDeactivationCashCouponResponse(struct soap *soap, _ns1__ReverseDeactivationCashCouponResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__ReverseDeactivationCashCouponResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ReverseDeactivationCashCouponResponse(struct soap *soap, const char *tag, int id, _ns1__ReverseDeactivationCashCouponResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__ReverseDeactivationCashCouponResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__ReverseDeactivationCashCouponResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__ReverseDeactivationCashCouponResponse(struct soap *soap, const char *tag, _ns1__ReverseDeactivationCashCouponResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__ReverseDeactivationCashCouponResponse **)soap_malloc(soap, sizeof(_ns1__ReverseDeactivationCashCouponResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__ReverseDeactivationCashCouponResponse *)soap_instantiate__ns1__ReverseDeactivationCashCouponResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__ReverseDeactivationCashCouponResponse ** p = (_ns1__ReverseDeactivationCashCouponResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__ReverseDeactivationCashCouponResponse, sizeof(_ns1__ReverseDeactivationCashCouponResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ReverseDeactivationCashCouponResponse(struct soap *soap, _ns1__ReverseDeactivationCashCouponResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__ReverseDeactivationCashCouponResponse);
	if (soap_out_PointerTo_ns1__ReverseDeactivationCashCouponResponse(soap, tag?tag:"ns1:ReverseDeactivationCashCouponResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__ReverseDeactivationCashCouponResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__ReverseDeactivationCashCouponResponse(struct soap *soap, _ns1__ReverseDeactivationCashCouponResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__ReverseDeactivationCashCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ReverseDeactivationCashCoupon(struct soap *soap, _ns1__ReverseDeactivationCashCoupon *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__ReverseDeactivationCashCoupon))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ReverseDeactivationCashCoupon(struct soap *soap, const char *tag, int id, _ns1__ReverseDeactivationCashCoupon *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__ReverseDeactivationCashCoupon);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__ReverseDeactivationCashCoupon ** SOAP_FMAC4 soap_in_PointerTo_ns1__ReverseDeactivationCashCoupon(struct soap *soap, const char *tag, _ns1__ReverseDeactivationCashCoupon **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__ReverseDeactivationCashCoupon **)soap_malloc(soap, sizeof(_ns1__ReverseDeactivationCashCoupon *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__ReverseDeactivationCashCoupon *)soap_instantiate__ns1__ReverseDeactivationCashCoupon(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__ReverseDeactivationCashCoupon ** p = (_ns1__ReverseDeactivationCashCoupon **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__ReverseDeactivationCashCoupon, sizeof(_ns1__ReverseDeactivationCashCoupon), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ReverseDeactivationCashCoupon(struct soap *soap, _ns1__ReverseDeactivationCashCoupon *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__ReverseDeactivationCashCoupon);
	if (soap_out_PointerTo_ns1__ReverseDeactivationCashCoupon(soap, tag?tag:"ns1:ReverseDeactivationCashCoupon", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__ReverseDeactivationCashCoupon ** SOAP_FMAC4 soap_get_PointerTo_ns1__ReverseDeactivationCashCoupon(struct soap *soap, _ns1__ReverseDeactivationCashCoupon **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__ReverseDeactivationCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ReverseActivationCashCouponResponse(struct soap *soap, _ns1__ReverseActivationCashCouponResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__ReverseActivationCashCouponResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ReverseActivationCashCouponResponse(struct soap *soap, const char *tag, int id, _ns1__ReverseActivationCashCouponResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__ReverseActivationCashCouponResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__ReverseActivationCashCouponResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__ReverseActivationCashCouponResponse(struct soap *soap, const char *tag, _ns1__ReverseActivationCashCouponResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__ReverseActivationCashCouponResponse **)soap_malloc(soap, sizeof(_ns1__ReverseActivationCashCouponResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__ReverseActivationCashCouponResponse *)soap_instantiate__ns1__ReverseActivationCashCouponResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__ReverseActivationCashCouponResponse ** p = (_ns1__ReverseActivationCashCouponResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__ReverseActivationCashCouponResponse, sizeof(_ns1__ReverseActivationCashCouponResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ReverseActivationCashCouponResponse(struct soap *soap, _ns1__ReverseActivationCashCouponResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__ReverseActivationCashCouponResponse);
	if (soap_out_PointerTo_ns1__ReverseActivationCashCouponResponse(soap, tag?tag:"ns1:ReverseActivationCashCouponResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__ReverseActivationCashCouponResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__ReverseActivationCashCouponResponse(struct soap *soap, _ns1__ReverseActivationCashCouponResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__ReverseActivationCashCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ReverseActivationCashCoupon(struct soap *soap, _ns1__ReverseActivationCashCoupon *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__ReverseActivationCashCoupon))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ReverseActivationCashCoupon(struct soap *soap, const char *tag, int id, _ns1__ReverseActivationCashCoupon *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__ReverseActivationCashCoupon);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__ReverseActivationCashCoupon ** SOAP_FMAC4 soap_in_PointerTo_ns1__ReverseActivationCashCoupon(struct soap *soap, const char *tag, _ns1__ReverseActivationCashCoupon **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__ReverseActivationCashCoupon **)soap_malloc(soap, sizeof(_ns1__ReverseActivationCashCoupon *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__ReverseActivationCashCoupon *)soap_instantiate__ns1__ReverseActivationCashCoupon(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__ReverseActivationCashCoupon ** p = (_ns1__ReverseActivationCashCoupon **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__ReverseActivationCashCoupon, sizeof(_ns1__ReverseActivationCashCoupon), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ReverseActivationCashCoupon(struct soap *soap, _ns1__ReverseActivationCashCoupon *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__ReverseActivationCashCoupon);
	if (soap_out_PointerTo_ns1__ReverseActivationCashCoupon(soap, tag?tag:"ns1:ReverseActivationCashCoupon", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__ReverseActivationCashCoupon ** SOAP_FMAC4 soap_get_PointerTo_ns1__ReverseActivationCashCoupon(struct soap *soap, _ns1__ReverseActivationCashCoupon **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__ReverseActivationCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ActivationCashCouponResponse(struct soap *soap, _ns1__ActivationCashCouponResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__ActivationCashCouponResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ActivationCashCouponResponse(struct soap *soap, const char *tag, int id, _ns1__ActivationCashCouponResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__ActivationCashCouponResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__ActivationCashCouponResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__ActivationCashCouponResponse(struct soap *soap, const char *tag, _ns1__ActivationCashCouponResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__ActivationCashCouponResponse **)soap_malloc(soap, sizeof(_ns1__ActivationCashCouponResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__ActivationCashCouponResponse *)soap_instantiate__ns1__ActivationCashCouponResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__ActivationCashCouponResponse ** p = (_ns1__ActivationCashCouponResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__ActivationCashCouponResponse, sizeof(_ns1__ActivationCashCouponResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ActivationCashCouponResponse(struct soap *soap, _ns1__ActivationCashCouponResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__ActivationCashCouponResponse);
	if (soap_out_PointerTo_ns1__ActivationCashCouponResponse(soap, tag?tag:"ns1:ActivationCashCouponResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__ActivationCashCouponResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__ActivationCashCouponResponse(struct soap *soap, _ns1__ActivationCashCouponResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__ActivationCashCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ActivationCashCoupon(struct soap *soap, _ns1__ActivationCashCoupon *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__ActivationCashCoupon))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ActivationCashCoupon(struct soap *soap, const char *tag, int id, _ns1__ActivationCashCoupon *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__ActivationCashCoupon);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__ActivationCashCoupon ** SOAP_FMAC4 soap_in_PointerTo_ns1__ActivationCashCoupon(struct soap *soap, const char *tag, _ns1__ActivationCashCoupon **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__ActivationCashCoupon **)soap_malloc(soap, sizeof(_ns1__ActivationCashCoupon *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__ActivationCashCoupon *)soap_instantiate__ns1__ActivationCashCoupon(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__ActivationCashCoupon ** p = (_ns1__ActivationCashCoupon **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__ActivationCashCoupon, sizeof(_ns1__ActivationCashCoupon), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ActivationCashCoupon(struct soap *soap, _ns1__ActivationCashCoupon *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__ActivationCashCoupon);
	if (soap_out_PointerTo_ns1__ActivationCashCoupon(soap, tag?tag:"ns1:ActivationCashCoupon", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__ActivationCashCoupon ** SOAP_FMAC4 soap_get_PointerTo_ns1__ActivationCashCoupon(struct soap *soap, _ns1__ActivationCashCoupon **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__ActivationCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RollbackCashCouponResponse(struct soap *soap, _ns1__RollbackCashCouponResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__RollbackCashCouponResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RollbackCashCouponResponse(struct soap *soap, const char *tag, int id, _ns1__RollbackCashCouponResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__RollbackCashCouponResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__RollbackCashCouponResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__RollbackCashCouponResponse(struct soap *soap, const char *tag, _ns1__RollbackCashCouponResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__RollbackCashCouponResponse **)soap_malloc(soap, sizeof(_ns1__RollbackCashCouponResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__RollbackCashCouponResponse *)soap_instantiate__ns1__RollbackCashCouponResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__RollbackCashCouponResponse ** p = (_ns1__RollbackCashCouponResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__RollbackCashCouponResponse, sizeof(_ns1__RollbackCashCouponResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RollbackCashCouponResponse(struct soap *soap, _ns1__RollbackCashCouponResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__RollbackCashCouponResponse);
	if (soap_out_PointerTo_ns1__RollbackCashCouponResponse(soap, tag?tag:"ns1:RollbackCashCouponResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__RollbackCashCouponResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__RollbackCashCouponResponse(struct soap *soap, _ns1__RollbackCashCouponResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__RollbackCashCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RollbackCashCoupon(struct soap *soap, _ns1__RollbackCashCoupon *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__RollbackCashCoupon))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RollbackCashCoupon(struct soap *soap, const char *tag, int id, _ns1__RollbackCashCoupon *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__RollbackCashCoupon);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__RollbackCashCoupon ** SOAP_FMAC4 soap_in_PointerTo_ns1__RollbackCashCoupon(struct soap *soap, const char *tag, _ns1__RollbackCashCoupon **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__RollbackCashCoupon **)soap_malloc(soap, sizeof(_ns1__RollbackCashCoupon *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__RollbackCashCoupon *)soap_instantiate__ns1__RollbackCashCoupon(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__RollbackCashCoupon ** p = (_ns1__RollbackCashCoupon **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__RollbackCashCoupon, sizeof(_ns1__RollbackCashCoupon), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RollbackCashCoupon(struct soap *soap, _ns1__RollbackCashCoupon *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__RollbackCashCoupon);
	if (soap_out_PointerTo_ns1__RollbackCashCoupon(soap, tag?tag:"ns1:RollbackCashCoupon", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__RollbackCashCoupon ** SOAP_FMAC4 soap_get_PointerTo_ns1__RollbackCashCoupon(struct soap *soap, _ns1__RollbackCashCoupon **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__RollbackCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UseCashCouponResponse(struct soap *soap, _ns1__UseCashCouponResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__UseCashCouponResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UseCashCouponResponse(struct soap *soap, const char *tag, int id, _ns1__UseCashCouponResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__UseCashCouponResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__UseCashCouponResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__UseCashCouponResponse(struct soap *soap, const char *tag, _ns1__UseCashCouponResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__UseCashCouponResponse **)soap_malloc(soap, sizeof(_ns1__UseCashCouponResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__UseCashCouponResponse *)soap_instantiate__ns1__UseCashCouponResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__UseCashCouponResponse ** p = (_ns1__UseCashCouponResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__UseCashCouponResponse, sizeof(_ns1__UseCashCouponResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UseCashCouponResponse(struct soap *soap, _ns1__UseCashCouponResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__UseCashCouponResponse);
	if (soap_out_PointerTo_ns1__UseCashCouponResponse(soap, tag?tag:"ns1:UseCashCouponResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__UseCashCouponResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__UseCashCouponResponse(struct soap *soap, _ns1__UseCashCouponResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__UseCashCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UseCashCoupon(struct soap *soap, _ns1__UseCashCoupon *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__UseCashCoupon))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UseCashCoupon(struct soap *soap, const char *tag, int id, _ns1__UseCashCoupon *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__UseCashCoupon);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__UseCashCoupon ** SOAP_FMAC4 soap_in_PointerTo_ns1__UseCashCoupon(struct soap *soap, const char *tag, _ns1__UseCashCoupon **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__UseCashCoupon **)soap_malloc(soap, sizeof(_ns1__UseCashCoupon *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__UseCashCoupon *)soap_instantiate__ns1__UseCashCoupon(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__UseCashCoupon ** p = (_ns1__UseCashCoupon **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__UseCashCoupon, sizeof(_ns1__UseCashCoupon), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UseCashCoupon(struct soap *soap, _ns1__UseCashCoupon *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__UseCashCoupon);
	if (soap_out_PointerTo_ns1__UseCashCoupon(soap, tag?tag:"ns1:UseCashCoupon", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__UseCashCoupon ** SOAP_FMAC4 soap_get_PointerTo_ns1__UseCashCoupon(struct soap *soap, _ns1__UseCashCoupon **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__UseCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckCashCouponResponse(struct soap *soap, _ns1__CheckCashCouponResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckCashCouponResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckCashCouponResponse(struct soap *soap, const char *tag, int id, _ns1__CheckCashCouponResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckCashCouponResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckCashCouponResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckCashCouponResponse(struct soap *soap, const char *tag, _ns1__CheckCashCouponResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckCashCouponResponse **)soap_malloc(soap, sizeof(_ns1__CheckCashCouponResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckCashCouponResponse *)soap_instantiate__ns1__CheckCashCouponResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckCashCouponResponse ** p = (_ns1__CheckCashCouponResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckCashCouponResponse, sizeof(_ns1__CheckCashCouponResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckCashCouponResponse(struct soap *soap, _ns1__CheckCashCouponResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckCashCouponResponse);
	if (soap_out_PointerTo_ns1__CheckCashCouponResponse(soap, tag?tag:"ns1:CheckCashCouponResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckCashCouponResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckCashCouponResponse(struct soap *soap, _ns1__CheckCashCouponResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckCashCouponResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckCashCoupon(struct soap *soap, _ns1__CheckCashCoupon *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckCashCoupon))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckCashCoupon(struct soap *soap, const char *tag, int id, _ns1__CheckCashCoupon *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckCashCoupon);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckCashCoupon ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckCashCoupon(struct soap *soap, const char *tag, _ns1__CheckCashCoupon **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckCashCoupon **)soap_malloc(soap, sizeof(_ns1__CheckCashCoupon *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckCashCoupon *)soap_instantiate__ns1__CheckCashCoupon(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckCashCoupon ** p = (_ns1__CheckCashCoupon **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckCashCoupon, sizeof(_ns1__CheckCashCoupon), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckCashCoupon(struct soap *soap, _ns1__CheckCashCoupon *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckCashCoupon);
	if (soap_out_PointerTo_ns1__CheckCashCoupon(soap, tag?tag:"ns1:CheckCashCoupon", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckCashCoupon ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckCashCoupon(struct soap *soap, _ns1__CheckCashCoupon **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckCashCoupon(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RollbackCashCouponFromCouponBoxResponse(struct soap *soap, _ns1__RollbackCashCouponFromCouponBoxResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBoxResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RollbackCashCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, _ns1__RollbackCashCouponFromCouponBoxResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBoxResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__RollbackCashCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__RollbackCashCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__RollbackCashCouponFromCouponBoxResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__RollbackCashCouponFromCouponBoxResponse **)soap_malloc(soap, sizeof(_ns1__RollbackCashCouponFromCouponBoxResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__RollbackCashCouponFromCouponBoxResponse *)soap_instantiate__ns1__RollbackCashCouponFromCouponBoxResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__RollbackCashCouponFromCouponBoxResponse ** p = (_ns1__RollbackCashCouponFromCouponBoxResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBoxResponse, sizeof(_ns1__RollbackCashCouponFromCouponBoxResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RollbackCashCouponFromCouponBoxResponse(struct soap *soap, _ns1__RollbackCashCouponFromCouponBoxResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__RollbackCashCouponFromCouponBoxResponse);
	if (soap_out_PointerTo_ns1__RollbackCashCouponFromCouponBoxResponse(soap, tag?tag:"ns1:RollbackCashCouponFromCouponBoxResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__RollbackCashCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__RollbackCashCouponFromCouponBoxResponse(struct soap *soap, _ns1__RollbackCashCouponFromCouponBoxResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__RollbackCashCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RollbackCashCouponFromCouponBox(struct soap *soap, _ns1__RollbackCashCouponFromCouponBox *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBox))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RollbackCashCouponFromCouponBox(struct soap *soap, const char *tag, int id, _ns1__RollbackCashCouponFromCouponBox *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBox);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__RollbackCashCouponFromCouponBox ** SOAP_FMAC4 soap_in_PointerTo_ns1__RollbackCashCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__RollbackCashCouponFromCouponBox **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__RollbackCashCouponFromCouponBox **)soap_malloc(soap, sizeof(_ns1__RollbackCashCouponFromCouponBox *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__RollbackCashCouponFromCouponBox *)soap_instantiate__ns1__RollbackCashCouponFromCouponBox(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__RollbackCashCouponFromCouponBox ** p = (_ns1__RollbackCashCouponFromCouponBox **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__RollbackCashCouponFromCouponBox, sizeof(_ns1__RollbackCashCouponFromCouponBox), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RollbackCashCouponFromCouponBox(struct soap *soap, _ns1__RollbackCashCouponFromCouponBox *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__RollbackCashCouponFromCouponBox);
	if (soap_out_PointerTo_ns1__RollbackCashCouponFromCouponBox(soap, tag?tag:"ns1:RollbackCashCouponFromCouponBox", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__RollbackCashCouponFromCouponBox ** SOAP_FMAC4 soap_get_PointerTo_ns1__RollbackCashCouponFromCouponBox(struct soap *soap, _ns1__RollbackCashCouponFromCouponBox **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__RollbackCashCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UseCashCouponFromCouponBoxResponse(struct soap *soap, _ns1__UseCashCouponFromCouponBoxResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__UseCashCouponFromCouponBoxResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UseCashCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, _ns1__UseCashCouponFromCouponBoxResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__UseCashCouponFromCouponBoxResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__UseCashCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__UseCashCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__UseCashCouponFromCouponBoxResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__UseCashCouponFromCouponBoxResponse **)soap_malloc(soap, sizeof(_ns1__UseCashCouponFromCouponBoxResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__UseCashCouponFromCouponBoxResponse *)soap_instantiate__ns1__UseCashCouponFromCouponBoxResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__UseCashCouponFromCouponBoxResponse ** p = (_ns1__UseCashCouponFromCouponBoxResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__UseCashCouponFromCouponBoxResponse, sizeof(_ns1__UseCashCouponFromCouponBoxResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UseCashCouponFromCouponBoxResponse(struct soap *soap, _ns1__UseCashCouponFromCouponBoxResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__UseCashCouponFromCouponBoxResponse);
	if (soap_out_PointerTo_ns1__UseCashCouponFromCouponBoxResponse(soap, tag?tag:"ns1:UseCashCouponFromCouponBoxResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__UseCashCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__UseCashCouponFromCouponBoxResponse(struct soap *soap, _ns1__UseCashCouponFromCouponBoxResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__UseCashCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UseCashCouponFromCouponBox(struct soap *soap, _ns1__UseCashCouponFromCouponBox *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__UseCashCouponFromCouponBox))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UseCashCouponFromCouponBox(struct soap *soap, const char *tag, int id, _ns1__UseCashCouponFromCouponBox *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__UseCashCouponFromCouponBox);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__UseCashCouponFromCouponBox ** SOAP_FMAC4 soap_in_PointerTo_ns1__UseCashCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__UseCashCouponFromCouponBox **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__UseCashCouponFromCouponBox **)soap_malloc(soap, sizeof(_ns1__UseCashCouponFromCouponBox *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__UseCashCouponFromCouponBox *)soap_instantiate__ns1__UseCashCouponFromCouponBox(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__UseCashCouponFromCouponBox ** p = (_ns1__UseCashCouponFromCouponBox **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__UseCashCouponFromCouponBox, sizeof(_ns1__UseCashCouponFromCouponBox), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UseCashCouponFromCouponBox(struct soap *soap, _ns1__UseCashCouponFromCouponBox *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__UseCashCouponFromCouponBox);
	if (soap_out_PointerTo_ns1__UseCashCouponFromCouponBox(soap, tag?tag:"ns1:UseCashCouponFromCouponBox", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__UseCashCouponFromCouponBox ** SOAP_FMAC4 soap_get_PointerTo_ns1__UseCashCouponFromCouponBox(struct soap *soap, _ns1__UseCashCouponFromCouponBox **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__UseCashCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckCashCouponFromCouponBoxResponse(struct soap *soap, _ns1__CheckCashCouponFromCouponBoxResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckCashCouponFromCouponBoxResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckCashCouponFromCouponBoxResponse(struct soap *soap, const char *tag, int id, _ns1__CheckCashCouponFromCouponBoxResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckCashCouponFromCouponBoxResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckCashCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckCashCouponFromCouponBoxResponse(struct soap *soap, const char *tag, _ns1__CheckCashCouponFromCouponBoxResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckCashCouponFromCouponBoxResponse **)soap_malloc(soap, sizeof(_ns1__CheckCashCouponFromCouponBoxResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckCashCouponFromCouponBoxResponse *)soap_instantiate__ns1__CheckCashCouponFromCouponBoxResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckCashCouponFromCouponBoxResponse ** p = (_ns1__CheckCashCouponFromCouponBoxResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckCashCouponFromCouponBoxResponse, sizeof(_ns1__CheckCashCouponFromCouponBoxResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckCashCouponFromCouponBoxResponse(struct soap *soap, _ns1__CheckCashCouponFromCouponBoxResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckCashCouponFromCouponBoxResponse);
	if (soap_out_PointerTo_ns1__CheckCashCouponFromCouponBoxResponse(soap, tag?tag:"ns1:CheckCashCouponFromCouponBoxResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckCashCouponFromCouponBoxResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckCashCouponFromCouponBoxResponse(struct soap *soap, _ns1__CheckCashCouponFromCouponBoxResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckCashCouponFromCouponBoxResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckCashCouponFromCouponBox(struct soap *soap, _ns1__CheckCashCouponFromCouponBox *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckCashCouponFromCouponBox))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckCashCouponFromCouponBox(struct soap *soap, const char *tag, int id, _ns1__CheckCashCouponFromCouponBox *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckCashCouponFromCouponBox);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckCashCouponFromCouponBox ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckCashCouponFromCouponBox(struct soap *soap, const char *tag, _ns1__CheckCashCouponFromCouponBox **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckCashCouponFromCouponBox **)soap_malloc(soap, sizeof(_ns1__CheckCashCouponFromCouponBox *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckCashCouponFromCouponBox *)soap_instantiate__ns1__CheckCashCouponFromCouponBox(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckCashCouponFromCouponBox ** p = (_ns1__CheckCashCouponFromCouponBox **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckCashCouponFromCouponBox, sizeof(_ns1__CheckCashCouponFromCouponBox), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckCashCouponFromCouponBox(struct soap *soap, _ns1__CheckCashCouponFromCouponBox *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckCashCouponFromCouponBox);
	if (soap_out_PointerTo_ns1__CheckCashCouponFromCouponBox(soap, tag?tag:"ns1:CheckCashCouponFromCouponBox", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckCashCouponFromCouponBox ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckCashCouponFromCouponBox(struct soap *soap, _ns1__CheckCashCouponFromCouponBox **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckCashCouponFromCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetCouponBoxTargetItemListCountResponse(struct soap *soap, _ns1__GetCouponBoxTargetItemListCountResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCountResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetCouponBoxTargetItemListCountResponse(struct soap *soap, const char *tag, int id, _ns1__GetCouponBoxTargetItemListCountResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCountResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxTargetItemListCountResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetCouponBoxTargetItemListCountResponse(struct soap *soap, const char *tag, _ns1__GetCouponBoxTargetItemListCountResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__GetCouponBoxTargetItemListCountResponse **)soap_malloc(soap, sizeof(_ns1__GetCouponBoxTargetItemListCountResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__GetCouponBoxTargetItemListCountResponse *)soap_instantiate__ns1__GetCouponBoxTargetItemListCountResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__GetCouponBoxTargetItemListCountResponse ** p = (_ns1__GetCouponBoxTargetItemListCountResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCountResponse, sizeof(_ns1__GetCouponBoxTargetItemListCountResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetCouponBoxTargetItemListCountResponse(struct soap *soap, _ns1__GetCouponBoxTargetItemListCountResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__GetCouponBoxTargetItemListCountResponse);
	if (soap_out_PointerTo_ns1__GetCouponBoxTargetItemListCountResponse(soap, tag?tag:"ns1:GetCouponBoxTargetItemListCountResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__GetCouponBoxTargetItemListCountResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetCouponBoxTargetItemListCountResponse(struct soap *soap, _ns1__GetCouponBoxTargetItemListCountResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__GetCouponBoxTargetItemListCountResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetCouponBoxTargetItemListCount(struct soap *soap, _ns1__GetCouponBoxTargetItemListCount *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCount))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetCouponBoxTargetItemListCount(struct soap *soap, const char *tag, int id, _ns1__GetCouponBoxTargetItemListCount *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCount);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxTargetItemListCount ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetCouponBoxTargetItemListCount(struct soap *soap, const char *tag, _ns1__GetCouponBoxTargetItemListCount **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__GetCouponBoxTargetItemListCount **)soap_malloc(soap, sizeof(_ns1__GetCouponBoxTargetItemListCount *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__GetCouponBoxTargetItemListCount *)soap_instantiate__ns1__GetCouponBoxTargetItemListCount(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__GetCouponBoxTargetItemListCount ** p = (_ns1__GetCouponBoxTargetItemListCount **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__GetCouponBoxTargetItemListCount, sizeof(_ns1__GetCouponBoxTargetItemListCount), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetCouponBoxTargetItemListCount(struct soap *soap, _ns1__GetCouponBoxTargetItemListCount *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__GetCouponBoxTargetItemListCount);
	if (soap_out_PointerTo_ns1__GetCouponBoxTargetItemListCount(soap, tag?tag:"ns1:GetCouponBoxTargetItemListCount", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__GetCouponBoxTargetItemListCount ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetCouponBoxTargetItemListCount(struct soap *soap, _ns1__GetCouponBoxTargetItemListCount **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__GetCouponBoxTargetItemListCount(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectCouponBoxTargetItemListResponse(struct soap *soap, _ns1__SelectCouponBoxTargetItemListResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectCouponBoxTargetItemListResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectCouponBoxTargetItemListResponse(struct soap *soap, const char *tag, int id, _ns1__SelectCouponBoxTargetItemListResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectCouponBoxTargetItemListResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxTargetItemListResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectCouponBoxTargetItemListResponse(struct soap *soap, const char *tag, _ns1__SelectCouponBoxTargetItemListResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectCouponBoxTargetItemListResponse **)soap_malloc(soap, sizeof(_ns1__SelectCouponBoxTargetItemListResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectCouponBoxTargetItemListResponse *)soap_instantiate__ns1__SelectCouponBoxTargetItemListResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectCouponBoxTargetItemListResponse ** p = (_ns1__SelectCouponBoxTargetItemListResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectCouponBoxTargetItemListResponse, sizeof(_ns1__SelectCouponBoxTargetItemListResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectCouponBoxTargetItemListResponse(struct soap *soap, _ns1__SelectCouponBoxTargetItemListResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectCouponBoxTargetItemListResponse);
	if (soap_out_PointerTo_ns1__SelectCouponBoxTargetItemListResponse(soap, tag?tag:"ns1:SelectCouponBoxTargetItemListResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectCouponBoxTargetItemListResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectCouponBoxTargetItemListResponse(struct soap *soap, _ns1__SelectCouponBoxTargetItemListResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectCouponBoxTargetItemListResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectCouponBoxTargetItemList(struct soap *soap, _ns1__SelectCouponBoxTargetItemList *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectCouponBoxTargetItemList))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectCouponBoxTargetItemList(struct soap *soap, const char *tag, int id, _ns1__SelectCouponBoxTargetItemList *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectCouponBoxTargetItemList);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxTargetItemList ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectCouponBoxTargetItemList(struct soap *soap, const char *tag, _ns1__SelectCouponBoxTargetItemList **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectCouponBoxTargetItemList **)soap_malloc(soap, sizeof(_ns1__SelectCouponBoxTargetItemList *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectCouponBoxTargetItemList *)soap_instantiate__ns1__SelectCouponBoxTargetItemList(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectCouponBoxTargetItemList ** p = (_ns1__SelectCouponBoxTargetItemList **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectCouponBoxTargetItemList, sizeof(_ns1__SelectCouponBoxTargetItemList), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectCouponBoxTargetItemList(struct soap *soap, _ns1__SelectCouponBoxTargetItemList *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectCouponBoxTargetItemList);
	if (soap_out_PointerTo_ns1__SelectCouponBoxTargetItemList(soap, tag?tag:"ns1:SelectCouponBoxTargetItemList", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectCouponBoxTargetItemList ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectCouponBoxTargetItemList(struct soap *soap, _ns1__SelectCouponBoxTargetItemList **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectCouponBoxTargetItemList(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(struct soap *soap, _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(struct soap *soap, const char *tag, int id, _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(struct soap *soap, const char *tag, _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse **)soap_malloc(soap, sizeof(_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *)soap_instantiate__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse ** p = (_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse, sizeof(_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(struct soap *soap, _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse);
	if (soap_out_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(soap, tag?tag:"ns1:GetCouponBoxUsedListCountByNexonIDForUserResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(struct soap *soap, _ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUserResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, _ns1__GetCouponBoxUsedListCountByNexonIDForUser *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUser))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, const char *tag, int id, _ns1__GetCouponBoxUsedListCountByNexonIDForUser *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUser);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxUsedListCountByNexonIDForUser ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, const char *tag, _ns1__GetCouponBoxUsedListCountByNexonIDForUser **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__GetCouponBoxUsedListCountByNexonIDForUser **)soap_malloc(soap, sizeof(_ns1__GetCouponBoxUsedListCountByNexonIDForUser *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__GetCouponBoxUsedListCountByNexonIDForUser *)soap_instantiate__ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__GetCouponBoxUsedListCountByNexonIDForUser ** p = (_ns1__GetCouponBoxUsedListCountByNexonIDForUser **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__GetCouponBoxUsedListCountByNexonIDForUser, sizeof(_ns1__GetCouponBoxUsedListCountByNexonIDForUser), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, _ns1__GetCouponBoxUsedListCountByNexonIDForUser *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser);
	if (soap_out_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, tag?tag:"ns1:GetCouponBoxUsedListCountByNexonIDForUser", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__GetCouponBoxUsedListCountByNexonIDForUser ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(struct soap *soap, _ns1__GetCouponBoxUsedListCountByNexonIDForUser **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__GetCouponBoxUsedListCountByNexonIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUserResponse(struct soap *soap, _ns1__GetCouponBoxListCountByNexonIDForUserResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUserResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUserResponse(struct soap *soap, const char *tag, int id, _ns1__GetCouponBoxListCountByNexonIDForUserResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUserResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxListCountByNexonIDForUserResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUserResponse(struct soap *soap, const char *tag, _ns1__GetCouponBoxListCountByNexonIDForUserResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__GetCouponBoxListCountByNexonIDForUserResponse **)soap_malloc(soap, sizeof(_ns1__GetCouponBoxListCountByNexonIDForUserResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__GetCouponBoxListCountByNexonIDForUserResponse *)soap_instantiate__ns1__GetCouponBoxListCountByNexonIDForUserResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__GetCouponBoxListCountByNexonIDForUserResponse ** p = (_ns1__GetCouponBoxListCountByNexonIDForUserResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUserResponse, sizeof(_ns1__GetCouponBoxListCountByNexonIDForUserResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUserResponse(struct soap *soap, _ns1__GetCouponBoxListCountByNexonIDForUserResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUserResponse);
	if (soap_out_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUserResponse(soap, tag?tag:"ns1:GetCouponBoxListCountByNexonIDForUserResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__GetCouponBoxListCountByNexonIDForUserResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUserResponse(struct soap *soap, _ns1__GetCouponBoxListCountByNexonIDForUserResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUserResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, _ns1__GetCouponBoxListCountByNexonIDForUser *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUser))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, const char *tag, int id, _ns1__GetCouponBoxListCountByNexonIDForUser *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUser);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__GetCouponBoxListCountByNexonIDForUser ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, const char *tag, _ns1__GetCouponBoxListCountByNexonIDForUser **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__GetCouponBoxListCountByNexonIDForUser **)soap_malloc(soap, sizeof(_ns1__GetCouponBoxListCountByNexonIDForUser *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__GetCouponBoxListCountByNexonIDForUser *)soap_instantiate__ns1__GetCouponBoxListCountByNexonIDForUser(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__GetCouponBoxListCountByNexonIDForUser ** p = (_ns1__GetCouponBoxListCountByNexonIDForUser **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__GetCouponBoxListCountByNexonIDForUser, sizeof(_ns1__GetCouponBoxListCountByNexonIDForUser), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, _ns1__GetCouponBoxListCountByNexonIDForUser *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser);
	if (soap_out_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(soap, tag?tag:"ns1:GetCouponBoxListCountByNexonIDForUser", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__GetCouponBoxListCountByNexonIDForUser ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(struct soap *soap, _ns1__GetCouponBoxListCountByNexonIDForUser **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__GetCouponBoxListCountByNexonIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(struct soap *soap, const char *tag, int id, _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(struct soap *soap, const char *tag, _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse **)soap_malloc(soap, sizeof(_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *)soap_instantiate__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse ** p = (_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUserResponse, sizeof(_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse);
	if (soap_out_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(soap, tag?tag:"ns1:SelectCouponBoxUsedListByNexonIDForUserResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxUsedListByNexonIDForUserResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUserResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, _ns1__SelectCouponBoxUsedListByNexonIDForUser *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUser))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, const char *tag, int id, _ns1__SelectCouponBoxUsedListByNexonIDForUser *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUser);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxUsedListByNexonIDForUser ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, const char *tag, _ns1__SelectCouponBoxUsedListByNexonIDForUser **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectCouponBoxUsedListByNexonIDForUser **)soap_malloc(soap, sizeof(_ns1__SelectCouponBoxUsedListByNexonIDForUser *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectCouponBoxUsedListByNexonIDForUser *)soap_instantiate__ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectCouponBoxUsedListByNexonIDForUser ** p = (_ns1__SelectCouponBoxUsedListByNexonIDForUser **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectCouponBoxUsedListByNexonIDForUser, sizeof(_ns1__SelectCouponBoxUsedListByNexonIDForUser), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, _ns1__SelectCouponBoxUsedListByNexonIDForUser *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser);
	if (soap_out_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, tag?tag:"ns1:SelectCouponBoxUsedListByNexonIDForUser", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectCouponBoxUsedListByNexonIDForUser ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(struct soap *soap, _ns1__SelectCouponBoxUsedListByNexonIDForUser **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectCouponBoxUsedListByNexonIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectCouponBoxListByNexonIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxListByNexonIDForUserResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUserResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectCouponBoxListByNexonIDForUserResponse(struct soap *soap, const char *tag, int id, _ns1__SelectCouponBoxListByNexonIDForUserResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUserResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxListByNexonIDForUserResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectCouponBoxListByNexonIDForUserResponse(struct soap *soap, const char *tag, _ns1__SelectCouponBoxListByNexonIDForUserResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectCouponBoxListByNexonIDForUserResponse **)soap_malloc(soap, sizeof(_ns1__SelectCouponBoxListByNexonIDForUserResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectCouponBoxListByNexonIDForUserResponse *)soap_instantiate__ns1__SelectCouponBoxListByNexonIDForUserResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectCouponBoxListByNexonIDForUserResponse ** p = (_ns1__SelectCouponBoxListByNexonIDForUserResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUserResponse, sizeof(_ns1__SelectCouponBoxListByNexonIDForUserResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectCouponBoxListByNexonIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxListByNexonIDForUserResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectCouponBoxListByNexonIDForUserResponse);
	if (soap_out_PointerTo_ns1__SelectCouponBoxListByNexonIDForUserResponse(soap, tag?tag:"ns1:SelectCouponBoxListByNexonIDForUserResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectCouponBoxListByNexonIDForUserResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectCouponBoxListByNexonIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxListByNexonIDForUserResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectCouponBoxListByNexonIDForUserResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, _ns1__SelectCouponBoxListByNexonIDForUser *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUser))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, const char *tag, int id, _ns1__SelectCouponBoxListByNexonIDForUser *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUser);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxListByNexonIDForUser ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, const char *tag, _ns1__SelectCouponBoxListByNexonIDForUser **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectCouponBoxListByNexonIDForUser **)soap_malloc(soap, sizeof(_ns1__SelectCouponBoxListByNexonIDForUser *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectCouponBoxListByNexonIDForUser *)soap_instantiate__ns1__SelectCouponBoxListByNexonIDForUser(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectCouponBoxListByNexonIDForUser ** p = (_ns1__SelectCouponBoxListByNexonIDForUser **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectCouponBoxListByNexonIDForUser, sizeof(_ns1__SelectCouponBoxListByNexonIDForUser), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, _ns1__SelectCouponBoxListByNexonIDForUser *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser);
	if (soap_out_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(soap, tag?tag:"ns1:SelectCouponBoxListByNexonIDForUser", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectCouponBoxListByNexonIDForUser ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(struct soap *soap, _ns1__SelectCouponBoxListByNexonIDForUser **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectCouponBoxListByNexonIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectCouponBoxByAccountIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxByAccountIDForUserResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUserResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectCouponBoxByAccountIDForUserResponse(struct soap *soap, const char *tag, int id, _ns1__SelectCouponBoxByAccountIDForUserResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUserResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByAccountIDForUserResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectCouponBoxByAccountIDForUserResponse(struct soap *soap, const char *tag, _ns1__SelectCouponBoxByAccountIDForUserResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectCouponBoxByAccountIDForUserResponse **)soap_malloc(soap, sizeof(_ns1__SelectCouponBoxByAccountIDForUserResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectCouponBoxByAccountIDForUserResponse *)soap_instantiate__ns1__SelectCouponBoxByAccountIDForUserResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectCouponBoxByAccountIDForUserResponse ** p = (_ns1__SelectCouponBoxByAccountIDForUserResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUserResponse, sizeof(_ns1__SelectCouponBoxByAccountIDForUserResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectCouponBoxByAccountIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxByAccountIDForUserResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByAccountIDForUserResponse);
	if (soap_out_PointerTo_ns1__SelectCouponBoxByAccountIDForUserResponse(soap, tag?tag:"ns1:SelectCouponBoxByAccountIDForUserResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByAccountIDForUserResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectCouponBoxByAccountIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxByAccountIDForUserResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectCouponBoxByAccountIDForUserResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, _ns1__SelectCouponBoxByAccountIDForUser *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUser))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, const char *tag, int id, _ns1__SelectCouponBoxByAccountIDForUser *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUser);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByAccountIDForUser ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, const char *tag, _ns1__SelectCouponBoxByAccountIDForUser **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectCouponBoxByAccountIDForUser **)soap_malloc(soap, sizeof(_ns1__SelectCouponBoxByAccountIDForUser *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectCouponBoxByAccountIDForUser *)soap_instantiate__ns1__SelectCouponBoxByAccountIDForUser(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectCouponBoxByAccountIDForUser ** p = (_ns1__SelectCouponBoxByAccountIDForUser **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectCouponBoxByAccountIDForUser, sizeof(_ns1__SelectCouponBoxByAccountIDForUser), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, _ns1__SelectCouponBoxByAccountIDForUser *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByAccountIDForUser);
	if (soap_out_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(soap, tag?tag:"ns1:SelectCouponBoxByAccountIDForUser", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByAccountIDForUser ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(struct soap *soap, _ns1__SelectCouponBoxByAccountIDForUser **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectCouponBoxByAccountIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectCouponBoxByCharacterIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxByCharacterIDForUserResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUserResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectCouponBoxByCharacterIDForUserResponse(struct soap *soap, const char *tag, int id, _ns1__SelectCouponBoxByCharacterIDForUserResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUserResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByCharacterIDForUserResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectCouponBoxByCharacterIDForUserResponse(struct soap *soap, const char *tag, _ns1__SelectCouponBoxByCharacterIDForUserResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectCouponBoxByCharacterIDForUserResponse **)soap_malloc(soap, sizeof(_ns1__SelectCouponBoxByCharacterIDForUserResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectCouponBoxByCharacterIDForUserResponse *)soap_instantiate__ns1__SelectCouponBoxByCharacterIDForUserResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectCouponBoxByCharacterIDForUserResponse ** p = (_ns1__SelectCouponBoxByCharacterIDForUserResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUserResponse, sizeof(_ns1__SelectCouponBoxByCharacterIDForUserResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectCouponBoxByCharacterIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxByCharacterIDForUserResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByCharacterIDForUserResponse);
	if (soap_out_PointerTo_ns1__SelectCouponBoxByCharacterIDForUserResponse(soap, tag?tag:"ns1:SelectCouponBoxByCharacterIDForUserResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByCharacterIDForUserResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectCouponBoxByCharacterIDForUserResponse(struct soap *soap, _ns1__SelectCouponBoxByCharacterIDForUserResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectCouponBoxByCharacterIDForUserResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, _ns1__SelectCouponBoxByCharacterIDForUser *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUser))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, const char *tag, int id, _ns1__SelectCouponBoxByCharacterIDForUser *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUser);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByCharacterIDForUser ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, const char *tag, _ns1__SelectCouponBoxByCharacterIDForUser **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectCouponBoxByCharacterIDForUser **)soap_malloc(soap, sizeof(_ns1__SelectCouponBoxByCharacterIDForUser *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectCouponBoxByCharacterIDForUser *)soap_instantiate__ns1__SelectCouponBoxByCharacterIDForUser(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectCouponBoxByCharacterIDForUser ** p = (_ns1__SelectCouponBoxByCharacterIDForUser **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectCouponBoxByCharacterIDForUser, sizeof(_ns1__SelectCouponBoxByCharacterIDForUser), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, _ns1__SelectCouponBoxByCharacterIDForUser *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser);
	if (soap_out_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(soap, tag?tag:"ns1:SelectCouponBoxByCharacterIDForUser", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectCouponBoxByCharacterIDForUser ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(struct soap *soap, _ns1__SelectCouponBoxByCharacterIDForUser **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectCouponBoxByCharacterIDForUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(struct soap *soap, const char *tag, int id, _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(struct soap *soap, const char *tag, _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse **)soap_malloc(soap, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *)soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse ** p = (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse);
	if (soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(soap, tag?tag:"ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCodeResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, const char *tag, int id, _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, const char *tag, _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode **)soap_malloc(soap, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *)soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode ** p = (_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode);
	if (soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, tag?tag:"ns1:SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByCharacterIDByItemCode(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(struct soap *soap, const char *tag, int id, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(struct soap *soap, const char *tag, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse **)soap_malloc(soap, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *)soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse ** p = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse);
	if (soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(soap, tag?tag:"ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemListResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, const char *tag, int id, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, const char *tag, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList **)soap_malloc(soap, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *)soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList ** p = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList);
	if (soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, tag?tag:"ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemList", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemList(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(struct soap *soap, const char *tag, int id, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(struct soap *soap, const char *tag, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse **)soap_malloc(soap, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *)soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse ** p = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse);
	if (soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(soap, tag?tag:"ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCodeResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, const char *tag, int id, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, const char *tag, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode **)soap_malloc(soap, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *)soap_instantiate__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode ** p = (_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode, sizeof(_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode);
	if (soap_out_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, tag?tag:"ns1:SelectDiscountCouponFromCouponBoxByNexonIDByItemCode", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(struct soap *soap, _ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectDiscountCouponFromCouponBoxByNexonIDByItemCode(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, const char *tag, int id, _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, const char *tag, _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse **)soap_malloc(soap, sizeof(_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *)soap_instantiate__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse ** p = (_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse, sizeof(_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse);
	if (soap_out_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(soap, tag?tag:"ns1:CheckAddCouponBoxByCouponPinByNexonIdResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, _ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonIdResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, _ns1__CheckAddCouponBoxByCouponPinByNexonId *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonId))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, const char *tag, int id, _ns1__CheckAddCouponBoxByCouponPinByNexonId *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonId);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckAddCouponBoxByCouponPinByNexonId ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, const char *tag, _ns1__CheckAddCouponBoxByCouponPinByNexonId **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckAddCouponBoxByCouponPinByNexonId **)soap_malloc(soap, sizeof(_ns1__CheckAddCouponBoxByCouponPinByNexonId *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckAddCouponBoxByCouponPinByNexonId *)soap_instantiate__ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckAddCouponBoxByCouponPinByNexonId ** p = (_ns1__CheckAddCouponBoxByCouponPinByNexonId **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckAddCouponBoxByCouponPinByNexonId, sizeof(_ns1__CheckAddCouponBoxByCouponPinByNexonId), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, _ns1__CheckAddCouponBoxByCouponPinByNexonId *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId);
	if (soap_out_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, tag?tag:"ns1:CheckAddCouponBoxByCouponPinByNexonId", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckAddCouponBoxByCouponPinByNexonId ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(struct soap *soap, _ns1__CheckAddCouponBoxByCouponPinByNexonId **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckAddCouponBoxByCouponPinByNexonId(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__AddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, _ns1__AddCouponBoxByCouponPinByNexonIdResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonIdResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__AddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, const char *tag, int id, _ns1__AddCouponBoxByCouponPinByNexonIdResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonIdResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__AddCouponBoxByCouponPinByNexonIdResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__AddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, const char *tag, _ns1__AddCouponBoxByCouponPinByNexonIdResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__AddCouponBoxByCouponPinByNexonIdResponse **)soap_malloc(soap, sizeof(_ns1__AddCouponBoxByCouponPinByNexonIdResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__AddCouponBoxByCouponPinByNexonIdResponse *)soap_instantiate__ns1__AddCouponBoxByCouponPinByNexonIdResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__AddCouponBoxByCouponPinByNexonIdResponse ** p = (_ns1__AddCouponBoxByCouponPinByNexonIdResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonIdResponse, sizeof(_ns1__AddCouponBoxByCouponPinByNexonIdResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__AddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, _ns1__AddCouponBoxByCouponPinByNexonIdResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__AddCouponBoxByCouponPinByNexonIdResponse);
	if (soap_out_PointerTo_ns1__AddCouponBoxByCouponPinByNexonIdResponse(soap, tag?tag:"ns1:AddCouponBoxByCouponPinByNexonIdResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__AddCouponBoxByCouponPinByNexonIdResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__AddCouponBoxByCouponPinByNexonIdResponse(struct soap *soap, _ns1__AddCouponBoxByCouponPinByNexonIdResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__AddCouponBoxByCouponPinByNexonIdResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, _ns1__AddCouponBoxByCouponPinByNexonId *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonId))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, const char *tag, int id, _ns1__AddCouponBoxByCouponPinByNexonId *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonId);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__AddCouponBoxByCouponPinByNexonId ** SOAP_FMAC4 soap_in_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, const char *tag, _ns1__AddCouponBoxByCouponPinByNexonId **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__AddCouponBoxByCouponPinByNexonId **)soap_malloc(soap, sizeof(_ns1__AddCouponBoxByCouponPinByNexonId *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__AddCouponBoxByCouponPinByNexonId *)soap_instantiate__ns1__AddCouponBoxByCouponPinByNexonId(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__AddCouponBoxByCouponPinByNexonId ** p = (_ns1__AddCouponBoxByCouponPinByNexonId **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__AddCouponBoxByCouponPinByNexonId, sizeof(_ns1__AddCouponBoxByCouponPinByNexonId), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, _ns1__AddCouponBoxByCouponPinByNexonId *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId);
	if (soap_out_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(soap, tag?tag:"ns1:AddCouponBoxByCouponPinByNexonId", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__AddCouponBoxByCouponPinByNexonId ** SOAP_FMAC4 soap_get_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(struct soap *soap, _ns1__AddCouponBoxByCouponPinByNexonId **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__AddCouponBoxByCouponPinByNexonId(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(struct soap *soap, _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(struct soap *soap, const char *tag, int id, _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(struct soap *soap, const char *tag, _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse **)soap_malloc(soap, sizeof(_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *)soap_instantiate__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse ** p = (_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonIDResponse, sizeof(_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(struct soap *soap, _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse);
	if (soap_out_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(soap, tag?tag:"ns1:SelectItemCouponFromCouponBoxByNexonIDResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(struct soap *soap, _ns1__SelectItemCouponFromCouponBoxByNexonIDResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonIDResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, _ns1__SelectItemCouponFromCouponBoxByNexonID *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonID))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, const char *tag, int id, _ns1__SelectItemCouponFromCouponBoxByNexonID *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonID);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectItemCouponFromCouponBoxByNexonID ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, const char *tag, _ns1__SelectItemCouponFromCouponBoxByNexonID **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectItemCouponFromCouponBoxByNexonID **)soap_malloc(soap, sizeof(_ns1__SelectItemCouponFromCouponBoxByNexonID *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectItemCouponFromCouponBoxByNexonID *)soap_instantiate__ns1__SelectItemCouponFromCouponBoxByNexonID(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectItemCouponFromCouponBoxByNexonID ** p = (_ns1__SelectItemCouponFromCouponBoxByNexonID **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectItemCouponFromCouponBoxByNexonID, sizeof(_ns1__SelectItemCouponFromCouponBoxByNexonID), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, _ns1__SelectItemCouponFromCouponBoxByNexonID *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID);
	if (soap_out_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(soap, tag?tag:"ns1:SelectItemCouponFromCouponBoxByNexonID", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectItemCouponFromCouponBoxByNexonID ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(struct soap *soap, _ns1__SelectItemCouponFromCouponBoxByNexonID **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectItemCouponFromCouponBoxByNexonID(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(struct soap *soap, _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(struct soap *soap, const char *tag, int id, _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(struct soap *soap, const char *tag, _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse **)soap_malloc(soap, sizeof(_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *)soap_instantiate__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse ** p = (_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonIDResponse, sizeof(_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(struct soap *soap, _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse);
	if (soap_out_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(soap, tag?tag:"ns1:SelectCashCouponFromCouponBoxByNexonIDResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(struct soap *soap, _ns1__SelectCashCouponFromCouponBoxByNexonIDResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonIDResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, _ns1__SelectCashCouponFromCouponBoxByNexonID *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonID))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, const char *tag, int id, _ns1__SelectCashCouponFromCouponBoxByNexonID *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonID);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__SelectCashCouponFromCouponBoxByNexonID ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, const char *tag, _ns1__SelectCashCouponFromCouponBoxByNexonID **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__SelectCashCouponFromCouponBoxByNexonID **)soap_malloc(soap, sizeof(_ns1__SelectCashCouponFromCouponBoxByNexonID *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__SelectCashCouponFromCouponBoxByNexonID *)soap_instantiate__ns1__SelectCashCouponFromCouponBoxByNexonID(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__SelectCashCouponFromCouponBoxByNexonID ** p = (_ns1__SelectCashCouponFromCouponBoxByNexonID **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__SelectCashCouponFromCouponBoxByNexonID, sizeof(_ns1__SelectCashCouponFromCouponBoxByNexonID), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, _ns1__SelectCashCouponFromCouponBoxByNexonID *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID);
	if (soap_out_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(soap, tag?tag:"ns1:SelectCashCouponFromCouponBoxByNexonID", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__SelectCashCouponFromCouponBoxByNexonID ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(struct soap *soap, _ns1__SelectCashCouponFromCouponBoxByNexonID **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__SelectCashCouponFromCouponBoxByNexonID(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetListSchoolResponse(struct soap *soap, _ns1__GetListSchoolResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__GetListSchoolResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetListSchoolResponse(struct soap *soap, const char *tag, int id, _ns1__GetListSchoolResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__GetListSchoolResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__GetListSchoolResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetListSchoolResponse(struct soap *soap, const char *tag, _ns1__GetListSchoolResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__GetListSchoolResponse **)soap_malloc(soap, sizeof(_ns1__GetListSchoolResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__GetListSchoolResponse *)soap_instantiate__ns1__GetListSchoolResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__GetListSchoolResponse ** p = (_ns1__GetListSchoolResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__GetListSchoolResponse, sizeof(_ns1__GetListSchoolResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetListSchoolResponse(struct soap *soap, _ns1__GetListSchoolResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__GetListSchoolResponse);
	if (soap_out_PointerTo_ns1__GetListSchoolResponse(soap, tag?tag:"ns1:GetListSchoolResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__GetListSchoolResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetListSchoolResponse(struct soap *soap, _ns1__GetListSchoolResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__GetListSchoolResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetListSchool(struct soap *soap, _ns1__GetListSchool *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__GetListSchool))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetListSchool(struct soap *soap, const char *tag, int id, _ns1__GetListSchool *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__GetListSchool);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__GetListSchool ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetListSchool(struct soap *soap, const char *tag, _ns1__GetListSchool **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__GetListSchool **)soap_malloc(soap, sizeof(_ns1__GetListSchool *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__GetListSchool *)soap_instantiate__ns1__GetListSchool(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__GetListSchool ** p = (_ns1__GetListSchool **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__GetListSchool, sizeof(_ns1__GetListSchool), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetListSchool(struct soap *soap, _ns1__GetListSchool *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__GetListSchool);
	if (soap_out_PointerTo_ns1__GetListSchool(soap, tag?tag:"ns1:GetListSchool", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__GetListSchool ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetListSchool(struct soap *soap, _ns1__GetListSchool **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__GetListSchool(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckPasswordByMemberSNResponse(struct soap *soap, _ns1__CheckPasswordByMemberSNResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckPasswordByMemberSNResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckPasswordByMemberSNResponse(struct soap *soap, const char *tag, int id, _ns1__CheckPasswordByMemberSNResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckPasswordByMemberSNResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckPasswordByMemberSNResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckPasswordByMemberSNResponse(struct soap *soap, const char *tag, _ns1__CheckPasswordByMemberSNResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckPasswordByMemberSNResponse **)soap_malloc(soap, sizeof(_ns1__CheckPasswordByMemberSNResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckPasswordByMemberSNResponse *)soap_instantiate__ns1__CheckPasswordByMemberSNResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckPasswordByMemberSNResponse ** p = (_ns1__CheckPasswordByMemberSNResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckPasswordByMemberSNResponse, sizeof(_ns1__CheckPasswordByMemberSNResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckPasswordByMemberSNResponse(struct soap *soap, _ns1__CheckPasswordByMemberSNResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckPasswordByMemberSNResponse);
	if (soap_out_PointerTo_ns1__CheckPasswordByMemberSNResponse(soap, tag?tag:"ns1:CheckPasswordByMemberSNResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckPasswordByMemberSNResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckPasswordByMemberSNResponse(struct soap *soap, _ns1__CheckPasswordByMemberSNResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckPasswordByMemberSNResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckPasswordByMemberSN(struct soap *soap, _ns1__CheckPasswordByMemberSN *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckPasswordByMemberSN))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckPasswordByMemberSN(struct soap *soap, const char *tag, int id, _ns1__CheckPasswordByMemberSN *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckPasswordByMemberSN);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckPasswordByMemberSN ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckPasswordByMemberSN(struct soap *soap, const char *tag, _ns1__CheckPasswordByMemberSN **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckPasswordByMemberSN **)soap_malloc(soap, sizeof(_ns1__CheckPasswordByMemberSN *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckPasswordByMemberSN *)soap_instantiate__ns1__CheckPasswordByMemberSN(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckPasswordByMemberSN ** p = (_ns1__CheckPasswordByMemberSN **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckPasswordByMemberSN, sizeof(_ns1__CheckPasswordByMemberSN), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckPasswordByMemberSN(struct soap *soap, _ns1__CheckPasswordByMemberSN *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckPasswordByMemberSN);
	if (soap_out_PointerTo_ns1__CheckPasswordByMemberSN(soap, tag?tag:"ns1:CheckPasswordByMemberSN", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckPasswordByMemberSN ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckPasswordByMemberSN(struct soap *soap, _ns1__CheckPasswordByMemberSN **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckPasswordByMemberSN(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckSameUserResponse(struct soap *soap, _ns1__CheckSameUserResponse *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckSameUserResponse))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckSameUserResponse(struct soap *soap, const char *tag, int id, _ns1__CheckSameUserResponse *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckSameUserResponse);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckSameUserResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckSameUserResponse(struct soap *soap, const char *tag, _ns1__CheckSameUserResponse **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckSameUserResponse **)soap_malloc(soap, sizeof(_ns1__CheckSameUserResponse *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckSameUserResponse *)soap_instantiate__ns1__CheckSameUserResponse(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckSameUserResponse ** p = (_ns1__CheckSameUserResponse **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckSameUserResponse, sizeof(_ns1__CheckSameUserResponse), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckSameUserResponse(struct soap *soap, _ns1__CheckSameUserResponse *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckSameUserResponse);
	if (soap_out_PointerTo_ns1__CheckSameUserResponse(soap, tag?tag:"ns1:CheckSameUserResponse", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckSameUserResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckSameUserResponse(struct soap *soap, _ns1__CheckSameUserResponse **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckSameUserResponse(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckSameUser(struct soap *soap, _ns1__CheckSameUser *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__CheckSameUser))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckSameUser(struct soap *soap, const char *tag, int id, _ns1__CheckSameUser *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__CheckSameUser);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__CheckSameUser ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckSameUser(struct soap *soap, const char *tag, _ns1__CheckSameUser **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__CheckSameUser **)soap_malloc(soap, sizeof(_ns1__CheckSameUser *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__CheckSameUser *)soap_instantiate__ns1__CheckSameUser(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__CheckSameUser ** p = (_ns1__CheckSameUser **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__CheckSameUser, sizeof(_ns1__CheckSameUser), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckSameUser(struct soap *soap, _ns1__CheckSameUser *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__CheckSameUser);
	if (soap_out_PointerTo_ns1__CheckSameUser(soap, tag?tag:"ns1:CheckSameUser", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__CheckSameUser ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckSameUser(struct soap *soap, _ns1__CheckSameUser **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__CheckSameUser(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__UseRestrictInfoEntity(struct soap *soap, ns1__UseRestrictInfoEntity *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_ns1__UseRestrictInfoEntity))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__UseRestrictInfoEntity(struct soap *soap, const char *tag, int id, ns1__UseRestrictInfoEntity *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_ns1__UseRestrictInfoEntity);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 ns1__UseRestrictInfoEntity ** SOAP_FMAC4 soap_in_PointerTons1__UseRestrictInfoEntity(struct soap *soap, const char *tag, ns1__UseRestrictInfoEntity **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (ns1__UseRestrictInfoEntity **)soap_malloc(soap, sizeof(ns1__UseRestrictInfoEntity *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (ns1__UseRestrictInfoEntity *)soap_instantiate_ns1__UseRestrictInfoEntity(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	ns1__UseRestrictInfoEntity ** p = (ns1__UseRestrictInfoEntity **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_ns1__UseRestrictInfoEntity, sizeof(ns1__UseRestrictInfoEntity), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__UseRestrictInfoEntity(struct soap *soap, ns1__UseRestrictInfoEntity *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTons1__UseRestrictInfoEntity);
	if (soap_out_PointerTons1__UseRestrictInfoEntity(soap, tag?tag:"ns1:UseRestrictInfoEntity", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 ns1__UseRestrictInfoEntity ** SOAP_FMAC4 soap_get_PointerTons1__UseRestrictInfoEntity(struct soap *soap, ns1__UseRestrictInfoEntity **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTons1__UseRestrictInfoEntity(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult(struct soap *soap, _ns1__BulkCheckExtendResponse_BulkCheckExtendResult *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__BulkCheckExtendResponse_BulkCheckExtendResult))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult(struct soap *soap, const char *tag, int id, _ns1__BulkCheckExtendResponse_BulkCheckExtendResult *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__BulkCheckExtendResponse_BulkCheckExtendResult);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__BulkCheckExtendResponse_BulkCheckExtendResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult(struct soap *soap, const char *tag, _ns1__BulkCheckExtendResponse_BulkCheckExtendResult **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__BulkCheckExtendResponse_BulkCheckExtendResult **)soap_malloc(soap, sizeof(_ns1__BulkCheckExtendResponse_BulkCheckExtendResult *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__BulkCheckExtendResponse_BulkCheckExtendResult *)soap_instantiate__ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__BulkCheckExtendResponse_BulkCheckExtendResult ** p = (_ns1__BulkCheckExtendResponse_BulkCheckExtendResult **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__BulkCheckExtendResponse_BulkCheckExtendResult, sizeof(_ns1__BulkCheckExtendResponse_BulkCheckExtendResult), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult(struct soap *soap, _ns1__BulkCheckExtendResponse_BulkCheckExtendResult *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult);
	if (soap_out_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, tag?tag:"ns1:BulkCheckExtendResponse-BulkCheckExtendResult", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__BulkCheckExtendResponse_BulkCheckExtendResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult(struct soap *soap, _ns1__BulkCheckExtendResponse_BulkCheckExtendResult **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__BulkCheckExtendResponse_BulkCheckExtendResult(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__BulkCheckExtend_dsCouponPin(struct soap *soap, _ns1__BulkCheckExtend_dsCouponPin *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__BulkCheckExtend_dsCouponPin))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__BulkCheckExtend_dsCouponPin(struct soap *soap, const char *tag, int id, _ns1__BulkCheckExtend_dsCouponPin *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__BulkCheckExtend_dsCouponPin);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__BulkCheckExtend_dsCouponPin ** SOAP_FMAC4 soap_in_PointerTo_ns1__BulkCheckExtend_dsCouponPin(struct soap *soap, const char *tag, _ns1__BulkCheckExtend_dsCouponPin **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__BulkCheckExtend_dsCouponPin **)soap_malloc(soap, sizeof(_ns1__BulkCheckExtend_dsCouponPin *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__BulkCheckExtend_dsCouponPin *)soap_instantiate__ns1__BulkCheckExtend_dsCouponPin(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__BulkCheckExtend_dsCouponPin ** p = (_ns1__BulkCheckExtend_dsCouponPin **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__BulkCheckExtend_dsCouponPin, sizeof(_ns1__BulkCheckExtend_dsCouponPin), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__BulkCheckExtend_dsCouponPin(struct soap *soap, _ns1__BulkCheckExtend_dsCouponPin *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__BulkCheckExtend_dsCouponPin);
	if (soap_out_PointerTo_ns1__BulkCheckExtend_dsCouponPin(soap, tag?tag:"ns1:BulkCheckExtend-dsCouponPin", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__BulkCheckExtend_dsCouponPin ** SOAP_FMAC4 soap_get_PointerTo_ns1__BulkCheckExtend_dsCouponPin(struct soap *soap, _ns1__BulkCheckExtend_dsCouponPin **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__BulkCheckExtend_dsCouponPin(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__BulkCheckResponse_BulkCheckResult(struct soap *soap, _ns1__BulkCheckResponse_BulkCheckResult *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__BulkCheckResponse_BulkCheckResult))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__BulkCheckResponse_BulkCheckResult(struct soap *soap, const char *tag, int id, _ns1__BulkCheckResponse_BulkCheckResult *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__BulkCheckResponse_BulkCheckResult);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__BulkCheckResponse_BulkCheckResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__BulkCheckResponse_BulkCheckResult(struct soap *soap, const char *tag, _ns1__BulkCheckResponse_BulkCheckResult **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__BulkCheckResponse_BulkCheckResult **)soap_malloc(soap, sizeof(_ns1__BulkCheckResponse_BulkCheckResult *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__BulkCheckResponse_BulkCheckResult *)soap_instantiate__ns1__BulkCheckResponse_BulkCheckResult(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__BulkCheckResponse_BulkCheckResult ** p = (_ns1__BulkCheckResponse_BulkCheckResult **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__BulkCheckResponse_BulkCheckResult, sizeof(_ns1__BulkCheckResponse_BulkCheckResult), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__BulkCheckResponse_BulkCheckResult(struct soap *soap, _ns1__BulkCheckResponse_BulkCheckResult *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__BulkCheckResponse_BulkCheckResult);
	if (soap_out_PointerTo_ns1__BulkCheckResponse_BulkCheckResult(soap, tag?tag:"ns1:BulkCheckResponse-BulkCheckResult", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__BulkCheckResponse_BulkCheckResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__BulkCheckResponse_BulkCheckResult(struct soap *soap, _ns1__BulkCheckResponse_BulkCheckResult **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__BulkCheckResponse_BulkCheckResult(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__BulkCheck_dsCouponPin(struct soap *soap, _ns1__BulkCheck_dsCouponPin *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE__ns1__BulkCheck_dsCouponPin))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__BulkCheck_dsCouponPin(struct soap *soap, const char *tag, int id, _ns1__BulkCheck_dsCouponPin *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE__ns1__BulkCheck_dsCouponPin);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 _ns1__BulkCheck_dsCouponPin ** SOAP_FMAC4 soap_in_PointerTo_ns1__BulkCheck_dsCouponPin(struct soap *soap, const char *tag, _ns1__BulkCheck_dsCouponPin **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (_ns1__BulkCheck_dsCouponPin **)soap_malloc(soap, sizeof(_ns1__BulkCheck_dsCouponPin *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (_ns1__BulkCheck_dsCouponPin *)soap_instantiate__ns1__BulkCheck_dsCouponPin(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	_ns1__BulkCheck_dsCouponPin ** p = (_ns1__BulkCheck_dsCouponPin **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE__ns1__BulkCheck_dsCouponPin, sizeof(_ns1__BulkCheck_dsCouponPin), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__BulkCheck_dsCouponPin(struct soap *soap, _ns1__BulkCheck_dsCouponPin *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTo_ns1__BulkCheck_dsCouponPin);
	if (soap_out_PointerTo_ns1__BulkCheck_dsCouponPin(soap, tag?tag:"ns1:BulkCheck-dsCouponPin", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 _ns1__BulkCheck_dsCouponPin ** SOAP_FMAC4 soap_get_PointerTo_ns1__BulkCheck_dsCouponPin(struct soap *soap, _ns1__BulkCheck_dsCouponPin **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTo_ns1__BulkCheck_dsCouponPin(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfItemEntity(struct soap *soap, ns1__ArrayOfItemEntity *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_ns1__ArrayOfItemEntity))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfItemEntity(struct soap *soap, const char *tag, int id, ns1__ArrayOfItemEntity *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_ns1__ArrayOfItemEntity);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 ns1__ArrayOfItemEntity ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfItemEntity(struct soap *soap, const char *tag, ns1__ArrayOfItemEntity **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (ns1__ArrayOfItemEntity **)soap_malloc(soap, sizeof(ns1__ArrayOfItemEntity *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (ns1__ArrayOfItemEntity *)soap_instantiate_ns1__ArrayOfItemEntity(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	ns1__ArrayOfItemEntity ** p = (ns1__ArrayOfItemEntity **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_ns1__ArrayOfItemEntity, sizeof(ns1__ArrayOfItemEntity), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfItemEntity(struct soap *soap, ns1__ArrayOfItemEntity *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTons1__ArrayOfItemEntity);
	if (soap_out_PointerTons1__ArrayOfItemEntity(soap, tag?tag:"ns1:ArrayOfItemEntity", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 ns1__ArrayOfItemEntity ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfItemEntity(struct soap *soap, ns1__ArrayOfItemEntity **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTons1__ArrayOfItemEntity(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfHoldingCouponCountEntity(struct soap *soap, ns1__ArrayOfHoldingCouponCountEntity *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfHoldingCouponCountEntity(struct soap *soap, const char *tag, int id, ns1__ArrayOfHoldingCouponCountEntity *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 ns1__ArrayOfHoldingCouponCountEntity ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfHoldingCouponCountEntity(struct soap *soap, const char *tag, ns1__ArrayOfHoldingCouponCountEntity **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (ns1__ArrayOfHoldingCouponCountEntity **)soap_malloc(soap, sizeof(ns1__ArrayOfHoldingCouponCountEntity *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (ns1__ArrayOfHoldingCouponCountEntity *)soap_instantiate_ns1__ArrayOfHoldingCouponCountEntity(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	ns1__ArrayOfHoldingCouponCountEntity ** p = (ns1__ArrayOfHoldingCouponCountEntity **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_ns1__ArrayOfHoldingCouponCountEntity, sizeof(ns1__ArrayOfHoldingCouponCountEntity), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfHoldingCouponCountEntity(struct soap *soap, ns1__ArrayOfHoldingCouponCountEntity *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTons1__ArrayOfHoldingCouponCountEntity);
	if (soap_out_PointerTons1__ArrayOfHoldingCouponCountEntity(soap, tag?tag:"ns1:ArrayOfHoldingCouponCountEntity", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 ns1__ArrayOfHoldingCouponCountEntity ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfHoldingCouponCountEntity(struct soap *soap, ns1__ArrayOfHoldingCouponCountEntity **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTons1__ArrayOfHoldingCouponCountEntity(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity(struct soap *soap, ns1__ArrayOfDiscountAppliableItemInfoEntity *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity(struct soap *soap, const char *tag, int id, ns1__ArrayOfDiscountAppliableItemInfoEntity *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 ns1__ArrayOfDiscountAppliableItemInfoEntity ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity(struct soap *soap, const char *tag, ns1__ArrayOfDiscountAppliableItemInfoEntity **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (ns1__ArrayOfDiscountAppliableItemInfoEntity **)soap_malloc(soap, sizeof(ns1__ArrayOfDiscountAppliableItemInfoEntity *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (ns1__ArrayOfDiscountAppliableItemInfoEntity *)soap_instantiate_ns1__ArrayOfDiscountAppliableItemInfoEntity(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	ns1__ArrayOfDiscountAppliableItemInfoEntity ** p = (ns1__ArrayOfDiscountAppliableItemInfoEntity **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_ns1__ArrayOfDiscountAppliableItemInfoEntity, sizeof(ns1__ArrayOfDiscountAppliableItemInfoEntity), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity(struct soap *soap, ns1__ArrayOfDiscountAppliableItemInfoEntity *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity);
	if (soap_out_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity(soap, tag?tag:"ns1:ArrayOfDiscountAppliableItemInfoEntity", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 ns1__ArrayOfDiscountAppliableItemInfoEntity ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity(struct soap *soap, ns1__ArrayOfDiscountAppliableItemInfoEntity **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTons1__ArrayOfDiscountAppliableItemInfoEntity(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfCouponBoxTargetItem(struct soap *soap, ns1__ArrayOfCouponBoxTargetItem *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfCouponBoxTargetItem(struct soap *soap, const char *tag, int id, ns1__ArrayOfCouponBoxTargetItem *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 ns1__ArrayOfCouponBoxTargetItem ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfCouponBoxTargetItem(struct soap *soap, const char *tag, ns1__ArrayOfCouponBoxTargetItem **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (ns1__ArrayOfCouponBoxTargetItem **)soap_malloc(soap, sizeof(ns1__ArrayOfCouponBoxTargetItem *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (ns1__ArrayOfCouponBoxTargetItem *)soap_instantiate_ns1__ArrayOfCouponBoxTargetItem(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	ns1__ArrayOfCouponBoxTargetItem ** p = (ns1__ArrayOfCouponBoxTargetItem **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_ns1__ArrayOfCouponBoxTargetItem, sizeof(ns1__ArrayOfCouponBoxTargetItem), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfCouponBoxTargetItem(struct soap *soap, ns1__ArrayOfCouponBoxTargetItem *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTons1__ArrayOfCouponBoxTargetItem);
	if (soap_out_PointerTons1__ArrayOfCouponBoxTargetItem(soap, tag?tag:"ns1:ArrayOfCouponBoxTargetItem", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 ns1__ArrayOfCouponBoxTargetItem ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfCouponBoxTargetItem(struct soap *soap, ns1__ArrayOfCouponBoxTargetItem **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTons1__ArrayOfCouponBoxTargetItem(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfCouponBoxItem(struct soap *soap, ns1__ArrayOfCouponBoxItem *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_ns1__ArrayOfCouponBoxItem))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfCouponBoxItem(struct soap *soap, const char *tag, int id, ns1__ArrayOfCouponBoxItem *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_ns1__ArrayOfCouponBoxItem);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 ns1__ArrayOfCouponBoxItem ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfCouponBoxItem(struct soap *soap, const char *tag, ns1__ArrayOfCouponBoxItem **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (ns1__ArrayOfCouponBoxItem **)soap_malloc(soap, sizeof(ns1__ArrayOfCouponBoxItem *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (ns1__ArrayOfCouponBoxItem *)soap_instantiate_ns1__ArrayOfCouponBoxItem(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	ns1__ArrayOfCouponBoxItem ** p = (ns1__ArrayOfCouponBoxItem **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_ns1__ArrayOfCouponBoxItem, sizeof(ns1__ArrayOfCouponBoxItem), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfCouponBoxItem(struct soap *soap, ns1__ArrayOfCouponBoxItem *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTons1__ArrayOfCouponBoxItem);
	if (soap_out_PointerTons1__ArrayOfCouponBoxItem(soap, tag?tag:"ns1:ArrayOfCouponBoxItem", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 ns1__ArrayOfCouponBoxItem ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfCouponBoxItem(struct soap *soap, ns1__ArrayOfCouponBoxItem **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTons1__ArrayOfCouponBoxItem(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfClientCouponBox(struct soap *soap, ns1__ArrayOfClientCouponBox *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_ns1__ArrayOfClientCouponBox))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfClientCouponBox(struct soap *soap, const char *tag, int id, ns1__ArrayOfClientCouponBox *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_ns1__ArrayOfClientCouponBox);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 ns1__ArrayOfClientCouponBox ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfClientCouponBox(struct soap *soap, const char *tag, ns1__ArrayOfClientCouponBox **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (ns1__ArrayOfClientCouponBox **)soap_malloc(soap, sizeof(ns1__ArrayOfClientCouponBox *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (ns1__ArrayOfClientCouponBox *)soap_instantiate_ns1__ArrayOfClientCouponBox(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	ns1__ArrayOfClientCouponBox ** p = (ns1__ArrayOfClientCouponBox **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_ns1__ArrayOfClientCouponBox, sizeof(ns1__ArrayOfClientCouponBox), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfClientCouponBox(struct soap *soap, ns1__ArrayOfClientCouponBox *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTons1__ArrayOfClientCouponBox);
	if (soap_out_PointerTons1__ArrayOfClientCouponBox(soap, tag?tag:"ns1:ArrayOfClientCouponBox", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 ns1__ArrayOfClientCouponBox ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfClientCouponBox(struct soap *soap, ns1__ArrayOfClientCouponBox **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTons1__ArrayOfClientCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ItemEntity(struct soap *soap, ns1__ItemEntity *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_ns1__ItemEntity))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ItemEntity(struct soap *soap, const char *tag, int id, ns1__ItemEntity *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_ns1__ItemEntity);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 ns1__ItemEntity ** SOAP_FMAC4 soap_in_PointerTons1__ItemEntity(struct soap *soap, const char *tag, ns1__ItemEntity **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (ns1__ItemEntity **)soap_malloc(soap, sizeof(ns1__ItemEntity *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (ns1__ItemEntity *)soap_instantiate_ns1__ItemEntity(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	ns1__ItemEntity ** p = (ns1__ItemEntity **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_ns1__ItemEntity, sizeof(ns1__ItemEntity), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ItemEntity(struct soap *soap, ns1__ItemEntity *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTons1__ItemEntity);
	if (soap_out_PointerTons1__ItemEntity(soap, tag?tag:"ns1:ItemEntity", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 ns1__ItemEntity ** SOAP_FMAC4 soap_get_PointerTons1__ItemEntity(struct soap *soap, ns1__ItemEntity **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTons1__ItemEntity(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__HoldingCouponCountEntity(struct soap *soap, ns1__HoldingCouponCountEntity *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_ns1__HoldingCouponCountEntity))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__HoldingCouponCountEntity(struct soap *soap, const char *tag, int id, ns1__HoldingCouponCountEntity *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_ns1__HoldingCouponCountEntity);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 ns1__HoldingCouponCountEntity ** SOAP_FMAC4 soap_in_PointerTons1__HoldingCouponCountEntity(struct soap *soap, const char *tag, ns1__HoldingCouponCountEntity **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (ns1__HoldingCouponCountEntity **)soap_malloc(soap, sizeof(ns1__HoldingCouponCountEntity *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (ns1__HoldingCouponCountEntity *)soap_instantiate_ns1__HoldingCouponCountEntity(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	ns1__HoldingCouponCountEntity ** p = (ns1__HoldingCouponCountEntity **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_ns1__HoldingCouponCountEntity, sizeof(ns1__HoldingCouponCountEntity), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__HoldingCouponCountEntity(struct soap *soap, ns1__HoldingCouponCountEntity *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTons1__HoldingCouponCountEntity);
	if (soap_out_PointerTons1__HoldingCouponCountEntity(soap, tag?tag:"ns1:HoldingCouponCountEntity", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 ns1__HoldingCouponCountEntity ** SOAP_FMAC4 soap_get_PointerTons1__HoldingCouponCountEntity(struct soap *soap, ns1__HoldingCouponCountEntity **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTons1__HoldingCouponCountEntity(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__DiscountAppliableItemInfoEntity(struct soap *soap, ns1__DiscountAppliableItemInfoEntity *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__DiscountAppliableItemInfoEntity(struct soap *soap, const char *tag, int id, ns1__DiscountAppliableItemInfoEntity *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 ns1__DiscountAppliableItemInfoEntity ** SOAP_FMAC4 soap_in_PointerTons1__DiscountAppliableItemInfoEntity(struct soap *soap, const char *tag, ns1__DiscountAppliableItemInfoEntity **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (ns1__DiscountAppliableItemInfoEntity **)soap_malloc(soap, sizeof(ns1__DiscountAppliableItemInfoEntity *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (ns1__DiscountAppliableItemInfoEntity *)soap_instantiate_ns1__DiscountAppliableItemInfoEntity(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	ns1__DiscountAppliableItemInfoEntity ** p = (ns1__DiscountAppliableItemInfoEntity **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity, sizeof(ns1__DiscountAppliableItemInfoEntity), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__DiscountAppliableItemInfoEntity(struct soap *soap, ns1__DiscountAppliableItemInfoEntity *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTons1__DiscountAppliableItemInfoEntity);
	if (soap_out_PointerTons1__DiscountAppliableItemInfoEntity(soap, tag?tag:"ns1:DiscountAppliableItemInfoEntity", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 ns1__DiscountAppliableItemInfoEntity ** SOAP_FMAC4 soap_get_PointerTons1__DiscountAppliableItemInfoEntity(struct soap *soap, ns1__DiscountAppliableItemInfoEntity **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTons1__DiscountAppliableItemInfoEntity(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__CouponBoxTargetItem(struct soap *soap, ns1__CouponBoxTargetItem *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_ns1__CouponBoxTargetItem))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__CouponBoxTargetItem(struct soap *soap, const char *tag, int id, ns1__CouponBoxTargetItem *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_ns1__CouponBoxTargetItem);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 ns1__CouponBoxTargetItem ** SOAP_FMAC4 soap_in_PointerTons1__CouponBoxTargetItem(struct soap *soap, const char *tag, ns1__CouponBoxTargetItem **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (ns1__CouponBoxTargetItem **)soap_malloc(soap, sizeof(ns1__CouponBoxTargetItem *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (ns1__CouponBoxTargetItem *)soap_instantiate_ns1__CouponBoxTargetItem(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	ns1__CouponBoxTargetItem ** p = (ns1__CouponBoxTargetItem **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_ns1__CouponBoxTargetItem, sizeof(ns1__CouponBoxTargetItem), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__CouponBoxTargetItem(struct soap *soap, ns1__CouponBoxTargetItem *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTons1__CouponBoxTargetItem);
	if (soap_out_PointerTons1__CouponBoxTargetItem(soap, tag?tag:"ns1:CouponBoxTargetItem", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 ns1__CouponBoxTargetItem ** SOAP_FMAC4 soap_get_PointerTons1__CouponBoxTargetItem(struct soap *soap, ns1__CouponBoxTargetItem **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTons1__CouponBoxTargetItem(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__CouponBoxItem(struct soap *soap, ns1__CouponBoxItem *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_ns1__CouponBoxItem))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__CouponBoxItem(struct soap *soap, const char *tag, int id, ns1__CouponBoxItem *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_ns1__CouponBoxItem);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 ns1__CouponBoxItem ** SOAP_FMAC4 soap_in_PointerTons1__CouponBoxItem(struct soap *soap, const char *tag, ns1__CouponBoxItem **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (ns1__CouponBoxItem **)soap_malloc(soap, sizeof(ns1__CouponBoxItem *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (ns1__CouponBoxItem *)soap_instantiate_ns1__CouponBoxItem(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	ns1__CouponBoxItem ** p = (ns1__CouponBoxItem **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_ns1__CouponBoxItem, sizeof(ns1__CouponBoxItem), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__CouponBoxItem(struct soap *soap, ns1__CouponBoxItem *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTons1__CouponBoxItem);
	if (soap_out_PointerTons1__CouponBoxItem(soap, tag?tag:"ns1:CouponBoxItem", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 ns1__CouponBoxItem ** SOAP_FMAC4 soap_get_PointerTons1__CouponBoxItem(struct soap *soap, ns1__CouponBoxItem **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTons1__CouponBoxItem(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap *soap, std::string *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_std__string))
		soap_serialize_std__string(soap, *a);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap *soap, const char *tag, int id, std::string *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_std__string);
	if (id < 0)
		return soap->error;
	return soap_out_std__string(soap, tag, id, *a, type);
}

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap *soap, const char *tag, std::string **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (std::string **)soap_malloc(soap, sizeof(std::string *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = soap_in_std__string(soap, tag, *a, type)))
			return NULL;
	}
	else
	{	a = (std::string **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_std__string, sizeof(std::string), 0);
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap *soap, std::string *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTostd__string);
	if (soap_out_PointerTostd__string(soap, tag?tag:"string", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap *soap, std::string **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTostd__string(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ExtensionDataObject(struct soap *soap, ns1__ExtensionDataObject *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_ns1__ExtensionDataObject))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ExtensionDataObject(struct soap *soap, const char *tag, int id, ns1__ExtensionDataObject *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_ns1__ExtensionDataObject);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 ns1__ExtensionDataObject ** SOAP_FMAC4 soap_in_PointerTons1__ExtensionDataObject(struct soap *soap, const char *tag, ns1__ExtensionDataObject **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (ns1__ExtensionDataObject **)soap_malloc(soap, sizeof(ns1__ExtensionDataObject *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (ns1__ExtensionDataObject *)soap_instantiate_ns1__ExtensionDataObject(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	ns1__ExtensionDataObject ** p = (ns1__ExtensionDataObject **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_ns1__ExtensionDataObject, sizeof(ns1__ExtensionDataObject), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ExtensionDataObject(struct soap *soap, ns1__ExtensionDataObject *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTons1__ExtensionDataObject);
	if (soap_out_PointerTons1__ExtensionDataObject(soap, tag?tag:"ns1:ExtensionDataObject", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 ns1__ExtensionDataObject ** SOAP_FMAC4 soap_get_PointerTons1__ExtensionDataObject(struct soap *soap, ns1__ExtensionDataObject **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTons1__ExtensionDataObject(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ClientCouponBox(struct soap *soap, ns1__ClientCouponBox *const*a)
{
#ifndef WITH_NOIDREF
	if (!soap_reference(soap, *a, SOAP_TYPE_ns1__ClientCouponBox))
		(*a)->soap_serialize(soap);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ClientCouponBox(struct soap *soap, const char *tag, int id, ns1__ClientCouponBox *const*a, const char *type)
{
	id = soap_element_id(soap, tag, id, *a, NULL, 0, type, SOAP_TYPE_ns1__ClientCouponBox);
	if (id < 0)
		return soap->error;
	return (*a)->soap_out(soap, tag, id, type);
}

SOAP_FMAC3 ns1__ClientCouponBox ** SOAP_FMAC4 soap_in_PointerTons1__ClientCouponBox(struct soap *soap, const char *tag, ns1__ClientCouponBox **a, const char *type)
{
	if (soap_element_begin_in(soap, tag, 1, NULL))
		return NULL;
	if (!a)
		if (!(a = (ns1__ClientCouponBox **)soap_malloc(soap, sizeof(ns1__ClientCouponBox *))))
			return NULL;
	*a = NULL;
	if (!soap->null && *soap->href != '#')
	{	soap_revert(soap);
		if (!(*a = (ns1__ClientCouponBox *)soap_instantiate_ns1__ClientCouponBox(soap, -1, soap->type, soap->arrayType, NULL)))
			return NULL;
		(*a)->soap_default(soap);
		if (!(*a)->soap_in(soap, tag, NULL))
			return NULL;
	}
	else
	{	ns1__ClientCouponBox ** p = (ns1__ClientCouponBox **)soap_id_lookup(soap, soap->href, (void**)a, SOAP_TYPE_ns1__ClientCouponBox, sizeof(ns1__ClientCouponBox), 0);
		a = p;
		if (soap->body && soap_element_end_in(soap, tag))
			return NULL;
	}
	return a;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ClientCouponBox(struct soap *soap, ns1__ClientCouponBox *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_PointerTons1__ClientCouponBox);
	if (soap_out_PointerTons1__ClientCouponBox(soap, tag?tag:"ns1:ClientCouponBox", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 ns1__ClientCouponBox ** SOAP_FMAC4 soap_get_PointerTons1__ClientCouponBox(struct soap *soap, ns1__ClientCouponBox **p, const char *tag, const char *type)
{
	if ((p = soap_in_PointerTons1__ClientCouponBox(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap *soap, char *const*a)
{
#ifndef WITH_NOIDREF
	soap_reference(soap, *a, SOAP_TYPE__QName);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap *soap, const char *tag, int id, char *const*a, const char *type)
{
	return soap_outstring(soap, tag, id, a, type, SOAP_TYPE__QName);
}

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap *soap, const char *tag, char **a, const char *type)
{	char **p;
	p = soap_instring(soap, tag, a, type, SOAP_TYPE__QName, 2, 0, -1);
	return p;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap *soap, char *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE__QName);
	if (soap_out__QName(soap, tag?tag:"byte", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap *soap, char **p, const char *tag, const char *type)
{
	if ((p = soap_in__QName(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap *soap, char **a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_string
	*a = SOAP_DEFAULT_string;
#else
	*a = (char *)0;
#endif
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap *soap, char *const*a)
{
#ifndef WITH_NOIDREF
	soap_reference(soap, *a, SOAP_TYPE_string);
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap *soap, const char *tag, int id, char *const*a, const char *type)
{
	return soap_outstring(soap, tag, id, a, type, SOAP_TYPE_string);
}

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap *soap, const char *tag, char **a, const char *type)
{	char **p;
	p = soap_instring(soap, tag, a, type, SOAP_TYPE_string, 1, 0, -1);
	return p;
}

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap *soap, char *const*a, const char *tag, const char *type)
{
	register int id = soap_embed(soap, (void*)a, NULL, 0, tag, SOAP_TYPE_string);
	if (soap_out_string(soap, tag?tag:"byte", id, a, type))
		return soap->error;
	return soap_putindependent(soap);
}

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap *soap, char **p, const char *tag, const char *type)
{
	if ((p = soap_in_string(soap, tag, p, type)))
		if (soap_getindependent(soap))
			return NULL;
	return p;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__ItemEntity(struct soap *soap, std::vector<ns1__ItemEntity * >*p)
{
	p->clear();
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__ItemEntity(struct soap *soap, const std::vector<ns1__ItemEntity * >*a)
{
#ifndef WITH_NOIDREF
	for (std::vector<ns1__ItemEntity * >::const_iterator i = a->begin(); i != a->end(); ++i)
		soap_serialize_PointerTons1__ItemEntity(soap, &(*i));
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__ItemEntity(struct soap *soap, const char *tag, int id, const std::vector<ns1__ItemEntity * >*a, const char *type)
{
	for (std::vector<ns1__ItemEntity * >::const_iterator i = a->begin(); i != a->end(); ++i)
	{
		if (soap_out_PointerTons1__ItemEntity(soap, tag, id, &(*i), ""))
			return soap->error;
	}
	return SOAP_OK;
}

SOAP_FMAC3 std::vector<ns1__ItemEntity * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__ItemEntity(struct soap *soap, const char *tag, std::vector<ns1__ItemEntity * >*a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	short soap_flag;
	for (soap_flag = 0;; soap_flag = 1)
	{	ns1__ItemEntity *n;
		if (tag && *tag != '-')
		{	if (soap_element_begin_in(soap, tag, 1, NULL))
				break;
			soap_revert(soap);
		}
		n = NULL;
		if (tag && *tag != '-' && (*soap->id || *soap->href))
		{	if (!soap_container_id_forward(soap, *soap->id?soap->id:soap->href, a, (size_t)a->size(), SOAP_TYPE_ns1__ItemEntity, SOAP_TYPE_std__vectorTemplateOfPointerTons1__ItemEntity, sizeof(ns1__ItemEntity), 1))
				break;
			if (!soap_in_PointerTons1__ItemEntity(soap, tag, NULL, "ns1:ItemEntity"))
				break;
		}
		else if (!soap_in_PointerTons1__ItemEntity(soap, tag, &n, "ns1:ItemEntity"))
			break;
		if (!a && !(a = soap_new_std__vectorTemplateOfPointerTons1__ItemEntity(soap, -1)))
			return NULL;
		a->push_back(n);
		if (!tag || *tag == '-')
			return a;
	}
	if (soap_flag && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
	{	soap->error = SOAP_OK;
		return a;
	}
	return NULL;
}

SOAP_FMAC1 std::vector<ns1__ItemEntity * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__ItemEntity(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_std__vectorTemplateOfPointerTons1__ItemEntity(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_std__vectorTemplateOfPointerTons1__ItemEntity, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(std::vector<ns1__ItemEntity * >);
		if (size)
			*size = sizeof(std::vector<ns1__ItemEntity * >);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(std::vector<ns1__ItemEntity * >, n);
		if (size)
			*size = n * sizeof(std::vector<ns1__ItemEntity * >);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (std::vector<ns1__ItemEntity * >*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__ItemEntity(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying std::vector<ns1__ItemEntity * > %p -> %p\n", q, p));
	*(std::vector<ns1__ItemEntity * >*)p = *(std::vector<ns1__ItemEntity * >*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity(struct soap *soap, std::vector<ns1__HoldingCouponCountEntity * >*p)
{
	p->clear();
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity(struct soap *soap, const std::vector<ns1__HoldingCouponCountEntity * >*a)
{
#ifndef WITH_NOIDREF
	for (std::vector<ns1__HoldingCouponCountEntity * >::const_iterator i = a->begin(); i != a->end(); ++i)
		soap_serialize_PointerTons1__HoldingCouponCountEntity(soap, &(*i));
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity(struct soap *soap, const char *tag, int id, const std::vector<ns1__HoldingCouponCountEntity * >*a, const char *type)
{
	for (std::vector<ns1__HoldingCouponCountEntity * >::const_iterator i = a->begin(); i != a->end(); ++i)
	{
		if (soap_out_PointerTons1__HoldingCouponCountEntity(soap, tag, id, &(*i), ""))
			return soap->error;
	}
	return SOAP_OK;
}

SOAP_FMAC3 std::vector<ns1__HoldingCouponCountEntity * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity(struct soap *soap, const char *tag, std::vector<ns1__HoldingCouponCountEntity * >*a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	short soap_flag;
	for (soap_flag = 0;; soap_flag = 1)
	{	ns1__HoldingCouponCountEntity *n;
		if (tag && *tag != '-')
		{	if (soap_element_begin_in(soap, tag, 1, NULL))
				break;
			soap_revert(soap);
		}
		n = NULL;
		if (tag && *tag != '-' && (*soap->id || *soap->href))
		{	if (!soap_container_id_forward(soap, *soap->id?soap->id:soap->href, a, (size_t)a->size(), SOAP_TYPE_ns1__HoldingCouponCountEntity, SOAP_TYPE_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity, sizeof(ns1__HoldingCouponCountEntity), 1))
				break;
			if (!soap_in_PointerTons1__HoldingCouponCountEntity(soap, tag, NULL, "ns1:HoldingCouponCountEntity"))
				break;
		}
		else if (!soap_in_PointerTons1__HoldingCouponCountEntity(soap, tag, &n, "ns1:HoldingCouponCountEntity"))
			break;
		if (!a && !(a = soap_new_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity(soap, -1)))
			return NULL;
		a->push_back(n);
		if (!tag || *tag == '-')
			return a;
	}
	if (soap_flag && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
	{	soap->error = SOAP_OK;
		return a;
	}
	return NULL;
}

SOAP_FMAC1 std::vector<ns1__HoldingCouponCountEntity * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(std::vector<ns1__HoldingCouponCountEntity * >);
		if (size)
			*size = sizeof(std::vector<ns1__HoldingCouponCountEntity * >);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(std::vector<ns1__HoldingCouponCountEntity * >, n);
		if (size)
			*size = n * sizeof(std::vector<ns1__HoldingCouponCountEntity * >);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (std::vector<ns1__HoldingCouponCountEntity * >*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__HoldingCouponCountEntity(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying std::vector<ns1__HoldingCouponCountEntity * > %p -> %p\n", q, p));
	*(std::vector<ns1__HoldingCouponCountEntity * >*)p = *(std::vector<ns1__HoldingCouponCountEntity * >*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity(struct soap *soap, std::vector<ns1__DiscountAppliableItemInfoEntity * >*p)
{
	p->clear();
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity(struct soap *soap, const std::vector<ns1__DiscountAppliableItemInfoEntity * >*a)
{
#ifndef WITH_NOIDREF
	for (std::vector<ns1__DiscountAppliableItemInfoEntity * >::const_iterator i = a->begin(); i != a->end(); ++i)
		soap_serialize_PointerTons1__DiscountAppliableItemInfoEntity(soap, &(*i));
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity(struct soap *soap, const char *tag, int id, const std::vector<ns1__DiscountAppliableItemInfoEntity * >*a, const char *type)
{
	for (std::vector<ns1__DiscountAppliableItemInfoEntity * >::const_iterator i = a->begin(); i != a->end(); ++i)
	{
		if (soap_out_PointerTons1__DiscountAppliableItemInfoEntity(soap, tag, id, &(*i), ""))
			return soap->error;
	}
	return SOAP_OK;
}

SOAP_FMAC3 std::vector<ns1__DiscountAppliableItemInfoEntity * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity(struct soap *soap, const char *tag, std::vector<ns1__DiscountAppliableItemInfoEntity * >*a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	short soap_flag;
	for (soap_flag = 0;; soap_flag = 1)
	{	ns1__DiscountAppliableItemInfoEntity *n;
		if (tag && *tag != '-')
		{	if (soap_element_begin_in(soap, tag, 1, NULL))
				break;
			soap_revert(soap);
		}
		n = NULL;
		if (tag && *tag != '-' && (*soap->id || *soap->href))
		{	if (!soap_container_id_forward(soap, *soap->id?soap->id:soap->href, a, (size_t)a->size(), SOAP_TYPE_ns1__DiscountAppliableItemInfoEntity, SOAP_TYPE_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity, sizeof(ns1__DiscountAppliableItemInfoEntity), 1))
				break;
			if (!soap_in_PointerTons1__DiscountAppliableItemInfoEntity(soap, tag, NULL, "ns1:DiscountAppliableItemInfoEntity"))
				break;
		}
		else if (!soap_in_PointerTons1__DiscountAppliableItemInfoEntity(soap, tag, &n, "ns1:DiscountAppliableItemInfoEntity"))
			break;
		if (!a && !(a = soap_new_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity(soap, -1)))
			return NULL;
		a->push_back(n);
		if (!tag || *tag == '-')
			return a;
	}
	if (soap_flag && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
	{	soap->error = SOAP_OK;
		return a;
	}
	return NULL;
}

SOAP_FMAC1 std::vector<ns1__DiscountAppliableItemInfoEntity * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(std::vector<ns1__DiscountAppliableItemInfoEntity * >);
		if (size)
			*size = sizeof(std::vector<ns1__DiscountAppliableItemInfoEntity * >);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(std::vector<ns1__DiscountAppliableItemInfoEntity * >, n);
		if (size)
			*size = n * sizeof(std::vector<ns1__DiscountAppliableItemInfoEntity * >);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (std::vector<ns1__DiscountAppliableItemInfoEntity * >*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__DiscountAppliableItemInfoEntity(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying std::vector<ns1__DiscountAppliableItemInfoEntity * > %p -> %p\n", q, p));
	*(std::vector<ns1__DiscountAppliableItemInfoEntity * >*)p = *(std::vector<ns1__DiscountAppliableItemInfoEntity * >*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem(struct soap *soap, std::vector<ns1__CouponBoxTargetItem * >*p)
{
	p->clear();
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem(struct soap *soap, const std::vector<ns1__CouponBoxTargetItem * >*a)
{
#ifndef WITH_NOIDREF
	for (std::vector<ns1__CouponBoxTargetItem * >::const_iterator i = a->begin(); i != a->end(); ++i)
		soap_serialize_PointerTons1__CouponBoxTargetItem(soap, &(*i));
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem(struct soap *soap, const char *tag, int id, const std::vector<ns1__CouponBoxTargetItem * >*a, const char *type)
{
	for (std::vector<ns1__CouponBoxTargetItem * >::const_iterator i = a->begin(); i != a->end(); ++i)
	{
		if (soap_out_PointerTons1__CouponBoxTargetItem(soap, tag, id, &(*i), ""))
			return soap->error;
	}
	return SOAP_OK;
}

SOAP_FMAC3 std::vector<ns1__CouponBoxTargetItem * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem(struct soap *soap, const char *tag, std::vector<ns1__CouponBoxTargetItem * >*a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	short soap_flag;
	for (soap_flag = 0;; soap_flag = 1)
	{	ns1__CouponBoxTargetItem *n;
		if (tag && *tag != '-')
		{	if (soap_element_begin_in(soap, tag, 1, NULL))
				break;
			soap_revert(soap);
		}
		n = NULL;
		if (tag && *tag != '-' && (*soap->id || *soap->href))
		{	if (!soap_container_id_forward(soap, *soap->id?soap->id:soap->href, a, (size_t)a->size(), SOAP_TYPE_ns1__CouponBoxTargetItem, SOAP_TYPE_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem, sizeof(ns1__CouponBoxTargetItem), 1))
				break;
			if (!soap_in_PointerTons1__CouponBoxTargetItem(soap, tag, NULL, "ns1:CouponBoxTargetItem"))
				break;
		}
		else if (!soap_in_PointerTons1__CouponBoxTargetItem(soap, tag, &n, "ns1:CouponBoxTargetItem"))
			break;
		if (!a && !(a = soap_new_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem(soap, -1)))
			return NULL;
		a->push_back(n);
		if (!tag || *tag == '-')
			return a;
	}
	if (soap_flag && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
	{	soap->error = SOAP_OK;
		return a;
	}
	return NULL;
}

SOAP_FMAC1 std::vector<ns1__CouponBoxTargetItem * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(std::vector<ns1__CouponBoxTargetItem * >);
		if (size)
			*size = sizeof(std::vector<ns1__CouponBoxTargetItem * >);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(std::vector<ns1__CouponBoxTargetItem * >, n);
		if (size)
			*size = n * sizeof(std::vector<ns1__CouponBoxTargetItem * >);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (std::vector<ns1__CouponBoxTargetItem * >*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__CouponBoxTargetItem(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying std::vector<ns1__CouponBoxTargetItem * > %p -> %p\n", q, p));
	*(std::vector<ns1__CouponBoxTargetItem * >*)p = *(std::vector<ns1__CouponBoxTargetItem * >*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__CouponBoxItem(struct soap *soap, std::vector<ns1__CouponBoxItem * >*p)
{
	p->clear();
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__CouponBoxItem(struct soap *soap, const std::vector<ns1__CouponBoxItem * >*a)
{
#ifndef WITH_NOIDREF
	for (std::vector<ns1__CouponBoxItem * >::const_iterator i = a->begin(); i != a->end(); ++i)
		soap_serialize_PointerTons1__CouponBoxItem(soap, &(*i));
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__CouponBoxItem(struct soap *soap, const char *tag, int id, const std::vector<ns1__CouponBoxItem * >*a, const char *type)
{
	for (std::vector<ns1__CouponBoxItem * >::const_iterator i = a->begin(); i != a->end(); ++i)
	{
		if (soap_out_PointerTons1__CouponBoxItem(soap, tag, id, &(*i), ""))
			return soap->error;
	}
	return SOAP_OK;
}

SOAP_FMAC3 std::vector<ns1__CouponBoxItem * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__CouponBoxItem(struct soap *soap, const char *tag, std::vector<ns1__CouponBoxItem * >*a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	short soap_flag;
	for (soap_flag = 0;; soap_flag = 1)
	{	ns1__CouponBoxItem *n;
		if (tag && *tag != '-')
		{	if (soap_element_begin_in(soap, tag, 1, NULL))
				break;
			soap_revert(soap);
		}
		n = NULL;
		if (tag && *tag != '-' && (*soap->id || *soap->href))
		{	if (!soap_container_id_forward(soap, *soap->id?soap->id:soap->href, a, (size_t)a->size(), SOAP_TYPE_ns1__CouponBoxItem, SOAP_TYPE_std__vectorTemplateOfPointerTons1__CouponBoxItem, sizeof(ns1__CouponBoxItem), 1))
				break;
			if (!soap_in_PointerTons1__CouponBoxItem(soap, tag, NULL, "ns1:CouponBoxItem"))
				break;
		}
		else if (!soap_in_PointerTons1__CouponBoxItem(soap, tag, &n, "ns1:CouponBoxItem"))
			break;
		if (!a && !(a = soap_new_std__vectorTemplateOfPointerTons1__CouponBoxItem(soap, -1)))
			return NULL;
		a->push_back(n);
		if (!tag || *tag == '-')
			return a;
	}
	if (soap_flag && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
	{	soap->error = SOAP_OK;
		return a;
	}
	return NULL;
}

SOAP_FMAC1 std::vector<ns1__CouponBoxItem * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__CouponBoxItem(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_std__vectorTemplateOfPointerTons1__CouponBoxItem(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_std__vectorTemplateOfPointerTons1__CouponBoxItem, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(std::vector<ns1__CouponBoxItem * >);
		if (size)
			*size = sizeof(std::vector<ns1__CouponBoxItem * >);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(std::vector<ns1__CouponBoxItem * >, n);
		if (size)
			*size = n * sizeof(std::vector<ns1__CouponBoxItem * >);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (std::vector<ns1__CouponBoxItem * >*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__CouponBoxItem(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying std::vector<ns1__CouponBoxItem * > %p -> %p\n", q, p));
	*(std::vector<ns1__CouponBoxItem * >*)p = *(std::vector<ns1__CouponBoxItem * >*)q;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__ClientCouponBox(struct soap *soap, std::vector<ns1__ClientCouponBox * >*p)
{
	p->clear();
}

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__ClientCouponBox(struct soap *soap, const std::vector<ns1__ClientCouponBox * >*a)
{
#ifndef WITH_NOIDREF
	for (std::vector<ns1__ClientCouponBox * >::const_iterator i = a->begin(); i != a->end(); ++i)
		soap_serialize_PointerTons1__ClientCouponBox(soap, &(*i));
#endif
}

SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__ClientCouponBox(struct soap *soap, const char *tag, int id, const std::vector<ns1__ClientCouponBox * >*a, const char *type)
{
	for (std::vector<ns1__ClientCouponBox * >::const_iterator i = a->begin(); i != a->end(); ++i)
	{
		if (soap_out_PointerTons1__ClientCouponBox(soap, tag, id, &(*i), ""))
			return soap->error;
	}
	return SOAP_OK;
}

SOAP_FMAC3 std::vector<ns1__ClientCouponBox * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__ClientCouponBox(struct soap *soap, const char *tag, std::vector<ns1__ClientCouponBox * >*a, const char *type)
{
	(void)type; /* appease -Wall -Werror */
	short soap_flag;
	for (soap_flag = 0;; soap_flag = 1)
	{	ns1__ClientCouponBox *n;
		if (tag && *tag != '-')
		{	if (soap_element_begin_in(soap, tag, 1, NULL))
				break;
			soap_revert(soap);
		}
		n = NULL;
		if (tag && *tag != '-' && (*soap->id || *soap->href))
		{	if (!soap_container_id_forward(soap, *soap->id?soap->id:soap->href, a, (size_t)a->size(), SOAP_TYPE_ns1__ClientCouponBox, SOAP_TYPE_std__vectorTemplateOfPointerTons1__ClientCouponBox, sizeof(ns1__ClientCouponBox), 1))
				break;
			if (!soap_in_PointerTons1__ClientCouponBox(soap, tag, NULL, "ns1:ClientCouponBox"))
				break;
		}
		else if (!soap_in_PointerTons1__ClientCouponBox(soap, tag, &n, "ns1:ClientCouponBox"))
			break;
		if (!a && !(a = soap_new_std__vectorTemplateOfPointerTons1__ClientCouponBox(soap, -1)))
			return NULL;
		a->push_back(n);
		if (!tag || *tag == '-')
			return a;
	}
	if (soap_flag && (soap->error == SOAP_TAG_MISMATCH || soap->error == SOAP_NO_TAG))
	{	soap->error = SOAP_OK;
		return a;
	}
	return NULL;
}

SOAP_FMAC1 std::vector<ns1__ClientCouponBox * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__ClientCouponBox(struct soap *soap, int n, const char *type, const char *arrayType, size_t *size)
{
	(void)type; (void)arrayType; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "soap_instantiate_std__vectorTemplateOfPointerTons1__ClientCouponBox(%d, %s, %s)\n", n, type?type:"", arrayType?arrayType:""));
	struct soap_clist *cp = soap_link(soap, NULL, SOAP_TYPE_std__vectorTemplateOfPointerTons1__ClientCouponBox, n, soap_fdelete);
	if (!cp)
		return NULL;
	if (n < 0)
	{	cp->ptr = (void*)SOAP_NEW(std::vector<ns1__ClientCouponBox * >);
		if (size)
			*size = sizeof(std::vector<ns1__ClientCouponBox * >);
	}
	else
	{	cp->ptr = (void*)SOAP_NEW_ARRAY(std::vector<ns1__ClientCouponBox * >, n);
		if (size)
			*size = n * sizeof(std::vector<ns1__ClientCouponBox * >);
	}
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Instantiated location=%p\n", cp->ptr));
	if (!cp->ptr)
		soap->error = SOAP_EOM;
	return (std::vector<ns1__ClientCouponBox * >*)cp->ptr;
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__ClientCouponBox(struct soap *soap, int st, int tt, void *p, size_t len, const void *q, size_t n)
{
	(void)soap; (void)tt; (void)st; (void)len; (void)n; /* appease -Wall -Werror */
	DBGLOG(TEST, SOAP_MESSAGE(fdebug, "Copying std::vector<ns1__ClientCouponBox * > %p -> %p\n", q, p));
	*(std::vector<ns1__ClientCouponBox * >*)p = *(std::vector<ns1__ClientCouponBox * >*)q;
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapC.cpp */
