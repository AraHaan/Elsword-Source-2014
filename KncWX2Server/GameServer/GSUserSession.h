
#include "ServerDefine.h"

//////////////////////////////////////////////////////////////////////////
// for visual assist

#ifndef EVENT_HANDLER
#define EVENT_HANDLER( eventid )
#endif

#ifndef EVENT_HANDLER_NOPARAM
#define EVENT_HANDLER_NOPARAM( eventid )
#endif

#ifndef _EVENT_HANDLER
#define _EVENT_HANDLER( eventid, structtype )
#endif


//////////////////////////////////////////////////////////////////////////
// 여기서 부터 이벤트 핸들러 정의!
EVENT_HANDLER( DBE_UPDATE_UNIT_INFO_ACK );

// VERIFY
EVENT_HANDLER( EGS_CONNECT_REQ );
EVENT_HANDLER( EGS_VERIFY_ACCOUNT_REQ );
EVENT_HANDLER( ELG_NEXON_USER_AUTHENTICATE_ACK );
EVENT_HANDLER( ELG_REGISTER_USER_ACK );

#ifdef SERV_GLOBAL_AUTH
EVENT_HANDLER( ELG_REGISTER_USER_GLOBAL_PUBLISHER_ACK );
#endif // SERV_GLOBAL_AUTH

//{{ 2010. 06. 08  최육사	넥슨PC방 인증 서버 개편
#ifdef SERV_PCBANG_AUTH_NEW
_EVENT_HANDLER( ELG_REGISTER_NEXON_USER_ACK, KENX_AUTH_LOGIN_ACK );
_EVENT_HANDLER( ELG_REGISTER_NEXON_CHANNEL_CHANGE_USER_ACK, KENX_AUTH_LOGIN_ACK );
EVENT_HANDLER( ENX_AUTH_TERMINATE_NOT );
EVENT_HANDLER( ENX_AUTH_MESSAGE_NOT );
#else
#pragma ELSE_MESSAGE
//_EVENT_HANDLER( ELG_REGISTER_NEXON_USER_ACK, KENX_COMMON_ACK_NOT );
#endif SERV_PCBANG_AUTH_NEW
//}}
_EVENT_HANDLER( E_KICK_USER_NOT, int );

_EVENT_HANDLER( ENX_USER_TERMINATE_NOT, KENX_COMMON_ACK_NOT );
_EVENT_HANDLER( ENX_MESSAGE_NOT, KENX_COMMON_ACK_NOT );

EVENT_HANDLER( EGS_NEW_USER_JOIN_REQ );
_EVENT_HANDLER( DBE_NEW_USER_JOIN_ACK, KEGS_NEW_USER_JOIN_ACK );

// 서버 셀렉트 관련
EVENT_HANDLER_NOPARAM( EGS_STATE_CHANGE_SERVER_SELECT_REQ );
EVENT_HANDLER_NOPARAM( EGS_GET_SERVER_SET_DATA_REQ );
EVENT_HANDLER( EGS_SELECT_SERVER_SET_REQ );

//{{ 2009. 5. 26  최육사	채널이동
EVENT_HANDLER( EGS_CHECK_CHANNEL_CHANGE_REQ );
EVENT_HANDLER( ECN_CHECK_CHANNEL_CHANGE_ACK );

EVENT_HANDLER( EGS_CONNECT_CHANNEL_CHANGE_REQ );
EVENT_HANDLER( ELG_CHANNEL_CHANGE_NEXON_USER_AUTHENTICATE_ACK );
EVENT_HANDLER( ELG_CHANNEL_CHANGE_REGISTER_USER_ACK );
EVENT_HANDLER( DBE_CHANNEL_CHANGE_GAME_SELECT_UNIT_ACK );
_EVENT_HANDLER( DBE_CHANNEL_CHANGE_ACCOUNT_SELECT_UNIT_ACK, KDBE_CHANNEL_CHANGE_GAME_SELECT_UNIT_ACK );
EVENT_HANDLER( EGS_JOIN_FIELD_CHANNEL_CHANGE_REQ );
_EVENT_HANDLER( ERM_JOIN_FIELD_CHANNEL_CHANGE_ACK, KERM_JOIN_FIELD_ACK );
//}}

//{{ 2009. 2. 13  최육사	채널리스트
EVENT_HANDLER_NOPARAM( EGS_GET_CHANNEL_LIST_REQ );
//}}

//{{ 2009. 2. 13  최육사	채널이동	
EVENT_HANDLER_NOPARAM( EGS_DISCONNECT_FOR_SERVER_SELECT_REQ );
EVENT_HANDLER_NOPARAM( EGS_DISCONNECT_FOR_CHANNEL_CHANGE_REQ );
_EVENT_HANDLER( ELG_USER_DISCONNECT_ACK, KELG_USER_DISCONNECT_REQ );
//}}

EVENT_HANDLER( EGS_CLIENT_QUIT_REQ );
EVENT_HANDLER_NOPARAM( E_DISABLE_HB_CHECK_REQ );
EVENT_HANDLER_NOPARAM( E_RESERVE_DESTROY );

//{{ 2011. 08. 10    김민성    채널링 SOAP
#ifdef SERV_CHANNELING_SOAP
EVENT_HANDLER( SOAP_GET_TOONILAND_ID_ACK )
#endif SERV_CHANNELING_SOAP
//}}
//{{  2012. 1. 16	김민성		게임서버에서 Server SN 검사
#ifdef SERV_SERIAL_NUMBER_AVAILABILITY_CHECK_IN_GAMESERVER
_EVENT_HANDLER( DBE_CHECK_SERVER_SN_IN_GAMESERVER_ACK, KDBE_CHECK_SERVER_SN_IN_GAMESERVER_REQ )
#endif SERV_SERIAL_NUMBER_AVAILABILITY_CHECK_IN_GAMESERVER
//}}

//{{ 2012. 03. 14	김민성		패킷 시퀀스 카운트 체크
//#ifdef SERV_CHECK_SEQUENCE_COUNT
EVENT_HANDLER_NOPARAM( E_CHECK_SEQUENCE_COUNT_NOT );
//#endif SERV_CHECK_SEQUENCE_COUNT
//}}

//{{ 2012. 03. 29	김민성		중복 sn 접속 감시
#ifdef SERV_SERIAL_NUMBER_AVAILABILITY_CHECK_FILTER
EVENT_HANDLER( EGB_REGISTER_SERVERSN_ACK );
_EVENT_HANDLER( EGB_REGISTER_SERVERSN_NOT, KEGB_REGISTER_SERVERSN_ACK )
#endif SERV_SERIAL_NUMBER_AVAILABILITY_CHECK_FILTER
//}}

//{{ 2012. 08. 14	박세훈	대천사의 주화 이벤트 가이드 문구 출력
#ifdef SERV_ARCHUANGEL_S_COIN_EVENT_GUIDE
EVENT_HANDLER_NOPARAM( EGS_CHECK_THE_ARCHUANGEL_S_COIN_EVENT_LETTER_REQ );
EVENT_HANDLER( DBE_CHECK_THE_ARCHUANGEL_S_COIN_EVENT_LETTER_ACK );
#endif SERV_ARCHUANGEL_S_COIN_EVENT_GUIDE
//}}

#ifdef SERV_ACTIVE_KOG_GAME_PERFORMANCE_CHECK
EVENT_HANDLER( EGS_TCP_PING );
EVENT_HANDLER( EGS_SYSTEM_INFO );
EVENT_HANDLER( EGS_KOG_GAME_PERFORMANCE_VILLAGE_LOG );
EVENT_HANDLER( EGS_KOG_GAME_PERFORMANCE_FIELD_LOG );
EVENT_HANDLER( EGS_KOG_GAME_PERFORMANCE_DUNGEON_LOG );
EVENT_HANDLER( EGS_KOG_GAME_PERFORMANCE_PVP_LOG );
#endif//SERV_ACTIVE_KOG_GAME_PERFORMANCE_CHECK

#ifdef SERV_ACTIVE_KOG_GAME_PERFORMANCE_CHECK_VER2
EVENT_HANDLER( EGS_GET_ACTIVE_LAGCHECK_REQ );
#endif//SERV_ACTIVE_KOG_GAME_PERFORMANCE_CHECK_VER2

#ifdef SERV_ENTRY_POINT
EVENT_HANDLER_NOPARAM( EGS_ENTRY_POINT_GET_CHANNEL_LIST_REQ );
#endif SERV_ENTRY_POINT

#ifdef SERV_CLIENT_DIRECT_CONNECT_AUTH_PCBANG
EVENT_HANDLER( EGS_CLIENT_DIRECT_CONNECT_AUTH_PCBAG_REQ );
#endif //SERV_CLIENT_DIRECT_CONNECT_AUTH_PCBANG

//{{ 2013. 05. 29	최육사	제재 리스트 통합
#ifdef SERV_BLOCK_LIST
EVENT_HANDLER( EGB_UPDATE_BLOCK_RESULT_NOT );
#endif SERV_BLOCK_LIST
//}}
#ifdef SERV_ID_NETMARBLE_PCBANG
EVENT_HANDLER( DBE_ID_PCBANG_CEHCK_AUTH_ACK );
#endif //SERV_ID_NETMARBLE_PCBANG
//#ifdef SERV_OPTIMIZE_TCP_RELAY_TEST
//EVENT_HANDLER( EGS_TCP_RELAY_TEST );
//#endif//SERV_OPTIMIZE_TCP_RELAY_TEST

//{{ 2013. 09. 24	최육사	일본 이벤트 중계DB작업
#ifdef SERV_RELAY_DB_CONNECTION
EVENT_HANDLER( DBE_CHECK_REWARD_FROM_RELAY_DB_JP_EVENT_ACK );
EVENT_HANDLER( EBILL_REWARD_COUPON_JP_EVENT_ACK );
#endif SERV_RELAY_DB_CONNECTION
//}}
